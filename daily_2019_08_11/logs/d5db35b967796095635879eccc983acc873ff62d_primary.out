cset: moving following pidspec: 13964
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.351160623 seconds)
loading group "string"... done (took 0.535277005 seconds)
loading group "linalg"... done (took 6.886305086 seconds)
loading group "parallel"... done (took 0.158355915 seconds)
loading group "find"... done (took 1.198985288 seconds)
loading group "tuple"... done (took 1.811828338 seconds)
loading group "dates"... done (took 1.217386647 seconds)
loading group "micro"... done (took 0.301324838 seconds)
loading group "io"... done (took 0.921596241 seconds)
loading group "scalar"... done (took 37.509822621 seconds)
loading group "sparse"... done (took 11.11157787 seconds)
loading group "broadcast"... done (took 0.914080006 seconds)
loading group "union"... done (took 11.842443508 seconds)
loading group "simd"... done (took 4.164013244 seconds)
loading group "random"... done (took 8.565430218 seconds)
loading group "problem"... done (took 1.867138235 seconds)
loading group "array"... done (took 20.012771501 seconds)
loading group "misc"... done (took 1.690055178 seconds)
loading group "sort"... done (took 3.116684571 seconds)
loading group "collection"... done (took 16.767547236 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482590165 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122680837 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11419857 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11837927 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139950908 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11432303 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123101408 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08323837 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.782519585 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.141855357 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119394287 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413217075 seconds)
done (took 4.918029011 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171207171 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082866798 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081104263 seconds)
  done (took 1.282206318 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065573278 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121393284 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065698441 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066820001 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06645922 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066115311 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065814884 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066098517 seconds)
  done (took 1.637053526 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072467115 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068641091 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068588022 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067582844 seconds)
  done (took 1.394043014 seconds)
done (took 5.677526978 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.768821914 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.19923721 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183162224 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.3948614 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127042074 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.163258697 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.633067412 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.33122005 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183310262 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080069173 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103054823 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3215431 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10583194 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645680439 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079589433 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089811761 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137983543 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434192883 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067293305 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081892597 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088635066 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127079619 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085007691 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075541573 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143166693 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067820079 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129559401 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080108468 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066500655 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207902927 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172684848 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653846514 seconds)
  done (took 10.183479126 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096122219 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098042335 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068573495 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123379703 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095473412 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069436223 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070940789 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066863559 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087004146 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128040565 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08881002 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101161855 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06533297 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068694818 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084838493 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205058457 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082125531 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083167727 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072005691 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075148999 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105776689 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078123693 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077615359 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077411653 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127814635 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180433127 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098844004 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09726787 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067231966 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08018782 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114940921 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125991625 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065201805 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066141066 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124187661 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094111177 seconds)
  done (took 4.568615532 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.909667101 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111893737 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138661366 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089588343 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161351401 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067123672 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106012689 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065549279 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083764489 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199065029 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.041186509 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.430992745 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110052991 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084368992 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067751885 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067948746 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066717213 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.362122297 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109104413 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112459169 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084435634 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076005777 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070541828 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.349487504 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066457847 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066641249 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068029627 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058098027 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083638068 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112733244 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067897332 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.982490742 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115659036 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066686291 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100136291 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16145457 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087828594 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133114589 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064642835 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064437445 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.146814188 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072623023 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06526416 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082091563 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101420461 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.101558735 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.196313047 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067384941 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162140615 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066149092 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086286998 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.712481359 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151740494 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078901979 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068420072 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246449611 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085522347 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066245324 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064784205 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182324776 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13122624 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0673502 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066774421 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06558536 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067667087 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.318520027 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066715378 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.717597457 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069455277 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078001197 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068827008 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066804129 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072693527 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07277524 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085420404 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065761723 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06858784 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065558385 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065860275 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068040404 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08393842 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.189631341 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067126963 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067179789 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065172082 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086009859 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097187943 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069654776 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069740918 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099446617 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067859133 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067203236 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101300496 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066456733 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083448313 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068809129 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112498335 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065731354 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.087966062 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066435442 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092085581 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098401651 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068063248 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098346539 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076774407 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067158986 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.308203587 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06521036 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063787861 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064850211 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066613301 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067649161 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06702027 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068273129 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064301809 seconds)
  done (took 19.820708869 seconds)
done (took 36.59896311 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.273951132 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074835199 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074971208 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075009628 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074940479 seconds)
  done (took 1.780221667 seconds)
done (took 2.965630515 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119129551 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098937368 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065072286 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095012173 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064293637 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100217175 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098774181 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081098173 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09896715 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063736898 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095371748 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063801028 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063898536 seconds)
  done (took 2.316671162 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082865331 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082960803 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06923283 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081798618 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062942612 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081780784 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080372454 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087850866 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080569643 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072060887 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063265448 seconds)
  done (took 2.024902014 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08183687 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083996541 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069669835 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081071589 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062966082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080908531 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080276655 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084837305 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081065254 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072659434 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063408917 seconds)
  done (took 2.019538978 seconds)
done (took 7.53758888 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077266897 seconds)
  done (took 1.245875111 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.588047505 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.143473913 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080938126 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112130722 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183123625 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119213046 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281016091 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086599005 seconds)
  done (took 8.945806847 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100473299 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07119919 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068637921 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07100201 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071678677 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068989373 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069215287 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069275635 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.0685386 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071321648 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067943336 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069097434 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070314174 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071139914 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068548399 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071587347 seconds)
  done (took 2.391081587 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092195982 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090717072 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073268328 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074414419 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071822813 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071608145 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074122022 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073187065 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070423928 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071725043 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074995183 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073532203 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071246918 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064592113 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073927239 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075343306 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07086601 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073549303 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07445196 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074801481 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07443662 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063953693 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071232766 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073456722 seconds)
  done (took 3.052113776 seconds)
done (took 16.812446716 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112296852 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070437449 seconds)
  done (took 1.357961901 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081175271 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082488943 seconds)
  done (took 1.348066365 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081891959 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065199024 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089861678 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077558066 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0663122 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06588117 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087220348 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065835267 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065434426 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065924365 seconds)
  done (took 1.916271514 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068217875 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078045021 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069788271 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080403798 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073768493 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064206663 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072183157 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067758193 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077911228 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063056776 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070553307 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081665323 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07032543 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083694541 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072063432 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068059055 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07041999 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066720855 seconds)
  done (took 2.48673341 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065358794 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067003203 seconds)
  done (took 1.322319285 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066933025 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062962525 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06644751 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066034576 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063322556 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062116773 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062820452 seconds)
  done (took 1.637730385 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.374449971 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110056078 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293028906 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070206353 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081241963 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249712761 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065081818 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069868211 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070576476 seconds)
  done (took 2.613197245 seconds)
done (took 13.874141566 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078795903 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084722981 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094581097 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.341694504 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091173367 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065406385 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112704966 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189065935 seconds)
done (took 2.258521429 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206842113 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.565388721 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.369349228 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193948095 seconds)
  done (took 2.323690707 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.314963539 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091093564 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058936085 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066102045 seconds)
  done (took 1.734187666 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066193194 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068344637 seconds)
  done (took 1.335798299 seconds)
done (took 6.804801161 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066360266 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083424089 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065884565 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062965063 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066230606 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063164214 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063433592 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063267492 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065895647 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065396293 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068149262 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065688693 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065347517 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065512926 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063186312 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063239966 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065293764 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063273294 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065422446 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06301093 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063172389 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068471616 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063147421 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063045165 seconds)
  done (took 2.806802964 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082984611 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066243163 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071491008 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070667385 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069758821 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070974587 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070983429 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065935826 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070985138 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068057976 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069536638 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069701913 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06740472 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069785368 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067594606 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069568099 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070857366 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065917012 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068479036 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069844294 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070851082 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066276021 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06952639 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071244233 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069138375 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069426923 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06784422 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066309615 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070984586 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069285389 seconds)
  done (took 3.297757188 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068681867 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063219908 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063478159 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070021198 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063207516 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064778271 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062637109 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063546865 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064056197 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063272034 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06445667 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063094007 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0633226 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064151276 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064077499 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067077816 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07846427 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063888023 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063365595 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064106325 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06643396 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06309011 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06347875 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063283432 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06359114 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063287232 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063750039 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063067142 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064313692 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06314508 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066642534 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066494587 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062800166 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.0698713 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066918126 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062952865 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067380119 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06329345 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063670156 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063064424 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062883865 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063668679 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062950188 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069854488 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063181991 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065040357 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063710557 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064776097 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063741602 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065932457 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062805167 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062920853 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065087614 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064501213 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067330417 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062849526 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06431957 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063055553 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064214902 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063111665 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06309279 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062860582 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0660134 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063653831 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077542579 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069965823 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063031333 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064676572 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064392936 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065502481 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06470701 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076657301 seconds)
  done (took 5.891356079 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090573136 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.198139751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065893657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064837278 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061751652 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065555371 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067323414 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063817972 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065007529 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.06952703 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064025509 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064705376 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064823895 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076193256 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063759156 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065106278 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069721107 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061745458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063499392 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067263236 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064165964 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066939643 seconds)
  done (took 2.823183043 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155203398 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069802144 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105453358 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073060845 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067143935 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072906518 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069396108 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06979938 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069674762 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068517503 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067915093 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070125941 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067414391 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067873376 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067831777 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068230455 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069748608 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06793052 seconds)
  done (took 2.582748206 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077642141 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066029725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08654363 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066536177 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065712678 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068059333 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070381153 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074554971 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067611219 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065536663 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074219207 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068162333 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068119487 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06576088 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068504923 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065886415 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06915552 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066002244 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074198425 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071576489 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070365404 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073832846 seconds)
  done (took 2.761030806 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079456776 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067888568 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08202421 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068440201 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062588205 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064400699 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069800234 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066155396 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069976811 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067339595 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06596553 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064249559 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069227733 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066222543 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069168846 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065595728 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067493886 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066042444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067577543 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061745616 seconds)
  done (took 2.580667552 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086987367 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067390495 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067995267 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075839609 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067345752 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067734363 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074957776 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067213815 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067319539 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086957454 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067697264 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067183669 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074784812 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071601221 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06720227 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075160239 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074894043 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07436248 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066942958 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067341921 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08660507 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066956151 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074426482 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066965149 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066886655 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066854924 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067115771 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071624038 seconds)
  done (took 3.224926573 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066460517 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066245203 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062757243 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063252076 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063456811 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063205052 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063384005 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063593195 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065729888 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0636619 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065557888 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065437708 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065418442 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065440241 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065997854 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065462674 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065935743 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063081394 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063030439 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062897054 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065429156 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065365565 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065606634 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06300224 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063014104 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06523862 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063155522 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062919704 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065190025 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063049322 seconds)
  done (took 3.15463532 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074958025 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072998526 seconds)
  done (took 1.372073636 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063252046 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079637768 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063077016 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069940962 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069691212 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065983236 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073170638 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069562404 seconds)
  done (took 1.771822278 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080875822 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076843414 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067569071 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080593548 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076357485 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082118264 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132115735 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066476966 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072834065 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064458638 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079439021 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06498127 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071613114 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065977954 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071301296 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071898846 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064188002 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072055264 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069062434 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06489083 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066867697 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07454749 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068605883 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061651519 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067314377 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087219957 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076570209 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065600454 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068788191 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073210553 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07130744 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06002725 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065418885 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066194506 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063740147 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075256729 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080482387 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068963919 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07415546 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066492957 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076481812 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060743693 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070285043 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072467078 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076278289 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066605919 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067038643 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061115666 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063794898 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068055165 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061186984 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065838474 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060585233 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075179411 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069137858 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076469973 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064751679 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067371703 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068613913 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069108978 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072567983 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067876945 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06798353 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065252199 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075575008 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070272496 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07506708 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061013211 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059923366 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06359973 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075175179 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088272785 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071980269 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066596373 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066402884 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064147671 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069008017 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066771661 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071611886 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072567273 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066357149 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07169154 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073529656 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066345291 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068665378 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074372526 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064751626 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069207816 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06391221 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081981015 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064600634 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064424652 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06387392 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076466933 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069140217 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065926692 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064110279 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072777651 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060030243 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066951037 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066896203 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066292039 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075687271 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069316658 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069790752 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073034062 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072213435 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064912959 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067578554 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061636598 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065661104 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064197867 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071630152 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059072389 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067639104 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066086864 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065269398 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.196574119 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064805119 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06731838 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074186021 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072829039 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064372344 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063158606 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069128269 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066129553 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069841708 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074302983 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06513509 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061468662 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061502182 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069846097 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066781745 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070294142 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07170727 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069501728 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061128847 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064748784 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071846228 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074746897 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066506905 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067407882 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071933284 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068147615 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06634982 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072961489 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069144086 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064954555 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072131558 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067631715 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062132368 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0696102 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069237126 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065833912 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06984893 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070327686 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068069356 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067232349 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065102234 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074044783 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067719372 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065676262 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06696609 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064979317 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077441235 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068499812 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061431224 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063624363 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075974485 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064413772 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066235868 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065524496 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068080784 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06710105 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064337517 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065561609 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06825461 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077056172 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070696945 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066643867 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071510887 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077027083 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06599918 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068549776 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065631398 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067382649 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06694405 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074725911 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071588078 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070856161 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068389648 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062759228 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071874616 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073181194 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065058476 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064357332 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065277903 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070316965 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071369818 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070273237 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066915834 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063753114 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066379307 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068888639 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068907096 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065685277 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065245082 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073089683 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064599618 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073639995 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067056955 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076195623 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069710485 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06189886 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069491672 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064255251 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072068195 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061417151 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063847626 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06524993 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067077845 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064870988 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068364669 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060401763 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072648358 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072493857 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065026088 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064548254 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064862073 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071630461 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066673228 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068733404 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068534296 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070565047 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075228379 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064253443 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067917549 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074986444 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.19094667 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060723925 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072580599 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064595347 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065973277 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065554676 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065597351 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069901929 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076017757 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073703335 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059860937 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069548088 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064579451 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066232911 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062482134 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070900438 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069622111 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067687453 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073266227 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067349849 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066891903 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070241399 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066448727 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067291618 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.0679476 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06964868 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066350212 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068500257 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066039909 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070205216 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065776287 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064764836 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06864659 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066658811 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067133656 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072587184 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06568117 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067296518 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068563336 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067008911 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067509351 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066430214 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065736559 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070063545 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067026427 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067049132 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068520348 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061424399 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073524197 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066345322 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073773288 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066562748 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063599629 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074373288 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068564668 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072659312 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067527053 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066874436 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067419445 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06568299 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068909203 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073774165 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06492354 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077321064 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073800061 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067132074 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069492127 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066860783 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067558064 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065011401 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067340931 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067330953 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066600393 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066140188 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070375119 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068387825 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066356217 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068424448 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067124347 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066469898 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067063889 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060486444 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065400066 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065945473 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065692451 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075647475 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066557229 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065346358 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065075117 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067087782 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064929888 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062731335 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074139319 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075515975 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066489878 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072968307 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065348706 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06750423 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076458897 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060219813 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064112256 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064198579 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064479267 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073457387 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066846203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075527688 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066090685 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065519025 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063461737 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066852203 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064403109 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060389886 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063147663 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068822979 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064243875 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063772613 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064854139 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067338077 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0661614 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074110941 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064075746 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065496426 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064739982 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062220765 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064407284 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063941934 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067867605 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065675618 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062697318 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062310116 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064535742 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066092928 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066282488 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064667394 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066431301 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074158043 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065001491 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068101323 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068206061 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06042987 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068148806 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065060888 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064417111 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064040839 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068353409 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068635342 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066108135 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073630897 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064526334 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065460514 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064846116 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062498342 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064299852 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064339593 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064474513 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063815017 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06544387 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072675931 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062443542 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067582275 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064585248 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06522603 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071617599 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065775539 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067536313 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070827851 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065373433 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066555687 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072502997 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068619489 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068208852 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065668664 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065431305 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068974413 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.0631731 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.070728442 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064719101 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064222876 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066226104 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062267616 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064053008 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06327471 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062505839 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068799876 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064492941 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063253687 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063494712 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061610368 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064674865 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066064456 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070399558 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066109097 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066663937 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05933464 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060876039 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064418114 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062403024 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065752978 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066438301 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069301685 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065603205 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064516661 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063036979 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072675007 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069534239 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.067482358 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06275474 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068237172 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064992868 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066137408 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065824699 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064603502 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065303913 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.0680963 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.065310409 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063049387 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070250094 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067647263 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064754321 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065612691 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064970496 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064577236 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059475856 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064336307 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065770631 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068904609 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065524955 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064029909 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073563931 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062217768 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064755234 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066443558 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062686703 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.068638096 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058958325 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065530128 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064716236 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065187158 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059395476 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063232953 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062402491 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066441556 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06343476 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059712821 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073530187 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.071802887 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066409286 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063480987 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06269704 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059943504 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.296346147 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066349688 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068808833 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070080239 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078503958 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068215413 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067028051 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063504179 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068362433 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071735264 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070860958 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065065113 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062903748 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066604061 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070175521 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072757834 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065813067 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066888619 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070480411 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069333663 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065018208 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070529117 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064636293 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07115386 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0802076 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06803098 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068789028 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073826151 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074901558 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068636392 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062918725 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067621258 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070575649 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068043782 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068330509 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06932221 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082526748 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070546513 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066382515 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066419916 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069547156 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066395035 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074754984 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067615029 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067303983 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071617369 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0687736 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075840972 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069930011 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075457548 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069694043 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069659165 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065688702 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067032037 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064869501 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065782054 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06777906 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067336195 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071649581 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074642218 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066232619 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077158314 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075460058 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068645086 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063828476 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065973067 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066472828 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062270367 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067567178 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064818401 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064779357 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064616983 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065433843 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067536343 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071493535 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067515791 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067120312 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066563207 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061023064 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068742134 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068773926 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0670501 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063660589 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066751985 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066951301 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070606127 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069997848 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064201326 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068068114 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067939017 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067138129 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062139449 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073340156 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065344858 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068431806 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065505131 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066610689 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067249599 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070134927 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071320211 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067485941 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068638799 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070130179 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06879768 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063821695 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063767232 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071793776 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064585414 seconds)
  done (took 42.180635473 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101491771 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064105524 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062674612 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062394895 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07445033 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063446265 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062108531 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063226173 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063405112 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065718059 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062386958 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062388749 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071479129 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078196163 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074648675 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067158428 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062606007 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06399931 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062770903 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063565018 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071689282 seconds)
  done (took 2.792415624 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075310351 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070996088 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074091084 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076119936 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067978232 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071148256 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073054188 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071066491 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076716692 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067484161 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077122846 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070959321 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07658493 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067662665 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067607697 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071199487 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076348703 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067921661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070991371 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073036641 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071290246 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072966241 seconds)
  done (took 2.918886338 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067483135 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066172095 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068437728 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062551751 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066795831 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061995339 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070073857 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064754564 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070050857 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065886496 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065882287 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065985172 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067989389 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062373404 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066749477 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064458368 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110147539 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07007278 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066220099 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067596909 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062257895 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068692903 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062564719 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062837089 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065879514 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070247017 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067345695 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064616361 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066226999 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065851887 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066427083 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064553928 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068094871 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066766784 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065731649 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065978679 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066318961 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066647224 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062166656 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064389656 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067014471 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062841059 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067333973 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067595915 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064893654 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064269422 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067913561 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066272613 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061598584 seconds)
  done (took 4.608221934 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081071363 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109623018 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06857375 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089078774 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080660786 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075916145 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070031399 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090123449 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063843768 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064964822 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082260388 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08025982 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06659504 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071129132 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070420726 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066318192 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06761268 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065800357 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070379862 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065953776 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070316126 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072670121 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080424713 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079900193 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069990287 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06552629 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066050704 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070403196 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078906589 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070847351 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071209275 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071726788 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081023674 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068510007 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065468634 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068131715 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08205347 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066559576 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068558457 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063991871 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068251107 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070419016 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072422329 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082883517 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066573381 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071372816 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066034274 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063310308 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078759405 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068752755 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074002784 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080430253 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06999559 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066384284 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070614478 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08134771 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06607948 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06501592 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069576249 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078648996 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063951768 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069854023 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079627098 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06802889 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.0731462 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080118395 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071562993 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069713558 seconds)
  done (took 6.413347794 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076857515 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072765127 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081001381 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080666054 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072478294 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072639156 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072933464 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072622081 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072380803 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077463566 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072382878 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093543056 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067954442 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075481168 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072920948 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072824145 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072638558 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073252 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072561897 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07271022 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072741189 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080020944 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072884802 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080644043 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098402618 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067932052 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072713762 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072458603 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080737045 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072673749 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080100523 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073384669 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073071612 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080442403 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079779552 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072283034 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065498341 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072571254 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072767587 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072210129 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067696727 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080012693 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071919093 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067739446 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072324751 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071979957 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080018654 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078868065 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074433203 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076845494 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071976183 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080146738 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071812256 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072239374 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079643799 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104708092 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079830301 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079997946 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071844922 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08006302 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080016629 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08587378 seconds)
  done (took 6.069518446 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08406665 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074712632 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076115758 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061721622 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064223869 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070060726 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064288346 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064033628 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074508089 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074964877 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077002393 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070399771 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073031898 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076756854 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070310695 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072911042 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069848833 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06993084 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074516147 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070165735 seconds)
  done (took 2.792534797 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075232795 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083169226 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066758089 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072128141 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069445654 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072012005 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068346566 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069280057 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067158724 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06898439 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076261147 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076110395 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067257446 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072086195 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075823569 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07202434 seconds)
  done (took 2.503010945 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075527458 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072780672 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080856044 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066101764 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064505556 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062654155 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065618576 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061533457 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06286121 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078316852 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066038959 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069207974 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065941548 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06462188 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063112756 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068575783 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062453587 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063463686 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065847189 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07850567 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076582054 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065217643 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066602884 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065984944 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066008017 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071102273 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065661729 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064051335 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063214976 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066166755 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066693833 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069425233 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063036308 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063967917 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064531402 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063077859 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065434539 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065785412 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068470713 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065496703 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063668828 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065283812 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065868705 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066601479 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061884185 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066130137 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061895295 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067838444 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063842318 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065796889 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065181065 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067939562 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066048927 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072340881 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068562226 seconds)
  done (took 5.026361331 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078892791 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06948301 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061599614 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064098438 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068809711 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067569821 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070140467 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06778338 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067563948 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063842945 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067702748 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068491659 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067982009 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069435589 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067405223 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069451323 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062031115 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067837288 seconds)
  done (took 2.586284892 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071960162 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066083774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073114315 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066352623 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065740197 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068157158 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062092376 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064723922 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064715135 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066459729 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0662616 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067885006 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064447196 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06832667 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066199338 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066026877 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068277426 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064621152 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06596145 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061843217 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068143953 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064514245 seconds)
  done (took 2.819627099 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072724263 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091760804 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.13873301 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083567456 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081043671 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078841122 seconds)
  done (took 1.90639595 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089902117 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079119696 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067445369 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088565313 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073356147 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067503302 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067182759 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067864216 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076213308 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076609316 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067424055 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075685831 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075818272 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075596963 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073307111 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072844423 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067885848 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067407054 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06602218 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084145487 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067320281 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075608192 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067543653 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066825139 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067355865 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07525806 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07604986 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076024725 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067177974 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07551914 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072766716 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067281993 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076144341 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076258617 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069061688 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075714134 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067392787 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084321954 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073285866 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075453773 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068967521 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073825433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076563601 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072381519 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07633428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068101713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072542025 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067751055 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067880574 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086130936 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073610382 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075258317 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073455071 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07614468 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075929323 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086566334 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07623399 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075506806 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07342457 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078950567 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075484809 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073332534 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075593076 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076544925 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073788034 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075671957 seconds)
  done (took 6.242447739 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081599887 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086363472 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068252203 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076435281 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075856851 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067422881 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067358373 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067439224 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067705889 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067373379 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107607535 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068155639 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075717249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076260891 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067778823 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067478122 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067694264 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075410514 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067236589 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086030814 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067607946 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075378162 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075945613 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075798481 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076046742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073366008 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067755183 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067267798 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067980517 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067472861 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072409238 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067931409 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075631108 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066854242 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075643343 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068007266 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067782807 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072418694 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067668759 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073394893 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075647122 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083887676 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067871673 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067510281 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076065646 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067471146 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06776744 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067421612 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067925641 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067250032 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076012308 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076564079 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0763875 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075535613 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06793048 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06753708 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06783318 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067671113 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067754574 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072962205 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075454684 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06761657 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086424744 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067632335 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067334397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075377775 seconds)
  done (took 6.153096516 seconds)
done (took 128.477584721 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183359361 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168529529 seconds)
  done (took 1.710412605 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068068292 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096484634 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077003325 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128084069 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067019695 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099895809 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098226011 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07794909 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066227074 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066325286 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065788121 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067748494 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131175103 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066418081 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066176076 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067781608 seconds)
  done (took 2.680961352 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097079654 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173537881 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099805835 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06550049 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097112294 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072793482 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064867414 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074816066 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070888255 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065168177 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072922916 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070589658 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065043187 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070988278 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070863493 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073084258 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065299975 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07345143 seconds)
  done (took 2.82017281 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101466487 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091327277 seconds)
  done (took 1.571079498 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.165061911 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10673634 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151251358 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.3370552 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.161673796 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231220907 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130547206 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130783728 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119508479 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124015581 seconds)
  done (took 3.028770927 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09795669 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148667937 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256589295 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115896995 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072348307 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091805123 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116331122 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077588711 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077681817 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077611134 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077461719 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076471372 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096244382 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073594976 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073988833 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07583835 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099481354 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07264811 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075416584 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074446043 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097348963 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066144983 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073907299 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073036327 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074957224 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075153888 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065518396 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06574495 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074397734 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074252741 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07735859 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090267863 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075046968 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105347391 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069987464 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106689789 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076210952 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07137675 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073847585 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071153599 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075732743 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075817236 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071854311 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075785198 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065229694 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076393207 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065474916 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066364073 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07830295 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067280448 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078318141 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077232197 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105401587 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066666311 seconds)
  done (took 5.936168728 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.666536781 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103674662 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070736221 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108586118 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096409816 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073057817 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.694665527 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091606382 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.174343942 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092330029 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088323738 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070324363 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081371796 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083427256 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109614419 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101862841 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093669227 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071130441 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101145378 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.099101083 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068230555 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093572993 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090389519 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.37581317 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067916931 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069581698 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067589434 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069833345 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.110784656 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078469114 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070061397 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.122135732 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083978053 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.121176848 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066768041 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067803151 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067830969 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078905404 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.182837992 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.13403893 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.130597598 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066931447 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06801442 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069124414 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089942043 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066995754 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.111476436 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080336529 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.119115533 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070470156 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06992003 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068454931 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069225146 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08025042 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078310585 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08079864 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.231176895 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068673733 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068229913 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071228343 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.182121162 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079338424 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081440319 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091719999 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130072511 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067795594 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.69345336 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084590534 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067177689 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068941238 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067326535 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069013127 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068197058 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243820431 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.344523469 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07159814 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07095389 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06870885 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.161092896 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079139106 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068870798 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.113074541 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068521046 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069693455 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07038999 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070048784 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.11940414 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080381273 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070829712 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068921561 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069925889 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069094574 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06784219 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.16339776 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080855307 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080321688 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.160337085 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07024401 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.113534104 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08003893 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070593541 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079835277 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069028992 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069743623 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069928634 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079307126 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.097045595 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080774862 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070361013 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067823301 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.099522037 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081002284 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068914746 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079575539 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.398643666 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080231937 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067678242 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081147926 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068593546 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.112521342 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070338243 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177786941 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069426201 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079235979 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069010319 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067497643 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068542549 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.111986415 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070388668 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068963484 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069499666 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069967403 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079461871 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.135075229 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070072579 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.162901519 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.133776765 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070390486 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.120326843 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069223045 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.117136954 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06992028 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069417338 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067092377 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.710616051 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068239608 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068948777 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069907309 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.138581458 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067604512 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079103652 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076887279 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066953943 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.690484329 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07869462 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07645889 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.209786756 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071369118 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069612878 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068535832 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070537558 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.112538814 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.147734412 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071187323 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069161327 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078145319 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.112564226 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067748283 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079310048 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078319064 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07903221 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069229879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070359767 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081628723 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.119390611 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080078825 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.137284965 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.515856815 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06922165 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078112312 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.146869336 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069638677 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085795743 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068623587 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083182243 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.11413585 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077727049 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.23773691 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.114481599 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.138517046 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081150485 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083514791 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068264125 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068387391 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07978345 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068406107 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070158827 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078388269 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069885164 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070189974 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08391499 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06879066 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.174360783 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067862979 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079273326 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067593988 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070254164 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083656854 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069104249 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070049661 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079570483 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070643297 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078019443 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.659564584 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07841357 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067862279 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070076451 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.137094008 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.113529096 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068672195 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067948374 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070824588 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.110400819 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.156860914 seconds)
  done (took 28.256181868 seconds)
done (took 47.386576155 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209173658 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151011585 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202850356 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118085438 seconds)
  done (took 2.153625952 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122073206 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101203603 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095614845 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065089455 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102085589 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065701806 seconds)
  done (took 1.965739729 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312143947 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210888033 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181328576 seconds)
  done (took 2.110561178 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198086102 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18723934 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394808046 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254333801 seconds)
  done (took 2.552280308 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144671769 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08932237 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067641218 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083476674 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134883872 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161294929 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101517082 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125870861 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078364506 seconds)
  done (took 2.449266557 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145298506 seconds)
done (took 12.797701499 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 0.145817051 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.227351764 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.245005358 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.147850392 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155542677 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081615919 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051577614 seconds)
    (8/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.120654887 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077746309 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073825802 seconds)
    (11/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.109255258 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.143649011 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079335875 seconds)
    (14/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075655541 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.082755586 seconds)
    (16/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.1522767 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07021672 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.144603572 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102865176 seconds)
    (20/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.21463528 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.165105311 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066989137 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185753255 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101240093 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07664667 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051145599 seconds)
    (27/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.222350405 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.169881035 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078629367 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072056569 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.194655424 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070670464 seconds)
    (33/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186246684 seconds)
    (34/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.089265595 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.126375094 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074616275 seconds)
    (37/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075952915 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072538187 seconds)
    (39/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.159062559 seconds)
    (40/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071869041 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.223715379 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094354112 seconds)
    (43/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071833741 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095335949 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075243773 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075763622 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072105503 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081549743 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072119421 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073183238 seconds)
    (51/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074167049 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.195510596 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067287814 seconds)
    (54/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073523636 seconds)
    (55/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.156745595 seconds)
    (56/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.134613068 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093106711 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066009139 seconds)
    (59/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.156231319 seconds)
    (60/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076302321 seconds)
    (61/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.114822414 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089096189 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051173833 seconds)
    (64/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07295716 seconds)
    (65/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.152539164 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095641417 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071787117 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.171903839 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065029756 seconds)
    (70/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089563312 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16719348 seconds)
    (72/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072209363 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.136361362 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107958304 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052067037 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.13608911 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060674523 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085720281 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.066019184 seconds)
    (80/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074957233 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064451722 seconds)
    (82/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060186829 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071753292 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078323267 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066790402 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089765679 seconds)
    (87/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.318125118 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100218212 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067349101 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05136377 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06463144 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.180849264 seconds)
    (93/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.169383364 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.140168822 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065279633 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076319826 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051034368 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148821543 seconds)
    (99/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12044742 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073854546 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.154097442 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067064128 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065521863 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07346729 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098746418 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125051124 seconds)
    (107/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.158292578 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145187084 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07238128 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.098073556 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052831033 seconds)
    (112/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067373981 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073220374 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092117132 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093999664 seconds)
    (116/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063744411 seconds)
    (117/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063600221 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091375289 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051381312 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.134801756 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073924674 seconds)
    (122/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107516765 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072882267 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.296045998 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072466142 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07300889 seconds)
    (127/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052478403 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072561131 seconds)
    (129/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.115505972 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077591395 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169041472 seconds)
    (132/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067186629 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072277433 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050783538 seconds)
    (135/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11015023 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09534105 seconds)
    (137/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067608089 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064835625 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072450932 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.137303285 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108357763 seconds)
    (142/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108198417 seconds)
    (143/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.148225178 seconds)
    (144/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073706543 seconds)
    (145/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.137975759 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068641763 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065603801 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067138616 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070988553 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.0658218 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.170865011 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091124503 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090263537 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108868484 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053609323 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139739773 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.16136732 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075486109 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050870125 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.10986199 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112108738 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065962274 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067551567 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067622512 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.148077295 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050794897 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168932352 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.152002242 seconds)
    (169/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071646913 seconds)
    (170/309) benchmarking ("sort", Int8, false)...
    done (took 0.139068983 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051235578 seconds)
    (172/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051683985 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052584168 seconds)
    (174/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076282897 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051284291 seconds)
    (176/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110229723 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07262765 seconds)
    (178/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079704594 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.138678481 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.138752989 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051004341 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.133867878 seconds)
    (183/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062522294 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144687424 seconds)
    (185/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063606893 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06594407 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064625314 seconds)
    (188/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050542462 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054140514 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081771144 seconds)
    (191/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.168411921 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064774878 seconds)
    (193/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.098823249 seconds)
    (194/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071343725 seconds)
    (195/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073781359 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050681466 seconds)
    (197/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.23789283 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131969221 seconds)
    (199/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071476696 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091325916 seconds)
    (201/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053425227 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053519745 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066374529 seconds)
    (204/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104294939 seconds)
    (205/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071934989 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.148171899 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066754848 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066101678 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066077799 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052651576 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051226512 seconds)
    (212/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053025028 seconds)
    (213/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.181948697 seconds)
    (214/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064839774 seconds)
    (215/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11661023 seconds)
    (216/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052751553 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088250217 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065882919 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087586049 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073795677 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051498897 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053400665 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112670453 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134703022 seconds)
    (225/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072235923 seconds)
    (226/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062362631 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139496956 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104207037 seconds)
    (229/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06229465 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087459771 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065448204 seconds)
    (232/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085660285 seconds)
    (233/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068102383 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06568572 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052774182 seconds)
    (236/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080306705 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16718051 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176227896 seconds)
    (239/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.10552038 seconds)
    (240/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052416152 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055183965 seconds)
    (242/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068129478 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08962399 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053053023 seconds)
    (245/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05206165 seconds)
    (246/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063397707 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089815052 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065002905 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066141262 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089467133 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068430328 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050952641 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071443285 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066538363 seconds)
    (255/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051895721 seconds)
    (256/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052247636 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072854829 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175679194 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071838354 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071798205 seconds)
    (261/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073827982 seconds)
    (262/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050890131 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065357891 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087509247 seconds)
    (265/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052765095 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0664119 seconds)
    (267/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050693849 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088454766 seconds)
    (269/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052102608 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075000461 seconds)
    (271/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087361621 seconds)
    (272/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.1087511 seconds)
    (273/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078108144 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066215269 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051123553 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061911238 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086337651 seconds)
    (278/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073213633 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053959137 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072511101 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13285788 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050732061 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063973758 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064244748 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072721725 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078535635 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065211373 seconds)
    (288/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065705309 seconds)
    (289/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069373596 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064864881 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070860345 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052405514 seconds)
    (293/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051748932 seconds)
    (294/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071804024 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052946652 seconds)
    (296/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050913855 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073916951 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051194677 seconds)
    (299/309) benchmarking ("sort", Float32, false)...
    done (took 0.127412303 seconds)
    (300/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071550191 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051108796 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070780267 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064997466 seconds)
    (304/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051423132 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052696641 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051286274 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052015925 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071003346 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067053122 seconds)
  done (took 30.325742585 seconds)
done (took 31.746457369 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084572633 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091838976 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074039408 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092157847 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080377393 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076567493 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071966269 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077566949 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079155671 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081316457 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077944511 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054643891 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073628248 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073928827 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073689188 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09083701 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077856331 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072456715 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072547337 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064744842 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073017422 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065869615 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067782325 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054719843 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078234266 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072078887 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072980771 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073874931 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065649268 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066057068 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069131194 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073127183 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065358083 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077622244 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071710293 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072741438 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074945346 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076152417 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06744722 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065563393 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073559006 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065534829 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07234881 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073060077 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071606468 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071149083 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072475412 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077779592 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090989741 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067798281 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074031019 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076277419 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076206156 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071915694 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069523206 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072249839 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070398715 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091380179 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073175092 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06767217 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073585154 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073303703 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070717983 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072882902 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072710429 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074919542 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074721127 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07085544 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074108795 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070285857 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065473567 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072992329 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068365719 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065284317 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074980445 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076225532 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064285566 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.0706673 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071891292 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071334377 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064695971 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066936268 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066439489 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070835775 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067174556 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054483459 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068709922 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071332875 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064347328 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07275007 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070858699 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071465915 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066846566 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074579131 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064393772 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07066988 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06523913 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06524341 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066762601 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068995476 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064951286 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067396591 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073989027 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066624737 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071153797 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.0787175 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06519926 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071615026 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064493816 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064994932 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079777566 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074033897 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06511709 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067514592 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064135337 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071770624 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064345313 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064861929 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065274514 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064945709 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070591497 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065110794 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066940832 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071946296 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077191976 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065022128 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067772401 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066501877 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06459789 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069733476 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064535682 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064600243 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199994519 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06193023 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068157218 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065416687 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073308022 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067446683 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072667838 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066790822 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072912822 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070612577 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07136953 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070324815 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064586106 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058496758 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067496789 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067978873 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06714391 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066057926 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067329674 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065412579 seconds)
done (took 12.416390567 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068952534 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143874168 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098039742 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095072226 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085816729 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066124232 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075755362 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101506653 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067580914 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101632824 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086948071 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08470112 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111999206 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065172442 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065963908 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069451683 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066971639 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081406298 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100765445 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08626207 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109163499 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065339544 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094384816 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09031967 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086664226 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09167182 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066861472 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069443072 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069279627 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100127278 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086484701 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069617623 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066512085 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099980436 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091916538 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083004695 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066107397 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081971488 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06630576 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065288932 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080953657 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097501817 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079702919 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080460292 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069884387 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068711343 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067031796 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083203377 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088575397 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078379964 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085903302 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102905557 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068446079 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065418117 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064576628 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085357187 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065311835 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068429483 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066095006 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067945083 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066074902 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069127531 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081026216 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086630373 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069680613 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080121346 seconds)
  done (took 6.805251894 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085274242 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089662195 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083195821 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084138986 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065965116 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066487496 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066272791 seconds)
  done (took 2.053047846 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068478621 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087860444 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089636812 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088661959 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084436922 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087455287 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075674612 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066504074 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080439624 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067736691 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087353959 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101070206 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066726281 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072534664 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09062363 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066667437 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090372443 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066914399 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070070029 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089767071 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068478326 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081999884 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070030231 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066883601 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080370899 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066684446 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112985809 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070624325 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067956755 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069055138 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064564382 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10602428 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080112803 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075694113 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066432879 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081132294 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081464954 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06524028 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082930803 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071583657 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080529307 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066814402 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067654051 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064853143 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070664834 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07690291 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067336762 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066653684 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069413513 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086012684 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067031307 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079826473 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070784173 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069218273 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068031505 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070825764 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076220524 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067283685 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086356733 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067942435 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083529075 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082926294 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08003014 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082611342 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069007686 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080223474 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080375065 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069100045 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068583653 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069886255 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082416939 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064907177 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068208599 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077425328 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068367191 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089673148 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089620836 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068021164 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075729594 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066921371 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066780043 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066996274 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089519883 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06914227 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066788305 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070826103 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069918719 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064949009 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065793447 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069955347 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064977383 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067814447 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069461879 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069705206 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069075369 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082336527 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068943839 seconds)
  done (took 8.779276201 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072016407 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067786029 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069753952 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067776703 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06776004 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067875172 seconds)
  done (took 1.946515946 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095144371 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069733006 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080926058 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073110044 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10496255 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086813965 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087565594 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078620263 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083930008 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078887641 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086960703 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088291187 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.0928218 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072583353 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087373702 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072204915 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087034897 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076142091 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078111128 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073132639 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08707639 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073196337 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073454957 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081725235 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076303094 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072668064 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06777281 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078922004 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07839461 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079287342 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073013867 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07593657 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070791516 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079205616 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086901593 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070533276 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07202396 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078048403 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072399677 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075242996 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088479803 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072837132 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074880633 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077513063 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079082098 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070470508 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077399733 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076499478 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086284871 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076926601 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076940349 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071460769 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075082166 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077106127 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070013145 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078300568 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077201431 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086463211 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072809451 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070270769 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069077555 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075484709 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078465834 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07600346 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078857765 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077395497 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070473599 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072763074 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072698351 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071669143 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076832593 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069050111 seconds)
  done (took 7.112719487 seconds)
done (took 28.194093843 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546718959 seconds)
  done (took 2.046321715 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620503026 seconds)
  done (took 2.144349344 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.3752187 seconds)
  done (took 7.89419162 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398969478 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.511011122 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.715518174 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130582314 seconds)
  done (took 3.30835418 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.666687083 seconds)
  done (took 2.202920045 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214037712 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197546464 seconds)
  done (took 1.953083674 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.371228877 seconds)
  done (took 1.898100764 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106431013 seconds)
  done (took 2.637533305 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264279686 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163155959 seconds)
  done (took 1.960612888 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.4646249 seconds)
  done (took 1.9950218 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.831361121 seconds)
  done (took 6.362093706 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208665594 seconds)
  done (took 1.780392259 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242423525 seconds)
  done (took 1.774175321 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.705473029 seconds)
  done (took 3.240232182 seconds)
done (took 42.728010898 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082616729 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080604856 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080756303 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077999828 seconds)
  done (took 1.838234669 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077473855 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072365493 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07638541 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072245192 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076009437 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072291385 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074020555 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076621411 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071975751 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072468073 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071812286 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07227773 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074016931 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073656099 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070530059 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074095929 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076046049 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071688081 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075211761 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072200026 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070649504 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074354437 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074441052 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071544193 seconds)
  done (took 3.298688781 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07828436 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072695239 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07431421 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071127918 seconds)
  done (took 1.839237542 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078732712 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091648334 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089856069 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07708496 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091081799 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085542006 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068456434 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068700892 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.0725397 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076839231 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067366891 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095216639 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087097235 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076312682 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078475731 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065607677 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067929362 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086185299 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076770765 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07673017 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069684539 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076323473 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067309113 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087577705 seconds)
  done (took 3.416177283 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078431004 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102767454 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076865946 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08767107 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089021631 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064700193 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073958455 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088277092 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122429559 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064980297 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069586477 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064911715 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071587916 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064829653 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076064879 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103897245 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107632494 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068272066 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095731546 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065213571 seconds)
  done (took 3.184840142 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074560053 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069982727 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066143313 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06814925 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077243254 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071871167 seconds)
  done (took 1.975600805 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069479898 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067154198 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066623665 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066874266 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070994082 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066950334 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066292079 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066830348 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066780776 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066528208 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066439594 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065339111 seconds)
  done (took 2.350735798 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.328048459 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.0682369 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068612112 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065942169 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070015079 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066597508 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079948853 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068051161 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090245505 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066158632 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066309816 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068451125 seconds)
  done (took 2.652195339 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206738118 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075958117 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236144736 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136538535 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110816146 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114945324 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103384337 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113019126 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143318421 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101214928 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16712379 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164730892 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106447091 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136770207 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088308681 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097855043 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155240796 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161553066 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103320503 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164964385 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143140805 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123838879 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145835707 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100930833 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105268232 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121558842 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070857066 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079205711 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169721839 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130940713 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146451239 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110159954 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093277324 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175705996 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171420399 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141949116 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133886692 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083322424 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101055691 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132806143 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198294775 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088125179 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16279351 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105942748 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079157356 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136487496 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116514697 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117748643 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103252422 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08758318 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140698926 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175442238 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134012853 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084246951 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108572257 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111344613 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112079462 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099984209 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174373062 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154774856 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122943912 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069780186 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096189803 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147777208 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127197968 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105110739 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121914011 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090868874 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129065132 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150230357 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114667319 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138444254 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125996989 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0856337 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115088511 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134922288 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123020864 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163630262 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120172574 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070630691 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119550517 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099573297 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078833229 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.139508742 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073262464 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168486048 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095683125 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.103479659 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110318794 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105769069 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105817223 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153143684 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135427387 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.347844014 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067073586 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105972112 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120925503 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148770103 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088285512 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108905906 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115895224 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078027978 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138045327 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07480696 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12308197 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075652034 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125025694 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132005648 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075809791 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122100925 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100908524 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100998594 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133495547 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160466346 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089233438 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081952921 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16710535 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122011628 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103635698 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144540501 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15586561 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099321066 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102191618 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14951709 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179936658 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089749128 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163043463 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107275566 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083129008 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087107643 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123702039 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112038609 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121983195 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081631609 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118196836 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167435375 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074422259 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094254968 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132413289 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078807307 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080520765 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103104453 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099649597 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094440347 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099174986 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103404059 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138378245 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122609136 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10409057 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271598653 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098079665 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17209324 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088967322 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099849847 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102735169 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069860552 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135935854 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155834063 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078838776 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162804383 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123582143 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104274769 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118155755 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08281633 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138687084 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077913132 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069831288 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143145236 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110082212 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110047671 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149832578 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103900775 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126258802 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11841556 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133450395 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131324346 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128257967 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105465478 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087683171 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111532863 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125815855 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072323874 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091153803 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07993808 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103439094 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094949817 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082491261 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142020986 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124506255 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100154822 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111339349 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096226055 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146318597 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076258256 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12833714 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119530425 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093355666 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151142054 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150661688 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130838031 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098499679 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144650959 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069790037 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073020884 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.237067293 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123997772 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083685667 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082837231 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117430265 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146511063 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128801524 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136446283 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110337862 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120556185 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154615312 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068777012 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115172643 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146454274 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119825196 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104626374 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089556531 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098941019 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141339791 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1076391 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180665924 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113232563 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126034263 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153393809 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098909452 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079032215 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102989336 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135092443 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109918308 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144408956 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099568498 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087526855 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109746205 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073975988 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099980006 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126853743 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118735236 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134777558 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113953586 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131948068 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07706385 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1166073 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120109841 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122153914 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063874791 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120192485 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160128406 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092565823 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117739231 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152068982 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078977843 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123967158 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321995864 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144884378 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084533768 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109405912 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11870483 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126496014 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118967194 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138757995 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108693443 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134253196 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108326279 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084801725 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086990689 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096803388 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104103313 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093892819 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107192239 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113585269 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093750609 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131017451 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102084601 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108307899 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117315829 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096270253 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088760248 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095741174 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173143191 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1190571 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170333962 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098706447 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14464912 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16329678 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074138698 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078563772 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077916875 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13936484 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083293429 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130888386 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09733801 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104982879 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123613202 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141596794 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094282801 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068137269 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10780879 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133691583 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111499572 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098016826 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104690258 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161786953 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099691894 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078597522 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113110902 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103994729 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101574077 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318325786 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061841241 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097411492 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075949945 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080079868 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126843039 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152044824 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080429031 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102024978 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118884296 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110016638 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126926809 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100726545 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098813272 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114204406 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149069335 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128824359 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089309388 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111905229 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129311902 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173372293 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104819326 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09482879 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170664436 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151225275 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160242149 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088539711 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114592756 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113686641 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108426703 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138475423 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082603216 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1631091 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08166905 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136083579 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103836831 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089963628 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129122652 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098959562 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090441114 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147374433 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116661041 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082244019 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077504496 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117436234 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119696342 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106361187 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075222922 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138758474 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071856318 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13091104 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167690319 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080303227 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251303177 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096692824 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079678902 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107792328 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102090388 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089686216 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098682238 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172606302 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087669314 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149055946 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140866555 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112747252 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136455326 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099588229 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635270725 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077526397 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15095329 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115897827 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172145535 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096658174 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116950474 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108668322 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123225187 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144313285 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104723403 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177046733 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131671057 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115574595 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079723812 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102032737 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102155824 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088059074 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104580292 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113246306 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115675669 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093537271 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115693367 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122515506 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081819204 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094967262 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155279793 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116195339 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143999163 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140321805 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084339995 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117444801 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138263569 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079324591 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120652997 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151355594 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105273685 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097623598 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.227188705 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10245411 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169931723 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072773694 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162037873 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119439137 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108602008 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112320895 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113312607 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130129758 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106737192 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120648886 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092671751 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109492244 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111649044 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081205177 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076329003 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10394658 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111727984 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09644794 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097798416 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097139785 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150560301 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070667091 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095477489 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103079369 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144689003 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1743711 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087844037 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082343266 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118310594 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112435136 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113133269 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120559114 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079166017 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081898468 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081261318 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07672644 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107824594 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111869438 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104131651 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110615615 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163594917 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081928341 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224084426 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094665297 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103777466 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069102834 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078476973 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095416177 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097021221 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107875816 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099962359 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169882238 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093834932 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088807233 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091539114 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072764895 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081949107 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273169492 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112210604 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118695069 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097284035 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062391075 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109601728 seconds)
  done (took 58.474123173 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109587633 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082578624 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096211484 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149532123 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122523593 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211535881 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157093922 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1993609 seconds)
  done (took 2.810014024 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069496817 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093096823 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099274834 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082437581 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066622326 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067829804 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225145539 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079807625 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065953823 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08809279 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078201175 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068782033 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.401558578 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065410793 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067133434 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063610678 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066842649 seconds)
  done (took 3.421730838 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37547321 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.362125916 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371373051 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072517856 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.658090805 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08824886 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.080997043 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095569021 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07052945 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.267123572 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701197965 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.093137986 seconds)
  done (took 13.916529776 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075999194 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068905499 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083200351 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082403103 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071647788 seconds)
  done (took 2.059804964 seconds)
done (took 102.809671084 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081367364 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.296907132 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05271253 seconds)
  done (took 2.056212564 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083909594 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083721985 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084302873 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082308955 seconds)
  done (took 2.023786502 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075233162 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07559022 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083582606 seconds)
  done (took 1.918367919 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222541356 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138364101 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08589369 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082935512 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077437745 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078374377 seconds)
  done (took 1.931354853 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074020057 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075183277 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072536511 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076131901 seconds)
  done (took 1.984915763 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077315006 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052457703 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054796198 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055856914 seconds)
  done (took 1.927965526 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086992834 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078944019 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078711728 seconds)
  done (took 1.932703668 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107035925 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084102027 seconds)
  done (took 1.879786007 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083020863 seconds)
  done (took 1.768995803 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098622829 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113238383 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128637189 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108786012 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13621858 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108809432 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085089611 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085962543 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076736624 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086665976 seconds)
  done (took 2.7141918 seconds)
done (took 22.343969576 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080588555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367149266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359877148 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090389187 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667787012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356154754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992425418 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091429765 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120084186 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067422535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083533802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648294979 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981127556 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324672063 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969809048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319169563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649412056 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067915518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067477447 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06737886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977208531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06684263 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067230593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068164763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648811379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370852167 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067570961 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324523616 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067166898 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069082124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354535033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068063979 seconds)
  done (took 16.190376044 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072495908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117375705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073299506 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08348727 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069817558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069201264 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071262179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068265404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124727907 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067435151 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084441509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067110853 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071600307 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068407009 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086535293 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067573455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068541752 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06808255 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06766665 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068199853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086269286 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067446049 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067583465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068385868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06753448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079462784 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06856041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067618298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0684938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070233542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07094812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068463275 seconds)
  done (took 4.087733127 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116548001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125080803 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074579188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103133811 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111832538 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069975084 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14260371 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092961666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126669053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067730336 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084108266 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067518946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100504133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06876081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087453588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068748207 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068792788 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068316559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068029875 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06847927 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086683438 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068036019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06821126 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068538082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068011047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081160648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06843475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068483052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068005756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070114491 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07140849 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068444586 seconds)
  done (took 4.342774985 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074154343 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074988433 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08198539 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083133681 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069058919 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071415135 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072348527 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069043536 seconds)
  done (took 2.301978891 seconds)
done (took 28.614955134 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080701461 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068466918 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072148974 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081087986 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073417129 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078268182 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066584668 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074325467 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071867587 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072339547 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074286301 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067331313 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071052952 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067393993 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07330535 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068067589 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078986003 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071183016 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079480019 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078798508 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069320975 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072310429 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073820028 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07882232 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078492554 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078727798 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077071493 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072446134 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068594333 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070188727 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076208356 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083957408 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068254994 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078710265 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067409878 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06815395 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071165105 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067809037 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07885863 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076260024 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069116573 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075537841 seconds)
  done (took 4.769749515 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090733655 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091214586 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08538976 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060745242 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066838077 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06429093 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088541807 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059334454 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.0594129 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087621442 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055848519 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059227187 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062191171 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054183634 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058887694 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056526833 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061599475 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055820096 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059498218 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059080019 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057832465 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054383289 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060179331 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064922169 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056349474 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061568517 seconds)
  done (took 3.406038855 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075789396 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084103722 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087702637 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127194972 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103295312 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076906305 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07744834 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091593616 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084656852 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067283237 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070905179 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093264605 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087688529 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073455065 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067327602 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084152071 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081034696 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068930348 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073265042 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09033628 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083667917 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083374704 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091880118 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080106374 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066414384 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06921021 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070866524 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080462581 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072071284 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076088815 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071146271 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07037875 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068649612 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.089650039 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070899335 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068749482 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089403481 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07677079 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077360316 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067843086 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070411386 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06834179 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088857756 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121829671 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.0668039 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073704983 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07445541 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076206407 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066898926 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085361226 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078192319 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066923827 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069878519 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066333035 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066916634 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079593278 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069114991 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069380286 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075697862 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069585843 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08477347 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070776855 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.0821289 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067028407 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075485919 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066072116 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068012153 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066189409 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092164494 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068525053 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107492386 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068309774 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067976582 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075900478 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07486056 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072720477 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067530776 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081839693 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077289865 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070507551 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075348612 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070034671 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070032796 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087028165 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069329314 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068264996 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067971426 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073328251 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070011735 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069011107 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080595422 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067100468 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070040696 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083791006 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067139128 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068405896 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073376562 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072091974 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067256455 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078412322 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072253139 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067452899 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076669551 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06710807 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070323944 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077483173 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07336425 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066689111 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071670953 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073214134 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06812899 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069131121 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070430719 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068817815 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076281999 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074039785 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071629376 seconds)
  done (took 10.581667839 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162402274 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152006847 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069922378 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143983942 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076135253 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078494746 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146356269 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09414274 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067385833 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067673337 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068495312 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115222733 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108031518 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121831286 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078451002 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067246055 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083432357 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117595632 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148347904 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142013409 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083600246 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077335193 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07000909 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069050431 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074124122 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082058738 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090629337 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07638819 seconds)
  done (took 4.475820285 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082655694 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10155648 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073845963 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089111572 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090879143 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067567811 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069757637 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069549439 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080384144 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078519716 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067622592 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073176211 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073985359 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074083817 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06846168 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074488108 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075323054 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069045212 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070798316 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072970109 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077452207 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080412965 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07151772 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067197666 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074450542 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066771883 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064581999 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084621064 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067999432 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089877298 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066154338 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074676677 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081432168 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068036184 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067481857 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067791007 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067321422 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067607676 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069501175 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066149862 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066113092 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057626252 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066726458 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079320878 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07377834 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056629568 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072454319 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073133181 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073079993 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065103642 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070561302 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07029525 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071061924 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074399003 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072836084 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072649008 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068316331 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065793922 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075117139 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06793731 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064624354 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066255344 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071886553 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066126401 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07522492 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072291243 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065880677 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067184522 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069614626 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073804445 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067345842 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.0715397 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065110035 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069863815 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072620988 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069134522 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068735779 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066259568 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067569158 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067776954 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055847613 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067622354 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054062125 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070651487 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065833558 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066018275 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067718181 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072659599 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079764679 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068595817 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073425223 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068238928 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066651403 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070616065 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060714395 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070131276 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082552045 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082929088 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06749871 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065539648 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082049444 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071934621 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06697644 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056317527 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075279808 seconds)
  done (took 9.202389562 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096959899 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08800492 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069876022 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08280734 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090621905 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086793327 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07474405 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075908298 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068960393 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081935906 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073193937 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075733677 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068056581 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07677492 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093625621 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076797643 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069996648 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077325451 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07148958 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100542837 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082552267 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081569231 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074269036 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068229908 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075478162 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07976509 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089786411 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08003055 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078360509 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075514946 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079600997 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09003294 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074150541 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071746005 seconds)
  done (took 4.451122001 seconds)
done (took 38.585744703 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.800272837 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.027832411 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.783872656 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.196472095 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.859162214 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.061419833 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.79053165 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.796423126 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.035854665 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.815087788 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.027424318 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.879231473 seconds)
done (took 65.791579234 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.838608714 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.920830591 seconds)
    (2/2) benchmarking "String"...
    done (took 2.056605982 seconds)
  done (took 5.697861157 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.072130931 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.313298736 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.024069835 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.77963429 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.784731714 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.08818004 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.575858046 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.295253532 seconds)
  done (took 30.585475625 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.975003624 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.978229072 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.431488405 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.469527823 seconds)
  done (took 15.622412297 seconds)
done (took 63.611416254 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.812782306 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.827847189 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.800594573 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.764991221 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.837813189 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.801476455 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.87358262 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.994367217 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.781728327 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.765745272 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.78176797 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.224288433 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.781996633 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.86868375 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.779217766 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.788530294 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.818237615 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.217492298 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.93611708 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.78812582 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.780733783 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.804092809 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.783801525 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.784930848 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.794919968 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.779610598 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.209940907 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.790009412 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.571213349 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.778571428 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.820266194 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.120534621 seconds)
  done (took 204.985456634 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.782457132 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.96810347 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.034804729 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.815815768 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.47278753 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.975232542 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.924002565 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.486494791 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.783030784 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.803061987 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.105868374 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.782126816 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.069337097 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.826802512 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.792979613 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.784652431 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.064393702 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.073386192 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.78653242 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.052329284 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.812279264 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.937740924 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.90241201 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.067617973 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.824355264 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.874914038 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.809750895 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.792777797 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.97563955 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.022340243 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.791196111 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.830480861 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.990761749 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.653770266 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.792350483 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.802655585 seconds)
  done (took 171.990673024 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.16463098 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.15697096 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.783275119 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.786890328 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.787040493 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.789814933 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.781286421 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.914688019 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.907849969 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.234638791 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.948482475 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.834455633 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.617147999 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.782778608 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.853934761 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.796299552 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.785795865 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.80093096 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.811801521 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.783219614 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.78550345 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.912153239 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.795120754 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.782182776 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.789429105 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.78781075 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.792136687 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.153909127 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.783269976 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.787842423 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791294653 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.029708846 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.78323135 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.786753807 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.683104372 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.456175922 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.871294207 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.785959063 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.792290964 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.785976184 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.008452153 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.786559012 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.786995909 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.78930689 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.973395699 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.7865795 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.912407039 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.78434843 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.286250457 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.784462039 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.791443028 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.583687225 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.470130212 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.787846578 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.787813788 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.79092475 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.787116576 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.789378912 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.793363589 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.584594653 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.862637716 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.786228421 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.793494634 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.793735676 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.787272456 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.985166123 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.788334 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.309193561 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.842712365 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.89750813 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910444855 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.79017018 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.856600586 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.881312316 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.784789743 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.791359396 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.788084934 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.789257322 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.870315445 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.787805325 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.907508167 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.793665604 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.789467509 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.839248992 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.85994976 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.785485536 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.677821343 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.79009039 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.7900776 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.09037308 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.854833912 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.787256391 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.789457032 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.791040033 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.907720287 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.909675061 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.556407054 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.791507234 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.641164199 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.79229882 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.792207821 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.920137451 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.787637137 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.981467889 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.793110765 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.873305318 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.791614922 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.791408995 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.789063571 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.789587687 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.822581279 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.792192876 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.849690121 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.791000829 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.790134429 seconds)
  done (took 403.689418718 seconds)
done (took 784.604166518 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.467691295 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.42936399 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.538692271 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.45531354 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.432193425 seconds)
  done (took 14.052038066 seconds)
done (took 15.778210512 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.876481461 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.881996547 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.814050732 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.881674604 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.810355283 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.881132157 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.857713704 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.813946089 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.845773757 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.811577259 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.847940173 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.813080148 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.801082197 seconds)
  done (took 25.666831153 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.015259057 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.024358571 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.856195555 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.027939671 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.831662069 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.01729241 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.947786937 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.942364041 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.938154908 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.805800781 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.805343535 seconds)
  done (took 22.939818385 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.026680878 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.029609996 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.860672581 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.039017311 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.836175392 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.026863018 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.950459854 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.942312898 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.943191525 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.802534983 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.80451001 seconds)
  done (took 22.992100741 seconds)
done (took 73.330780505 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.79758803 seconds)
  done (took 3.525092597 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.818693338 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.957338458 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.805822905 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.804439289 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.799000316 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.799296244 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.805428513 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.795128944 seconds)
  done (took 16.315186993 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.793222247 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.795540481 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.791940957 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.796303261 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.79475815 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.792048222 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.791572254 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.791803351 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.790920448 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.796518739 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.790336275 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.791901274 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.794313676 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.792729892 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.792355922 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.791532144 seconds)
  done (took 30.414877456 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.79300684 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.789992986 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.78731066 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.791997843 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.788992917 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.790063365 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.788070895 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.791000543 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.791256571 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.790626428 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.790206485 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.788476047 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.787904888 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.791168253 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.791047727 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.790654612 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.789229702 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.78882657 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.795371227 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.790274002 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.791339589 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.789328652 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.790952304 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.787958963 seconds)
  done (took 44.69200178 seconds)
done (took 96.675529398 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.490582179 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.419562712 seconds)
  done (took 8.634386626 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.795080834 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.790980151 seconds)
  done (took 5.352163941 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.793322055 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.792098816 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.793066373 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.794446037 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.793056365 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.792856691 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.79401244 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.792297205 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.793453244 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.79375148 seconds)
  done (took 19.655597528 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.792348123 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.793324695 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.788735571 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.792655544 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.79198341 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.789589392 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.791934005 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.792747551 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.793671785 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.789845807 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.792312525 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.791866535 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.792564465 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.790572042 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.794258295 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.790174822 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.78943404 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.79010408 seconds)
  done (took 33.97167562 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.79281115 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.791222967 seconds)
  done (took 5.307839184 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.789604463 seconds)
    (2/7) benchmarking "second"...
    done (took 1.791039581 seconds)
    (3/7) benchmarking "month"...
    done (took 1.791324652 seconds)
    (4/7) benchmarking "year"...
    done (took 1.790064472 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.791043022 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.788428507 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.788653306 seconds)
  done (took 14.255318407 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.794404265 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.963320115 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.040118507 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.452200166 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.792872746 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.797468102 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.719002022 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.798333408 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.800424778 seconds)
  done (took 19.883800928 seconds)
done (took 108.783227958 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.630493872 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.784437364 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.163095282 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.832936581 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.833060911 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.076003472 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.787625844 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.999495809 seconds)
done (took 42.832868467 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.824749008 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.264172668 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.267644315 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.878776928 seconds)
  done (took 12.124893667 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.761663282 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.306186766 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.813487231 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.375548703 seconds)
  done (took 19.994931885 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.148419233 seconds)
    (2/2) benchmarking "read"...
    done (took 2.135120529 seconds)
  done (took 6.005928791 seconds)
done (took 46.670112016 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784221587 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.782955987 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.782182247 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.780531078 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.783220538 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.780914924 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.782454619 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.779981684 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.781870354 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.78182412 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.782156476 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.784459834 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78321181 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.78374701 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780241614 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781135022 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78455311 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.781859868 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.784963529 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780569047 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781861968 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783090881 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.781142979 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.781909912 seconds)
  done (took 44.490211635 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.783995741 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.783506577 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.784341261 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.784746956 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.782270929 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.783026731 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.783362218 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.782758006 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.784318024 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.784089442 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780468205 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.781405534 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.783177101 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.781878274 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784818036 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.77896734 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.783573428 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78142262 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782954274 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.781792196 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.782905545 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78115115 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.781956565 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783786259 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.778393632 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780245263 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.7843761 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.782574428 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783464663 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.779926047 seconds)
  done (took 55.192515008 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.788649509 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.789638272 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.781241471 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.782383427 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.781551191 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.782759894 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.782531273 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.782209374 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.780509794 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.782060979 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.780296954 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.781490668 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.783471344 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.781752765 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.781026901 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.781641675 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.782808395 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.783878572 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.78142372 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.780265893 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.782135708 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.78064273 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.781422669 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.78443083 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.782680887 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.782976295 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.784135308 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.782931257 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.786791111 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.781216454 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.782999081 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.7840135 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.782351456 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.783748008 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.783537689 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.780492498 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.785620051 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.790284104 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.783562509 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.781652576 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.782657909 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.78251417 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.782551753 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.78196368 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.781878567 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.785608433 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.781972393 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.78224601 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.783249819 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.783662538 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.783491428 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.784551948 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.781477219 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.782734474 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.783351465 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.781980148 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.785398238 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.779453066 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.781595347 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.780889263 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.782737481 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.78168517 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.782621679 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.782283082 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.783019759 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.781966168 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.781327119 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.782046065 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.782819259 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.781682822 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.782364073 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.783808893 seconds)
  done (took 130.077334185 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.784049945 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779991836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.778383516 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.780965882 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778425171 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.782840431 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.78068085 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781315217 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776959917 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.781784335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779792377 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.777857379 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777747835 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.780621683 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782763625 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.777190951 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.781931241 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779150529 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.779516664 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.780157326 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781155981 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.777607293 seconds)
  done (took 40.874470184 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781020636 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.78219495 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.77825772 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.781253214 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.778412191 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782860856 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.776771283 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.779590387 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78033339 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777957617 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777955342 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783359823 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.774660555 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776389353 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777271979 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776960874 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78061219 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77901058 seconds)
  done (took 33.73827614 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.776822876 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.776113766 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.778832692 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.778343968 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.777848009 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.779081681 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776951844 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.777658352 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.778135685 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.779458382 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.779791032 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779102242 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.779790776 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776502639 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778919101 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.776968552 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.779913978 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777133229 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779602305 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775909209 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780816923 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.778905059 seconds)
  done (took 40.835178105 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776846428 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.778277879 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.778622575 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.777810362 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.776458438 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.778132983 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.778270573 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.775552825 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.77795057 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.779629707 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776115829 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.779754501 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.776313847 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.777602363 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.777445552 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776224364 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.778326674 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.777390593 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777642866 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.775645775 seconds)
  done (took 37.261409285 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.77791971 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779741555 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780054755 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779781727 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783024123 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.777891219 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778437443 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.781450697 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.779907258 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.780979531 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781375636 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.779641546 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779066169 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.7803167 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.780546387 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.780154786 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781536941 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781276783 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.779701895 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779754571 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.779484781 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.780508123 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780440764 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.779635885 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779092211 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.779410541 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77983416 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.781225968 seconds)
  done (took 51.556028016 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778642609 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.778831588 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.776497274 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.776482936 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.777712129 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.776084473 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.777567607 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.776088786 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.778955777 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.776558759 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.7775789 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.778717791 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.779091094 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.778604287 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.779835684 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.780457245 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778377052 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.775904877 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775308344 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775768012 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.78022689 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774646371 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.778820775 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.777331487 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775718114 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.779815209 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776280611 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.77695472 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779239108 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777150972 seconds)
  done (took 55.041614124 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.796678181 seconds)
    (2/2) benchmarking "in"...
    done (took 1.800223681 seconds)
  done (took 5.309837053 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.773345736 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77842124 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.775810853 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.776186966 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.775486015 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.776376157 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.775344116 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774147592 seconds)
  done (took 15.915174596 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.781323421 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.777808601 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.775881913 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.777165366 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.778605751 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.780146108 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.786257936 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.77738852 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.77922466 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.77861054 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.783717137 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.789097521 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.781454973 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.776193039 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.778695923 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780710279 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.77593182 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.777290721 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.777663418 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.777923448 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775699431 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.7789368 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.779089183 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.776679427 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.779744449 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.790328615 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.784493217 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.777474949 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.7793824 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.7842072 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.778546351 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.775548043 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.778478927 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.778558452 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.779279302 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.779978222 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.790684937 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.780094032 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.785275383 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.781487118 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778534673 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.776734459 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.781310331 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.779791578 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.782557691 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.781942892 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.779094966 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.774755838 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.779490889 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.783945099 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.780654332 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780444104 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.77583402 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784659657 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.779581616 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.785330859 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.782236184 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.782083618 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.786396417 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.791547787 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.796518241 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.784914564 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782374734 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.778293634 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789679011 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.800682464 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78844762 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.778360511 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.774487548 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.78088273 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.786820973 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79576596 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.790683543 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.782594839 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.780094455 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.778885571 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781983937 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.781252651 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.788377835 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.786338228 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.782668164 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.780985344 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.790227366 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800544894 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.783481194 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.782190878 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.779959742 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.781106392 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.781843499 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791976386 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.784388249 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.782567669 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.780018077 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.782401556 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.785589914 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.783147379 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.778543133 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782602727 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.779225545 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.783123328 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781712384 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787223239 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.789940848 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.780116901 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782471227 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.790784379 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.781901016 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.784337813 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.793858573 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.783459791 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.783251294 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.783745318 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.793045049 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.780418398 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785911352 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.792695593 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.780980667 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.785074295 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.782145914 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.783509841 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.792287598 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.808368813 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.783293256 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.782660673 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.785934683 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.794887721 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78205039 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.786988994 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.782757187 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.781373245 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.781179314 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.787073992 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.783954082 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.786266836 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781802696 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786890999 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.782368528 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.782454372 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.782496252 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.784813551 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.79101898 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.784536103 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.786111791 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.788039965 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.7842124 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.787915561 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.793560045 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.786194874 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.787234168 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.787141434 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.780235167 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.783996642 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.78794779 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.78621067 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.78640796 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784168556 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.786423424 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.786831422 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.785397107 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.78494114 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782693792 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.787962728 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789929016 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.785721577 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.791853774 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.78403028 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.784537312 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783720594 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.787431324 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.785352959 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.783983306 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.785889624 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.787152009 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.791575697 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.786542091 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.786184666 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.791275191 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784018579 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785531928 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785898418 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.785303834 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.793965914 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.787395035 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.793881576 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.787962978 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.789536178 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.785500288 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.786764835 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.787801033 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785978069 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.787912175 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.793238828 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799043578 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796479455 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.786803733 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.789591169 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.788888458 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.791043063 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.792796337 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.785073178 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.786215281 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787454579 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786508654 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.789764705 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.788953832 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.788556156 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.784057503 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.787949943 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.786518437 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.785486928 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787183011 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.788464604 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.790516008 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.784402095 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.788206468 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786577861 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.784579996 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.784360469 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.785844231 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.78933331 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.785745727 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.785828979 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.797751354 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.785410707 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.789269486 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788444933 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.790055032 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.787273266 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.787300973 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792111071 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.791815195 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794259999 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.790813214 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.79111953 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.795674456 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.790380503 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.788210752 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.793495522 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.790154818 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.784069301 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.791296276 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.795629351 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.785270879 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.789571605 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.789157425 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788760728 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.788625806 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.796921067 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.787283033 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.78860018 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.788310702 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.790836423 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.788059318 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.78937515 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.790437342 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.791601962 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79179977 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787160007 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.789632585 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.792169221 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.790173433 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.789607469 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.788072513 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790337203 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.795720309 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.796199807 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.790555637 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.793164537 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.791258691 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.792730382 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.791132758 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.79183756 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.788631555 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804891662 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.799712638 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79645228 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.794105194 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.789553215 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795354481 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.791729754 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.799334801 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790520492 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791234373 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.79244998 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.791702433 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.786937173 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.79366637 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.790473811 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79213827 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.793377091 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.792949237 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.791468764 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.790716911 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.789141302 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.790562111 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.790300011 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.788177175 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.792777216 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.794493565 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794483571 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.789916548 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.79278886 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80129128 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792369996 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.793802708 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.790079473 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.792488556 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.792066016 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.795866039 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.791496554 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.794059998 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.798754783 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.7945467 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.804135104 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.793072225 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802436424 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.792725637 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.795262122 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.796951781 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.790401921 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.791205111 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.7927821 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.791580616 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79949545 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.793586976 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.792617096 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.795108503 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792724517 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.790729653 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.791577453 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.795894313 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.791361406 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.792657874 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.801228962 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.79426861 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.796542074 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.799329829 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.790030773 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.793669719 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.793623246 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.793914541 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799471708 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.792729392 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.795471317 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.792675072 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.795159057 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.793055044 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.793372391 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.791808929 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.789503898 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.793337431 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801802991 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.796383574 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.798498949 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.794875024 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.805778654 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.797319899 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.805732072 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.796490939 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.795469148 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.794641765 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.79402097 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.798655883 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.79590022 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.798321481 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.796925954 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.796906329 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.796234328 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.796521765 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.799996481 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.795036448 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.794159812 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.796741161 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803127969 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816736079 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.797509655 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.798910351 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.791963846 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.796549051 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.799414424 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.794047693 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.794117369 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.798449143 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.804045944 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.80303737 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.796202013 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.797165411 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796058153 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797363562 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.79484998 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.795410763 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.795912725 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.796171609 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.800647296 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.796156469 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80536546 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.79799876 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.798124334 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798531418 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.797025075 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.810125015 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.798258358 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.798496971 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796788834 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.797145382 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.798085416 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.799447474 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.796503901 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799863619 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796740908 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.797153583 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805634619 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.803036742 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.80049518 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.799225799 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.798423712 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.799373354 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.799940283 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798597769 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.797401665 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.798973266 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.797756493 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.796108559 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.801756887 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.795592091 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.797640319 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.798521171 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796361905 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.80026715 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.805264623 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799174602 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.796548939 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.797589613 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799187692 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.798906197 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.801381851 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.811665948 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.8029166 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.808798743 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.807732913 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.801709185 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.798901833 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801042283 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.806290215 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.798488216 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.80226843 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.80218615 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.804629876 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.800252115 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.803252845 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800688397 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.807013332 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.800625588 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.80039189 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.811434899 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.802626474 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798936756 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.799859989 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.805145402 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.800283615 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.796009508 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.79819203 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.799261412 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.810677453 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.80539638 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798942468 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802577858 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.798788365 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.80126639 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804377304 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798566978 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.802257777 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.795469227 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.800986526 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798831792 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800048877 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.798184641 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.800118106 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.801130896 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.80315806 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.807181053 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.797296915 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802666939 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.80042602 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.802678529 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.8015072 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.800469741 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.797643848 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.796419943 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.801640849 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800081148 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.803593898 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.804155476 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.80385269 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.801277775 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.800441943 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80132368 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805552684 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.809256997 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.806173873 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.796826244 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.802340119 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.804726618 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.806250745 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801089521 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.802463018 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801328263 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.805799337 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.804224368 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.803094617 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.799688507 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.803868568 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818751672 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.802421164 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804813901 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.805021403 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808302221 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.803066027 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.799285228 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.803156776 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.805230504 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.80384227 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.809230706 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.801917247 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.809694226 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803096344 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.803176453 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.805802446 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.804660865 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.809477695 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.809471574 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80208295 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.801305472 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.808023149 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.819027608 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804954438 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809792915 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832125089 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.80511042 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.807026392 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.802323369 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808495334 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.805414952 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.808015117 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.803085106 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.802407109 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804116982 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.806869698 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.804368003 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810778211 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.805208065 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.801961275 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.806814429 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.805637777 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.806967944 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.80227039 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.806182689 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804939682 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.808062845 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.806573382 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.806707615 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.808664566 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819560197 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.816765182 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.805521743 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.806836752 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.80086473 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.810823219 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.807835491 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817226933 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.812667016 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.805302588 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.80586412 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.809393889 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807764027 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.802756949 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.808529218 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.807005018 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80435555 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.802864273 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.821353448 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813406735 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.813810818 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.808119346 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807185082 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.809587494 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806446335 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807485025 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.806815564 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.811208563 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.807208879 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81300715 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.808018917 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.807270295 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.810689452 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.812435118 seconds)
  done (took 1070.860945324 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.805511176 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802876178 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.803737883 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.803756278 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80262171 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806779382 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805355612 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.802951307 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.803453973 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.804280286 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.804015079 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805044062 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.804034851 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.804576972 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804860502 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802270539 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806225877 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.804408981 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.804205634 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803831272 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.803968254 seconds)
  done (took 39.628128216 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.807774924 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.804077837 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.803817565 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806360549 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803289975 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.804999427 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.804671729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808571404 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805524801 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805141265 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.808178747 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808597449 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.806096003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.806079561 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806347789 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808051399 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.810400614 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807300077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.808993339 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.803629813 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809185287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.806733421 seconds)
  done (took 41.484550519 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.811067565 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.808603144 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.809385351 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.808022622 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.809441566 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.805195017 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.809965761 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.80891024 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.808041817 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.809950637 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.809319809 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.809768165 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.813650059 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.813270683 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.812910816 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.807625558 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.954347484 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.808977336 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.809588395 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.811798899 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.806656939 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.816475973 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.809556031 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.806231451 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.811747325 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.812200992 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.809223793 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.811301116 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.810776979 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.811701628 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.816554795 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.810237793 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.812472355 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.814767395 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.812641166 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.812235931 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.815021907 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.810382886 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.809771082 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.809554573 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.821711437 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.827499095 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.812299156 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.822164245 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.812248043 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.8088535 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.814066748 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.820869524 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.809015624 seconds)
  done (took 90.66212953 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.811044172 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.812913549 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.807634141 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.812455522 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.813823519 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.811995294 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.811871043 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812353027 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.811036975 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.809306797 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.80954468 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.808034516 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.810547097 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.812228072 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.811389387 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.810246581 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.810504955 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.810243087 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.809585444 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.811233104 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.810699012 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.814975509 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.811579211 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.811127237 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.813655935 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.810424889 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.811401907 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.8128908 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.812115209 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.811927626 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.814963693 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.813736384 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.814690982 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.812079038 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.811673612 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.813040023 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.815266337 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.810332191 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810964002 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.809281632 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.812414019 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812589713 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.811781181 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.813445049 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.811277623 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.809867708 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812778958 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.812084445 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.812855822 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.813985845 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.815331504 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.810076038 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.814341332 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.810506783 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.812694054 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.814920149 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.812064048 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.812607971 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.813627202 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.812719666 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.812823684 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.812511781 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.812336605 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.814921637 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.814156265 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.811897672 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.811848607 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.813252162 seconds)
  done (took 124.967671899 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.813816966 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.814387934 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812194974 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814866248 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814792813 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.814680446 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.81487273 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.817742915 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.813543606 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.816273417 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.816097213 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.817513986 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.81571871 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.816853683 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.815308754 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813895808 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.816962762 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815781281 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.818016337 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817465816 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.817200947 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.817292989 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.817037392 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.815424183 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.816542474 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.817753139 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.818360461 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.816892482 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815760321 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.815690092 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.818405515 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.815845602 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.815386865 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818345051 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.818734087 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.815353412 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.818916779 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816496914 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.818395246 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.817911856 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.817421958 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819966898 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.81875248 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.817783217 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818702608 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.81859034 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.815748185 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.81861491 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.815317764 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.817206566 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.816721028 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.817788282 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816369002 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.817010447 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.817865052 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.81795675 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817610884 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.81711805 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816364923 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.818309019 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817152476 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.817142966 seconds)
  done (took 114.388375478 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.816477421 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.817421366 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.815414484 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.814583881 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.818632758 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.814397229 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.818064851 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.816270004 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.81937973 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.817330199 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817921459 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816751465 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816083355 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816634838 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.815787594 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817537713 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81330715 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.816369233 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819056955 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.816944812 seconds)
  done (took 38.086911431 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.817078359 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.817981534 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.81390995 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.819283279 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.817834211 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.816827468 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.818412583 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819781456 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81591833 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817554506 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.821948766 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822856907 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816119832 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.816454399 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.820247983 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.816920837 seconds)
  done (took 30.840638572 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.816333944 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.819418845 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.821151361 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.820428042 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.817635334 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.818080384 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.82056297 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.817834212 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.817839527 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.821571991 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.820348767 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.820879079 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.81822786 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.820952845 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.818034093 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.819237427 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.819391238 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.817180754 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.821874391 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.820591328 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.818782982 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.817495838 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.819885986 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.821202998 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.816009947 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.818988317 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.817025361 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.819193348 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.816556491 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.819388922 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.818685659 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.817403825 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.818033051 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.816670215 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.821682924 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.818952914 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.820986501 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.820599219 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.823932272 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.821721028 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.822436609 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.818696541 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.823463591 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.821062253 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.818837783 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.822915756 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.816860428 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.820417672 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.819948033 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.819569658 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.821007644 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.821329124 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.82378394 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.821169829 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.823067906 seconds)
  done (took 101.841277944 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.824286431 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82361761 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.819709719 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.823419065 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.821672568 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.819575839 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.821703554 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.820402606 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819373292 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.821985783 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.822002298 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822785326 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820865674 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822197085 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.821559033 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82313114 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.820386773 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.820913136 seconds)
  done (took 34.547253612 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.821735113 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.819324192 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.823870171 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.822337563 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.822106317 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.822587634 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819791219 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.822654106 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825378452 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.821052196 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819547416 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.823888261 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823355324 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.824030538 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.821418135 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821688018 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.824035161 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.823163602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.822291012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820610947 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.825551669 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823523148 seconds)
  done (took 41.85167289 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.826431317 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.823928026 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.841691786 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.865968727 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.852725403 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.825100113 seconds)
  done (took 12.793838559 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819687417 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82354843 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82261717 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823013336 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82416766 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821964184 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822947684 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821034454 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824632226 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822229977 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82303209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824886753 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825359802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822462643 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824292568 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824198891 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823496069 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823629594 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821449634 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825521709 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824284005 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825773875 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824037071 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82373482 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824061788 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822051531 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825933473 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825336686 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822607129 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826285846 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827563986 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821512115 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827828235 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824243726 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828612589 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826960346 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824392369 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827850252 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828587561 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824614971 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.828539068 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826536161 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82532918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826157872 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826669625 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824110775 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824071347 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824786531 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826202941 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827922497 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827771643 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824619515 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827336167 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828128956 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829725959 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828634469 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827059396 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824654518 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826045407 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827178903 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825007961 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827464997 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825474946 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824676747 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827106202 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824491974 seconds)
  done (took 122.216798409 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825875772 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82569742 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826408374 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830246363 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825515154 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826689046 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825217477 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823461808 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82613969 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827275279 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82851452 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826216393 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825862395 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825978862 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826859366 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824950628 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8278806 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826164436 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826840143 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829211515 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826537333 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827822073 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826062177 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827757325 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827981291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831063973 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826869477 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827195691 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827314108 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828731482 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826336666 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82713805 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826781734 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.827992831 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829498797 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826354835 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827155377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827754117 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826113253 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83041531 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825994195 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830135893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82816188 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826933576 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827720227 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827643126 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827396793 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828462523 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828836165 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828491329 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827452744 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827012121 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827209455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829104857 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829287785 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828054407 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830402326 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829432515 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829961058 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831221063 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829942254 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828412131 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831797471 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829533338 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82941023 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82973252 seconds)
  done (took 122.395090448 seconds)
done (took 2498.572226123 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.913648957 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.832121075 seconds)
  done (took 15.508801873 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.995360414 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.946954251 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.827337499 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.864959013 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.830029548 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.826498798 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.846532176 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.829262838 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.828455927 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.829205954 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.830739206 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.01704778 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.831146135 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.829549751 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.831275711 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.928695495 seconds)
  done (took 51.663642534 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.834460578 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.834816714 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.846366498 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.834308247 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.834419749 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.843284947 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.865113199 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.838767173 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.867484757 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.855218674 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.901150693 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.841602099 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.833821863 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.881412583 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.84596686 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.845980862 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.936478736 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.907082145 seconds)
  done (took 35.21084459 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.90906985 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.832732737 seconds)
  done (took 10.515240523 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.863795007 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.854684409 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.837620933 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.855091095 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.837677854 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.882361201 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.845761526 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863432124 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.831365515 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.863426793 seconds)
  done (took 70.305173074 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.841988201 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.834652035 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.83427648 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.832287751 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.827515254 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.830473378 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.831007938 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.828473498 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.512764926 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.866145388 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.841160175 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.840587877 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.837982145 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.837559388 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.832702442 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.856851793 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.995283848 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.830301584 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.834222922 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.839900038 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.837632573 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.896934675 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.848322583 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.836222002 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.863863429 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.50976112 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.843315323 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.841730931 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.958062099 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.83212036 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.834146894 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.835800062 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.837981428 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.220572326 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.162556889 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.835228489 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.847027512 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.842347962 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.833068425 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.947082374 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.83516917 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.843117112 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.777995654 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.145133758 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.934912166 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.876628043 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.182299574 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.840423495 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.838545421 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.865680097 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.84068401 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.837543571 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.852218667 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.352742531 seconds)
  done (took 130.84454651 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.862216893 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.320192695 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985394245 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.831560709 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122266503 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069110603 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.832935268 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.879931532 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.861791455 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082569791 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.011558146 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.953430868 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833884353 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.832876806 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.834138459 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.832073459 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.981387742 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.90693831 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.835395458 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.833278355 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86898894 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09657978 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.960137975 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.97918274 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.857271811 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.057465431 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.959236342 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953594435 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.837915588 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.832938454 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.900693123 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.844986965 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.83464742 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.837514225 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.998798194 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.94117442 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929610411 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.836556812 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837781702 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.832064174 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.8717935 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054389554 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941023092 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.970759988 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.081334536 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066468419 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.834583112 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.832848488 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.842749286 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.027496825 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.049922479 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.085794177 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.962931843 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.836785801 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.169771357 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.83288536 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.888886781 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.083478117 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068688037 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.944477599 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88343788 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.839674808 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834600622 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.149738708 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.841616479 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.93943641 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.201376345 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.836953607 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.949022977 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.946872722 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.067566319 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076204164 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.866845827 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.852683982 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.889726224 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.11889401 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907304036 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086666527 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.860549982 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833437256 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922852327 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.834957417 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.005225991 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.152164816 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.097726537 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875999318 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.8391794 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.832601867 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.082447577 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.08317806 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.105430926 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.074738951 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.000613508 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.885369154 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.832691051 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.834225016 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.867772161 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962568067 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.839279367 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.194023149 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079830847 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.611266756 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.864606286 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147957222 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970773059 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.837154 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.83505032 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.835624198 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.044341578 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.877875172 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.83915325 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832906014 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.081457588 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.783839864 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.958571731 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.543962022 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.899869657 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.839565039 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100868016 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.842066419 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081627577 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.870744051 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.146960194 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.404260803 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.878734509 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.030607765 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.079835068 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.839510717 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.097321456 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.148969215 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.959492405 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.082910959 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.57125625 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.837600066 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128717913 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.856155801 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.863028767 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.006397196 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.844347913 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.012965859 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.841962072 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.140912612 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862987292 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006451791 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.149738332 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.111478408 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881913421 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888925685 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.885328125 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.971034238 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838487276 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.830504221 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.02325545 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.933523551 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.839250155 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.419240212 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.837580323 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985598045 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.137470156 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863379906 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908894254 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.840234622 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.844551414 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931854194 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.864146888 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.482892064 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.842849756 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.00731601 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.799493835 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.293357619 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.839472238 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.147512991 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.047358417 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.837189602 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.83992051 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.642397312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.836883908 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.001199322 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.000695807 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.485813956 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.844650945 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053166531 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.83981621 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967518784 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.844184029 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.840471826 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190725944 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.904276233 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.84341383 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.849680155 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.838988927 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.835622138 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.067043029 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.86900295 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.562178817 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.978483578 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089441662 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.154685943 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.102635555 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.887856734 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838765201 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.143101372 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.879301628 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.908613733 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.840254719 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.864734921 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081347731 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842325442 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063248651 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128390167 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.874293814 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.887800903 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.842638625 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.917437739 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.838032321 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.978874709 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938787782 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.842735097 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.844906851 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956539318 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.967137873 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033746548 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.844846699 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.86459531 seconds)
  done (took 947.732685148 seconds)
done (took 1263.543732167 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.841437989 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.83980847 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.830550582 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.843148691 seconds)
  done (took 29.133713223 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.848236838 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.845531437 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.847553681 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.845461863 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.846431991 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.845277988 seconds)
  done (took 12.856166868 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.907399483 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.842370072 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.843927597 seconds)
  done (took 21.373505897 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.912950643 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.246540445 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.952643233 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.284295271 seconds)
  done (took 10.175336711 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.848303995 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.84594891 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.847655257 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.846785999 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.849909928 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.850832958 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.849121702 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.850018269 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.849211359 seconds)
  done (took 18.418441706 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.036116855 seconds)
done (took 97.770206901 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 5.643641006 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.827755909 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.898928686 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.09814518 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.845404112 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.001370842 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.874129701 seconds)
    (8/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.182298941 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.884692851 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.867700501 seconds)
    (11/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.924037594 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.916237271 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.925723681 seconds)
    (14/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.928033844 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.995993337 seconds)
    (16/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.010074688 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.909579313 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.948142031 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.842093766 seconds)
    (20/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.030117104 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.1666127 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.844684966 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.149152999 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.4045233 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.855513911 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.166112608 seconds)
    (27/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.428710612 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.19787979 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.871963121 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.945891685 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.013387411 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.977196642 seconds)
    (33/309) benchmarking ("sort", BigInt, false)...
    done (took 6.848650901 seconds)
    (34/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.858064081 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.840114132 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.956617205 seconds)
    (37/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.970215579 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.189877036 seconds)
    (39/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.978455372 seconds)
    (40/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.973577157 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.732358287 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.088681059 seconds)
    (43/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.951515111 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.228778353 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.24697361 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.0526484 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.957222668 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.350820033 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.102953255 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.872768097 seconds)
    (51/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.787414872 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.22586457 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.912078877 seconds)
    (54/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.943715939 seconds)
    (55/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.011108996 seconds)
    (56/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.117003486 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.491450382 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.153895736 seconds)
    (59/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.441305128 seconds)
    (60/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.852278378 seconds)
    (61/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.092318013 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.8267379 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.150217501 seconds)
    (64/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.861244989 seconds)
    (65/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.979534224 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.1812518 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.876320091 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.202962322 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.139700239 seconds)
    (70/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.397945318 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.864187977 seconds)
    (72/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.955492167 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.949514454 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.3917715 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.511261402 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.926436588 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.366203538 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.86396205 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.567074609 seconds)
    (80/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.860451058 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.988025891 seconds)
    (82/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.01690805 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.880452677 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.971435698 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.015208544 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.209902872 seconds)
    (87/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.270422741 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.936513311 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.324323817 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.215778571 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.934104784 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.833248511 seconds)
    (93/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.052431117 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.920117458 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.936964729 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.968495682 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.949825315 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.852344546 seconds)
    (99/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.853816579 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.858467086 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.87078394 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.246454409 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.15055453 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.074700519 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.898114768 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.872926662 seconds)
    (107/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.360179885 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.85401489 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.249508748 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.502193227 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.835874271 seconds)
    (112/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.924507964 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.875674879 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.746686794 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.905383373 seconds)
    (116/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.835449285 seconds)
    (117/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 3.66767002 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.896929731 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.024926751 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 2.299330095 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.872986775 seconds)
    (122/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.037972921 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.133703914 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.064202795 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.936644301 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.104568302 seconds)
    (127/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.001776455 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.18718711 seconds)
    (129/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.789894565 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.85052511 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.91625673 seconds)
    (132/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.933297048 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.978972004 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.042458695 seconds)
    (135/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.353575903 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.169699008 seconds)
    (137/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.960448967 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.070420428 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.878125393 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.940457926 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.839154635 seconds)
    (142/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.146280495 seconds)
    (143/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.472788442 seconds)
    (144/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.874460167 seconds)
    (145/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.153957546 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.917150744 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.138806009 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.854147381 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 3.333399329 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.892221754 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.296181411 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.016650235 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.756201592 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.111366464 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.948005167 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.85699397 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.230002313 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.853969833 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 4.831726042 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.842789483 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.942238544 seconds)
    (162/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.856445517 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.883035594 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.163761514 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.281146187 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.146081523 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.855324879 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.73833234 seconds)
    (169/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.88232107 seconds)
    (170/309) benchmarking ("sort", Int8, false)...
    done (took 4.818465397 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.739465231 seconds)
    (172/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.192037713 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.739496195 seconds)
    (174/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.902287388 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.040791236 seconds)
    (176/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.145113635 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.928938163 seconds)
    (178/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.467552826 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.959224155 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.917510436 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.066288174 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.86716074 seconds)
    (183/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.379431243 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.857383668 seconds)
    (185/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.916220281 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.334673045 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.217174315 seconds)
    (188/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.166784825 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.84528495 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.15102996 seconds)
    (191/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.86501062 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.447740153 seconds)
    (193/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.001956683 seconds)
    (194/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.077687793 seconds)
    (195/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.572017174 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.287440214 seconds)
    (197/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.776953353 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.957096687 seconds)
    (199/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.876227893 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.644643378 seconds)
    (201/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.439656308 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.375458172 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.956779672 seconds)
    (204/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.849199149 seconds)
    (205/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.290110498 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.063996044 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.512189854 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.194442989 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.862675664 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.86638956 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.062720136 seconds)
    (212/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.366030611 seconds)
    (213/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.956175456 seconds)
    (214/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.980466185 seconds)
    (215/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.845770843 seconds)
    (216/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.287922635 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.116155211 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.186617535 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.751961207 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.889983531 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.134091796 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.844771677 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.148062071 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.860968917 seconds)
    (225/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.96705582 seconds)
    (226/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.154426852 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.858011957 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.938929333 seconds)
    (229/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.107350865 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.763345477 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.265524464 seconds)
    (232/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.874557485 seconds)
    (233/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.917555581 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.239079464 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.847314571 seconds)
    (236/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.760715489 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.862336552 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.861863549 seconds)
    (239/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.029188757 seconds)
    (240/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.007307787 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.845832462 seconds)
    (242/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.057679324 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.642937983 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.123797303 seconds)
    (245/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.989432815 seconds)
    (246/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.239302293 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.19188106 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.954478959 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.23710359 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.545557936 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.864248349 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 4.303316247 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.891571665 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.943353474 seconds)
    (255/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.002989289 seconds)
    (256/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.251346118 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.256207666 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.857286987 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.885891809 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.87500432 seconds)
    (261/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.982996359 seconds)
    (262/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.930902968 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.23836554 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.860874407 seconds)
    (265/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.269836646 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.945008495 seconds)
    (267/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.020223698 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.510265777 seconds)
    (269/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.995518172 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.862241006 seconds)
    (271/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.898123164 seconds)
    (272/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.062246528 seconds)
    (273/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.538428911 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.866429259 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.193212333 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.149607318 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.864201227 seconds)
    (278/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.891846774 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.843342404 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.956533658 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.969515131 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.948650678 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.944737131 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.971774512 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.042673986 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.529405132 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.135874162 seconds)
    (288/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.861723673 seconds)
    (289/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.947451027 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.108849377 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.901131447 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.830032698 seconds)
    (293/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.994589292 seconds)
    (294/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.890468542 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.843783366 seconds)
    (296/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.880970795 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.885985082 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.040805892 seconds)
    (299/309) benchmarking ("sort", Float32, false)...
    done (took 5.630318515 seconds)
    (300/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.891786609 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.157357691 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.886758688 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.075323732 seconds)
    (304/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.451971453 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.240379786 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.047103748 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.006877874 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.888722971 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.407359279 seconds)
  done (took 1019.614250027 seconds)
done (took 1021.40934992 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.914175968 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886267007 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.87006004 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.891540635 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.983166854 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.899499828 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.879362385 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.872642432 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.918341307 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.920149793 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.869090022 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.898506414 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.873596905 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.872649386 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.86997873 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886787168 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.17137525 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.891549999 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.88727173 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.880195294 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.888222052 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.87015116 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.922041859 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.899153424 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.874524782 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.874344673 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.876231408 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.891759096 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.9837503 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.875415023 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.873839695 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.885024948 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.173686658 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.889703908 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.867274732 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.89246521 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.882756114 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.881567194 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.87581335 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.904522622 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.298917485 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.875540945 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.875634396 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.874858217 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.872762616 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.876121462 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.874335817 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.877379021 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887253393 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.884181123 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.297807202 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.89275547 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.876230229 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.872632656 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.882248474 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.875208412 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.876702192 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889958854 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.893515945 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.887705159 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.162628265 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.897936069 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.874929334 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.890549282 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.881052557 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.335202728 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.873673785 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.87866301 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.299333366 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.884023151 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.335139021 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.886994369 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.876845661 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.889508137 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.906916762 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.17466516 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.888353545 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.874702578 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.882360609 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.872614781 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.882340447 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888000892 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.879253699 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.876012232 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889072812 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.903745897 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.884389646 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.876551168 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.88375002 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.895746627 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.88187054 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.887161704 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.877946214 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.870110277 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.884882991 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.879768513 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.8782838 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.878956375 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.879927212 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.887022879 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.300259235 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897610967 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.872541709 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.871793381 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.873822927 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.889106128 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.299591797 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.880123696 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.8989386 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.922600982 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.877667085 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.16544625 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.899418424 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892676765 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.884936327 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.878979664 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.871485046 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.166410277 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.321875395 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.895282013 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.877997626 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.875547775 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894142634 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.87835921 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.873664082 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.177808965 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.89939609 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889452624 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.997257834 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.887097512 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.908640075 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.87618981 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.879509547 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.905504913 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894533113 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.909777915 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.878986057 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894055432 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.893815008 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.875274954 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.88924411 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.888274939 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.879585106 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.88455345 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.871867967 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.907151923 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890421993 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890480699 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.898951856 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.99980779 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.874899789 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.168437526 seconds)
done (took 294.532117465 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.94378033 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.867428745 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.973415266 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.874178637 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.959691509 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.971673858 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.871547548 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.870471096 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.870499221 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.253406503 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.872748767 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.872135539 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.87549637 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.872428007 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.957885299 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.873434648 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.87087106 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.254489366 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.876031961 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.945515898 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.870307935 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.873165442 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.874606707 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.301495599 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.866988413 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.869599989 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.955214187 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.874748192 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.222242947 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.873140547 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.869478219 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.258632869 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.974192486 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.893399607 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.886741044 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.883274677 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.969871471 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.880255294 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.969664905 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.958375517 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.97530388 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.915318743 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.874311592 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.869153666 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.877616575 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.87637496 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.872202566 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.905466741 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.872898027 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.873642792 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.219592617 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.886372219 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.883233689 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.874105457 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.874797006 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.898207117 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.874671912 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.879596388 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.966948009 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.878081341 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.939432063 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.302603484 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.300704382 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.876325633 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.87177548 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.87423349 seconds)
  done (took 184.973804485 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.945017628 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.950686673 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.944641858 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.878716676 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.928769461 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.947870732 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.878872115 seconds)
  done (took 15.284235275 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.883492892 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.877296358 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.927901456 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.929674447 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.87825661 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.029582729 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87668133 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.890922329 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.875444716 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.931991524 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.878499222 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.878337884 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.885873837 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.874311527 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.929479048 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.890134919 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.993344899 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.879600882 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.878861806 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.034872793 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.875643998 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.886887106 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.935237752 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.890190268 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.879678559 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.885634928 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.465088197 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879981798 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.878491347 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.879428959 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.876977384 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.920598163 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.879051132 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.881851902 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.876102518 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.995223707 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.878795926 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.876733814 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.880100317 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.877316385 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.87992459 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.880226433 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.879448643 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.878045184 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.879144253 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.905960616 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.879978795 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.880488499 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.877275098 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.879822676 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.930926532 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.880257135 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.87789442 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.877638279 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.936260401 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885952499 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.879137038 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.877026785 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.881694107 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.878836819 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.037779155 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.930486094 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.879783433 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.929434066 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.878380223 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.880128178 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.881454276 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.881051947 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.937109208 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.880511488 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.93149816 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.878542001 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.04087964 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.906610801 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.881872012 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.885968347 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.884079118 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882155306 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.882481379 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.889607823 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.878145591 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.883483256 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.888087443 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.879985454 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.88005958 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.989819451 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.991838291 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.879158893 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.895106076 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.888924745 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.879779927 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.935421022 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.882312391 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.878675988 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.934888246 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.998038877 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.939006386 seconds)
  done (took 206.844005132 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.887416264 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.891248751 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.883642668 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.899054137 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.883173635 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.883798736 seconds)
  done (took 13.141947913 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.88479003 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.882253774 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.882581539 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.883223094 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.882875678 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.880968849 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.882964098 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884508349 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.886618939 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.882964626 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.883409123 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.885806987 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.885655343 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.884186529 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.884631755 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.883815637 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.884018654 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.880657304 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.884850594 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.883327241 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.028757113 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.290475611 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884294945 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.885338006 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.887059433 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.882684191 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.891102542 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.883918698 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.883519957 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.892253329 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.887494715 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.884280578 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.885152036 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.890344449 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.88825655 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.887294114 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.887649265 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.885182192 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.881191094 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.885964307 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.885274163 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885583288 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.884302117 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.885648086 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.887126083 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.889864984 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.889534609 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.892993218 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.886610076 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.887453766 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.886350462 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.885808322 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.884969251 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.887249077 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.891978085 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890601303 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.890635256 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.887379544 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.885993785 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.886136592 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.886108435 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.884840882 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.888491362 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.889714735 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.89299994 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.889200824 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.886844069 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.890270513 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886136007 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.886060188 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.88872353 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.882887687 seconds)
  done (took 139.168091325 seconds)
done (took 561.22795472 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.173705661 seconds)
  done (took 8.991091514 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.953556182 seconds)
  done (took 8.874289905 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.102380611 seconds)
  done (took 9.925229572 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.901918938 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.937125082 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.886603794 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.890929787 seconds)
  done (took 29.446445757 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.891009062 seconds)
  done (took 8.71063096 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.895374999 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.884971988 seconds)
  done (took 15.638049532 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.077294213 seconds)
  done (took 8.900546253 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.972966986 seconds)
  done (took 8.798256413 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.900873512 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.898102236 seconds)
  done (took 15.633930824 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.870690842 seconds)
  done (took 8.693278113 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.561449221 seconds)
  done (took 11.395079216 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.885238809 seconds)
  done (took 8.719772291 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.943954854 seconds)
  done (took 8.768563301 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.893067777 seconds)
  done (took 9.716389239 seconds)
done (took 164.028183458 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.886711787 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.883699223 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.886446731 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.882708592 seconds)
  done (took 29.361700568 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.923963487 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.925267646 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.926798102 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.934017075 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.928270731 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.924424215 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.917551537 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.91802703 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.936622347 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.931611148 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.926804937 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.927608704 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.924014498 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.916652808 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.925488121 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.927679135 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.935832986 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.926344582 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.915303966 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.928228642 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.892070651 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.93581045 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.928786049 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.892026705 seconds)
  done (took 47.99248929 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.086933641 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.963154472 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.050061431 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.947343918 seconds)
  done (took 9.8702463 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.944607031 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.945937924 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.957088588 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.996517252 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.021388413 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.954986109 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.919762821 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.912407559 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.899893862 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.944253935 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.02122413 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.961732571 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.037571549 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.892696243 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.074505587 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.891690294 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.892601975 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.94519444 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.999183496 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.024191558 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.893259821 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.945188202 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.948492221 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.961910182 seconds)
  done (took 48.811843577 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.893304706 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.901478434 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.898281504 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.892676049 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.892924768 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.893496969 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.897927577 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.895812804 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.914611322 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.893456396 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.89118386 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.892919242 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.894407153 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.893166395 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.891227558 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.905797756 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.906422118 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.894165086 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.896667658 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.899570764 seconds)
  done (took 39.764033755 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.888061235 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.741529158 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.240561095 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.145755734 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.889528461 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.88843023 seconds)
  done (took 31.62052044 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.90713824 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.95530251 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.900761857 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.948228281 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.027628825 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.901701299 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.895614304 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.961919298 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.000549575 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.962418932 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.914764013 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.922648744 seconds)
  done (took 25.125659683 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.891196557 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.896292979 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.892524748 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.910793846 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.907700684 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.902341891 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.906868928 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.890640594 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.909872994 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.915650614 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.903955509 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.907032939 seconds)
  done (took 44.665531084 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977818313 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.935150196 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.886656704 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.572572465 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.270641874 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103199493 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.543700255 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.224603711 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.894081882 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162682511 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.998135926 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997364614 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.147548984 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.250401022 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.919835844 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.356689813 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190579825 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097487355 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918609762 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.598945 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956496223 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.93042328 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.661428841 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.952262613 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105924244 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.026399125 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.153909736 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.893437822 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033583262 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932766862 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904319674 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894635932 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16854615 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274723739 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998348451 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903804843 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.509541083 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.610549487 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.884619997 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.738882464 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.645593015 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.022844126 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904966931 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894683309 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829994936 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.897587015 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265418545 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.900583224 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.606453761 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895921679 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905459168 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989252243 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.89781273 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.712754654 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806691577 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.896234726 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.893628183 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903179353 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.465065565 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.044931424 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.935269547 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.862760906 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.987546064 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602860873 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280094555 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.042478254 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.899984773 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899095902 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831609592 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.683993094 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953334324 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226140972 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.918079182 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.477460849 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215259714 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.002882529 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839237803 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158894551 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.277094233 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.86447168 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12457172 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897644626 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833624208 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.838704128 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830637878 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181458618 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931943404 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.656882724 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935345528 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.226286292 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908060624 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914524408 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920901727 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121383476 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.782787918 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896756291 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.72051697 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.098224888 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920071189 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.225151576 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833107193 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.903284711 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153659465 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.110608053 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.824314575 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.394075202 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054674917 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.311726899 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.944478556 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.902794178 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940584554 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.166989314 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954836268 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.028081132 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950355744 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.898481738 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187582808 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333587769 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.030515457 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.007532036 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022629643 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.213360139 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923934659 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98134724 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901748052 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.899011921 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.705865467 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.451054139 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.900265474 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.901243943 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.828592891 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.941060523 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.900289262 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849384394 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.52008065 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00956188 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.914115587 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122558198 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.316762296 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206902208 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833765021 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248347065 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.990382764 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.1229791 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.552000119 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.983043515 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162026273 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.830081336 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.859111747 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942683489 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920089544 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999206005 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923142022 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.904277623 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.188950312 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.905545906 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.905496036 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.724645711 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.939573012 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908262556 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.90574351 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651852278 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171505392 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923788389 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907990644 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.791171978 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.916151858 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965930974 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90724997 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911887995 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.436283425 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.614202128 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.906941292 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.483830126 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12681313 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912872296 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.670933901 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016341677 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.983985503 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170816723 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96086356 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.835915898 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.61318765 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.595102607 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90298602 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838138111 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902815001 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912967325 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913924864 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.100452713 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.17391073 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945541895 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.630546342 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.944269091 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914425606 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.907556186 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903989055 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.409700433 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.064532941 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.946387287 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.942651945 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047344749 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.9176982 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836703272 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.906695976 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909886795 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.903405195 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.903554784 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937852129 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.612604378 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277250947 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164135442 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.512192717 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916814184 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.665545105 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.962587969 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.929697117 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.764336533 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926175549 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.994369925 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917205076 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.915871411 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.706528114 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.612625084 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.473008787 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236122395 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198916607 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340569912 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.971087624 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.929112791 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245245478 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839305615 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.469435118 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962068159 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245380108 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849506675 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988833082 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.557810519 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258352014 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921652203 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133263688 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294316856 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.81905934 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928496966 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117109322 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941848635 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.913284371 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863107684 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.193022659 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046430137 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.62589018 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112811042 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239204669 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.755938888 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.920707902 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.906452242 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571788328 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987542049 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.621859095 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.078916833 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.939430835 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.013097771 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252485083 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.914964634 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.132401839 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249379511 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.925417126 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.022652236 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84238615 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.917852557 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.917338932 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.909839604 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.898551759 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.786552013 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.160928128 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919037622 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843147605 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.867655013 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188356158 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.806413263 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.913741558 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909187983 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194127675 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.293571776 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077002093 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.865698905 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.417454463 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913314571 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842797469 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842478738 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.599437359 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.915476372 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.883298077 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113405421 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.012164824 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825917013 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.8390855 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9855735 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165711639 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.922396681 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.177701065 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182089602 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.608773377 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93379099 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.009720565 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.608610048 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.021695759 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.908982559 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145171787 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.662584068 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134892914 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.960078387 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.860830267 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.909669808 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122258765 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908713589 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.844449881 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141630773 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.63105241 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.059894852 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230053982 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979905734 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.885874791 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.957023544 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.002428366 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920068301 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989081764 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920350273 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.921405941 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.920460047 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957188549 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.886383415 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.038272246 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.923880662 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004511286 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.049722398 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.429000597 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.916098097 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180575975 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277202031 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230289334 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966961499 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911763112 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911954622 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844458381 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061322002 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.141388092 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186567168 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.039924892 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.028525456 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935757816 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.610873165 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.974113957 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152421825 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188025923 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.807784636 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.268621785 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.948403786 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.912627018 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923771924 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.125605375 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115672753 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204225465 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.149327028 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.851566958 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268715996 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186881902 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.9131554 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9138588 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501936743 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.912259456 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.701021938 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.952189297 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8362182 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189407201 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923125113 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290002245 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935327292 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.068885608 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.686861662 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.690090071 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202284471 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.902999878 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979180532 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18455632 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290396833 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22605155 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98212964 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925171418 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.018678465 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062109024 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.787096195 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.915355725 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91606302 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.130801544 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.62467918 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.9251466 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188762447 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223645118 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.913140687 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.788876859 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938764578 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.926472977 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139249708 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172665165 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164412108 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924293628 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.922219485 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.732287854 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187744568 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973377161 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849905118 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.918850511 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016567192 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165134749 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938713385 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.369665361 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.626876759 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18215741 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.913660741 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938809409 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.922942359 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275709553 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235981349 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.44552478 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118087282 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501543255 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.339781632 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215308523 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.921082894 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.927025654 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216596295 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.920388487 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.848990496 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95285508 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.184008736 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225897773 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.055443651 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.665186083 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.885539485 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.257269781 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.477944291 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855426749 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92812381 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.977741593 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.917339727 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.049245242 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929106178 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.777423595 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.930285349 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.675341631 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190851825 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.923861302 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.906687749 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.687090356 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.064969643 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950038286 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060733347 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925681457 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.592825673 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.26905215 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176101287 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.852705971 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.928240118 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.92318234 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918696142 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905069837 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114103115 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.116447883 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188067933 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.879587473 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.953077536 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923830045 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.136626384 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132146257 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.904555414 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060179877 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853146559 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957833191 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.826030315 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.427134339 seconds)
  done (took 1687.851142659 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.922351669 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.939349901 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.957636172 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.948658071 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930073958 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.947688108 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.959364712 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930011245 seconds)
  done (took 57.392651164 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.915845836 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.133248875 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.925513618 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.917348076 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.926198139 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.917296785 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.081370101 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.924675514 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.926982314 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.928722007 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.917886602 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.916360496 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.224565946 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.938255144 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.917931776 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.903646908 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.925966264 seconds)
  done (took 75.206108171 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.916171651 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.126589931 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.948948788 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.93569616 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.903264242 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.917096517 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.700097887 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.938655816 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.921106256 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.01752938 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.553710406 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.937775544 seconds)
  done (took 87.672842654 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.927353666 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.925008526 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.924817838 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.924825295 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.924205048 seconds)
  done (took 11.484024821 seconds)
done (took 2198.665670799 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.170886632 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.139637439 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.146426033 seconds)
  done (took 6.14209125 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.069118183 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.116180259 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.239688257 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.243714471 seconds)
  done (took 10.527077116 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.20691237 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.300268559 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.12569604 seconds)
  done (took 8.489486937 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.31114787 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.932925224 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.027230814 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.918879419 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.919309939 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.922038432 seconds)
  done (took 22.618064644 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.921946863 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.924553927 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.922727066 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.926162986 seconds)
  done (took 9.551677372 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.90489386 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.636033086 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.905475451 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.918666455 seconds)
  done (took 21.222679766 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.672127318 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.682480306 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.665318034 seconds)
  done (took 9.878009439 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.64859512 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.858288629 seconds)
  done (took 9.363497703 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.174120545 seconds)
  done (took 4.03320465 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.055709864 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.18750699 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.393200549 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.427899313 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.483865589 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.763697092 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.220939987 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.157060726 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.322158012 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.35276878 seconds)
  done (took 25.224357234 seconds)
done (took 142.346885827 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.295699714 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.162594145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.122418992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.256574901 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.144399499 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.12393236 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.142482385 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.237555654 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.764207858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.762639128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.253900922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.142674032 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.087370481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.159630738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.089388723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.155961044 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.142180539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.306381433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.952466811 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.148424 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.145572348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.890347402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.099071376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.904038273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.14550829 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.10802792 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.468992559 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.158159332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.105143722 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.479532216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.077076246 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.303127997 seconds)
  done (took 174.196812017 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.672229691 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.923875204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.924108748 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.924950349 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.343670757 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.925644709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.926582828 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.92453101 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.220484162 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.194328114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.923935808 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.35440733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.924348617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.925153725 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.924609948 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.925401442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.295361211 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.700438078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.925138957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.92524156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.925028963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.228692884 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.926088617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.237366783 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.268105362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.933278556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.899005778 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.94230024 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.932861746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.949999167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.955640124 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.926221137 seconds)
  done (took 209.792290761 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.925444638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.931479333 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.936658733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.926621071 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.934611239 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.926928685 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.938897324 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.926470664 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.503598346 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.498905244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.942708649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.948181669 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.943293314 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.927399242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.947029091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.926759428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.933885186 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.953074863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.93262759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.934883267 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.940100091 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.737320889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.939350638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.724970002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.936917226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.937574683 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.927667908 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.936289421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.937186563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.937928351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.934786761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.928907211 seconds)
  done (took 222.558001419 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.128853156 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.934008011 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.934325558 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.88403098 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.93452648 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.933022974 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.929443361 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.130270512 seconds)
  done (took 19.687525223 seconds)
done (took 628.100960656 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.351509579 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.185823124 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.101053183 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.955508034 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.162339697 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.984547288 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.953809375 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.014582576 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.13619026 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.021529623 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.62855789 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.966577293 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.723695565 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.970153132 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.085139772 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.008277771 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.515236148 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.597788299 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.125626379 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.983942924 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.119234703 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.88468976 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.022174681 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.18227986 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.748827351 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.921595231 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.121593515 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.512936296 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.961495747 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.117974726 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.691232113 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.327160753 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.961427182 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.950396045 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.003072741 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.984930513 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.299193416 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.959430074 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.071961184 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.685303739 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.983451737 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.018630705 seconds)
  done (took 106.867053786 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.926086062 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.924387989 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.922780333 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.924981884 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.925312482 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.924551108 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.923450145 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.923981323 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.925237795 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.924147627 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.923960577 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.925472909 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.925280614 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.926453116 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.92458717 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.924411101 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.926582931 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.926907668 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.924103371 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.925379897 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.92550734 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.923765648 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.925069258 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.92504668 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.926090634 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.926563028 seconds)
  done (took 51.931169784 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.936404343 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.078083008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.153994537 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.952085546 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.937247791 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.940526095 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.955320906 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.941335289 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.94116146 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.940498316 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.027111737 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.942043762 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.955607063 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.155278787 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.950334239 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.938152582 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.937741792 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.93843778 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.083937358 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.952663511 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.957611524 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.941869179 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.957235599 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.950439415 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.94025767 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.939007668 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.942596355 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.367622965 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.945332724 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.027317013 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.978483317 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.958823499 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.325801565 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.172278849 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.987279954 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.946502793 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.939295837 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.033298751 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.942874608 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.939408072 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.956785638 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.942355378 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.155345928 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.433050497 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.948707117 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.939139755 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.377584573 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.038477584 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.978214288 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.950098553 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.160081619 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.951817663 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.94006819 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.940902364 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.975755387 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.950072633 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.94032772 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.240749563 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.948988778 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.957420452 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.943601201 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.9406684 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.090184305 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.946498149 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.081315544 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.947075085 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.946809206 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.940952558 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.158226964 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.952442788 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.440476959 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.950986623 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.940903571 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.030947224 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.081482127 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.401525793 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.951017157 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.096909631 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.340635186 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.960898891 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.947182854 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.359805137 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.965121634 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.947892124 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.942618428 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.943125674 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.941813903 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.985063802 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.957034216 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.373507432 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.447718385 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.251258391 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.965254215 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.957106184 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.943365665 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.24407364 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.947418619 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.942347264 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.152486436 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.452244951 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.951408773 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.950848975 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.426127849 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.952959908 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.961240067 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.950901777 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.163655387 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.953339305 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.98554212 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.943778652 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.949286575 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.946407547 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.962793143 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.94809533 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.943621868 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.411987776 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.046968957 seconds)
  done (took 239.709065891 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.938638231 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.938968883 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.936699044 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.938515031 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.937079338 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.942553094 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.937073882 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.937075002 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.943628218 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.936746414 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.93713022 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.937579568 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.940272671 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.939966746 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.453596307 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.949931977 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.553542134 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.94694389 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.942697536 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.942265683 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.621184464 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.950935317 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.940606433 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.942142774 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.943457853 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.944353432 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.94482117 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.976504709 seconds)
  done (took 170.071383311 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.948622759 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.131137685 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.965881429 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.985626277 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.956132529 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.94658862 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.974700067 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.968429868 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.954487352 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.94631826 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.946100354 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.012261671 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.961600286 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.080486069 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.98215562 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.981473709 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.055505912 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.957030804 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.946033923 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.947124756 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.978208271 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.946112824 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.009765711 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.076812718 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.964131618 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06406038 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.955509788 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.952137789 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.952705412 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.066280397 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.963208862 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.009889234 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.978978232 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.968194345 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.070615009 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.067476969 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.055329073 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.980554532 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.953598429 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.948154729 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.947949348 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.938279343 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.066429907 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.967328883 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.951092414 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.056663166 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.964740275 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.951499731 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.95848807 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.947987412 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.963743043 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.967842571 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.016823309 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.079910934 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.982269575 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.975271671 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.976743162 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.238665904 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.959926633 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.051607896 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.945239844 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.065630799 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.967877116 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.939589076 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.95002838 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.956468925 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.978942124 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.983471966 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.055847943 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.960389739 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.051784813 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.985193513 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.958239122 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.950194183 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.952432414 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.066734447 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.068205486 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.986040572 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.989678524 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.984611578 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.946846554 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.951915195 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.941229763 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.96906423 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.95564339 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.066126003 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.068113428 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.960100067 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.953456484 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.953205524 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.954395375 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.977996166 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.075584631 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.985771437 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.049380747 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.020877611 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.024993875 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.965358519 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.965028305 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.956117316 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.016346699 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.964468403 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.964427815 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.287730278 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.025307222 seconds)
  done (took 211.251944285 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.046379624 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.411461892 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.00490643 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.009303577 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.237973244 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.380782943 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.715041447 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.998627769 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.001765507 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.028404958 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.164980366 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.057306891 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.01502258 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.990778712 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.41139545 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.993419612 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.000800079 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.023590028 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.005196904 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.531749636 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.307867265 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.122910292 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.003039618 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.127611032 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.981345962 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.306609491 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.492406377 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.39594328 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.03638888 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.352412232 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.33236124 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.701018521 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.210983691 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.246836311 seconds)
  done (took 77.537104251 seconds)
done (took 859.230293096 seconds)
SAVING RESULT...
DONE!
