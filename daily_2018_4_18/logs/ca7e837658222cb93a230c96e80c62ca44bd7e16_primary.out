cset: moving following pidspec: 27225
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.412372692 seconds)
loading group "string"... done (took 0.498280946 seconds)
loading group "linalg"... done (took 8.34888153 seconds)
loading group "parallel"... done (took 0.171930517 seconds)
loading group "find"... done (took 3.007382849 seconds)
loading group "tuple"... done (took 1.848322447 seconds)
loading group "dates"... done (took 1.541864856 seconds)
loading group "micro"... done (took 0.193956795 seconds)
loading group "io"... done (took 0.520912404 seconds)
loading group "scalar"... done (took 50.672519135 seconds)
loading group "sparse"... done (took 13.831943134 seconds)
loading group "broadcast"... done (took 1.178791878 seconds)
loading group "union"... done (took 9.340012859 seconds)
loading group "simd"... done (took 2.989526652 seconds)
loading group "random"... done (took 11.590447119 seconds)
loading group "problem"... done (took 2.168518161 seconds)
loading group "array"... done (took 24.51113402 seconds)
loading group "misc"... done (took 1.086819732 seconds)
loading group "sort"... done (took 3.655964029 seconds)
loading group "collection"... done (took 18.853696408 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.592845446 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125233652 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199299715 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.278677477 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.226756091 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163766894 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142312864 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.236480237 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.582211799 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.197226759 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135810041 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414822349 seconds)
done (took 6.01824869 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.249164345 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.239484073 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161771563 seconds)
  done (took 1.072021054 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074185135 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.153579356 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.104541081 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092138663 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090882213 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107055 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090830864 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.105682238 seconds)
  done (took 1.419906656 seconds)
done (took 3.487441278 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.486544785 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.854120089 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.50258819 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.140074136 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.30441513 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.286817233 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265329298 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.194358682 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091638653 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088544283 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169740018 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.383953127 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.377688202 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.926452894 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.08673371 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092256108 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.126711103 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.750579365 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079601815 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110235272 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.504433327 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.188281667 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097744582 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121071091 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183046567 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13107098 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.15982805 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101089196 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.658985865 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130949781 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.176311461 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09503238 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155786708 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.182061918 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.190565317 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109525889 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67013387 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200272728 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095759423 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098752797 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681900974 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116159305 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.179611283 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101012228 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086724785 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.17648643 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.098174893 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091524881 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09240985 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083977602 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157827786 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456354787 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103159104 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.16513604 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090473977 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.679567211 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098470097 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273029373 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125279974 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098474333 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088923731 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085567833 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153357485 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.091621848 seconds)
  done (took 19.652619734 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.142483243 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.160120438 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075585927 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153426444 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.119388301 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077920182 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099347388 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07686758 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106360496 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.192253043 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135643732 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.148999283 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089896004 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089317869 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126238215 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245849412 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105522543 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118189833 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087356974 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087581917 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135886826 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094746413 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088631535 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105518967 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167779368 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200306952 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110028194 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122790725 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090254257 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095175067 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140856172 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147973814 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090477024 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086821001 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.168064101 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120940015 seconds)
  done (took 5.095526578 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198990233 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120296629 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.219590332 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.192576474 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130317401 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179250819 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148363617 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.268763542 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.268904326 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.182953252 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15977195 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128829937 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094407083 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094547568 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078811452 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081475376 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091391163 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.436891714 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149627598 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187497325 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157582091 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109310761 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080193156 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361712971 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099881451 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08313004 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106791145 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064538721 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.197867856 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090516034 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.115028117 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081775637 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115800337 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112482524 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212818307 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122655815 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120598894 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107287791 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079889777 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097988793 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.202504299 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115711575 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076439293 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.129280086 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116029269 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126834888 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08987389 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.119986078 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21789818 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083111157 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123472672 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 3.99946436 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.191751861 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.135997831 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.08100822 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287026339 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.122038495 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09714196 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.102085271 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.772908227 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114319093 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081981634 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096006467 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092528475 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077900986 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.426494387 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118040563 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.217666209 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082692273 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154838047 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092390308 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.114108761 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083965151 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085002356 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123596366 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082585034 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094123657 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085346914 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079028716 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104666449 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11557697 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082192291 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094225208 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143896344 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09831419 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.122438682 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106561201 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103148317 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082716378 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124684217 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080219401 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085726525 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.158764197 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.093070192 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.127609065 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107926887 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126552181 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100857526 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.21492507 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082862012 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12436759 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098636927 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.081631439 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125156951 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111305561 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079056976 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082198935 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092542194 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078857938 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143439261 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086822962 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094028658 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085679173 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091058788 seconds)
  done (took 27.966804277 seconds)
done (took 53.385176036 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.436163822 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07947044 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078932739 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.096482915 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078643742 seconds)
  done (took 1.51831627 seconds)
done (took 2.242654054 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316852484 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.184402415 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10095337 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.181805622 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083423892 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.186718144 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.173671847 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.091070313 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.198486923 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082643634 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180649045 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081455104 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10135065 seconds)
  done (took 2.712687106 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101352179 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110308793 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103408543 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117253116 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083000208 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098970097 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117268029 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109189265 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101300024 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109915975 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08397489 seconds)
  done (took 1.859696272 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097966175 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104111416 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099062257 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115713198 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083335648 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098080882 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114610055 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10607358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098443422 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11113659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084082185 seconds)
  done (took 1.834540282 seconds)
done (took 7.12770382 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.06878636 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.220736636 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.162864959 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.205628102 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346257759 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.231508845 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.545803137 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.149610149 seconds)
  done (took 13.799591485 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.163829822 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.10483266 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089609379 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090844301 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088556785 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.110031906 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093602006 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087876135 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106957093 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093595823 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090241527 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.104269933 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092297655 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08962621 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088861989 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.108175214 seconds)
  done (took 2.38483803 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141718301 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.137076314 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097442896 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.096723342 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092036556 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.113168182 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099419627 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.093715301 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.109350016 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093829341 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099946425 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110562555 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095524323 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091505713 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110794844 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.115297069 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091319899 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11051418 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11399508 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094887321 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110990864 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094026014 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.095867356 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112912296 seconds)
  done (took 3.329475235 seconds)
done (took 20.237961274 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.142161706 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097578779 seconds)
  done (took 0.968836218 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.136618314 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.151434528 seconds)
  done (took 1.021436976 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108939135 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088727685 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132993633 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.099763342 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089023733 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.103879029 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113576401 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.088185106 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.10416402 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08981766 seconds)
  done (took 1.755195279 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092226729 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093243558 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.117932309 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.13147198 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.095327439 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.107276415 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093565398 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090502741 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110138707 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08864113 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094316016 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121893383 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093650914 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121437229 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093905634 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.092993179 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111559435 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092822681 seconds)
  done (took 2.580598187 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088563597 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.089817454 seconds)
  done (took 0.918482832 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091675999 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088365426 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090357305 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104863802 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088241941 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087571064 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102974935 seconds)
  done (took 1.394229226 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.481659032 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.375397678 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.35230234 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10536534 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.141147784 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.346951207 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.141184619 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100647561 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099444692 seconds)
  done (took 2.918817854 seconds)
done (took 12.292802421 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088669149 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220221367 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.594703799 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110894962 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088544868 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153455419 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.282110082 seconds)
done (took 2.282313017 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335232399 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141254319 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080115993 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.088631796 seconds)
  done (took 1.384779341 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07999278 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096101989 seconds)
  done (took 0.923605005 seconds)
done (took 3.055552532 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087462204 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.120337717 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.104217864 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086820308 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.086332174 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086575367 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.103399609 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087552711 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085500574 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086162765 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.105656355 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.086761528 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.085780809 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100999979 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08742416 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086609358 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084707253 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101475328 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.086364011 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085921766 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102279823 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086405732 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086394735 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086132247 seconds)
  done (took 2.987337802 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103608064 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088254246 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106437782 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091282431 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092045693 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106597738 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091090268 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088782883 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089984343 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.104570869 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092114782 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090238259 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104260906 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091542533 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087554318 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106365914 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091849887 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088454842 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103950248 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092311801 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.089826806 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105593087 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09083672 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091793115 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107761777 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090903479 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089142092 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.104578006 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091806534 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090870657 seconds)
  done (took 3.613673403 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.094811349 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084418023 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086209093 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11170209 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084842172 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087487431 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.100822723 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085159869 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089502836 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085640912 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.104511942 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087469849 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084325044 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.104199672 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.087952704 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090295035 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094121273 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101436817 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084671802 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08710499 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.105349287 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086071921 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086981376 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086792788 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.103529524 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084484957 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087826134 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.102730116 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088648194 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087513836 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089399022 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106151273 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087795035 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096162614 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107183455 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088133405 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092939016 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083738306 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.10527087 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085200196 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084415498 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.103299098 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08470513 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.092611459 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.087103732 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.104829382 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085002212 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.087603082 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103319419 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09045967 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084478803 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083980867 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.106111547 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089128539 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.088499942 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.100925577 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088704016 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084544914 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.104228696 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.087776097 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085083754 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084232689 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.10891654 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088194157 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102462172 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110396487 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085470621 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089285977 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.088173942 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.109103895 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089611509 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096326341 seconds)
  done (took 7.430316002 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099768817 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096997523 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087619606 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105442196 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087963804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088678756 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111671506 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088367102 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091175052 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111358979 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089081241 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088460314 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088190813 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.1050105 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088651215 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089384381 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110974376 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088356479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090135368 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107399567 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090546815 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097039976 seconds)
  done (took 2.857416302 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.229380789 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094701084 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135358548 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116561197 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107033116 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117082465 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092348296 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094447956 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107980752 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097474284 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097853599 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109585134 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109918833 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098950683 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117991739 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101162953 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094830538 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118590815 seconds)
  done (took 2.798640112 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101401639 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089776593 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125098095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090106842 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090497382 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095536631 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114935722 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11288799 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110610051 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095109817 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100010817 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092714133 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.112201204 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094538005 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093126378 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110952614 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094718274 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094256774 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116323571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100130098 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098654104 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117026973 seconds)
  done (took 3.009395958 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103292872 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090326713 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12325225 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093222967 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089406129 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090756092 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112158293 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092071641 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098790726 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111691982 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094929325 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092204806 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125033076 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095618699 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098722728 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111033205 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095014617 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094521755 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110352945 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090623098 seconds)
  done (took 2.770826787 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.165884658 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120942871 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106293233 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111370268 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122240467 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105364335 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11166383 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122885993 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105579344 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131479816 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106103051 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105825298 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129522334 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112119274 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105560654 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129955599 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113724039 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12931824 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10593968 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104334019 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132066892 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106298633 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128026781 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105697242 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104492444 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120161715 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105504613 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109063667 seconds)
  done (took 4.02219475 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089157852 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088389261 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08736061 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106310737 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089163418 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088859989 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087118258 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105201217 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088405856 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088398863 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.104563241 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088833257 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08934706 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089486331 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105892078 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088982326 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089784948 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105523799 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088588404 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088760555 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088390647 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104705492 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090516934 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089238615 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087783235 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.106106303 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089386902 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088634428 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103944109 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088701878 seconds)
  done (took 3.562427517 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101205234 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098402716 seconds)
  done (took 0.967198041 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096595437 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102403336 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087828854 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10606166 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095625454 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089986628 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114451771 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0944281 seconds)
  done (took 1.557012414 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.137913 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.156266924 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093438986 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100317306 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.156673766 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.146765461 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130060747 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.092407149 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104263282 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08342302 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.132247979 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098875476 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090090023 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086576053 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106781346 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095844093 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.088750588 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115948966 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097680269 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091803416 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109572186 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095457242 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09205805 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.116702104 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083957768 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090902661 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108851954 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100635312 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085474407 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107216815 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088540271 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089503888 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.108259758 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094522535 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091486493 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.156965038 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096439297 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086129322 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108193848 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093339673 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124066924 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.111301255 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09404872 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090114318 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114556925 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099123634 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097741878 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.112281725 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087671522 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090262984 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.111841172 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088722408 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090349397 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093086817 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113064315 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101627456 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095401094 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108390691 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087422618 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086761108 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106083414 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085869849 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091788461 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.109820695 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091309424 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088973556 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105617203 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090228031 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092016732 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.10875075 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090268855 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103974287 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107821343 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095956537 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095285351 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.107684798 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088381913 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094557666 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087353214 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108916168 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093697862 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117450146 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109649186 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086686251 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085062033 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113313177 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.091740535 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.092014828 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09985233 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098604207 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.091793999 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.108148055 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083396206 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088207845 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103235332 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093668224 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083883565 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088976353 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.107009483 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094903199 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094276869 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105103147 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091920118 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093809856 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112513057 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090076867 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152067415 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088085243 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086802913 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.090638449 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112650272 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084287032 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088117552 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.106261048 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087427218 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085561803 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110933132 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090828925 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.092544864 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.092669761 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109143859 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090851399 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.092256539 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.107422107 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087055353 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093481879 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115234377 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092313429 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091776219 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108089651 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092504809 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090037805 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.110822824 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088906174 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094456714 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104310754 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.08977161 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091275367 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09483305 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107738507 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086605488 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08849356 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109395301 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091553639 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.092590951 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108547554 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087510847 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083207748 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108514662 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08660912 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091106385 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115850555 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086850575 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092175741 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086092673 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115799939 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088337423 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096485223 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110999026 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096158042 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093523726 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100871327 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088850645 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.092192507 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109726914 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089131995 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.091907501 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.089619815 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.114877925 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084708153 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.09339676 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101604206 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089422378 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.094388723 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.109901182 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094220178 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086722082 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149164062 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102283304 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095020988 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106696854 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091613775 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094528959 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10752833 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.093925221 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095100657 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.094960344 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105925746 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089810729 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094442927 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104063886 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093263429 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088618411 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109670509 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083869088 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.092008705 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099498774 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095188706 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093912115 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.094801892 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.114134949 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093365063 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09004622 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115834261 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088480879 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.093918874 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101255625 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095791883 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101432033 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.113879739 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097435769 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092481768 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105955672 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093223187 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09890309 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092435082 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10884748 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092262584 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084439404 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101907531 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097342547 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.094052153 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104197717 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092008212 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09245486 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11919004 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091141431 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083564372 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.093787471 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112240783 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087298059 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091091467 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106306012 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090155892 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097731539 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101641653 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090077338 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092507268 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.113379931 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091139252 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09184905 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.111216443 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097594766 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.094385301 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.092572576 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10649421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098777091 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089293755 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.108935596 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088280004 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.094197581 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.111375166 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093050592 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090903267 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087678385 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107173246 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096246306 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096063272 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.114815102 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089900461 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095344335 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.114831788 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096183913 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088619841 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.114044651 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087542707 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08428691 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105040285 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084543569 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.093283573 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086528374 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114272913 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090310638 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088908358 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.112628862 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094193679 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089407928 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.114571268 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10191817 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085508023 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102582909 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090334366 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090743863 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106083857 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089131663 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092838676 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110984058 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.096435179 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095103728 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104927044 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092626176 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.097928321 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08763437 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.116329427 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098063343 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.096465419 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10673806 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09650728 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088356231 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113841582 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086818072 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091754852 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108252219 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093200839 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089880781 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108061994 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088920028 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085263242 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086838565 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116704724 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090517131 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096817917 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109631762 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090475602 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087910355 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106645067 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098316815 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090718102 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.116529477 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093305639 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085720592 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084261953 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11574504 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092426223 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.095944846 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107193323 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096152484 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097761585 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.114277132 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094465337 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101238869 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11840522 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098266931 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097955962 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10300909 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09139162 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096061426 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090908323 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.112721885 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.094814156 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085355713 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112564426 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099112161 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092289718 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108661498 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086654359 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.091937363 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.116046181 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.095950392 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097068644 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.092711987 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111488274 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087742037 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094410513 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.115147893 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092934571 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097321988 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109525734 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.0961649 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088244962 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.114127042 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093891495 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086593516 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084944421 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107232386 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098445814 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085986943 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.114965154 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098226047 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088881654 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107948769 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098758542 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089211954 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093818347 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115395051 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08990558 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099682944 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111457741 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091939901 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096035434 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.113872724 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08613583 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091173296 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108688766 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099812735 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090945927 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096184504 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111590111 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09687338 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094123889 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.11434967 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096987374 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096982719 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103699243 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099151044 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095178698 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.112020168 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091181171 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09112611 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086036175 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110131867 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098322399 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088518173 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118593303 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099315579 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090703126 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108807266 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098656966 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091232998 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117644922 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090228884 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094338891 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085082084 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113620443 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091311714 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.096836637 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108902569 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088321376 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096012542 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.114878898 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097399861 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094865735 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.118442438 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088323784 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085758665 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.094593147 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108276601 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101235171 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094043304 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110215801 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092253123 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09374596 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.112781601 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099338314 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08767121 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107713611 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09388203 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093828112 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108263323 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088147573 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096022746 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090850338 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112995287 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091924734 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087264301 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109858467 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099587256 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090270308 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106785092 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090875611 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098675489 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109696955 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091016799 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086906514 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115914331 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095284185 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098393791 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107149957 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094823291 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09066113 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.094062261 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121666237 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090883355 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092101314 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110685481 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097191124 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096397582 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104804219 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090821943 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100632133 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116676609 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094207094 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095319706 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.110276376 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099916213 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098491666 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.094211956 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107202706 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087616539 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090202721 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105461061 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095289495 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096909988 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111178097 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091305653 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096280334 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115992064 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09611273 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095001965 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085841294 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118786986 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091648776 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094922075 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105322902 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089339107 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094225827 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115801853 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092758484 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093311595 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093290215 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.114942249 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08823175 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089497094 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116036329 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098077252 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.097544784 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111458515 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091884099 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.095616508 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120906978 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096533275 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091489823 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11755515 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.09987662 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094022815 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09150933 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116114591 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.099801436 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093880239 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.11843935 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090887825 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09156537 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.118799608 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100417569 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101622669 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110466423 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088595099 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.09705552 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109506076 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089722826 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098498129 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117879934 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101019006 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093650258 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08957141 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120892358 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098092643 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091838493 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110583345 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091122221 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096955957 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110513464 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097189614 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089525754 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.119137096 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100030135 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099377736 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.119976768 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088412448 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099253459 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112494754 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101491626 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094606999 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088323262 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106852904 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.095894384 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.099603262 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.118073311 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098392094 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097040653 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09644406 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114261417 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093742119 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091386164 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.118671898 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100365731 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094084039 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11418765 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093994232 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094030909 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.1132333 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099774885 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.098853864 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093155482 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123444217 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099236323 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091642405 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110285409 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09456729 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095795972 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113794901 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09855954 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090062718 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106843061 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099433861 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100800766 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091591843 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12087214 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100171442 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091533163 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115376653 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101369821 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098887123 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.113376652 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095477847 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096218306 seconds)
  done (took 59.912163155 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142379002 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101041247 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115276259 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096591923 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112371393 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116758019 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095974979 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097334378 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115680742 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105285721 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095474242 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094566174 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129587661 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115076929 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131558424 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10450129 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114402937 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098454715 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09655772 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096865862 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128648547 seconds)
  done (took 3.121574136 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114423249 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108522262 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127601416 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109730043 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102037123 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127196858 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10645967 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126100975 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110876117 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103442404 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129270228 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106679489 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123021732 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105132486 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103271323 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123331419 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110352799 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101307452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127789882 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107337433 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123647853 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108373676 seconds)
  done (took 3.322796089 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.125632922 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099451361 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093171495 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115219794 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100087562 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.095679317 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118541822 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096741488 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104579053 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.08960197 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107012967 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091433356 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093887928 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115031347 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090537808 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095195846 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122222616 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099798768 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1001953 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09513192 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107064838 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096863112 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.095528071 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.105289728 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.100920165 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100242704 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.095739656 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.119204842 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087031057 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.097493559 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11490215 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090586656 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087256343 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086690401 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106678472 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.098942083 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098551262 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.114425674 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097164397 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087153385 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096536212 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.119646514 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088379407 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096390341 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.115309926 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090600151 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099033211 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095641423 seconds)
  done (took 5.658837384 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12418717 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159388427 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100796266 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.133177301 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.130627447 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105374186 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098332318 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.134942391 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098087567 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.119715887 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112607803 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.108918036 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12381559 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104665455 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100333442 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123059972 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.338355036 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098627508 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124955165 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101031729 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104659241 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122326214 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109558524 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129350932 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10347727 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098589919 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119265145 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103278187 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107795542 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.124915904 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103594347 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103546329 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.13057208 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102794339 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100099704 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.121159797 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111466437 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.09934506 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.119607068 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099055808 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.099983348 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122449376 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101250825 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129211879 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101840436 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101156963 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.099269076 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.117325577 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108160542 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120590293 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107141907 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108736352 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122064646 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101787768 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102268935 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130331164 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103841176 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.097982896 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.120228463 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.109050298 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096863399 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121946585 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109221391 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.099178402 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.126567695 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109145353 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.120289737 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102234945 seconds)
  done (took 8.805981467 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130149257 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103002137 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131048865 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110938994 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10143555 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124083366 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103191393 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.101609153 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12369786 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107620448 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12209092 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.193705 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120520577 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108399262 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102720775 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124748831 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104502425 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102555113 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123934845 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104106706 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10328023 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131011581 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104310281 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13098062 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116512194 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099851741 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124609204 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104402224 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109912623 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123713569 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11499171 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.1227334 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105115685 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11081208 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134620033 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10426407 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097938464 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124173429 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106158664 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103852694 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122757578 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112910247 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102724322 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.120468498 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103616217 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10348478 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133126514 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115073397 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127889961 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108564381 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.103070891 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132393106 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104251454 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101914946 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131986653 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117521275 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131184331 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112117264 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123249301 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112951729 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110246922 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138219885 seconds)
  done (took 8.018511902 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097894925 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096701543 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095561752 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118619608 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097566127 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096887599 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097102267 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119184976 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0980408 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096160649 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117024248 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098282515 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097134038 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096621094 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116989699 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098569117 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097302717 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116663808 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098818044 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098144177 seconds)
  done (took 2.880136115 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107773476 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114203478 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119728159 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106670171 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099751326 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12554281 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101295933 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099989093 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098469804 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122089534 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107883422 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107078626 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121133521 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104790997 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127538143 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107571686 seconds)
  done (took 2.606792364 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116692348 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116253312 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185818838 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101904272 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.120730143 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108019121 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100330429 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100892797 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.121558563 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105101078 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103158683 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126137103 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100973825 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101169857 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121654694 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102954133 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099320768 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125105081 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102846028 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.161103904 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.125879469 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101661908 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.100160561 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125470583 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102943106 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.102923355 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.127407545 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10082814 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10113258 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121331845 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101801146 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.105184905 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.119199749 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103996976 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099625547 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.12036788 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10125255 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.099969144 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.101322514 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.121406065 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102202954 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.100694895 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.121025736 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102532317 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.09760881 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.120889082 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099832156 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105127468 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.121617439 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10235702 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100353125 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105853025 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.125643266 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106613294 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.106144375 seconds)
  done (took 6.961822198 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111440819 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102554644 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132443143 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099791081 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101150295 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100239943 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122258855 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10257211 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10062955 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120235565 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10199917 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101656915 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121168794 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101929522 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100603388 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100472768 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.119865176 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102062199 seconds)
  done (took 2.784274966 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105656523 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100847482 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103836161 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122234623 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101450352 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099011578 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119934057 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100405922 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098538011 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09923338 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120872492 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101101307 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098473121 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120265532 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100924332 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099048612 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.119672494 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100698933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099761702 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098555195 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120885474 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099671054 seconds)
  done (took 3.1740774 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110384836 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180322767 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.104431159 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.186999713 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.0965874 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094059226 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12522588 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097321373 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112256885 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.115999312 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.095264011 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.094586218 seconds)
  done (took 2.256910301 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126042641 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134895899 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121247071 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101652303 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10771521 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124505309 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104860321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103810897 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132686514 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115449058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124351169 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11454642 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110958598 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132254771 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109925543 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128998058 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106446874 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103658214 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101167536 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139344992 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103922418 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13186819 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104369576 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103850611 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125038742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111722346 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131484909 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115319946 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10554468 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133029009 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10881714 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103835538 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134089393 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11510104 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121336242 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113422047 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104509997 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139782881 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109463082 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132570523 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101392196 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109025808 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131937135 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109870269 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111376303 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125871014 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108732577 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125321486 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106806194 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123583037 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130017313 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114219954 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128631009 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112904121 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111369375 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145599377 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11587971 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134127212 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109004478 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137150043 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112562601 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108127596 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132564688 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115184704 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129838553 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11259257 seconds)
  done (took 8.645817469 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140996582 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101681635 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126639602 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115855911 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112111238 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12783338 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105206272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127227362 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106784253 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101648381 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166401003 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105492909 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112464642 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134434904 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104538831 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127206705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106411395 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111459466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124442797 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126289656 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104466006 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135919972 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113960255 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134213206 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116887192 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129862827 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105647152 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104513414 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126744464 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107037498 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110873206 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126299043 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112934134 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102203236 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133659945 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106364374 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104378565 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132024127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105558275 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130191029 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113303385 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119265532 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126917698 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105703161 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137402442 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106217279 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105464594 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1233327 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107770715 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103005403 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137932014 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11649966 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136593637 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114766664 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106765902 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125291206 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106743842 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105163875 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126763101 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110027029 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112284477 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127166249 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126065185 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126957076 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106866355 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111927693 seconds)
  done (took 8.629555747 seconds)
done (took 163.102531597 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.144406888 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18124614 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.141316157 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175609515 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092842231 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126071391 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.144510837 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.144506227 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089886045 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.113971859 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092621759 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09299876 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180444167 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093284818 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090852583 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092694966 seconds)
  done (took 2.844069898 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191426044 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.300463066 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105500125 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118345526 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098018706 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095398575 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.116428596 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.098948155 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095263068 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.123976352 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097074894 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092160568 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121952259 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093812677 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095636284 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095727086 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123929217 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095900341 seconds)
  done (took 3.019994084 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116155662 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.138865713 seconds)
  done (took 1.11590031 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12621267 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.206955031 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275619484 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164312754 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.116751049 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135665006 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14395449 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130419559 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18309883 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130246392 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109680916 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093628208 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143357778 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101754132 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111914624 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117264932 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125328993 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.131733755 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.110773133 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098156147 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139727805 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.09962777 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.100838194 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.131577439 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.175234992 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129827579 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101598859 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099491973 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119510861 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111128476 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103035796 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134288484 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108661507 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173472745 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099322113 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169710546 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102959611 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.118316869 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112270172 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097311293 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122313781 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101450286 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109189396 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117499366 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.099642132 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101732456 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123838671 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.099493923 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123845408 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105129295 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.103902198 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123839871 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.146754697 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125546455 seconds)
  done (took 7.646398594 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.84799015 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137962113 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096557509 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.995507849 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145620636 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112225757 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.839154171 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.141633592 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24779752 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.87084919 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113153661 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109119582 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.250073865 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253000614 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.255250975 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.370391967 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.688435144 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133326838 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126895206 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158496678 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105746413 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143703483 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118415811 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.511667637 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09904899 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096897446 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127558362 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111692681 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171198786 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099089964 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122236165 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172355408 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.286827704 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202501876 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098086925 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119296152 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097534237 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182181938 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262428594 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209268743 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.189957275 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095866979 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097365187 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127190689 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118671445 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095009981 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175842139 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187110488 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.184135667 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102177699 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111070388 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130279851 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105671117 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.173842709 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095386552 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.348420396 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374635484 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097810726 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105633689 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135818678 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259599626 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098616626 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224759739 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146424392 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.206737056 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097751267 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824321542 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.179547783 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098531362 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125557717 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107326806 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104020198 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126337414 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164034865 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.49343378 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11043111 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12300723 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098049887 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226520534 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098361927 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097114745 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177045794 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120486381 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106698672 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111018793 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131460896 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.1823157 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.243332999 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132291338 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107134611 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124852174 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112070561 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099359711 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.228688893 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219139187 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17136912 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.224818226 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108575318 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.177508244 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178056502 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10604216 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.182810722 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105612285 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134837105 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106564802 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215680119 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.151905213 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103655678 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103641365 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12906441 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.133378899 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123264801 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107923357 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.182059408 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.545250103 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.158628761 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.116173272 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103617831 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107202463 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175014556 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104538627 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.253801183 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130082815 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.15829317 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126817513 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095362965 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127364349 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.15576705 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130733347 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106619046 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127370946 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107700726 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.272620402 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214264071 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112213385 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245358568 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19601579 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106039615 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.186675731 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107273854 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183711022 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10685109 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12874593 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099188407 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811658964 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134022003 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107249811 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103122324 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20298203 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097700104 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.121796216 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10009828 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096164134 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810426327 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101784492 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119071701 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101817508 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105512144 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129907035 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106107389 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102816527 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.174707913 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234433021 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.136535082 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104327038 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120326913 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.152041312 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.121730634 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099730327 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098772231 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.120277309 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108533348 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103602191 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123393078 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164962597 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.171349731 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220728046 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.645522564 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120157536 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100767987 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232461496 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098006235 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.337338215 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10841708 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225913794 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180318776 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097013604 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.351140038 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18383824 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202113433 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103046393 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.186789994 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098355147 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106148125 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.174343801 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098447974 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129766764 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.170409775 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115535626 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111247811 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.290604558 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101132915 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244497082 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096894832 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.182372436 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100888448 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106475063 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.339936169 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09996288 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115775591 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17428002 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102696117 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.122838775 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.623684046 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101035571 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109043584 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128807178 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227104754 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.178469777 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107131386 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107347608 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134428995 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173849138 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.202931528 seconds)
  done (took 46.754781032 seconds)
done (took 62.236880515 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261369041 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171847384 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.275952213 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170679444 seconds)
  done (took 1.835217298 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.23591249 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153210932 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.195886859 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.118238212 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.201071812 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.116837315 seconds)
  done (took 1.906924398 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.171046046 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.162906993 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141437322 seconds)
  done (took 1.359839473 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195334932 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211918376 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.318892101 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.227773379 seconds)
  done (took 1.928741535 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.256514317 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11370938 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122090641 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.203215726 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.214190562 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.172095322 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142823566 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.165603466 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128152678 seconds)
  done (took 2.44861356 seconds)
done (took 10.365944853 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.354306039 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.214952748 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.181233641 seconds)
    (4/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.249180922 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.179814468 seconds)
    (6/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.382194649 seconds)
    (7/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.350422599 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.136928774 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.130957521 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103187916 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.327333435 seconds)
    (12/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.146234088 seconds)
    (13/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.227098321 seconds)
    (14/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102699242 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.295305838 seconds)
    (16/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.249578138 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.145193621 seconds)
    (18/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.123491605 seconds)
    (19/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.186719184 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.1004601 seconds)
    (21/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.126638243 seconds)
    (22/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.129756072 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126348906 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.286391941 seconds)
    (25/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155932292 seconds)
    (26/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175529094 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.077680437 seconds)
    (28/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.096255328 seconds)
    (29/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.205989959 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.1058143 seconds)
    (31/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.267434693 seconds)
    (32/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.177892417 seconds)
    (33/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.161204162 seconds)
    (34/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.272239847 seconds)
    (35/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.267192298 seconds)
    (36/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.262365587 seconds)
    (37/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.159742848 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.120771421 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.100604239 seconds)
    (40/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.13102529 seconds)
    (41/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118923215 seconds)
    (42/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.208760499 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109301352 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.171131256 seconds)
    (45/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.163856392 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115481824 seconds)
    (47/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.12397351 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123891211 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.257756625 seconds)
    (50/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.217676237 seconds)
    (51/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.269997843 seconds)
    (52/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.125956311 seconds)
    (53/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.129861043 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.141013252 seconds)
    (55/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.081860894 seconds)
    (56/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.134626795 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.213948144 seconds)
    (58/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.14514665 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103010479 seconds)
    (60/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.075953757 seconds)
    (61/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.192162002 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101030934 seconds)
    (63/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.081675693 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.216201209 seconds)
    (65/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.13673753 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099024839 seconds)
    (67/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.158442317 seconds)
    (68/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.127833373 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097895187 seconds)
    (70/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.106060259 seconds)
    (71/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.086098038 seconds)
    (72/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107513095 seconds)
    (73/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077978999 seconds)
    (74/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.075918362 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.143890097 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100313921 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.102230469 seconds)
    (78/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.105518969 seconds)
    (79/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.193999663 seconds)
    (80/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.075869766 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.12375799 seconds)
    (82/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108183286 seconds)
    (83/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.082546709 seconds)
    (84/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.136172772 seconds)
    (85/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.205728354 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098789909 seconds)
    (87/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198698403 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102759459 seconds)
    (89/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.164638932 seconds)
    (90/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076583572 seconds)
    (91/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107171321 seconds)
    (92/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.082098675 seconds)
    (93/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148970571 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101709374 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.103759033 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125114105 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.13269897 seconds)
    (98/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.080108032 seconds)
    (99/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.122681974 seconds)
    (100/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.106251895 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09886412 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10732075 seconds)
    (103/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113435846 seconds)
    (104/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131452997 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.09945932 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.076750672 seconds)
    (107/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.105485178 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124459882 seconds)
    (109/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083038772 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099042755 seconds)
    (111/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.131914994 seconds)
    (112/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.107028284 seconds)
    (113/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.075879782 seconds)
    (114/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.0786546 seconds)
    (115/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.100055138 seconds)
    (116/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080562185 seconds)
    (117/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076130495 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.184475755 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.106403644 seconds)
    (120/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.110717804 seconds)
    (121/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098072098 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.129627576 seconds)
    (123/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.126618542 seconds)
    (124/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.082266342 seconds)
    (125/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.075619232 seconds)
    (126/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104741802 seconds)
    (127/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107779697 seconds)
    (128/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083958991 seconds)
    (129/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107128932 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.146048896 seconds)
    (131/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076906927 seconds)
    (132/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.127979143 seconds)
    (133/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.139276631 seconds)
    (134/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132100825 seconds)
    (135/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.101618324 seconds)
    (136/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.139673861 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.12446475 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12154026 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119860676 seconds)
    (140/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.10610929 seconds)
    (141/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.165155948 seconds)
    (142/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082880425 seconds)
    (143/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.082907754 seconds)
    (144/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.131540504 seconds)
    (145/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085471155 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.10812828 seconds)
    (147/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.108166255 seconds)
    (148/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.103106643 seconds)
    (149/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098488025 seconds)
    (150/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.085083534 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.107146161 seconds)
    (152/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.101442257 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100799508 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.099756671 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.128945793 seconds)
    (156/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077685554 seconds)
    (157/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.079626363 seconds)
    (158/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077868822 seconds)
    (159/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.079129345 seconds)
    (160/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107011839 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098442382 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100345756 seconds)
    (163/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.105860663 seconds)
    (164/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.105370825 seconds)
    (165/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076819823 seconds)
    (166/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079980715 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.105974466 seconds)
    (168/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.077708609 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.146045413 seconds)
    (170/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101077852 seconds)
    (171/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.102855706 seconds)
    (172/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10018224 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101824297 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097396883 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.119960862 seconds)
    (176/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081490075 seconds)
    (177/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082444746 seconds)
    (178/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.082077991 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082648045 seconds)
    (180/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076216859 seconds)
    (181/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.108117935 seconds)
    (182/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080682159 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.097657452 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.082987726 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.142986017 seconds)
    (186/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077280863 seconds)
    (187/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079467437 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.120411634 seconds)
    (189/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.100791516 seconds)
    (190/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079068867 seconds)
    (191/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097713159 seconds)
    (192/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076537015 seconds)
  done (took 25.965385304 seconds)
done (took 26.856612912 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.201468426 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12422911 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10723216 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106231984 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.195999078 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114784664 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.122046149 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.133206728 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117175742 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.10684831 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.121490461 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120746833 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10660639 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.198919165 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109354234 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.123419042 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099735435 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117918089 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146313143 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123738883 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.19586197 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102189614 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116677149 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122537119 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.173351103 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099547335 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.132064959 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.1081919 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.11879942 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.1319687 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108268658 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098623485 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.147264229 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124161388 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098195168 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.130786685 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100000612 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083856926 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.107439686 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.1337098 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12099857 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.107644612 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.130972818 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101081219 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.109223588 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.131417144 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099896442 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111900509 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.119807973 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109878117 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101326249 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.145926688 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108882722 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.097949804 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.097134226 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.124472116 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119318063 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098962907 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.144346992 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100944739 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.099917117 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121763827 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112297671 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099176698 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.130171386 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100733912 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111055493 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.109715469 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.131129869 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102651249 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099436517 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.130905178 seconds)
done (took 9.586537216 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10412642 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14328399 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.195515167 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.204787813 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.126916628 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11196113 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139718857 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123974893 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112963526 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142655273 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136493156 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.154129463 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.178498551 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140365299 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116035327 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111447747 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.135909617 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109201142 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.203316999 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.123937907 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121806072 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.13999373 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125694792 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.114439179 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127566924 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.123556496 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128841145 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112457226 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103401954 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.144104005 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124890838 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.102585579 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128919954 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123098744 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120245389 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.136421051 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115255813 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111768515 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.127385553 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.104514721 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.110986918 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.142117118 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103861651 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.112551706 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.136661029 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119716019 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.109929986 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.140897017 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105545525 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110172838 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127886259 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130151462 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114971588 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.145462315 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116893234 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115869204 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.140771907 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116923305 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.105258688 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.140874741 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.104961885 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103169823 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127214217 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126879956 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.105857058 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.141049742 seconds)
  done (took 9.32866956 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122806291 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.131848142 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138562519 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.114735968 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.107652707 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122725975 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098928086 seconds)
  done (took 1.76919675 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10081206 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181001316 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.204825007 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204927495 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.177179177 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.214798587 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146633523 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100223015 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133854739 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.133042601 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18357439 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.234014369 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.108765327 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.138833439 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182432335 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.123743551 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185044967 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.124561534 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114302665 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.206810004 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116510229 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.128218442 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.137054581 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100993425 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.202631757 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101741877 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.257277265 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117670002 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108374455 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.1385895 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113222492 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.200838472 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.178669226 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.138939269 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107819408 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.206103586 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.177322511 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138475514 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.19082225 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.129480522 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.17766207 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.139382962 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115195504 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.113420785 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.140015716 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16811301 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144555065 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115240926 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.112565794 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211256826 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.108916651 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206008044 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.110191778 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.137592092 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111246613 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115145369 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.146190312 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116478668 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209820653 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117732739 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.205129625 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.181409863 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.204216464 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.205419243 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123449408 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207731157 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.174449865 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.136454316 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110036874 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.115228169 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.207955881 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113232492 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.136323684 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.171885159 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140206473 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.183406158 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.208714164 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111135201 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.136584429 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104515676 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112903359 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.099241841 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.198821538 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112672921 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.13799631 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118254275 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112397259 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.139704923 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.105590671 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.146736126 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115212942 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.110783299 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.142412226 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115334095 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11611674 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.211134153 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.110562821 seconds)
  done (took 15.330746279 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.103623286 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.1021565 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105723256 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.126587261 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102227155 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101432827 seconds)
  done (took 1.599111083 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.137693261 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115944637 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.147584424 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117065719 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158827728 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.211024824 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.215855392 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109065098 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.15444625 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.123869102 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.210137455 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.189451809 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.21507656 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116943502 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.217191668 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.116553683 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.217163384 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113468397 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.148099707 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113715767 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114093672 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.142961526 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112956111 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.203851392 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.115484019 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.115784005 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133803779 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124606562 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.122091132 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.135247552 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117774364 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.115286934 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.134266863 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.129992964 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.217740822 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108670361 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135751899 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119123588 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116878677 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.140761871 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.191397497 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136293024 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122356775 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.117220619 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.134231994 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109637689 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.117096368 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13460291 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.192708072 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.141861685 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118644633 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114822236 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.141324919 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118461173 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.106745376 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135234371 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118893946 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.218998118 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.117907194 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.10750696 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.14110967 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116695467 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.133970529 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119832757 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.117110097 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.141512006 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108926567 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116600559 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137893793 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116707908 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.11811396 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.138776974 seconds)
  done (took 10.965954118 seconds)
done (took 39.919102819 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.467485028 seconds)
  done (took 2.418313556 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.874565803 seconds)
  done (took 1.828804811 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.501587724 seconds)
  done (took 18.485146748 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.419174601 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.460481654 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.11591595 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.145268096 seconds)
  done (took 3.095348563 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.812740245 seconds)
  done (took 1.791996379 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.278827711 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255756304 seconds)
  done (took 1.496301802 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.700760326 seconds)
  done (took 1.672203945 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.492717141 seconds)
  done (took 2.451761296 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.27962026 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.236585413 seconds)
  done (took 1.48795417 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.606616289 seconds)
  done (took 1.578234716 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.333057809 seconds)
  done (took 20.305852948 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.252787756 seconds)
  done (took 1.227431384 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.280917278 seconds)
  done (took 1.256314714 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.494725682 seconds)
  done (took 4.47391938 seconds)
done (took 64.525871825 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110986761 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.114364101 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.112740996 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.137573068 seconds)
  done (took 1.442460135 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121238816 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.114755367 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.117336168 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.140096564 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.120790206 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114350445 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.140023983 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.116777484 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.112981481 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.1431966 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115282547 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.113916814 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.141667192 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.114547729 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112239889 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.140710801 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.117726503 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115934959 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.139778941 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116707109 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115334259 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.139919078 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.118605279 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117641125 seconds)
  done (took 3.940874924 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112029083 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.105418466 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107401481 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.129858564 seconds)
  done (took 1.435726812 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12316398 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.126920853 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.148693909 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122164492 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.125545586 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.150310937 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114763465 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.1111819 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.139327689 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.122928609 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.128733993 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152319302 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.125926935 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.115677108 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.150317796 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.109591023 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.114887705 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.150528608 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121026367 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122537966 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.140916984 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.120800003 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119759935 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.149066786 seconds)
  done (took 4.084926992 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.187951581 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125283072 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.169830346 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157612779 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.172283578 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112989829 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14096414 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146145734 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12193687 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116031789 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14246088 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158812972 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14589275 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117496622 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11484765 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.1447108 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127024983 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119093324 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.184565765 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120239631 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.14719021 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.126176171 seconds)
  done (took 4.079704879 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118243078 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.105621157 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101074565 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132591839 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117349534 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.107857098 seconds)
  done (took 1.671429836 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.105838201 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099875867 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100727001 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.12485863 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105759503 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10079852 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098877456 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127199589 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101192729 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100814621 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.124658472 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10120916 seconds)
  done (took 2.279722574 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.322779637 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.105658377 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132929444 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108947599 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.110540072 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.102345115 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141549009 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.104984053 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.261484979 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100831877 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.128266444 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19197224 seconds)
  done (took 2.801195082 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195578714 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145659838 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244394845 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363326696 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180392412 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154375889 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287721958 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18344542 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.171214084 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159444074 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178586055 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183200693 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149734651 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205873666 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135753175 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.180097375 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157905545 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228091328 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13798945 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231346078 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178322016 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169686105 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209248115 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144645098 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161929907 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15547019 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.143057569 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124808756 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186841564 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159250188 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192440932 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144691021 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162554061 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208742611 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225257776 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192835945 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266918691 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129109907 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.192131276 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.210334523 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249411909 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138163211 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208037627 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148364366 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150052623 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179966027 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173970701 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17707702 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.156340756 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140676854 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200472831 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172217429 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19670337 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130171417 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303581304 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156342114 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.138565736 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187186418 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18149255 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218539902 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196535127 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120591903 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197590832 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185257348 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231647923 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.161985774 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15909074 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146018752 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161937711 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22452294 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173258215 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181732166 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222925167 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126435481 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192830457 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163391645 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174233452 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223507761 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164966845 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.11558213 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172908971 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129984849 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150029955 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.1861452 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1455848 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209595906 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156106463 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340837165 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178500929 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178318224 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155483234 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181818988 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156582263 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171609916 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100111069 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137515193 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184381999 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17757295 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126789501 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148918363 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163064648 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.122287138 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174197768 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119783274 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161841687 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.157179976 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157771913 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190314266 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126241933 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198223479 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144134148 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.183910814 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186562446 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1876992 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151742409 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129669781 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237458508 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164666124 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.158707694 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169772621 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215788014 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145083853 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157586082 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155970787 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213699223 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137510511 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219238357 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159096099 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131902276 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132714662 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194917911 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178271847 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150444963 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122785071 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185472694 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208309833 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124597325 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133774557 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201562774 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127746264 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148577342 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133006205 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130800556 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.164407441 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142852512 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.162013708 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147401803 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188258906 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160621428 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177246916 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130528815 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191734263 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126839619 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.189542386 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144517358 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.114321826 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194541593 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216245519 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12570519 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203181285 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158320151 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208441286 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194514295 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126067371 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204753433 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124464153 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117064087 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182486664 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165885304 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184798788 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.206773476 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178128341 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.185999437 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184605796 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145214911 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188034971 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.177684154 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17856349 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140181629 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195757266 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161302361 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.144730934 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121325243 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123331749 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159360399 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126699156 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132207415 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19682361 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184956097 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201804627 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163511071 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160106303 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186790772 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.120292178 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182227088 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.195849338 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135640185 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.209144741 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183734094 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199118429 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135442776 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181965315 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118229818 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147693674 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130760703 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155775236 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160749569 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130144665 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163401993 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185017001 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192462145 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142651238 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216631816 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185771023 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220056526 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118939261 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.156344242 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191124544 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161071467 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.205558985 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130139069 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.18057946 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186320086 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163696475 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186214445 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190369965 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171758726 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216972378 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.187084088 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127474468 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16896337 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158804051 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132662383 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185250311 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141135934 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154356717 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148260062 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.160949478 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136653331 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202965248 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138101012 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20060703 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152354441 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191179046 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121052766 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163903169 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17062461 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168086448 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104104332 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188187548 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186373353 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172970746 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149941329 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195817727 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127095154 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.336902152 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179344451 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196510796 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130639535 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162189454 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166256975 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183966693 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15416399 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206415056 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134522977 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227817063 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191083368 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138315059 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152384888 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144943288 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144982441 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162211958 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14638698 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.184883497 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139809383 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203304652 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131825894 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192857312 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197223246 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143315106 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145414028 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162437597 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243782288 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162819393 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194287189 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.159074543 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1870571 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176040127 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147209709 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124053762 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.128164257 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207752125 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12451279 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19929448 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191831274 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206256226 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169087581 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185111219 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139670045 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122751414 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189802369 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142822507 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212137661 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158502923 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133391686 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210016472 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125298852 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125299789 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183426992 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290618797 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144087829 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192093616 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104297445 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28670324 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127182201 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12891198 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185206389 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165044214 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156459594 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178138969 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194636822 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137560919 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156834161 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158402763 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203620131 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182619372 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188923961 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193365854 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140925205 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181205297 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155050906 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195463695 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141638136 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141663592 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181742109 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21425539 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.175754196 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.153485903 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164242056 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189849365 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165802891 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193760183 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135586825 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205687487 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125916509 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185148457 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134326216 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120746813 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184896512 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191018237 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127733751 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19638399 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164820573 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125968976 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150930526 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141500339 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188196082 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136323805 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.152294837 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17661546 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.153456675 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175816264 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229802083 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125765416 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190720217 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142003097 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152489189 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135689416 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138588375 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155451869 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170165658 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202266379 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129037058 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197231163 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158316652 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18521634 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151802312 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166278662 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.329832505 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.123955753 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213324408 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145251804 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217694458 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174062836 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170558245 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19343482 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144398141 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18517999 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142790081 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245397541 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159678222 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.190521691 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128111469 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165487314 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135899057 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128540081 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175810381 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161961629 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165210442 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131325893 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.188819683 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14223924 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.13934164 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165384365 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218888714 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147066799 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205940455 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180181436 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161505212 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16978525 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195769704 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124958097 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.186595647 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164181824 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168227055 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14621413 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.15721375 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134639323 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232955932 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123489884 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154608521 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196228786 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190543785 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166527839 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.129310396 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199257238 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136757234 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198067872 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122358871 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.175581608 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166524584 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159261388 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.122970215 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192688691 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152662149 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.188049208 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137856174 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.171567717 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214956742 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121862199 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158577557 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269825726 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182944936 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215406864 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133886312 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132607443 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168545415 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153376873 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.187659841 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165507617 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.154699366 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126036551 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14003496 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.181144526 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138215163 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192189069 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166152224 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183002967 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178583006 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160367132 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250051705 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166891578 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167743718 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.141679079 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.125675315 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136048658 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158059379 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136430239 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206866903 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23485592 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.158317147 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.172304137 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131164324 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123482174 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155260283 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159441658 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173479216 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163177684 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169370165 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102700291 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136161752 seconds)
  done (took 83.555939786 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158214849 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148319256 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.162879034 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.217664423 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190694678 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.284237122 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.224600526 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240809395 seconds)
  done (took 2.700189637 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.116127234 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154756214 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137795979 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.140167806 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.106745195 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.435687055 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.126976314 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.141608171 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157894295 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.146424122 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131106734 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.494454163 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113399979 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143681152 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.142285067 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.106016643 seconds)
  done (took 3.85963653 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.593651757 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53652457 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.901316888 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.286234776 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.253386426 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.194695034 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.732854132 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193710371 seconds)
  done (took 11.76943028 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.151225907 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144386499 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.409378676 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.745339871 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.198795678 seconds)
  done (took 2.728783737 seconds)
done (took 127.319007427 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120662489 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119632643 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.118098022 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.14941936 seconds)
  done (took 1.57686079 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.173386049 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.088703014 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090499597 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115620673 seconds)
  done (took 1.545743659 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.420414752 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088916349 seconds)
  done (took 1.615731618 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.144442742 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132831126 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16158111 seconds)
  done (took 1.529526896 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136921039 seconds)
  done (took 1.216992641 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.119088459 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.113096307 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.231784148 seconds)
  done (took 1.549942942 seconds)
done (took 10.116861935 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116322717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925091549 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.427393056 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129286415 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.7088414 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.422655935 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.418930888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169264348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.169517642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133228638 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12797598 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686706501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.432624634 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.876595128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.39136372 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.900395574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691414434 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108683166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140358998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108618775 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.396924788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132540717 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109320712 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.107949014 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.711925305 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417297682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106183139 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.906161195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106765663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.109860688 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.421937295 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10878007 seconds)
  done (took 20.792779461 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115953313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162502827 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141845311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109611495 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110634617 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.134290815 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119760101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117873671 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.197597658 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.106683226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.154942369 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.106578023 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112285305 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.134113594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.131751611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107218943 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.135088098 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110709704 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114249275 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.134247058 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130209733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.105974647 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110123548 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137857326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107760381 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128392287 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136214572 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.1186661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105877805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14038273 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.111571497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108183807 seconds)
  done (took 5.090113614 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154467934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171681199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143714462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146181153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181876147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.109826619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.218925571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145758776 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198746164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110858236 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128840949 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.133328672 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147747679 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107998537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.159859982 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108336198 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109405997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.136584474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115367917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108884285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.156177562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107499972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10901235 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.135517929 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107778178 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130318754 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.134460294 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120007808 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106187301 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.137838027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112762056 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107168732 seconds)
  done (took 5.397547908 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.121770425 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.121358803 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130109093 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.157971376 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117764364 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.120799762 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.149419025 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118181873 seconds)
  done (took 2.134265208 seconds)
done (took 34.497171613 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132569145 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126603272 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126868986 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151412212 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.184579954 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143296103 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124996947 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.113302105 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148586438 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128632607 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.106951437 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114892599 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155231345 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118209713 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.21547203 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122950541 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.218452485 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187928979 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143738153 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123691924 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116337051 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.220014645 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119089847 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.116025356 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.218100156 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.10970705 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.20907026 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118088221 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.117194184 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.139605714 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.187396675 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.14911707 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115431425 seconds)
  done (took 5.906612035 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.203273861 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117603254 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.14533856 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116021413 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117416222 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.142834763 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.205541594 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.143725273 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116779328 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116232823 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.11394756 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.216798052 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121466726 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.140747643 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119208998 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107713313 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.234673704 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118969639 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107277693 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.090401869 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.14135377 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116322327 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.246479803 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112063522 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115338925 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.143728392 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.119718666 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121319695 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.118289637 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.147540124 seconds)
  done (took 5.279596038 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.122306852 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.128708131 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133773198 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.209537771 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14555839 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.156498446 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136380847 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130196926 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.16611688 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.110943356 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124473151 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.1730195 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125913942 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.119854985 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143341725 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.129325125 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131624814 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139096707 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119546467 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127103679 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.158254087 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128221285 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.133515388 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.145612318 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109891756 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117076631 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.119606491 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.154128069 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118919597 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.12391043 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.141308339 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.113866295 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.111389303 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.172332029 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112834584 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123579143 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.164351014 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123327385 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.122880607 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.172618162 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114186699 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.111242383 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.164438903 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162844954 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.111178763 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.152831149 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122358436 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.123923241 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.137021189 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129458157 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152121504 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.138475978 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.130706845 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.109040321 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.137372143 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119466423 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110623591 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.140572797 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127402213 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113903314 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133159456 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.147014551 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121068955 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.111144675 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.150185672 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109654005 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.109716738 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.142997485 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136443885 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117185247 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.173259225 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112420543 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121632628 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.122085916 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.151884127 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122619431 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.109269182 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150427787 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12190906 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116251899 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.151266222 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114257156 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113462918 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.154575508 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132117874 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124977366 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.149262575 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125093094 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.113675317 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.138946443 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128125685 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.111622297 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.114874409 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.153135545 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111083949 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.113462472 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.152073062 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122504888 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107772114 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.164696937 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116037107 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.109729179 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.161401468 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115140022 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115857118 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.11979497 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.181281695 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113982959 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.120209787 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.152303186 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110565362 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117364367 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.14264368 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110390362 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127516996 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.154110778 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119461028 seconds)
  done (took 16.516659147 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.311164773 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.268721506 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209164702 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.240319826 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.12334172 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.236342355 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.296072374 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.299133434 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111663735 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178282409 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16313871 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.270524145 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.110864368 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.169562779 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.301121599 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.353425727 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.139139556 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.180163434 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.145213409 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.155527648 seconds)
  done (took 5.378048959 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.131897167 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145435298 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162920704 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.138772807 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121256867 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.155858838 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111525835 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13235083 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152088116 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121858809 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.112755403 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.15565844 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124313367 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126388965 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.154431931 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.143902704 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118459152 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.143956978 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133879317 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11521535 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.128252687 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138038985 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119429852 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.162105081 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.12997442 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.121615312 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.13869236 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117246829 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117419337 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.148413478 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117029264 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130439427 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147855994 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103772259 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123551208 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125532003 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.14690279 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114094816 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115739951 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.142664751 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126824597 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124415525 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.118567782 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.125361777 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.129737881 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107682338 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125437959 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.153611703 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105722271 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129926695 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.153693594 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126129012 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.117801969 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.162896515 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119502986 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127491192 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.149789045 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126482735 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.115886637 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.136913233 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110210813 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.11521127 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.118519473 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154234007 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124005909 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.130058602 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.157037803 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111667031 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.115107814 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145166088 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116205396 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.125176437 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.160489405 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122044491 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.117265332 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.152343589 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121039061 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092392616 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.119272837 seconds)
  done (took 11.405095079 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136789584 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122394179 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.128943272 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.174850889 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126136934 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.116591114 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.150285499 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.130721648 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126166243 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159579246 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127008664 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.1245303 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161569307 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.121564701 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121266481 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156196075 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12760362 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.147603661 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.159396662 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138403569 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125815062 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.145768185 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124580354 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122378715 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169157547 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124096815 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.137383975 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.155557322 seconds)
  done (took 4.992046074 seconds)
done (took 50.57439395 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.236022882 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.431793161 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.215917433 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.214785838 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.24289174 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.250837858 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.216031644 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.22627901 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.635120501 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.18794106 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.216511581 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.21534794 seconds)
done (took 28.407828648 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.274873578 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.774592711 seconds)
    (2/2) benchmarking "String"...
    done (took 1.501524092 seconds)
  done (took 4.387637366 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.206582942 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.20602406 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457213719 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.206668352 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.209541858 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.206624811 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.206752342 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.231845541 seconds)
  done (took 15.834808281 seconds)
done (took 25.815498722 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.266202961 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.386631801 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.448736614 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.206944929 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.211214692 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.213263281 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.208010667 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.229199159 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.221697551 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.216193514 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.612400891 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.471234558 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.224098032 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.581916753 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.208649746 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.236266851 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.209018019 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.439754126 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.208164353 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.237545924 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.186580401 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.187872054 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.22975589 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.209340757 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.214976863 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.222279741 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.265300654 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.210346569 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.395856973 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.231945885 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.244809729 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.210899493 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.272118319 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.217144703 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.208051678 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.213134541 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.412623803 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.218019963 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.196796986 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.230379658 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.402370591 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.230208968 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.215469545 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.211509986 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.213131284 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.275066866 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.190060731 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.338906131 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.231701763 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.210974566 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.287311984 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.578337122 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.21313843 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.212000235 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.224017177 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.443600644 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.224215236 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.266294982 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.237384892 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.214920284 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.215979746 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.209996377 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.233549741 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.22683919 seconds)
  done (took 144.235778695 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.210318886 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.215331203 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.215552785 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.231956391 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.215720572 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.214640483 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.211125727 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.208959376 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.215480091 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.214171479 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.21562288 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.214930551 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.216827674 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.185159684 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.221893023 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.223840738 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.21726089 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.235848959 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.242696785 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.210847513 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.219099183 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.21609461 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.218465384 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.216809973 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.259529758 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.282471289 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.243033403 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.239189579 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.226434786 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.212410774 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.253795209 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.219030474 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.817701018 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.086085958 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.224749427 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.22913578 seconds)
  done (took 80.616615195 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.21366712 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213046363 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212737681 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.245681999 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214020049 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.779749434 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782482941 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.180772818 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.654175349 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.217831322 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.532514523 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.416442338 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.214208729 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304963825 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.226372531 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214761443 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215338375 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229742705 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.240454991 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21866931 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.2155028 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779729081 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.231265051 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.242389615 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.393202253 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.229997471 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246768868 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.607046903 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214637096 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248139291 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.544891469 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.263590178 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21528829 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.547218386 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.781933556 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328247858 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218826426 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24625329 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.215589148 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.215270536 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.495535184 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216137579 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.217986706 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.21973641 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856073238 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.221408483 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.782748838 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.221373421 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170059414 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.221714158 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215997097 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.107282362 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.898901348 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.221820382 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.21664468 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219206373 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.216867876 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217553644 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.249016943 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.09063443 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.313241018 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.218157112 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.220673525 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249180334 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.217335172 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.348265144 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.222089379 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.608885262 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.277947231 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.437269632 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.7856231 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22260797 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311481852 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33623812 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.219282531 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.217875641 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216978197 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.21852815 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.327927049 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.217399498 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.889769185 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.393771901 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.234040776 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.5465987 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.317905823 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.218066946 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.544149926 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.222088276 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.218097325 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.911594487 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313396877 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.217804273 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.218470128 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219040643 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.892303178 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78609846 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.455925914 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.224305594 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.726961656 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.223930144 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.074940348 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.220451384 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.772127346 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.854006859 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.22426226 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331285971 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.394211565 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.23689903 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.218488318 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.552907324 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.225458117 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.274801588 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21971258 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.621640306 seconds)
  done (took 375.093723136 seconds)
done (took 601.056378179 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.104794592 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.052428067 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.201579701 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.06739711 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.049954005 seconds)
  done (took 11.598469653 seconds)
done (took 12.719885024 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.410946303 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.410769395 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280765113 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415384989 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25317233 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426282099 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395419417 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236941808 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.329857258 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.301969719 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.332634844 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.27215734 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.255433099 seconds)
  done (took 18.444042906 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.502176607 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.233219032 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286613336 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.484058676 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265952683 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.502742499 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.549209489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.232792354 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380229295 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244208609 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245538858 seconds)
  done (took 18.051415612 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518699777 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.231886057 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291762115 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.491963854 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26892163 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.510104512 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.529551818 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.23369798 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.371012761 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245733891 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244595873 seconds)
  done (took 18.062090862 seconds)
done (took 55.680338124 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262864752 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.323915197 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.258858796 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.241684936 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.240541986 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.239972384 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.244773517 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.242235539 seconds)
  done (took 11.178503617 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.23978908 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.238922359 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.238283683 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.239390014 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.238537729 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.239117088 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.239313611 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.240050107 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.238975685 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.240014112 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.240072347 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.238833332 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.238687469 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.240867892 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.239868907 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.239593759 seconds)
  done (took 20.955601989 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.24268233 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.240283479 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.239465137 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.239718324 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.239958604 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.242520095 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.242061509 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.240798431 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.240224778 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.240170611 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.240958395 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.240269457 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.239161627 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.239499869 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.24145402 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.243439766 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.240764655 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.240232814 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.245838321 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.241639705 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.241226851 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.241199442 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.240681931 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.240814221 seconds)
  done (took 30.911538571 seconds)
done (took 64.169340063 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.226207739 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.249841246 seconds)
  done (took 5.603747657 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.300088289 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.298300151 seconds)
  done (took 3.727506163 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.243846775 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.24191663 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.243385118 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.243446951 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.241134922 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.241965386 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.244012967 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.24242813 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.242409571 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.241973703 seconds)
  done (took 13.554164088 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.243102622 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.242218311 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.241780862 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.242156437 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.241224984 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.242813301 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.244844881 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.241643845 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.242637738 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.24168372 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.243076647 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.243038818 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.242756186 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.242767775 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.243572373 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.242767308 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.243316232 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.242114954 seconds)
  done (took 23.495527753 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.256052393 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.260269251 seconds)
  done (took 3.644290118 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.373191673 seconds)
    (2/7) benchmarking "second"...
    done (took 1.285107692 seconds)
    (3/7) benchmarking "month"...
    done (took 1.34641072 seconds)
    (4/7) benchmarking "year"...
    done (took 1.340401704 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.284422926 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.264083639 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.285788829 seconds)
  done (took 10.308543457 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.243809992 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.454265101 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.586760163 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.842351424 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.246254731 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.24905351 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.150807515 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.248564321 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.25050693 seconds)
  done (took 14.40168186 seconds)
done (took 75.862463416 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.23045846 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.257634727 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.252883861 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.250956895 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.539152416 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.243051166 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.235543543 seconds)
done (took 16.138442925 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.208422957 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.214000115 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.22238097 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.245708201 seconds)
  done (took 10.020631239 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.230135065 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554015733 seconds)
  done (took 4.914829788 seconds)
done (took 16.065266125 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24680829 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.245401167 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.244479128 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.247249652 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.245680491 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.245466286 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.248352858 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.247567801 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.247924342 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.247080719 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.246565747 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.245932798 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.246334086 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245897812 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.246081935 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24577634 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245875673 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245921936 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.246651797 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245666513 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247974177 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246525657 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.24718954 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.246922498 seconds)
  done (took 31.046481911 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.245976325 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.248126981 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.245613476 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.246862799 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.247471201 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.246396317 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.247539881 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.246555262 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.246059234 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.246960409 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248719035 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.248218081 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.248125949 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.247957387 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246701707 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.246344301 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.247602801 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245950644 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246738033 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.247562174 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.248911021 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248043514 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.246238044 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247034836 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.247788027 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247342751 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.24690971 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.247539616 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248162305 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.248695647 seconds)
  done (took 38.551029199 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.250506967 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.248131342 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.249292753 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.249121967 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.247597234 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.249142146 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.248628331 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.249288239 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.248491811 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.249496206 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.249120336 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.248072507 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.248806159 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.24849933 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.248057968 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.249680423 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.249478779 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.249886383 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.248192203 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.250200206 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.249697916 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.248915287 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.249025663 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.24990973 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.250054874 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.250248491 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.249782529 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.24950894 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.249041513 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.249761757 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.251409904 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.250501676 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.250217304 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.250343832 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.251417285 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.250656993 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.251344475 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.251133487 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.251085749 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.251561542 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.250974749 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.250456254 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.249932657 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.249577672 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.248592069 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.251312561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.250988994 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.250278495 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.252341808 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.251505281 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.250127624 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.252484441 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.252269352 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.249895554 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.250649218 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.250553689 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.251630299 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.250592985 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.250916906 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.251130939 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.252898769 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.251994334 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.25167343 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.252022676 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.251898297 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.251940973 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.252438613 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.252695985 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.25315079 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.253553088 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.252135255 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.251927988 seconds)
  done (took 91.165260662 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.252535126 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.253835037 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.252683104 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.253740625 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25209697 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.251162316 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252929369 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253252364 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250989926 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.251604482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253035327 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253366094 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252877683 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253019044 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253291929 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.252071852 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.251999242 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252216248 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.254471236 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25436102 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254787262 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.253412313 seconds)
  done (took 28.701625254 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251664409 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255266753 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.254046098 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255486083 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255883336 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.256274188 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.254064236 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.255936474 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25376633 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2539973 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254760349 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254293462 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2566907 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254338839 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254411221 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25626125 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255086789 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257054441 seconds)
  done (took 23.726531774 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.25581459 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.254350686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.255497351 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2547425 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.253721524 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.255949972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254715893 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.255793948 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.254627627 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.254615381 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.255479501 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255648177 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.255480901 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255093845 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255234081 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25731035 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.256853883 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254468317 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255461901 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255307858 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.259009645 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255926635 seconds)
  done (took 28.76149809 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255983136 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257409661 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.254711425 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.255481392 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.257251949 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.256991014 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.256867689 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.256809949 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.258463039 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.25601566 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255064047 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.256462053 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.260714676 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.257261889 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.257454563 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256691396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257166598 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256714971 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257206744 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.257205834 seconds)
  done (took 26.277950934 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257071026 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258248513 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257324135 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257565783 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260071198 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.259276069 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257942882 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.257349429 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257654923 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260252702 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257570472 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265255547 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260047009 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259763128 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.259933298 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259946871 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.259425957 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258602259 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259484552 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258688991 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259337429 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259773656 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261539264 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.261134593 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.260159379 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260275205 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259331516 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258766802 seconds)
  done (took 36.404532906 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259717475 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260291563 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.259716039 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.25919005 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.26070115 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.259858986 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.260330352 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.259945467 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.259577717 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.260819559 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.261760553 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.259537031 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.260474904 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.26067884 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.260380926 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.260109274 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260479694 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.259524887 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260309705 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260399873 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.26193832 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260276638 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.259847701 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260715411 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260841318 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.260196574 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261331288 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.259627985 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26113303 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.26108818 seconds)
  done (took 38.954928442 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.279914821 seconds)
    (2/2) benchmarking "in"...
    done (took 1.279521505 seconds)
  done (took 3.703865506 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.261193796 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261470632 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.259210907 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.260939483 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.262042817 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.260110597 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.262127169 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261096442 seconds)
  done (took 11.233031355 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.253324471 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.262991764 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.262416105 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.261162691 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.262955928 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.252700757 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262229013 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.26608504 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.254513688 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253996481 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.256182157 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.256248443 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.257980411 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256662724 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.255828835 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258875342 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.265712342 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.263821816 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.265257781 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.264258243 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264293533 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2567551 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261573426 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.266111465 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.254573339 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.264673894 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.262945879 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.267532464 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256910966 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.261480965 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.258406736 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.264721655 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.264894024 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.263851751 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.264587439 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.265644457 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263769267 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263290677 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.266098385 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269393746 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268299642 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.265344153 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.259462797 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.26147692 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262607971 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.269257958 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.263038739 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.265688972 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.256210294 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.259608355 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.267550849 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258138025 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.2675386 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263020528 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.263385077 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268649607 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.273151898 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.257285627 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.260949031 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.267260354 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.273784551 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.267304548 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264299178 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.270419369 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264850607 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264815112 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269073642 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.273610192 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.267134931 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.265634143 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.265560163 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277325992 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.271692797 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.271582293 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268575073 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.266700185 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259745853 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270813277 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266597476 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.269805878 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.273090888 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265817815 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263281918 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264946055 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.262213664 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.271616393 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.267988696 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.268061264 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.259507537 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268628464 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.275652033 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.267200587 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.258783448 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.262772247 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.264553338 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.271856452 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.259730739 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263354039 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.271351864 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.268876046 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26835795 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262317253 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.26572124 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27385068 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267556192 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.269949874 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.276443356 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261718437 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.273178608 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.274557967 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268469561 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.26075975 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.266380253 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.272391589 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261866521 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.267759363 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.275953997 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.264897383 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.27495879 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.270480133 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266187112 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272940312 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.274997906 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.269173303 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.261925518 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.273736278 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268976946 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.265299704 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.275531113 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.269741251 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.268892931 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.266275025 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.275192682 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.265166146 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275457486 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264583845 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.275682408 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.270022162 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.27105092 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.267579972 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.270587974 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.266317365 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.270593642 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.272995327 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.276117248 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.266156892 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.277236255 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.269808756 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.268476376 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.270782978 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.277493133 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27247826 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.266191397 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.275185029 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.263002059 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274761219 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.263770245 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.274800936 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272217365 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.271666332 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270984158 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.26273925 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266642052 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.275557525 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270395602 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.271290352 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.275644542 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.273087669 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.273797192 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.265302525 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.274603281 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.265361798 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.268052465 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274369463 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.273688333 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.27149906 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.270119519 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27898005 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273418327 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273164054 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.265887738 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.270087742 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.278278702 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.275342927 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.281749875 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274091753 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.274190473 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.266972463 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.269595205 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276887384 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.266061098 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.277111934 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278501916 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280391544 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.268196415 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.275904752 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.2666676 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.275660916 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.273490148 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.280383959 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.275077554 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27536768 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266779228 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27866761 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.269396311 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.278365539 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.266204018 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.276852157 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.276363817 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.274516295 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275190309 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.268487993 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272645747 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.278578086 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274402693 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275306747 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.26803803 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.279423214 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.26536888 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.268470772 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.278575019 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.274382213 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.276558358 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.283364448 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272845783 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279528001 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.278311221 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.272264167 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.279708127 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273079834 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.275454616 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279217023 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.278623166 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.272599678 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281701201 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.277956701 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.271444324 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.275647424 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.285208135 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.275794555 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.270872684 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.279975952 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.276975528 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.276975686 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.278284728 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270726396 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282278747 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.279175081 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.287728241 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.270935911 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.280587219 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.272713609 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.282321896 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.274837303 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.278507249 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.27646677 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280937679 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285723869 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.278417807 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2716966 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.28340206 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.277594562 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.277324616 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272522443 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.281150955 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.281002914 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.279298243 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.277331547 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.275034072 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.279518545 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.272901583 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.279544316 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.271359744 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287372533 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295496794 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280438614 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.283417376 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.283341478 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.281671161 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.28190006 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273243783 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273620477 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275441465 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.273745996 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.274271482 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.28209846 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27283508 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.283761141 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276748515 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.280188916 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.281820988 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.27942349 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.271176636 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.282753556 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.279080746 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.280417925 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.272009057 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.281665665 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.275192378 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28181634 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.28117431 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.275884242 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286344603 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285557003 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.278505225 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.275929296 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.276836346 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274030039 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.276687647 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.286327826 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.273945727 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.28507365 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.273639174 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.278226093 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.277250585 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284905899 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.290705191 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.275290711 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.285553753 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.280107493 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.272233907 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274123684 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.284435006 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285641512 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.293336568 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.274475241 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.284794585 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28255395 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.281620618 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.283084932 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.282753887 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282840162 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.283231247 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288004129 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286590509 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.279023132 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284943108 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.292799595 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.282951677 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.283138851 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275815846 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283805255 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.293697624 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.279324531 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.283330461 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.278966786 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.285568754 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.284195345 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.285478207 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.284624002 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.284510876 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288485933 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.287960154 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.287135247 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.285334572 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.287097885 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296323984 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287442224 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298498789 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.278836739 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.290101864 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.284080287 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.277893544 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.280210675 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.280860395 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.287746939 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.276416266 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.286317655 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.286938155 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.281090102 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.28588525 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.292176159 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.276448183 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28453917 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292693772 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.275466327 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287040147 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.284508106 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.276689584 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.287745659 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.285880435 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.275932683 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.279733131 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28131352 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288927427 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.278328052 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.290173169 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279630607 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28961755 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.285771099 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.285332414 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.285891691 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.285697068 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.278685751 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.287708117 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285999686 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.295734595 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.280700409 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286789819 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.280769189 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.292589588 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.298234112 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.281887778 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292554018 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.287799729 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.279683384 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.284532803 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.29308628 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281484447 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292575592 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.280410758 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282381582 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.283153581 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.289574078 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.291957861 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.291142723 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.281393835 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.284366052 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290108697 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.288020403 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28851121 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.284489248 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.295907402 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.281527028 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.282591487 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.291536479 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.283150605 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.293320004 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282420865 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.284637454 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286257875 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.293440863 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.289418773 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289599804 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.27998857 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282942993 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.296097667 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293509778 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.285895002 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.285370777 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.289984183 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.282309573 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285841365 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.286372657 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.284514228 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.285281128 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.294461578 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.284275256 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.284690334 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.284199316 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292484219 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.293104019 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292747152 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.283135767 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.297917603 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.298154994 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.298091286 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.283501746 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286739669 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.287051916 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.291584742 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.291822379 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283068962 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298486239 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.297006821 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294964448 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288902693 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.291854197 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.284815211 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.293988839 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291622587 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.2865303 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.297454983 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.287130552 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.297515921 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291188242 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.290710093 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.283192515 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.285507908 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.287647577 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.287281411 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.293546139 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29177111 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.295717549 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.290333827 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297110116 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292408839 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.293159966 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.291661024 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.284192604 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.29487031 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.285540543 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.292996468 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.294253762 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.286877745 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.294762275 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294538951 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286892466 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.289402091 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.295331561 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.294120435 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.286665142 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.290221737 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.29819181 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.303231776 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.294804985 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287848983 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.290906228 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.297511762 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295241688 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.293742177 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.287401035 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301112053 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.306733514 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287936791 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.291004116 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.297604249 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.303919834 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.294224501 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.293540913 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.289930059 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.291849314 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.298244196 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.295563587 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297433518 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301296562 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.290373986 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.296815267 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.288663775 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.291462476 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.2971547 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304768169 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.294986505 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.290810999 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.301835919 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307501342 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.293742485 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30739199 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.303006953 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.295603556 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.300581265 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287195844 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.297480221 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.291133305 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.301818103 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.296007383 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.296358657 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.297951697 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.287095434 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.295918314 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.30279391 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.305917972 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.296478543 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.288405662 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.291433167 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.297877571 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.296857116 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.298307053 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.297117155 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.298577593 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.297035401 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.290821864 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.307161844 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.31140114 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.30248326 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.299089288 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.296592027 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.298618109 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.299516593 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.293238046 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.301882221 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.29759111 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.29789522 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.295482088 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307145881 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.299316723 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.291604344 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.292981239 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294561432 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.301778838 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.3053969 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.315833393 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.301242083 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.301227077 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302187432 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.299793116 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292601372 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.30470756 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.299151833 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.293046993 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.29501305 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303283199 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.300120947 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.299541226 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.293173026 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.302028246 seconds)
  done (took 764.223076224 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298883108 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300153461 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299533822 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298832027 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301203721 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30112398 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300316725 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.299951138 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.299998232 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.299677552 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.300953314 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300867234 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300868271 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.30038259 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299270526 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299923549 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301015577 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300241645 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.299218347 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301462863 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.300461657 seconds)
  done (took 28.482112783 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.300340848 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.300722429 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300265095 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.302271935 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30096109 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.300764992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.302074378 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301582508 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.302159749 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300374852 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.302088632 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302352645 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.300363919 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.301772797 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30104028 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302764655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.301278744 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301947766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.302781084 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302168515 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302192491 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.301707424 seconds)
  done (took 29.81245148 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.302220477 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.303974173 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.29531897 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.30530357 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.301931123 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.302691424 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.304696887 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.303040464 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.303099212 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.296538606 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.2976335 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.296652113 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.298476191 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.307578657 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.299899343 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.308228407 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.303946335 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.305409824 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.303899061 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.30240065 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.306962547 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.314594245 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.304131275 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.297241707 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.306958486 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.302682156 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.303136168 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.304022698 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.296600564 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.306742305 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.305185102 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298565817 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.308218062 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.306711473 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.299274643 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.306262724 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.304344903 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.303469138 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.305048966 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.303293488 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.312681964 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.306192726 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.310014089 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.317786716 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.30458232 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.299076946 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.309924037 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.305868391 seconds)
  done (took 63.773928099 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.305554145 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.305661327 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.306126568 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.305793774 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.305546443 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.305432396 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.305359944 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.305743551 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.305958489 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.305873861 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.306109905 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.305927473 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.307106891 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.307519034 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.30749471 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.305874415 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.306362824 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.306615968 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.306312519 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.306624655 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.306885295 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.307310483 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.307796836 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.306668652 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.306726961 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.308057924 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.307514662 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.306705402 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.30706322 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.30756894 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.30796274 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.307344771 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.30809872 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.307812527 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.30916409 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.307877625 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.308412226 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.308407753 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.306727787 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.308661429 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.309708073 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.308545489 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.309921844 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.310560134 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.309352036 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.308655766 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.309551124 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.309297687 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.309329695 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.30838329 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.310880805 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.308901378 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.310078637 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.3089003 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.310143229 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.310333676 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.309676567 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.309859933 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.31029044 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.309840806 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.310018684 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.30972722 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.309811672 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.310143261 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.309793471 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.310569208 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.31047475 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.311081759 seconds)
  done (took 90.134174249 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312088661 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.311248662 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311083861 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311378072 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310321939 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.310973526 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.310712659 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.312644089 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.311576583 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.311331115 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312114513 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.311637934 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.31010084 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.312010561 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.312466762 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31183886 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.313234114 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.312650923 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.311298876 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311374026 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.312814753 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.312743318 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.313470216 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.31188976 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.313967946 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.311612721 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312447523 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.312554664 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312226415 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.313055151 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.312618384 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.313324393 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.312832533 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.312325121 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.314944558 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.312158457 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312441958 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314427526 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.312857756 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.312776338 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.314772426 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.312207989 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313097759 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.314935935 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.313023556 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.314153931 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.315244467 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.313635272 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.314180482 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.313138658 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.31330214 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314759777 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314416682 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.315136051 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.316783637 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.315246971 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314395946 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.314203239 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314401641 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.313115519 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314102479 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.31417262 seconds)
  done (took 82.5881209 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315375214 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.314769041 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.314023565 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.314342909 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.312041467 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313260804 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.313436146 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.313371021 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.316799833 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.313432881 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313273853 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314060709 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314690501 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314199031 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.314500338 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315449539 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311256356 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.313459778 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314092017 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.311977968 seconds)
  done (took 27.466335857 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.312380887 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.313371506 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.314571063 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312490329 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.312257505 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.312651701 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.313483855 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314400426 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313825182 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313910578 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.312360634 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.311311336 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311583134 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310651142 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311963496 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312073773 seconds)
  done (took 22.191280522 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.311320214 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.312316503 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.311083313 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.311996114 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.311496731 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.310873197 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.313873433 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.312540228 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.31147455 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.31164256 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.310725487 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.312405805 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.312491424 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.312862517 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.311110205 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.313565183 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.312874201 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.312832905 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.312469147 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.312552135 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.312737895 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.311862785 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.312960601 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.311812433 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.310744251 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.312383691 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.311360572 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.311464153 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.310730567 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.311331537 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.311051177 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.313188139 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.312405182 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.311071891 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.313118173 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.312594523 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.310836163 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.312056427 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.313219184 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.312654973 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.312024282 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.312067183 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.311873499 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.312713704 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.311437097 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.311823961 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.310819668 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.310457564 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311586209 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.311909964 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310861587 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.312732337 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.311785097 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.311735662 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.312977802 seconds)
  done (took 73.345603383 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312213955 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313315363 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.312442446 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313141001 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312672286 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.312579726 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.312860474 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314639748 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312902233 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.313507996 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313459097 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.31566551 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313144782 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31312646 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.313239855 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312616163 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.31311834 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.314000719 seconds)
  done (took 24.824679223 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.312884349 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.314991429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.313274174 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.314044326 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.314341554 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314942515 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313151079 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.314739992 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314369529 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315084232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313967138 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.3162157 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316007713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.314571719 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315211499 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313993991 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.313827755 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31416699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.314441286 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31628569 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315689496 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315034863 seconds)
  done (took 30.108633345 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.305864263 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.306185067 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.305718682 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.319641633 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.313563813 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.305468338 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.306501087 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.305911003 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.322757896 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.328766692 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.324297 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.313534724 seconds)
  done (took 16.947096283 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316930793 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315679991 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315667734 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316043727 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316897221 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315975185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316511055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317014131 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316085371 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31654096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316207943 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316719243 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317397951 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316364943 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318731213 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317192792 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318362284 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316485784 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315570601 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318060292 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3180865 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316687897 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318364965 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317360671 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317705153 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317434429 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319407565 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319537496 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317437832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317295685 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317967162 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317478135 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317935125 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317009248 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317647525 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317901205 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318085885 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317857423 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318190907 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317403789 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318731363 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318032871 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317469365 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318927087 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317908017 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316492171 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317561878 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319104895 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318274131 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319394438 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319105476 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317640923 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318837318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31785305 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319226189 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319859934 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318363604 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319821919 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320254247 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320503143 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318653025 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320080264 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320185222 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31927925 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320135958 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320866779 seconds)
  done (took 88.176424062 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319532325 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.321110866 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319864612 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321053604 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318921022 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321388875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320544145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32045971 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319499714 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320181195 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321809403 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321246479 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319989902 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322432664 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319749016 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321048002 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321170619 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321161498 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321415909 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321228078 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322495349 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319397388 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320540419 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31970898 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321074312 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321170666 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320593401 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322593015 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321006223 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321213694 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320869405 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321182455 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320960178 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321089682 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321478066 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322458933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323222795 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320732269 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322408395 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321561433 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322408172 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322278101 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323237257 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322377929 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322737279 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321782418 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323871067 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323320535 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323143843 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324156975 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323507712 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324227477 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323958213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322589742 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323028869 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32488855 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323070182 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323061989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324106722 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323480746 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322914854 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323737334 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322343309 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32230668 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323573953 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323301329 seconds)
  done (took 88.437574494 seconds)
done (took 1790.168544393 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.476734915 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.434109423 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312585783 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.319328378 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.313283532 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.310396384 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.326421164 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.313719012 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.313693085 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.312076092 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.311778923 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.503851337 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.348203574 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.312693209 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312990558 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41071221 seconds)
  done (took 26.827693626 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.34157838 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.320836138 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.434694776 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.319276345 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.340955949 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.502099108 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.376254588 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319248812 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.492341319 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.337136921 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.322775967 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.342538263 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.318140209 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.308911347 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.354785788 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.508175775 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.575585744 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.308880203 seconds)
  done (took 29.020610461 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.767550228 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.321499029 seconds)
  done (took 5.284537209 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.337391399 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.318384827 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.318327676 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.317007889 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.309394737 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.324876125 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.31642993 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.33085118 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.310856928 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.450709011 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.319053945 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.330704886 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.31745438 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.316649217 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.326093948 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.361826762 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.486958521 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.326915976 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.324729878 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.32405795 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.316582539 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.411494215 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.361592259 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.327346898 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.445050957 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.318811434 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.325673729 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.325450659 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.433637571 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.328497909 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.316633158 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.322111044 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.319665754 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.311349406 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.877223653 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.311989791 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.343036223 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.324902798 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.324785585 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.469487707 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.319170971 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.325913883 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.311000627 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.862232669 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.424954444 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.43682328 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.31103188 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.339156969 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.319406412 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.383031441 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.318771749 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.319100881 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.380373698 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.121859805 seconds)
  done (took 84.655634337 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.315513849 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.311840494 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495050541 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.331902824 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311966361 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.310883631 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.311881497 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.593784633 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.322161734 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.312356175 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.627534071 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.926879434 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31795972 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.379119746 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.356504773 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.366579446 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311714543 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.3103894 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.311376427 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.313553139 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875938486 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313465489 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.316444674 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.3862413 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.353604017 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847218914 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.31291169 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.327891889 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.311043991 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.312436868 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901718061 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318233692 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.364660194 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.312122313 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.600900988 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.699754483 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.659396943 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.315841265 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337612288 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.314839774 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.337890338 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.838276372 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679663193 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.314591797 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.312755112 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.836719598 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.31555149 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.322412375 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.319316029 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.582551386 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.313814995 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315803213 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.334596984 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318665398 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.31326504 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.36374014 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.361040623 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.850164553 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314321392 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.314403459 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.357492199 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.314339604 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319997799 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319548129 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.317306647 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.688241238 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.558878972 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.323594692 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683343249 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.893768606 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.31938867 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98163443 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.318548095 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.321847882 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.348178719 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.314855128 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.315084268 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.847082883 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.346717264 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.315623779 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.663017772 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.318202265 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.621477147 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.332730103 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.316380774 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894525828 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.324526617 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.358446545 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.316626593 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.316177372 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.331663369 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.317692203 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.607941804 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.372532676 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.316061217 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.315635231 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.362126564 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317814842 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.32029545 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.325135905 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.964584042 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.324154745 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.315561703 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333425025 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314558407 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.320632754 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.317097228 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.316461387 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.596552477 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.315861322 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.338643169 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315682726 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.316278665 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.316932356 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.390952968 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.326670668 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.624951187 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.32467347 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315529987 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.31568658 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319794795 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.333348315 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318541777 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.334661858 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.317402437 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.61331997 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.333478236 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.337437832 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315594458 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315275827 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318452472 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334022139 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.371037248 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.316330278 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087813625 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.358767683 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.365198972 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.318812122 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.325669658 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316198263 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.333999906 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316253865 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617678214 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.602223774 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.542244672 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.318152894 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.317689777 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.113030967 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.358203598 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498551287 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.331792017 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.317188268 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.595168406 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.552468441 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.320744385 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.317493807 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.32058115 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595780639 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.328380709 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.636578423 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.914650727 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322897642 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.321182483 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.08805774 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.133831086 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.323307233 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.322014416 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.616434635 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.334675975 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316684997 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.316924373 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.318237173 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.31792085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.322266843 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.320899642 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.317050367 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.317234288 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.658309155 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.513381033 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.333268971 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.329609754 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.842887921 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340380079 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318160732 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.328312884 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.31965003 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.317781134 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.371354112 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.31817132 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.353856667 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.321217482 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.329587565 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.866503926 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.322616221 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.319782575 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.511495948 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036723538 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.318960163 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.31728555 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.31698284 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.373179505 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871054561 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.347861419 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.615385764 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.328038167 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.356938197 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318391135 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329489963 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.869746596 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31880707 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.318467427 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.046818673 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.317499041 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.74612334 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.318949103 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.324328828 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958024746 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.31774148 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.323360195 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.325487127 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317169891 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.632449648 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.318544743 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.326883784 seconds)
  done (took 495.082671784 seconds)
done (took 642.065759462 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.317103846 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322273558 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.324363495 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.323741821 seconds)
  done (took 10.48851047 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.33539462 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.323825734 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.333420437 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.323759456 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.335170184 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.323832021 seconds)
  done (took 9.174946223 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.317113009 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.323641437 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.321615858 seconds)
  done (took 8.163248239 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.518639941 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.334344593 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.660394049 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.333171971 seconds)
  done (took 9.047278955 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333831619 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.331825439 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.332612672 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.334747538 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.334556953 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.335523167 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.337290979 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.334244356 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.334473292 seconds)
  done (took 13.209521693 seconds)
done (took 51.283639768 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.297081203 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.455874519 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.555996014 seconds)
    (4/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.377803704 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.34739312 seconds)
    (6/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.420455682 seconds)
    (7/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.622872522 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.39098463 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.357069318 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.432125353 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.475069562 seconds)
    (12/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.562606519 seconds)
    (13/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.297146102 seconds)
    (14/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.388429957 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.29759377 seconds)
    (16/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.477655936 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.433060337 seconds)
    (18/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.385560829 seconds)
    (19/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.556114184 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.322518236 seconds)
    (21/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.436790999 seconds)
    (22/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.353477784 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.400106957 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.734060647 seconds)
    (25/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.558213538 seconds)
    (26/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.392171548 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.383887021 seconds)
    (28/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.477217116 seconds)
    (29/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.298939189 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.619369303 seconds)
    (31/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.511110989 seconds)
    (32/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.668126861 seconds)
    (33/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.566551 seconds)
    (34/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.29942523 seconds)
    (35/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.447138752 seconds)
    (36/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.298636412 seconds)
    (37/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.426869005 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.407124031 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.325555558 seconds)
    (40/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.358559772 seconds)
    (41/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.344913154 seconds)
    (42/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.62292705 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.397761627 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.297682892 seconds)
    (45/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.407281386 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.471929796 seconds)
    (47/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.43131465 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.566030831 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.553854318 seconds)
    (50/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.532424745 seconds)
    (51/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.353588357 seconds)
    (52/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.39138255 seconds)
    (53/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.472668689 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.320317146 seconds)
    (55/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.503063979 seconds)
    (56/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.381083546 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.301821861 seconds)
    (58/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.526120623 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.50346609 seconds)
    (60/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.413638084 seconds)
    (61/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.300771184 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.590334891 seconds)
    (63/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.486188793 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.300129997 seconds)
    (65/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.330422195 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.416728534 seconds)
    (67/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.351665374 seconds)
    (68/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.325816723 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.450969082 seconds)
    (70/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.467634141 seconds)
    (71/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.300224264 seconds)
    (72/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.359036995 seconds)
    (73/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.475858242 seconds)
    (74/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.305320977 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.424834312 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.420986403 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.435978157 seconds)
    (78/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.30109251 seconds)
    (79/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.501861932 seconds)
    (80/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.302415032 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.477665176 seconds)
    (82/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.360359153 seconds)
    (83/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.327038441 seconds)
    (84/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.532106135 seconds)
    (85/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.399758757 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.324482245 seconds)
    (87/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.338646504 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.408115242 seconds)
    (89/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.352507995 seconds)
    (90/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.300977028 seconds)
    (91/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.354537348 seconds)
    (92/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.575219259 seconds)
    (93/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.41222174 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.340878743 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.437321231 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.408893048 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.468790911 seconds)
    (98/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.595874794 seconds)
    (99/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.561174953 seconds)
    (100/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.316166208 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.44565856 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.356391875 seconds)
    (103/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.326117684 seconds)
    (104/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.42807049 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.478982376 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.49881795 seconds)
    (107/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.543238014 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.400361268 seconds)
    (109/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.507561202 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.484783067 seconds)
    (111/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.403181449 seconds)
    (112/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.355703382 seconds)
    (113/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.302268685 seconds)
    (114/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.431732028 seconds)
    (115/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.302429881 seconds)
    (116/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.302550732 seconds)
    (117/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.322208914 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.541382684 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.48450361 seconds)
    (120/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.472535967 seconds)
    (121/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.428878947 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.363956587 seconds)
    (123/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.543706674 seconds)
    (124/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.450356656 seconds)
    (125/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.302193049 seconds)
    (126/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.55881546 seconds)
    (127/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.368996751 seconds)
    (128/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.621225526 seconds)
    (129/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.368211086 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.452361295 seconds)
    (131/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.304605056 seconds)
    (132/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.567235248 seconds)
    (133/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.443477727 seconds)
    (134/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.356280768 seconds)
    (135/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.326134401 seconds)
    (136/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.56596537 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.452867035 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.460021608 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.416760077 seconds)
    (140/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.617906552 seconds)
    (141/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.304727693 seconds)
    (142/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.736283434 seconds)
    (143/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.447576695 seconds)
    (144/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.358336018 seconds)
    (145/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.305791842 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.392097545 seconds)
    (147/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.393666335 seconds)
    (148/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.664838391 seconds)
    (149/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.390951154 seconds)
    (150/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.305129569 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.430228964 seconds)
    (152/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.353385235 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.477304109 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.42917567 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.359049889 seconds)
    (156/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.305315981 seconds)
    (157/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.46615159 seconds)
    (158/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.406394528 seconds)
    (159/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.48841841 seconds)
    (160/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.304883476 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.417902139 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.42308138 seconds)
    (163/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.362226294 seconds)
    (164/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.532300999 seconds)
    (165/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.310108086 seconds)
    (166/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.486437889 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367296486 seconds)
    (168/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.404666263 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.439396589 seconds)
    (170/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.328618325 seconds)
    (171/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.447949721 seconds)
    (172/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.454247202 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.326123394 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.418661103 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.442022546 seconds)
    (176/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.311932489 seconds)
    (177/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.449119875 seconds)
    (178/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.447966677 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.31027853 seconds)
    (180/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.312985168 seconds)
    (181/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.551826844 seconds)
    (182/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.491596738 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.438654242 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.498967542 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.530807405 seconds)
    (186/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.315727735 seconds)
    (187/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.419246025 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.488384168 seconds)
    (189/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.403576317 seconds)
    (190/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.567597919 seconds)
    (191/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.503651145 seconds)
    (192/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.313112071 seconds)
  done (took 322.759320555 seconds)
done (took 323.960345149 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367149168 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.422174437 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.336308588 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.337687124 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.337075369 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.330833677 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.365164011 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.338426538 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.351781845 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.352286416 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.331029589 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.351231315 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.353452422 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.348461298 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.372729113 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.337896027 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.337369956 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.349690642 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.352895011 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.35530145 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340223923 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340332899 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365446498 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.337750744 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347690977 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34705294 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.34494966 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.333424217 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.352567031 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353063464 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.338135469 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.351588724 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.355514813 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.35011175 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342000172 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.350622334 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341149355 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.424373937 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360701118 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.352317666 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346569091 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.35608891 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.345918599 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.343906671 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.351139558 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.367246549 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348252508 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.35670357 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.336785269 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.327255997 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36656679 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.351785313 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.347946405 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.321133657 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.347071777 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.360420451 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.351787461 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360789706 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.348160559 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341789833 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.374009601 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362194273 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.353025595 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348489165 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.347322652 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.356073874 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.350787461 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358070637 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.347765332 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342341593 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344384806 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.349713322 seconds)
done (took 106.489344472 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.465094644 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.336445043 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.498283164 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.347374664 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.506108611 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.469965154 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.347931029 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.350114403 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.347466783 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.144333452 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.347442394 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.346504565 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.337820565 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.348670409 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.46214169 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350011386 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.347950923 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.040116132 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.349419255 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.47612896 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.34158021 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.348351874 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.349375394 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.147063895 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.337317896 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.3333362 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.477826114 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.348756313 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.046437136 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.334298693 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.338392606 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.047532258 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.475273755 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.368666632 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.35764807 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.356793032 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.507465705 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.354413153 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.465148898 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.463876364 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.496943554 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386759605 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.334513537 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.33889154 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.350514028 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.34929808 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.348064096 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.376561377 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.335813501 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.348740172 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.044242165 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358902888 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.351127216 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.348824148 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.348461743 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.379081886 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.349219293 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.351310328 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.476978139 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.351213126 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.46634137 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.14910227 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.146461985 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.350375928 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.338436001 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351484804 seconds)
  done (took 109.06034696 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.411439291 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.414880272 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.448436168 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.342401356 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.392759903 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.451004766 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.340523704 seconds)
  done (took 11.016297422 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.34657836 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351061603 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.391038792 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.389506422 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.351494434 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.51356481 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350119476 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.352173993 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.351660711 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.391525485 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.351497118 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351404693 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.358535475 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.341662055 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.388225339 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.35259263 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.459695616 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.341882473 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.350786033 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.493045544 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350943256 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359278775 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.393136475 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.35507552 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.352638473 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.349861562 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.125721396 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35314316 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352401048 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.353892013 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352685637 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.40763014 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352963708 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.343867168 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351372541 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.456498925 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352152096 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350621462 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.352273956 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.344211003 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.353804914 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.351522295 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.352844198 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.351822833 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.351847039 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.368786621 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.352750171 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35282588 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.353050711 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353258515 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.393231573 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.355183203 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.353554029 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.354387694 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.398292883 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361893172 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.353693925 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.353424123 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351973325 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35425722 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.496185856 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.390746496 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.353636492 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391121295 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354220409 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.35394759 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.354257234 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354855738 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.433244125 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.354791308 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.393319556 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.354162483 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.526718849 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.370652065 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353943893 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.347434105 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.347450504 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353111546 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.341469478 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.350196251 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.353578801 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.347039938 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.351903725 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352617846 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353697366 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.503460066 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45258256 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.354052283 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.361905149 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353533793 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.355899775 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.3968967 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.355240837 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.354634134 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396839237 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.465146085 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.399000732 seconds)
  done (took 139.063076187 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360244404 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.359628824 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.350796901 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.374540099 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.348384314 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.347827539 seconds)
  done (took 9.36176245 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348107688 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.359612261 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356876473 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.356475449 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.356033988 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357933857 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.357099336 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350867578 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.359653739 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357247896 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358371724 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.359044977 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.360353639 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.358204726 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.357219799 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358028087 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.358605194 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357711726 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.359641338 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358999391 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.347092739 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.35982773 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359544972 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.350727401 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.36250511 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.359831463 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375484776 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.359751649 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.359208327 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.35729549 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.362496898 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360541608 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.351340963 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.352394462 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.361782414 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.352198214 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361078069 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.361999168 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357705092 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.361594505 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.360715182 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359381626 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.358420095 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.361330078 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.351532127 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.354308368 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.363898629 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376507887 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361174655 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.361540022 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.36105066 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.360324777 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.362054807 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361962161 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.353829774 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354973172 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.364353943 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.359837822 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.361365766 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.353356277 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.36271628 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.360966333 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354008993 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364260731 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.360998848 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364130107 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.353617682 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.36361573 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3628267 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.361079143 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.362939269 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.361146193 seconds)
  done (took 100.077979448 seconds)
done (took 369.791307678 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.75503855 seconds)
  done (took 3.980185218 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.606762881 seconds)
  done (took 3.832908137 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.408036664 seconds)
  done (took 21.89245632 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.401903432 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.407075273 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.347200612 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.358788453 seconds)
  done (took 10.739197816 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.605017402 seconds)
  done (took 3.830488924 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.358030004 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.359158661 seconds)
  done (took 5.945176367 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.514482103 seconds)
  done (took 3.739576205 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.669341393 seconds)
  done (took 3.894514016 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.356774829 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.365291013 seconds)
  done (took 5.955705333 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.327337314 seconds)
  done (took 3.553195955 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.269403157 seconds)
  done (took 20.496438274 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.37195595 seconds)
  done (took 3.600649718 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.421847762 seconds)
  done (took 3.647776851 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.679855491 seconds)
  done (took 5.906131253 seconds)
done (took 102.238371034 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.346302688 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.354665761 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.351901176 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.349103525 seconds)
  done (took 10.627744364 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.428532635 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.427408387 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.434935511 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.422146229 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.421006773 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.429625493 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.389147823 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391368073 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.420140364 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.41473996 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.431734664 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.421579919 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.431023981 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.391273193 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.416744676 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.43350303 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.419928577 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.435846313 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.391010088 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.422036221 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.36812486 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423674985 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.416619123 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.36277058 seconds)
  done (took 35.171672663 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.849295519 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.422725767 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.507304435 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.406463859 seconds)
  done (took 7.411116255 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.456227657 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.456202823 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.474973414 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.511799201 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.557881919 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.47481126 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.371569759 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.364832646 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.352886282 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.449279406 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.535025642 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.448711812 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.668089911 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.336528724 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.656090139 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.337100397 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.336028132 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.441465924 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.491194009 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.518083909 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.332864555 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.435760765 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.440070437 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.437618492 seconds)
  done (took 36.103843429 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.340770685 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.351190417 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.32861737 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.342734358 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.328362483 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.326929669 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.33051593 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.33294935 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.327937259 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.328101405 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.325368826 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.338560004 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.324303757 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.324301969 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.331096421 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.327099251 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.326306412 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.331550979 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.329503248 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.323162418 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.323150039 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.327717354 seconds)
  done (took 30.473188068 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.30603287 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.305472843 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.656607011 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.560466298 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.304259627 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.311201108 seconds)
  done (took 13.636578112 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.374269709 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.508035014 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.310433605 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.63404167 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.726504469 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.320072862 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.315747046 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.543218899 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.818347207 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.811907111 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.372492421 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.383178033 seconds)
  done (took 19.30970135 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.304675944 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.308412184 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.32323079 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.326827205 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.360808489 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.311748954 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.31285143 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.300598518 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.361949713 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.361372064 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.309367682 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.357022319 seconds)
  done (took 21.134425929 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386134556 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306280616 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311730731 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37109408 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306275545 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308426392 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3693528 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97866264 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.316039773 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58468819 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309192475 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395926557 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.559642987 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322979557 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320526639 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.262383574 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541600735 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767713832 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317809561 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312227107 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348264317 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311176579 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319284934 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.50844775 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319635112 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309759702 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.572635497 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310653832 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573320284 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549855727 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545787156 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310001312 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58414756 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926021091 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415130933 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495507613 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301062669 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305981991 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.275928381 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.308554603 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308680841 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307017608 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539400856 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309382193 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304581392 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316292226 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988316996 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.312835023 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.304311846 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305244619 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541899464 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388802668 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.310024884 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305493139 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326479485 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304979429 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.310497532 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425571333 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942715638 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305825886 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324426509 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.310997015 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3025222 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322283834 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914382932 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.313714786 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.310342075 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31169307 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306999852 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307050784 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.329775317 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307262363 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.325839762 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305862622 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040069522 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312798078 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309286606 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808430211 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313759332 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.305735251 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531781489 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307498031 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306256871 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.306151374 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307309307 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992729843 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315406433 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.291183028 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34682566 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.980813748 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.50043988 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327585812 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337884789 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.527059554 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.277577538 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309451631 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.312665658 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311303542 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328670733 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.98449057 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30778997 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.313630987 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555397721 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.518345671 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312783614 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.252345104 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752771035 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309113301 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.337920061 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318724704 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.505518371 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.889886662 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552532586 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312023648 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347198773 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311136971 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053060516 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322628454 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.320342594 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.324102467 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575934971 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.087142422 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310801218 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383599024 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312197406 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309667725 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310332087 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312543472 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310881382 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.479129109 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315056335 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551358066 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.313139017 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31058026 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.316722089 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326060282 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.314070799 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52543181 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318951091 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584525412 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306974658 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308290144 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30242184 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.519981393 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.307781342 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.310250988 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645351782 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300309131 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318194681 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540940499 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338323316 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41185265 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334392348 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.306566759 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.551545566 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.30550217 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.304879158 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299587077 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.301471616 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304855134 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.306920714 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292897551 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901233146 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278708249 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305122649 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299266119 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.315210396 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373104994 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307723198 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.490318369 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.31831021 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297033053 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.305604096 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.306118332 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525899859 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536873815 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.311823764 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475180831 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.741965177 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.880582183 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319405593 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.301134601 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.299959108 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.301087873 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303063487 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301447987 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.299907216 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492024073 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545119298 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324093651 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886037761 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309850824 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31334003 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.309116103 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535336401 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.317405021 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303254582 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.300643421 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303995357 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308004546 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.543386264 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524606755 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.316207781 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302750707 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.820048718 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309171763 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.303531767 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302385245 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329402024 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317540993 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111796148 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642605963 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297500894 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538618332 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31840167 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.321159995 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.302228229 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309132021 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315272057 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.315108875 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311635101 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.496282272 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309976644 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30651566 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941630393 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035522053 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833149785 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309103582 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.307984099 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310231116 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.984844768 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304700793 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305464481 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539245006 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988638207 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304500212 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.750041334 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.307924283 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.024404683 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53893911 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53594072 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307434166 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.31842856 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542592434 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.522645164 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329937574 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315955096 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310747126 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.275862943 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825908311 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307681609 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489341224 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98663934 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305259826 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308720939 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.323360681 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.321274353 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673206312 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305671579 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307232775 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31279612 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311167069 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118731388 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311340237 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306674117 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918840754 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317812259 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.759227779 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307609056 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.498547946 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.545803792 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.522808338 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.314185694 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.308670211 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.555280321 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540437485 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313355323 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31173265 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842011372 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.169376536 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.314765197 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309668211 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047372133 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314241654 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571397829 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.315645532 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.325724685 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318061155 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307994208 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308853502 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.307328394 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314824561 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282210825 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764514454 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.308473636 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338944405 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314179781 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315314914 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.553789831 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.323876705 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891863871 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540041703 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301627119 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347094133 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.314840976 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309766318 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.300914302 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309139956 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308601351 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386190665 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.529838528 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315137046 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.284690327 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380698357 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.519198037 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309497251 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316631927 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517676977 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.315749295 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.314585419 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046131104 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345922391 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.310259458 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316273515 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.302127526 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36731519 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385321979 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505191657 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.550772554 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.552340426 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687047706 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311855113 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318090959 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.327731094 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392473816 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321887557 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.318129099 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.324329652 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893398998 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047661944 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909200585 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554283214 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319664389 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321437164 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312310168 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552608639 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312147018 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587470247 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311535152 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.30578262 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339575427 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311636646 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320626007 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526968575 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589252921 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312192698 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320258697 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318739769 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.313207356 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552063677 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.529954996 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771714741 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830304365 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31733064 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316227756 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001693016 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589548341 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314743017 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315333681 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312367923 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.326123153 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.320459588 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.338119854 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312674666 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542888103 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547444766 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942645566 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.546645582 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.503106274 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.314675152 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320665394 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.566374049 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147312418 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.506679138 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912168328 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001406587 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571290022 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389938146 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508112237 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.321236952 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551961362 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.322771454 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321440271 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317237334 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315974879 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.317271473 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.549792434 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913252505 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574332486 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.320127477 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.323528019 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349370637 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.508604734 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.54214079 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009062244 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539955677 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556554778 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329112169 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.317439021 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911167939 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559832935 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323165324 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.322390967 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521519553 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322830373 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352590392 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.186568427 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.316516725 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826246492 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.529649475 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337581296 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327814294 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.00597149 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91513657 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.325654319 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782611068 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323310728 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332475021 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599343416 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.325333192 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323420153 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603702499 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.323985222 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322722351 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517364651 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.909441896 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039741534 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.3415203 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32585422 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.321670255 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320240613 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313947047 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319035989 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320217983 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.692225577 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323214013 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320388445 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334085032 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.328533533 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327750425 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.324299477 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31952308 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.327031455 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.307747974 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.292205702 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321119966 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441485284 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845279576 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322241672 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.934217271 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.655921765 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.565714051 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326565335 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.295038041 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.325596744 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322230416 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32177915 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32191928 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311660395 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83252816 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.328840587 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.566857273 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.328932173 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.530296525 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532738937 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320928321 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518545004 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327535427 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346589856 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.290735081 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321410218 seconds)
  done (took 947.900358652 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.342240795 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.318625101 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.337354411 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.360596666 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.347936982 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.429464434 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.390824331 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.362245244 seconds)
  done (took 20.089136433 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.324599617 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.320010812 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.322902976 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.325401903 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.326759272 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.837502459 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.322707617 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.322363833 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.33446391 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.324452943 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.319891018 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.96007561 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.327204814 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.319129773 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.331828398 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.322461473 seconds)
  done (took 31.54204661 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.935457556 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.630347445 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.691343549 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.315941907 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.31794392 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.314916761 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.417258188 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.322724817 seconds)
  done (took 25.147281103 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.329136021 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.326968034 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.330021885 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.326905576 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.328996986 seconds)
  done (took 7.843402269 seconds)
done (took 1207.617225417 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.32945243 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.330139031 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.329238334 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.330878827 seconds)
  done (took 6.52085652 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.294859487 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.29502532 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.295937296 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.313157294 seconds)
  done (took 9.401283967 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.966718975 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.812944825 seconds)
  done (took 4.981932805 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.861627914 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.859522062 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.855035675 seconds)
  done (took 6.779938804 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.608713278 seconds)
  done (took 2.812599486 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.303574335 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.320371715 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.077694527 seconds)
  done (took 7.905749721 seconds)
done (took 39.60456018 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.326144441 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.079322826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.471151632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.328046745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.476162514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.472478226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.565373088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.327787372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.320553916 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.317300015 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.329298295 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.476198129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.553523415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.07996066 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.553269912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.077630936 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.477553512 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.316591257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.329482947 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.327139381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.562813753 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.324081081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.321279523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.32577226 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.478716008 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.461281798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.325616315 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.076793702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.328704464 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.325662161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.463239029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.324500822 seconds)
  done (took 80.727529536 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.331536645 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.317816912 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.320860169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.324283076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.322629378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.320268442 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.317183344 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.32036895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.317994067 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.319214721 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.329844036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.322526215 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.320870116 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.328041918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.321316927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.329359542 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.319686412 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.333451728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.342010692 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.320237454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.322874784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.319041622 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.320992499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.31911462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.32991344 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.331200404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.320806967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.320429259 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.319431777 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.343505333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.338144034 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.323420645 seconds)
  done (took 75.59296092 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.320299451 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.330693253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.322571866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.319575654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.321447684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.324196748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.320912304 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.346252716 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.32216811 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.351615811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.334930526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.320770302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.320088736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.32164229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.339448685 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.32142252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.336310259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.331705852 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.326531492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.321299696 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.324515176 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.337064771 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.324573109 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.331186901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.327216895 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.340508331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.320367843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.321658476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.322765204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.321034848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.331042495 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.321953851 seconds)
  done (took 75.684877692 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.563229627 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.3384954 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.340329093 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.332005858 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.340599884 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.338894125 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.330973366 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.566627736 seconds)
  done (took 14.359709478 seconds)
done (took 247.568098322 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.330593615 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.793842399 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.359277955 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.344171735 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.348506257 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.358696613 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.539646962 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.358218355 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.542915288 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.349358491 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.347133189 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.333979479 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.082654024 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.474662885 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.122930833 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.237955203 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.162278853 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.324847535 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.862356072 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.609066206 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.35805136 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.325062993 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.123231248 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.170360008 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.309942348 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.422910767 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.420372794 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.552978659 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.488779086 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.405499031 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.807370045 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.34961383 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.351763559 seconds)
  done (took 62.17958557 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.330681452 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.340809875 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.340292706 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.34045262 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.341289187 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.339659636 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.331710847 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.340773675 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.342493422 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.34119583 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.340187645 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.342962387 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.34119924 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.340941796 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.34057223 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.314985583 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.331775187 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.340867372 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.331567588 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.315630507 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.341845273 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.340522891 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.342428677 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.342534854 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.343470332 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.343359246 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.341373696 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.343009549 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.341489083 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.341614118 seconds)
  done (took 41.36446777 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.341473311 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.861692552 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.035662645 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.343563059 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.334640327 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.339178482 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.602028262 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.345504626 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.337689184 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.337554315 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.773815613 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.347111939 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.366709154 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.043469205 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.338577598 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.344432171 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.343374778 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.336207255 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.873287183 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.343873658 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.60145205 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.344638331 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.603918277 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.344843804 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.338178717 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.337583496 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.340917522 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.124163182 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.355596992 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.777015814 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.042094076 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.602781492 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.055290518 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.088244734 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.041981525 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.351882339 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.345866452 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.778035344 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.338184238 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.336877418 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.601483251 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.339516035 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.044649242 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.005672855 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.353106055 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.345882815 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.148269887 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.777398406 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.565715817 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.343419571 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.085843739 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.34027496 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.347113076 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.338102409 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.562136808 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.343213322 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.338023028 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.144242153 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.342790485 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.602298838 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.351623243 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.337713599 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.871965504 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.342517039 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.865801782 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.339832433 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.346308918 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.339716845 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.049043688 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.340021241 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.020319771 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.352897081 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.34787175 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.780087033 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.87185639 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.195988823 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.340081434 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.876133623 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.096522657 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.623488008 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.349292468 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.108083769 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.626584578 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.347494685 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.351276506 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.35133308 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.348428993 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.414487087 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.601971136 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.948600293 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.0204027 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.173694061 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.613758902 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.352201478 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.341534105 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.165453464 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.355382499 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.349252262 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.045796287 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.033409539 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.359807897 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.347446609 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.011038756 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.358666618 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.609219175 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.348346853 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.088054422 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.346948037 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.415066013 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.350051277 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.347113147 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.345583482 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.609347589 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.345517745 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.352213558 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.007762129 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.800525136 seconds)
  done (took 186.956325462 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.336667058 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.350575992 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.336029955 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.33540234 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.335462793 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.343461665 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.33327196 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.336017031 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.341182441 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.336274175 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.337800004 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.344544242 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.342766708 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.335572453 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.336894365 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.33650916 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.33616256 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.34034659 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.33693959 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.336395666 seconds)
  done (took 43.988477321 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.351458038 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.862168239 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.831331942 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.357914943 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.353113979 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.34435432 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.394791701 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.354855841 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.35294462 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.620763073 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.503725309 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.358821509 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.353665737 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.352257565 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.833228541 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.33192636 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.621707054 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.867490022 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.36041132 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.86352171 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.325944671 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.355208705 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.342482035 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.867494212 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.636758479 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.607972679 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.402504762 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.869911849 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.354027581 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.353797042 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.864718146 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.354482825 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.343772289 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.852726519 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.355717706 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.367096828 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.354853774 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.398889811 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.404555454 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.629529534 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.872470045 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.619517444 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.370305175 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.505153379 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.355032098 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.326553986 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.876742386 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.357144401 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.327699127 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.356781973 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.360617498 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.850488177 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.352105353 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.851008031 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.361179519 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.357592501 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.867515655 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.847678191 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.844208605 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.508558303 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.351920503 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.612179377 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.362511822 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.882540245 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.361785763 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.355652651 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.356923582 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.507402932 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.879193305 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.616509217 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.634786078 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.635020462 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.362290083 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.410244676 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.35940262 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.62973306 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.415693049 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.736016461 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.630579619 seconds)
  done (took 121.80450825 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.606739212 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.456627075 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.705583055 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.900211007 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.828271687 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.480240711 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.459176227 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.580580378 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.362361043 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.455550142 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.971641066 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.438803394 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.090282682 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.409269005 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.450830153 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.469422923 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.721740137 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.260250419 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.946944711 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.94413505 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.359598407 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.448151395 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.867776872 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.536550118 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.350639221 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.868215826 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.246326007 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.852034305 seconds)
  done (took 51.293607883 seconds)
done (took 508.796455179 seconds)
SAVING RESULT...
DONE!
