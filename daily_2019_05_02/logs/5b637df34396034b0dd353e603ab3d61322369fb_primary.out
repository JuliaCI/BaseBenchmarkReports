cset: moving following pidspec: 9360
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.289464648 seconds)
loading group "string"... done (took 0.583994269 seconds)
loading group "linalg"... done (took 7.110555726 seconds)
loading group "parallel"... done (took 0.164189526 seconds)
loading group "find"... done (took 1.122744085 seconds)
loading group "tuple"... done (took 1.981831947 seconds)
loading group "dates"... done (took 1.286777346 seconds)
loading group "micro"... done (took 0.238476643 seconds)
loading group "io"... done (took 0.978481816 seconds)
loading group "scalar"... done (took 39.573286579 seconds)
loading group "sparse"... done (took 12.77526342 seconds)
loading group "broadcast"... done (took 1.009599753 seconds)
loading group "union"... done (took 13.506516737 seconds)
loading group "simd"... done (took 4.402732035 seconds)
loading group "random"... done (took 8.98844331 seconds)
loading group "problem"... done (took 1.967687355 seconds)
loading group "array"... done (took 21.358747367 seconds)
loading group "misc"... done (took 1.919447037 seconds)
loading group "sort"... done (took 3.197788731 seconds)
loading group "collection"... done (took 17.98830246 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535899585 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142098434 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118731581 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140006539 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184537552 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133264029 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147095515 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086338755 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.026098537 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172364365 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14092171 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.478443321 seconds)
done (took 5.075322423 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.209475476 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090089542 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098918008 seconds)
  done (took 0.90275663 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067949964 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13006339 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081610221 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068510891 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067870075 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082441963 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068031079 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067206565 seconds)
  done (took 1.284950166 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077765336 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070020072 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08584786 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068927159 seconds)
  done (took 1.020577931 seconds)
done (took 4.216070443 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.898304672 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.234564384 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189718709 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453258561 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148385008 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.1891482 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664042679 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338509829 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211717727 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101257292 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105880018 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378382457 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10852815 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66516211 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079605767 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107068713 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158578282 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453495235 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082001649 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08386651 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105180017 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143411485 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105012028 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078637971 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170027907 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070575552 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148123037 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096427621 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068680947 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.246524939 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191446052 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68260251 seconds)
  done (took 10.517120546 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102938774 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117304195 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069898668 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140476344 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105541459 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086988483 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072383564 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084297569 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091695157 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159029343 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115452217 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107399309 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083610893 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070754972 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102227557 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212803943 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108043783 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085903674 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088563672 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076825268 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12259444 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083617815 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09439075 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079688109 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153489783 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197376369 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112026485 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111748973 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072641654 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08228997 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132468098 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144419603 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069231571 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085145648 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141190585 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113583263 seconds)
  done (took 4.610355093 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.046211068 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160549797 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09296476 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152998611 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085667985 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110910049 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083780066 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099893903 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246710832 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.079975892 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.456760335 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130073613 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102167875 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069075511 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084674225 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06914836 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.533175507 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146699464 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120291338 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086198617 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090915481 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071335276 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.10261431 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069013225 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067223121 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087780707 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.103598323 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.330417366 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147028474 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069359012 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.212934545 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090001287 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089438595 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102786041 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197660145 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098744962 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123481363 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082505825 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068581316 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170005625 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074729775 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109929893 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067124806 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106867837 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119401009 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106613898 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084772048 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069039616 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181564399 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069063774 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08163275 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084037345 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.90370089 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168572072 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09486785 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067381291 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287803244 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089095207 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084964719 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065355649 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.28292607 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.156243758 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068363533 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085045662 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067822647 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068717 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396605283 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069321751 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.990838829 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069904949 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077904991 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086017672 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067963109 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089214694 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073122777 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101231649 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066429556 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06660326 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086559804 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067341805 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082461116 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070137072 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100342506 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205713591 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068488252 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067270627 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083076561 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086824604 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113453907 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071075968 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082483651 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101066347 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084409049 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068586339 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120560452 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06809079 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10283956 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085940973 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115155223 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085870561 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.15989238 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069670884 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11418856 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073372675 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115343163 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09534882 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06914518 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154029415 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065541083 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083036496 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068451403 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065552153 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085775156 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069022306 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098758679 seconds)
  done (took 21.37153457 seconds)
done (took 38.263760163 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291146021 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091765131 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09180327 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075113232 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092651642 seconds)
  done (took 1.438863093 seconds)
done (took 2.205128708 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121117669 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117637745 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064320409 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113294915 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064648795 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117775131 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114720215 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082324708 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119095593 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065466872 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112802223 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065853492 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064857032 seconds)
  done (took 2.021350755 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085784168 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086014544 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086526531 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082790194 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07974009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084343598 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081364589 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106195102 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081582641 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089373229 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06558729 seconds)
  done (took 1.690952863 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084310108 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085265379 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086498883 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082811105 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079557533 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083416829 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081559082 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102959036 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082288102 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090285835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065962783 seconds)
  done (took 1.68687732 seconds)
done (took 6.155300141 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082021011 seconds)
  done (took 0.840774613 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.700885842 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.611951991 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084414251 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134965344 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222865456 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154375805 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.444447848 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111612487 seconds)
  done (took 10.397847526 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10418845 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089494676 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070965537 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086498559 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073737869 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086582537 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071358066 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073706415 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087322896 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070801745 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08618403 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072815555 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088520213 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071213404 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07013761 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087320606 seconds)
  done (took 2.119222941 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094769107 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093281529 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092673266 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077666703 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090728748 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074176613 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093955593 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075301011 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0887413 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073426465 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09307769 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076070897 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089270439 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066841032 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091448101 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077912334 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088670316 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076443218 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091939037 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077052915 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092528323 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067661257 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088643323 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076571195 seconds)
  done (took 2.879245303 seconds)
done (took 17.000600543 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133588047 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077017554 seconds)
  done (took 0.97712911 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084991192 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098948325 seconds)
  done (took 0.956626628 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084932829 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082014776 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091009782 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094449645 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082049409 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067304894 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102893365 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067652355 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082754812 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067729559 seconds)
  done (took 1.593208292 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071379015 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095828585 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072584776 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097992722 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075296614 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08117128 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074658189 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085668381 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079740364 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079703622 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072368213 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099831578 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073164085 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100840158 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074580204 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085160748 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088024604 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068653013 seconds)
  done (took 2.248965384 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068356969 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069120513 seconds)
  done (took 0.914326028 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069139617 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065838871 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083217653 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068050978 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079927347 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064858607 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080357849 seconds)
  done (took 1.288613549 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402422198 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109673572 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.242209202 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088562334 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104594053 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261029401 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083967984 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072580618 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088759516 seconds)
  done (took 2.269929999 seconds)
done (took 11.020685594 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082053995 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088035232 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111196107 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417180873 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10708668 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067480916 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142395407 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.211171278 seconds)
done (took 2.00570661 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127483232 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.6257678 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.40181817 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212430947 seconds)
  done (took 2.022138256 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.37843356 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092915027 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07527328 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067549099 seconds)
  done (took 1.400034736 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068774719 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071253546 seconds)
  done (took 0.92348226 seconds)
done (took 5.256488342 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069252605 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067928743 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081345096 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067820805 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065343134 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081195772 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067549242 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067639816 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.082883504 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.068137143 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067580447 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083642559 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065885352 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082986027 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064988048 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065249683 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.103370415 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065466557 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08181145 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067196633 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067294236 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081617562 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065842746 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065547422 seconds)
  done (took 2.565871204 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087632617 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08405547 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073099256 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089633404 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071901135 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088355823 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072847755 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06893126 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088342843 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069856249 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087247096 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071497654 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08624248 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072196186 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0853079 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072432656 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088693492 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068106292 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07301627 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088005284 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072814046 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083099587 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072245627 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088763758 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072043984 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087272919 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069649144 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084048798 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073199168 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087044979 seconds)
  done (took 3.166080103 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073273635 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065502422 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081800022 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071755493 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065068359 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082643287 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065587351 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081508451 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065710446 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065570221 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082907807 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06482068 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065367141 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081855325 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066161328 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084629212 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081881433 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066253791 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081986843 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066025412 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06846808 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08102803 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065876632 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081599776 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06556673 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065728434 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081766389 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065536278 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066187157 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082043627 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068703255 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068572253 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081875102 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072425997 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08464592 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064913004 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069308989 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080815415 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066042309 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065041586 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080694001 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065731943 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065365619 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087841509 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065613909 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08346717 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065722032 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066216564 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081837444 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068353574 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080812353 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065530386 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066977064 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082773905 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068983535 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06455903 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082049687 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065483964 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082146743 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0656253 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065288767 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081293296 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068197199 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06626283 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097091721 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072930295 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081534161 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068028954 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067156686 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084017612 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068158169 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080293481 seconds)
  done (took 6.051837849 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119741633 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092236981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08586296 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067744884 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080909834 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066718799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069933774 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081666128 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068276678 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087455086 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066597174 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067375035 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083067777 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07912457 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082272776 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06726076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087629804 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064019756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066015207 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085916684 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066167599 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085992239 seconds)
  done (took 2.515418266 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189521108 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088961994 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111921859 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091778559 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087022439 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075720673 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087751432 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072466369 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072631053 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088206584 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071251753 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087640508 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071003542 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086175554 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070727546 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086660102 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072006747 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086716702 seconds)
  done (took 2.390406287 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080849933 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068244879 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108020704 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068169003 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084972715 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071292322 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089975156 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077147428 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086693373 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068791735 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093089438 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071374327 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086916964 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068899802 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070795618 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084587241 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070449275 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084801446 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076824885 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089169539 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074206001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09300014 seconds)
  done (took 2.561760354 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085099784 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069691614 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101766346 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087124147 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064348737 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066723352 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091045022 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069096047 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090563828 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070589362 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068305077 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08319532 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073018484 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084316535 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073270398 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083917739 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069843215 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068547542 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086546461 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065276112 seconds)
  done (took 2.347773682 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090646563 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086341342 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069371324 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094402849 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0696553 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086077819 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077605375 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085535673 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06923772 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110662918 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070463518 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085520171 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077286275 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091045271 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07019296 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09345188 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078375128 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093275667 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070141062 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085573909 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.220089089 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07027387 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093848893 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069751656 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085746707 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069662004 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069369575 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090121873 seconds)
  done (took 3.22327165 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06963572 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068313485 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082347284 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066169423 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066133263 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082381096 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066785832 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065710434 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084836238 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066509748 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06847088 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083827968 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069294527 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084270474 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068367539 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068269229 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084774794 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066182314 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066562773 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082192589 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068184063 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068051831 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084525203 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066231921 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081863126 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06878398 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066628653 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081720673 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06809011 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066508589 seconds)
  done (took 2.980367825 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08022609 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092364778 seconds)
  done (took 0.974151483 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067347356 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082659115 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081938716 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072755674 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089259132 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06929642 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092915995 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073916405 seconds)
  done (took 1.42995205 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085181093 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079742183 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086651195 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080118335 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09559023 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084655346 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155579505 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086308303 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075664112 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083366058 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081832867 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068009029 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090953013 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06838949 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090104959 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074386382 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066300962 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090396351 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07110308 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082905415 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070212635 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093333585 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070471188 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064630939 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086128133 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076906781 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09538142 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06998634 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087870761 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075661878 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07381896 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078526668 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068977264 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08546847 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066850637 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094635912 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08273873 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087683906 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076475116 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069831612 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095425723 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063863905 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088346851 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07422881 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094025181 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069150668 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068700682 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080431591 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066680976 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086474555 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063963887 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068477905 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079471255 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075548053 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088190013 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078456347 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085907213 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069615837 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07067389 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088048733 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075423743 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087067398 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070808084 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068962803 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094809903 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073242032 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093799113 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064002275 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062873444 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083352796 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077742538 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10642533 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075208721 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085424923 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069211052 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083056813 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07169117 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070553727 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090024321 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074492604 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085589891 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074563314 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091847984 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068724602 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070643629 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092406263 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067629406 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086640576 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066869514 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100605778 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067843018 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083340518 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067005049 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078237884 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087874652 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068717503 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08274657 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075039588 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063044907 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08580796 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069533146 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084906039 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078849116 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090459885 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074174769 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093355296 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075689884 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067889831 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088100735 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065605113 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085947032 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066851106 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075580814 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079356755 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071359442 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085059588 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068678329 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093107881 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066708587 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069104678 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091599767 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073648274 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083255316 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065975591 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071707738 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08468274 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072113177 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092241839 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067016633 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063418241 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080069689 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071404474 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085048095 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072470501 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089719662 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071490702 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063147454 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083496142 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073365875 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093192288 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068931422 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068609588 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090809643 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069230639 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083841282 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075163882 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087008134 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067928691 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073137035 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085442945 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064840458 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087662007 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070893271 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067018833 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087612621 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071831564 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086731113 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069525441 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083925338 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073664799 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069763733 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083661131 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068434085 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084035689 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077932645 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069202469 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08013356 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06650747 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091577403 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066450354 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068108683 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08465223 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071732661 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08592321 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066100013 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068161513 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08650974 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078948409 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088482037 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069354144 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089868822 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079217503 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084563824 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070457461 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067971323 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086833798 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068768936 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092745241 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073727713 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090119138 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070451025 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065128239 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090658134 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075712906 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084335692 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067118975 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067699215 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088831826 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074539153 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088881458 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069787612 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083380592 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069667645 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071319251 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087486652 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069132275 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083944924 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073733623 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085128904 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074605809 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069596845 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094999762 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071564788 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080689826 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072011032 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083656477 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073533619 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063987622 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082999147 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067915921 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086989326 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067324984 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071154847 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080486375 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075417924 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09259311 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069021576 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067769846 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084786985 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075489621 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086605222 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071577835 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071094665 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091424563 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079136066 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084241019 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071549563 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095093372 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06891442 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062798352 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089976463 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068106241 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08468224 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068014139 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066727515 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088371971 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076771153 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091989675 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063075033 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087475411 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067603884 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067329182 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08094358 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072913846 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088022618 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068760988 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075455094 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086204711 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070016935 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089323679 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068056681 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069177138 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086656261 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071337253 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085662511 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07116059 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067712801 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08827737 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068292951 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083053963 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070169072 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06877659 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085351429 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073860927 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084635785 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068143888 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087218111 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069315973 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069215266 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085270798 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067908951 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088002305 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06919417 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068628619 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08761954 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064199628 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092434971 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068125832 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075358263 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08523629 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066023807 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091076419 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070664686 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073050686 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086372493 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069678729 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085885726 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068840548 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087554864 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074594632 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066127562 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095655043 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075443361 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085706641 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071060512 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085441799 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069509594 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067311398 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085623771 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069625555 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067633241 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084958629 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072662817 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08724546 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06901504 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069560131 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086292845 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068742734 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086656371 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063829232 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067214036 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085023338 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069354776 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094651347 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069833425 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084745995 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067827341 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069367995 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083860537 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065462918 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093138248 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077204489 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086181056 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075786593 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084274002 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069464882 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078083837 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080167548 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067119204 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084410139 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065646327 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076126546 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086259166 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077849812 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085323263 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067717677 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066182653 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087113766 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06751167 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062785888 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084207687 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072306913 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084989747 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068092092 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068773138 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088395904 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070199225 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095423302 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068821171 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086498341 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069981644 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065925987 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085106109 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06765338 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088169345 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070197001 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066832427 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083648001 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068641106 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068802139 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08706066 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069041155 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086970035 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075314921 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085855165 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071039394 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071663228 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084199123 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070933229 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085704729 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068566841 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067112709 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088364919 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072226585 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087220091 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076251298 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08520018 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068773848 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068351391 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084449103 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069063587 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068214288 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085984115 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068735777 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.0868874 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075581455 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083109409 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071363684 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068083125 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085627787 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075297657 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087150658 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071454065 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092685932 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069059498 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069752298 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092793232 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072629754 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088872261 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069806483 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068969535 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091289212 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06784793 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091937744 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069568757 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086552005 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069519426 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066077593 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085577981 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069126728 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06725195 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091636795 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069485504 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08484149 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067927049 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08312603 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069628082 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07266596 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092790283 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071582789 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088694002 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064678465 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065567426 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086920592 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066873204 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086861537 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071966945 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074730879 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088342584 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069209223 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084825513 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077785955 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091409688 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072589532 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066432798 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089101821 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069829457 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087833192 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070034466 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068624815 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086971546 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072012515 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087469117 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06768659 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07551629 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088557291 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070230974 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087436668 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068985008 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068613538 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081229991 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070106098 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087232436 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073752393 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069885157 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086199556 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078343599 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08335506 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069503836 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088412619 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068289858 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072348078 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081779893 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069675625 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087175356 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069925199 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064003889 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084742359 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066497352 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08744492 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067889562 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063780477 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095483406 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077097284 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089014124 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068000706 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067148719 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081927566 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064315147 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084889904 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070297247 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070230434 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095996119 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068196874 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085108496 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064553512 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068215832 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089583858 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071465672 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083197689 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064598692 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067269675 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089271267 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073835049 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085220211 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068547807 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070768285 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087729113 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067319361 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089427886 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065828025 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089290442 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080709675 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068422256 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087182809 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074394558 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09328711 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069812287 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081905784 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069951004 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071548573 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086570448 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069924154 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087286017 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083559887 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089138621 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067779525 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06680767 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088157657 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068253574 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09337184 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07033162 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068693274 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090583942 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070366463 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093543418 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07135973 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093268853 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071954495 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088522367 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067852484 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06849089 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085193687 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06755232 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087042761 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069172461 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072421787 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093560095 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067751965 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096688801 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077484081 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088307379 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066393776 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067413888 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085765 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064963912 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087028155 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066800687 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06721624 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085219776 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068366854 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087021414 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073539932 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069206255 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087272327 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06894708 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.08047308 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070390245 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070727595 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086448964 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066385391 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068578065 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087120249 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072421953 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089447754 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066749473 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087472923 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070425801 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068873631 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082147047 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075261181 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066807275 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088511607 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067634226 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086607872 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070025606 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089168503 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073626521 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069324887 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088286053 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077895658 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088539769 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066458415 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065402991 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091339513 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067164249 seconds)
  done (took 47.024886749 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110225659 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083223403 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064168127 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081654957 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076677156 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083314189 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064076468 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065452297 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082527393 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067440712 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081743236 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064584017 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090704072 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088003968 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095252841 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067554563 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082348249 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065382798 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082314298 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064655774 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090760956 seconds)
  done (took 2.5006826 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077853461 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091410993 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074749648 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095815787 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070806117 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090771901 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076184531 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091017861 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096899546 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070056214 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095867429 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07374977 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087194218 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069909296 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086779828 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074011785 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096361085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070496609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090939968 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074921751 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091471304 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076055814 seconds)
  done (took 2.66762816 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071372937 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068455798 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087383612 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0636507 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067224176 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081361273 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072047191 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084007458 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.080082908 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066930872 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084599688 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066918867 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087895632 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063192534 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06759492 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084171181 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132697544 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071335182 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067841354 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087562417 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064557393 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08779568 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063605463 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064189931 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085001861 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072073903 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086651009 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066403797 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06753733 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084973974 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068449594 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083663312 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068806229 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067695266 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084969541 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066658964 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066981035 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085941007 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064002167 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083559915 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068686988 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064283473 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08601082 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06972836 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065736777 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084323976 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069428168 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085475858 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06387948 seconds)
  done (took 4.546982761 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086612985 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13078511 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089907874 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091728099 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103052367 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094403673 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072036877 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111938988 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065812651 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086091102 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084819641 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104333024 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086848693 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072722855 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088862582 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06783122 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068811924 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085550398 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071932771 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085359614 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072314303 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093282118 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100808725 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08182808 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090334009 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067196716 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085697416 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072435844 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099347508 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073598729 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.0903371 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074610733 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101026218 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074211214 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086186711 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070648238 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103076925 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068592962 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088705844 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066021674 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088354163 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07339958 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092147334 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084558644 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086780852 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07341748 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086068371 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065016087 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098939585 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071008232 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094355747 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101442955 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072186747 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086397551 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072355974 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101688825 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069009915 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084694445 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070905572 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097950698 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065733354 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089821764 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082808931 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088229851 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075263293 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101587199 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073243427 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089894481 seconds)
  done (took 6.720021702 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078346159 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092698133 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083005454 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100726281 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093167375 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074887186 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092782382 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075038413 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092204656 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079646635 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092697639 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114705826 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070568145 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095130595 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074975515 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093516069 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074604423 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093922209 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074759294 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094173221 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094235876 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083407805 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093851899 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10136239 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104943104 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088202317 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075428487 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093213473 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083397285 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093899529 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10465232 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074819515 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092500274 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101629557 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08702504 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091772257 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068141765 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093072795 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075623304 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092938916 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070333594 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101767674 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074642071 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088921492 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074731694 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092506923 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100607749 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086404414 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095377795 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098174369 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075203114 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101112566 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074706606 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094008626 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101862651 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107345668 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101350783 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10031287 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075249662 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101021574 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100412696 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108456689 seconds)
  done (took 6.416128455 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089392041 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095303344 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098072513 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064222237 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066258012 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090809045 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066886793 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084836221 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077089103 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095269572 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079221686 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089469081 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074802345 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097332105 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090502466 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076270819 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090501039 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072495764 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095426094 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073561261 seconds)
  done (took 2.526831416 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077106417 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104063176 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069594742 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073179389 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091451627 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073663485 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089610295 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071903642 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087495834 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071642527 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096904771 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078720758 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088361019 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074675019 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096063865 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074232591 seconds)
  done (took 2.181487996 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081489621 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097021867 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083377198 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087502485 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067027658 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084170286 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068182467 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063530819 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084477348 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083446538 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087474978 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07109528 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086849075 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06734888 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065107901 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09013532 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065120306 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084557932 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068085484 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101227954 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079545556 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085484249 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068894185 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070116376 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087875982 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073387904 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087018632 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065978632 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085259394 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069307961 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086946152 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076409795 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083896587 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066727051 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067149139 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084453487 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068261212 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087540012 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070893455 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067956238 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085645513 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067968297 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086557692 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069726377 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083615461 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069308422 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064872057 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093143023 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066896818 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087082092 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068595446 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089577354 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069338527 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077492282 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090973412 seconds)
  done (took 5.156660918 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082507178 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071613263 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083491685 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066667982 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090136533 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070977363 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071284125 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090023846 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070818899 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084936974 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070420411 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089804959 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070283388 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071165811 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088527797 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071548482 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082667572 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070234254 seconds)
  done (took 2.26434349 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075526978 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068050322 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093947189 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069147474 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086820652 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070801425 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064530773 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086812294 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067564793 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087425695 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069255464 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070670402 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085699744 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072140234 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087782036 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069217503 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071102603 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086318618 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069958449 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082908854 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070797033 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068022727 seconds)
  done (took 2.544120078 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075172397 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095723403 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164453811 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.10867405 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08488247 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10023673 seconds)
  done (took 1.499076171 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093907897 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100865433 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069775127 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109023044 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077301078 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08919934 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071000894 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08924626 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079335596 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103072293 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070618457 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097520799 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098352594 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079218224 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095282911 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076681299 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089445867 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07073989 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087830234 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107420184 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071534973 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097467712 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070922653 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089276847 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071027341 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097198483 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079409944 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102340349 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08917815 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079329402 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094064172 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07003523 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097747813 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103217221 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072323605 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098077709 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071408693 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107612692 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076723233 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097835168 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071356665 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096803612 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097959189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076657364 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097633479 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070563241 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093393969 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070657715 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089900155 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113421628 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076674219 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09775091 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095894201 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079465853 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097736748 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113489722 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083843839 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097622446 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094867627 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0845961 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09717074 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076124796 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096966302 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102006765 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07711601 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097413395 seconds)
  done (took 6.710624464 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088421082 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106906189 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071651715 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10349985 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098423168 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071155642 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089221199 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070742357 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089230439 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070564864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130790865 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071487711 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098214273 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098027887 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070905179 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08920403 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07092724 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097130985 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070933984 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113428207 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089175229 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07869443 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09854954 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098421268 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08470643 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095178402 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070667959 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089337158 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070867145 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089360531 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075677357 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090083238 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097527232 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070119807 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097945411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071694432 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089461311 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076557438 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089720205 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076952848 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098586249 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106853933 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071777776 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089566706 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083621346 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090744911 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071118738 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089649417 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0701738 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088678038 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084682514 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104547318 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103441735 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097390872 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071032172 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089591839 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070927148 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08980294 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071033601 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094885584 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078808984 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090023825 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115051238 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070480483 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089691203 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079834469 seconds)
  done (took 6.607610037 seconds)
done (took 130.359367792 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212369001 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201628656 seconds)
  done (took 1.283516824 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071595818 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09674046 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098860669 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129886345 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088159634 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102429735 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120257479 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080659909 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068780714 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087570024 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068847514 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08966742 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133766111 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06862039 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087585647 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070127336 seconds)
  done (took 2.343909402 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105637641 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197217827 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110645009 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066991278 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100739211 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080110303 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08675844 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078379317 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095871945 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067118057 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079039124 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096933167 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066776195 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096791953 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076213583 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099175171 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06680924 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098959666 seconds)
  done (took 2.551830856 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106177161 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149223118 seconds)
  done (took 1.13497814 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.21154706 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123678764 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202986376 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.414032294 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.208091202 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.280568218 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.17541853 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.174000073 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.152015361 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169833947 seconds)
  done (took 2.992304899 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101850933 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171608674 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312420586 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138729007 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087455448 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116479136 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139977178 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.091358521 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10272612 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10121831 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082765524 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099313742 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099893624 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097326974 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075930629 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098826024 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123213586 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076015887 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09772197 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07797578 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118890946 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069027976 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095576524 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076792312 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07906311 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099953297 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067325549 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087376834 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077237265 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096539046 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081125866 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115509058 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098087228 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131753572 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083640094 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132370056 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09968708 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074378907 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097143574 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075251706 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09883949 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078910869 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1052607 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097771126 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068078223 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079826427 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088188355 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068289129 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101482385 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079306069 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101019565 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080708534 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130217555 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098021285 seconds)
  done (took 6.303615926 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.765642222 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.115687685 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095663999 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.813113201 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091588944 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107882108 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.718178238 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118767961 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211781892 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.784353119 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091757686 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100668741 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180766099 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235603866 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.881037061 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286398569 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.643755923 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107129903 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109569465 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132681806 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139949769 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177157785 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150583377 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.433574804 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077353603 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093373234 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137971629 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.096596203 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.140431823 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085960798 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094653493 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156265715 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225670826 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.15760724 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099754699 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072099599 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092851785 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148498999 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24452915 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.17224578 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159123471 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06920445 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092142681 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14147764 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132550502 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070110115 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1412846 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175838017 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.149943026 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074836813 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096930852 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143861075 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138819304 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143093645 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102023207 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269514383 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287852454 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092251743 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099429097 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104878566 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237518792 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085152073 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203009758 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141798326 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169798289 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092087229 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.732358128 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146867687 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093040897 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075337075 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120115053 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096344478 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139157749 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144605282 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370321113 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143026529 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074062397 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091611255 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207966586 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104953011 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072649648 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141946584 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097207889 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101755041 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165621998 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144176933 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147161678 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.206162452 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144968321 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.163356606 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07681625 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125966152 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096276293 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189786906 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171841087 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.142192766 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206826422 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141066434 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.143819664 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.148441131 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097643489 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150944272 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120212107 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081898396 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138142291 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192421771 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.124306006 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083829325 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095789064 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140949367 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126434163 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086751905 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.162363766 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.150609756 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456659288 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146830883 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090273108 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087725306 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140541903 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161970281 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076991005 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233497635 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102691871 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168991001 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122530892 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070530246 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121419096 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141736283 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078180204 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123414476 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.159538932 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078701887 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.210171659 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194597922 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079683777 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216939499 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166272462 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079220639 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15056282 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122859066 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149664517 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100689391 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140108913 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076750528 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778365894 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143710541 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121692381 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073876851 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175318978 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092367715 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084183124 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105847592 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069309909 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766447181 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087115915 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10279789 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105182215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07729465 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122457971 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138186884 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094751882 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140752542 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.182182334 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097748058 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119958397 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084836728 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139961645 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098225873 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105903176 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085705603 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105701073 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123451584 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074942453 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10536673 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147348402 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.143409281 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193908534 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.545027682 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071535435 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106500008 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201182095 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072402081 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262836441 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139927425 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.197862769 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141387079 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081221365 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288570413 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143208979 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176347575 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10676185 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15206397 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070840187 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137401771 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143016166 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093013033 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076831926 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140579212 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167087195 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147012664 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.946444644 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072891506 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204855346 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069526427 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174169114 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.079307928 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098614649 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.241360905 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092978945 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147969454 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.144532782 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094928886 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084993809 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.677365228 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106257144 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138647156 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096138792 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.175057802 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164907883 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13700812 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140594422 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076099825 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139458499 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207138815 seconds)
  done (took 40.731693306 seconds)
done (took 58.220824474 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261127818 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180603738 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243451897 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144600244 seconds)
  done (took 1.808321943 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145541823 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105943366 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118439196 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088019084 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103976023 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087106609 seconds)
  done (took 1.551877899 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.416010869 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27712734 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236150315 seconds)
  done (took 1.833025904 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263431937 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215822665 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.451208576 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300161286 seconds)
  done (took 2.265865539 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176008376 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115042766 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06988559 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107802904 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16002037 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253021972 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13123407 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188689316 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081008258 seconds)
  done (took 2.237102081 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198629365 seconds)
done (took 10.80227143 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111280942 seconds)
    (2/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.22593625 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.214728955 seconds)
    (4/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.183590966 seconds)
    (5/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.202855712 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159172759 seconds)
    (7/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.104538156 seconds)
    (8/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080775403 seconds)
    (9/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202291893 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.156918097 seconds)
    (11/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.172917282 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.206921826 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084992979 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120346626 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081124887 seconds)
    (16/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210185921 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187653741 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075079768 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.115569048 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.221847334 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100037094 seconds)
    (22/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.166597252 seconds)
    (23/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073207354 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073588249 seconds)
    (25/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105474677 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.17858533 seconds)
    (27/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093230632 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108096355 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119242762 seconds)
    (30/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.200047421 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055431849 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121291807 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.135190988 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.162934252 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133492276 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097426111 seconds)
    (37/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.179359999 seconds)
    (38/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081343566 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078627134 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112149891 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.116120261 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054329902 seconds)
    (43/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078841281 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.188351044 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075853866 seconds)
    (46/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096891041 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073902877 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216057405 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089773289 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109006824 seconds)
    (51/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105831262 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075781101 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.171475785 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075236445 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098706766 seconds)
    (56/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074408432 seconds)
    (57/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100726526 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180307713 seconds)
    (59/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.168394489 seconds)
    (60/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202840364 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068474179 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092408806 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073657316 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078041721 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22512066 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159999707 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108816285 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097020505 seconds)
    (69/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114276119 seconds)
    (70/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100023786 seconds)
    (71/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077208248 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193212844 seconds)
    (73/309) benchmarking ("sort", Float64, false)...
    done (took 0.149240687 seconds)
    (74/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.17394747 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.206405493 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095703151 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.203238146 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.197831072 seconds)
    (79/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.221302842 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086134853 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.101006322 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137048988 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103447606 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078641256 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.09026423 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055236456 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.139117192 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.137778761 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.09136102 seconds)
    (90/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09201859 seconds)
    (91/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193249154 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147997261 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096597555 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068099463 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118169243 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102916223 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.13933527 seconds)
    (98/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072862044 seconds)
    (99/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089353626 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079268444 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116086823 seconds)
    (102/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.102813678 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.174572348 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082752253 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070163376 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.09528023 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071581059 seconds)
    (108/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.17896647 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068500263 seconds)
    (110/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091520472 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076206159 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100191218 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100155957 seconds)
    (114/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095664567 seconds)
    (115/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064357522 seconds)
    (116/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.102526281 seconds)
    (117/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143006065 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.1704298 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079944887 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.184365311 seconds)
    (121/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078759153 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054935493 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.160624455 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098203636 seconds)
    (125/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077122212 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.117375273 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076007118 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074986158 seconds)
    (129/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102803904 seconds)
    (130/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055689219 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093577227 seconds)
    (132/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104661719 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07484247 seconds)
    (134/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.105651066 seconds)
    (135/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075634934 seconds)
    (136/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089835811 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07506668 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106176795 seconds)
    (139/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.172572132 seconds)
    (140/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087518843 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091417491 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06715117 seconds)
    (143/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089897146 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055059875 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.192300116 seconds)
    (146/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074999298 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06699205 seconds)
    (148/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.16062064 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07541431 seconds)
    (150/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086640604 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068471321 seconds)
    (152/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.120405414 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077372386 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055088957 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115075211 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068221867 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096768069 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11250435 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101787944 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068755965 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067721378 seconds)
    (162/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075532439 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05355196 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053270192 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077948294 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053362848 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053793483 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.153649689 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055758514 seconds)
    (170/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096997358 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074789952 seconds)
    (172/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075483048 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.075808041 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053855429 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067747661 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088910268 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110668013 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171386936 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077328092 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.111901151 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053846764 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075405786 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.075937488 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077598632 seconds)
    (185/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117841183 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093998332 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069595378 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098735074 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06974416 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078356792 seconds)
    (191/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.10234326 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069645177 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19565333 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.193061787 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054804339 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095277588 seconds)
    (197/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053716363 seconds)
    (198/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053968145 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054485448 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119278989 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067196198 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095744478 seconds)
    (203/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075697611 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.157907667 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138209415 seconds)
    (206/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.327153292 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142135439 seconds)
    (208/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086285383 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091408459 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068908428 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077551066 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100020881 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.163961795 seconds)
    (214/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.089378649 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133185595 seconds)
    (216/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.086106994 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071792522 seconds)
    (218/309) benchmarking ("sort", Int8, false)...
    done (took 0.16595519 seconds)
    (219/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053316007 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095892549 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067993642 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166531451 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067921728 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110541531 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05340938 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067694954 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074662098 seconds)
    (228/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054360393 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067610311 seconds)
    (230/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.132983438 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081918631 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.148871847 seconds)
    (233/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092249022 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.165796308 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203223327 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070116442 seconds)
    (237/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055123091 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07551345 seconds)
    (239/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076046333 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145538903 seconds)
    (241/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053765525 seconds)
    (242/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074329671 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053119116 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.16495651 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068543813 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.076202946 seconds)
    (247/309) benchmarking ("sort", Float32, false)...
    done (took 0.12998484 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161347456 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06787009 seconds)
    (250/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.133007541 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068647715 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.075653348 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.138242887 seconds)
    (254/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069887227 seconds)
    (255/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.086014882 seconds)
    (256/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056835412 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074773231 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.08692153 seconds)
    (259/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084148573 seconds)
    (260/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.089043419 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076720862 seconds)
    (262/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090321386 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.075652278 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17460585 seconds)
    (265/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.101863398 seconds)
    (266/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069190822 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093388685 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169168811 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077409528 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064892378 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055080668 seconds)
    (272/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.085495405 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055067283 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093573916 seconds)
    (275/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077863299 seconds)
    (276/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053488224 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07655934 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.162853156 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06655699 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112879328 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06918912 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089610392 seconds)
    (283/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053827443 seconds)
    (284/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053814917 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119682538 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068497237 seconds)
    (287/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053654303 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097809687 seconds)
    (289/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069622437 seconds)
    (290/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053595821 seconds)
    (291/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093245324 seconds)
    (292/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054302894 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.114583925 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090714807 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102379616 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074356562 seconds)
    (297/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054982398 seconds)
    (298/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090501165 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053316905 seconds)
    (300/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072199162 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.082876458 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05501115 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096323506 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09270332 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074638092 seconds)
    (306/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055839525 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.174384418 seconds)
    (308/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053488137 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091252175 seconds)
  done (took 33.692046088 seconds)
done (took 34.610794955 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085862364 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116217228 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077257616 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117621081 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083490618 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1019806 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074864156 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081580656 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106176011 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084147223 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103551649 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056693269 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099338984 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077896605 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099398293 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09446444 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103248794 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075639638 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.098247644 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06768542 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076453074 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089464521 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069520785 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058620801 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101967399 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075996068 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097361066 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077169355 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067462512 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090063911 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071938094 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096914953 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067833864 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081358494 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096631806 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076330072 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100186903 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079305 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069434078 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089844858 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075896271 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068065574 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096972546 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07619264 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096311106 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074109643 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076033498 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10385816 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093849824 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09154134 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076635925 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100880955 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079368855 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073950083 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094676513 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07687414 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095470264 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094546406 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099134652 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070626743 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075757817 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099753372 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074247707 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09801909 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075881611 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078652636 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10101181 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074054451 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099537118 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074195689 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06779728 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098165886 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07226387 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089503449 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078453233 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079214199 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089283501 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074008619 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073994539 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096758415 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068102878 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091940916 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070189957 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075108724 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091278151 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05684719 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071695315 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095546685 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067223606 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075873726 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09614191 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07489452 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091312952 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079270821 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06803616 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09497211 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068587033 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068091124 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092827199 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072711916 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.089282775 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070156372 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076888112 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091705376 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074708099 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.104323315 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067392704 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074802554 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089462339 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067483274 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.105803098 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077967057 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068053789 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092297585 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067709231 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075084563 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089921111 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067713866 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067925827 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090019297 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075109343 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08980413 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069909081 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075687071 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103360509 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068128586 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071949671 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091812696 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068295539 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.095575566 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068095152 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068354094 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09215579 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065016244 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070637031 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089872236 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075755032 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069510397 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098163253 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07024702 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098290375 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072379435 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073664578 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09529789 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067278568 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06078887 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092358174 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070446916 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069980396 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090511146 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070411156 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089220192 seconds)
done (took 13.501375453 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06907686 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170927377 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128316418 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098044345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112222089 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068405078 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10184015 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105174585 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092615452 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129129919 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089396737 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109975384 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116095689 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090011293 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068408519 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072589578 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092640062 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090615755 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126490034 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08794713 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141312217 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09060061 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12214068 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091456357 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113459307 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096913356 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091035774 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072707978 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071520128 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126695801 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110101131 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071639526 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069113771 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12528089 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119197268 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08798074 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090394657 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087140863 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089961808 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068369547 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116806481 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102433618 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105601193 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08426284 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096469718 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071541833 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091653235 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088866701 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115448335 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08293523 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112355636 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13563784 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071257554 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106962485 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067467321 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112055828 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107646344 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070346364 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069114479 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093873557 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068714784 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071371135 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112558247 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117252336 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072138314 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10651676 seconds)
  done (took 7.37236558 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087979715 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118397858 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085654199 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109346507 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06799276 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069034739 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091554168 seconds)
  done (took 1.604844182 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070388019 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091405014 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113260922 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091491235 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110950828 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089044832 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100751734 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069493136 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109884566 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069663736 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089849381 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130267644 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093436789 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076450393 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09292411 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091606775 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092718221 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091896938 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072362288 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115862093 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071783243 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113246765 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070884552 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069481368 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106546844 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069551312 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140313134 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074085975 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09372189 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072447558 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06776528 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141707359 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105960219 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079739088 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069067244 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107423613 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084887631 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090872445 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085885939 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096789761 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083596135 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070176702 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093948971 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068732917 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073093299 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102749369 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070592916 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092015656 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072118822 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088875252 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093332923 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083465335 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092075343 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072988023 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070593809 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097961092 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079302054 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093041683 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08952681 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070915635 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109378133 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085413021 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106101924 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085506088 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094802291 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084045849 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106489108 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071846764 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070488395 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095584499 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08623302 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089906245 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071421815 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080328084 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094317183 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092812857 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115199513 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071081041 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101954596 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069269887 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070309156 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092257429 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092303204 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096143787 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069857282 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072991962 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09535524 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068163649 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068372733 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095588975 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068129944 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093339863 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071916443 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070274672 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09438572 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086503015 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070326145 seconds)
  done (took 9.471787712 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071896433 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070990012 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093739163 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069869376 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069927223 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09249406 seconds)
  done (took 1.45947543 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102846425 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094536089 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08389333 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098011887 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108648067 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107798021 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084566984 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107702677 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08782298 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104535686 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084953604 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107967036 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090391244 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099671482 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083838613 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098069963 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085712866 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102633156 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081227347 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100276035 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090570127 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.09917422 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076204374 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108833472 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073623523 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075319975 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102224716 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081754682 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105288541 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085409569 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098627404 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073284804 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096873654 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084123032 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107380839 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074965106 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098196477 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073791673 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102791272 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072863562 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108885875 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075681735 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080900165 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097116184 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107707092 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074146729 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074858566 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102794218 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084589811 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097041877 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074355992 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097644844 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072620399 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097136839 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074668356 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107916471 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073822665 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107918707 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076052176 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074281508 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096229844 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073343361 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107887657 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073135556 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106265825 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073573563 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096378803 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075736368 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098849438 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075138335 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073761778 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095118305 seconds)
  done (took 7.48784587 seconds)
done (took 28.362680248 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.655664604 seconds)
  done (took 1.638212463 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.784244903 seconds)
  done (took 1.769567519 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.70095914 seconds)
  done (took 15.695501081 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.623088586 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.772931293 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.813571649 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135699524 seconds)
  done (took 3.33130424 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.88949128 seconds)
  done (took 1.903208608 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241233911 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226306591 seconds)
  done (took 1.462727391 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.749764239 seconds)
  done (took 1.750429263 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.296312158 seconds)
  done (took 2.293248844 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331491241 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182632733 seconds)
  done (took 1.517119731 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.527170998 seconds)
  done (took 1.526130555 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.876314926 seconds)
  done (took 7.880182247 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23299925 seconds)
  done (took 1.247872667 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.273783272 seconds)
  done (took 1.276926218 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.14913724 seconds)
  done (took 4.151275454 seconds)
done (took 48.436360954 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080948026 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083702411 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10598313 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080920521 seconds)
  done (took 1.351123297 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080168855 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075996051 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101918204 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07551948 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103085855 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076290434 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101380398 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080235826 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075321051 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099367794 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076303277 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098119922 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077707731 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101300993 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072865925 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078389803 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102546694 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076437149 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101773546 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075713761 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073071995 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100577214 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07853558 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098019332 seconds)
  done (took 3.091570195 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081656126 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075705756 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099469889 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074559666 seconds)
  done (took 1.338847697 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080844711 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117510332 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092071537 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079714697 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118609259 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112497517 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072494463 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072762195 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098197242 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07965232 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093789067 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100259604 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113758916 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079749745 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105110162 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06843811 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071789549 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113024282 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080135235 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103415017 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073286871 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081920824 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094105502 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093858636 seconds)
  done (took 3.211000289 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081701991 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129595629 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081125639 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.117121407 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09352348 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.092309154 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077572098 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.117490643 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127647322 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.092749234 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072581083 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068832185 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098956624 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067864397 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078976312 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13463659 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.138072736 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070734807 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124418652 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067891238 seconds)
  done (took 2.950072355 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077560879 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072022574 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091522211 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071770304 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07891213 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0982728 seconds)
  done (took 1.508585966 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071599389 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070326962 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092648544 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069082895 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074209012 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092412661 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067824951 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06995537 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092784097 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069025471 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069365692 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090687077 seconds)
  done (took 1.942167668 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.39167893 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095478724 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071155844 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090355142 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073369339 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092387416 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083235121 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070939451 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117055633 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069765076 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093069469 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071300838 seconds)
  done (took 2.33593725 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266115089 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080540475 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325727633 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172431939 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142830378 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157016347 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107829707 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141628939 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201561659 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14145066 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202959302 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22676952 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13593484 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170217133 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117686548 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.135761136 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187952067 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223883437 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132610102 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202107653 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208447176 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158224507 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183312454 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130176008 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136787257 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153152602 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.0749534 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108026141 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234110759 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163314105 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204092012 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141337344 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09953376 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233340071 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2275024 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197372958 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166204039 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087634535 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159955119 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166989978 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258017891 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116730948 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196506036 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135724883 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108347239 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175698342 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148772776 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148948145 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139501509 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11837631 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17718488 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243526449 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.16804168 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114444204 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140228952 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144284241 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145966037 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106789492 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270427378 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198662164 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162425566 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098259353 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127273683 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189069393 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161739869 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143746111 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155279568 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121941907 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170000218 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21355098 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149227191 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176058018 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182701482 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117066869 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149816834 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171971982 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159088287 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23221549 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156858474 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076524219 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154388435 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131677139 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109739243 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147429824 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103185874 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235235593 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101977289 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141799286 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141846967 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137762034 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139103215 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198354089 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20413953 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132387396 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068637085 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133055357 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152174699 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178871283 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116783447 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136858121 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150149769 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107132209 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168530365 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078508899 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156233853 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.106091559 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154900964 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164531907 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.103519935 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157568505 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104637165 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130456896 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16509691 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220645413 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118232965 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085869432 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228397251 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158292142 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134603107 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176684891 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216160919 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10449828 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131646118 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206777 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24376493 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092829926 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2249488 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136855104 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11183634 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090341004 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157937331 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141607492 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150818797 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110750983 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157321654 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230391472 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078247515 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124196991 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168497397 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109916457 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084030857 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141588155 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129694908 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123753799 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104084226 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13659903 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197333238 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157154357 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13670676 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156593939 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127206273 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203287019 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117178943 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132899156 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132714281 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072855757 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167230486 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220328745 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082662825 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227958118 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155719188 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134176437 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151572546 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111485903 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170502949 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081874377 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098725855 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176866699 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14052073 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13899332 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185825854 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132346243 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157012494 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153871868 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189799192 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162784416 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16405029 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134881674 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090278751 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141653297 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182522188 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076467495 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122741371 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085611931 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132614421 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124990727 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086438268 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198231626 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15735309 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12743752 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142491896 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100701758 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206521161 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079670138 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187598345 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.149377573 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097768466 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213239699 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188852319 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192733669 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103257802 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203601492 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07379234 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102720178 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.094285155 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183140874 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086923034 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11129007 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147322167 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18112947 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158643841 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194517829 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114281889 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152093542 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213923937 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074264619 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146317474 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180348252 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180766472 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.134549793 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114528072 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102808662 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20266693 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138095491 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248479758 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145672006 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15478992 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208757922 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106756925 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107955014 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134324218 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169766152 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135485337 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182925836 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128738576 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116924644 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140215991 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.085141149 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132956589 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157996773 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149427741 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190577227 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146257917 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164229011 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10551434 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147328736 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154655829 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153486285 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066733628 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149835339 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221625079 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122815413 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147949065 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187879926 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107997827 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156311977 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238591603 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177584659 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113055674 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140768198 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15763997 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160698896 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149101765 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172311825 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140850143 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166367625 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140634332 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113612678 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090965164 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126661291 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135723486 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123862037 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141432172 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147380661 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097213049 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188176949 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141507704 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114653998 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147959024 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126001591 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118930241 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099572498 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23673252 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152849242 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236922805 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129086996 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181685816 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229366444 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102582325 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082305626 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109145364 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171394361 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087447484 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191806678 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10093485 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13465544 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157671286 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174128827 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124991208 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097535003 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11280473 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192093089 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114756474 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126920194 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13457956 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224810027 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132231259 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082558646 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156496406 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133683043 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106278977 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234716838 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089687925 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100455563 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104548862 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084069195 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186059183 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190280176 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.11131973 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.135006202 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145438345 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176400818 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16115375 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131580127 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102797296 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14504159 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207952011 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159705862 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093031252 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141909521 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186643437 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189825383 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135745864 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124152232 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233834403 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188669182 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224952322 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117906445 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147183154 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146269026 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113119499 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199545258 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086279639 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230681098 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112500581 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168640567 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133523701 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122755863 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161197504 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127822124 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134082103 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182652481 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149301817 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110350643 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08239313 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148597575 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152977839 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135406502 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104327477 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172164538 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074792348 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194879737 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203444354 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111243627 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136155432 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125469822 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084926762 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138676601 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132840271 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114594464 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.121867523 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231188206 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119656721 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184144128 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201202899 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145223357 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169171585 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128726221 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66574578 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081625997 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215682101 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150776116 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239075963 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128313956 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150013947 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141171501 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154946059 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177130513 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133387127 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208245539 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164163863 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15180898 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107644782 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134219553 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141655254 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094450328 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135854966 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145460543 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14634021 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129838068 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152062974 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158694546 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111085353 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123556545 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192365924 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148206782 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202212254 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173648955 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087783415 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149625337 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199965054 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082953774 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18007819 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190500906 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139429444 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129052037 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110761775 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109400895 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234819228 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101479969 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196373341 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155006196 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139483552 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144955794 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.176276815 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165951064 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138282569 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157932555 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125425207 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143063154 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147446436 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08713936 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107173046 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136390337 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143469658 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102241575 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131763314 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.147035345 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185386919 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099886665 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098992403 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132705355 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203551359 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21446257 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117760103 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112308522 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149841514 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144003684 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147719708 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158116772 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084187394 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112165689 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.112484073 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11627359 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13926293 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144407383 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134556111 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141944556 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202761961 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114239692 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253179065 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099249708 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137033267 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071056192 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108096275 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126218333 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127905989 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112069174 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129073133 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235765391 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.126422088 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093755975 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122799874 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076351181 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112570828 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162191036 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141749082 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152774483 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127933935 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065440796 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139829318 seconds)
  done (took 72.393536313 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144343327 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.119994354 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.132804625 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.19024921 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160757252 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255795717 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.197040468 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240548808 seconds)
  done (took 2.538234952 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073977962 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.119596734 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104569152 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.118033838 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092141575 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069993354 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.296684795 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111909851 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069030978 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115483478 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120525268 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093761406 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.470993424 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067298522 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096465234 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087710798 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069217438 seconds)
  done (took 3.266850929 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.433560002 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.639222398 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.455095534 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075832715 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.958560924 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091243869 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.482102998 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.165128018 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074056629 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.442447643 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.740599337 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135164982 seconds)
  done (took 17.789987381 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077885501 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071882571 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112380877 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086068825 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100774864 seconds)
  done (took 1.553469778 seconds)
done (took 116.271693122 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084737654 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.347224125 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055065248 seconds)
  done (took 1.535767607 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086190732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086290728 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112751607 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085379666 seconds)
  done (took 1.477188818 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078251376 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079317004 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113440429 seconds)
  done (took 1.37472988 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.282433163 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168646979 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089223918 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086467711 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080614889 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107362585 seconds)
  done (took 1.381032189 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076062478 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077588991 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10122229 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079302256 seconds)
  done (took 1.432817162 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079081885 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054349656 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057046678 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083860699 seconds)
  done (took 1.380350471 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093898251 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108262645 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083357507 seconds)
  done (took 1.387731038 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111206026 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114823375 seconds)
  done (took 1.332402805 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08533575 seconds)
  done (took 1.185366719 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097678976 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140886623 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15817109 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.140075499 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167842057 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.139980417 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.115936024 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090327131 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106224552 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.117783327 seconds)
  done (took 2.383123196 seconds)
done (took 16.591070479 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08166509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.484367323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36265485 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119205638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668591466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35838139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043634808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12128943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122223712 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09660534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085782999 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676686893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969918667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.441120838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.957610663 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320398025 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676337825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070561273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095152739 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069997795 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.003020475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095945511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069648113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069686098 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675323126 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372544773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096480914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324088914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069518309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097334537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356237739 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0971539 seconds)
  done (took 16.244071796 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07283713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14694568 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075146803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085634213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099042982 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071325754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099741046 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070426513 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155339469 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070191844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113623402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06930837 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100151173 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071108322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088459099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097210168 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070938362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070789119 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096207405 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070501085 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114694017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069582135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070837718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096939773 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07011938 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108779219 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07091212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069963395 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096234462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072108153 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099532629 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070882003 seconds)
  done (took 3.913014226 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119021977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155366733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076494389 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131374636 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115782358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098688274 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175016281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095485493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15766775 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070572049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114449096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070610727 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130112378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071024203 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116017816 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070265624 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071373528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09664776 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07067525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097277315 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089486832 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096590551 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071532117 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070254091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097123975 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083361655 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097737795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071575996 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070557701 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098519204 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073795591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09683895 seconds)
  done (took 4.236880915 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076200574 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077425239 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111606154 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085484745 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099210577 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074363177 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07532846 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099242594 seconds)
  done (took 1.811631586 seconds)
done (took 27.307375101 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081501815 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072036024 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101870035 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083583986 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102361884 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080469069 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069916075 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10381847 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079296877 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075116355 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104753736 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070095799 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100495659 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069809317 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076345322 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096286572 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081251104 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101146996 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081433515 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08132708 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099044086 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079769196 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103207047 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08145699 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109165719 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081362479 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084989806 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103291898 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071360354 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099163912 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078349269 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.113198145 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070937523 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082261444 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097799336 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070459407 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069710514 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096258874 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081515162 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103444728 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072460675 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102847524 seconds)
  done (took 4.771592885 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092887807 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093662362 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.114375886 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067735608 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099643399 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067218582 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.118345388 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065166656 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061129245 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117282231 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057484064 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060903966 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091682439 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055883722 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061158032 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058494966 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.091005437 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058486387 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060693444 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088250011 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05995224 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055749044 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088968604 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064872917 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058158558 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.090542531 seconds)
  done (took 3.116342759 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079154992 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085296167 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117022958 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131406795 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136049361 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079239256 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108088033 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089752096 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11488604 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068803354 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072931499 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126414125 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089510121 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104171261 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070027979 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116558953 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084060463 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071037537 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103387349 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092543842 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113339507 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080820854 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121174651 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082712824 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069261987 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099136027 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073635723 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.119471182 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074622186 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078355306 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101970387 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073426157 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098699585 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080477305 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100703329 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072519825 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091756108 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107220885 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079914402 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097928538 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073270452 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070636553 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117425072 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114579123 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097149475 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076424906 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104535786 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080051116 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069720937 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115647646 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078614955 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09688678 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073827314 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069134708 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097233331 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083591162 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072211252 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099815433 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079289731 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.1002023 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082452302 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074379804 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113031677 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069384721 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104139201 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069050464 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071219691 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095442747 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093332717 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098577329 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111159274 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099164494 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071849572 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07881872 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10474514 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075597805 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097599425 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08491618 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079569454 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100675748 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079259482 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100392294 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072886486 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090100339 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.100151005 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07157884 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070962248 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10345752 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072506701 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098262941 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083044601 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070136649 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099954738 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087685155 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096804681 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071813275 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076889916 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102559295 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069182031 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109517809 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075100262 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097979334 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079379328 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069782413 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100227458 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079709402 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.101822988 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068642658 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075341141 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.104450422 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070410147 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070953375 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.10039141 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072399627 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.107324174 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075595766 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074544797 seconds)
  done (took 11.575511775 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.197056681 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.188243427 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072882025 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.181410546 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077755691 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109960625 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.18364937 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098335463 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099209399 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070749408 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071497291 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133095878 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.126971876 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108358816 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.109122765 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070204318 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116678057 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106868945 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184717846 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178624925 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118083754 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078520848 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072338106 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099352029 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073293596 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079716769 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114336723 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079170346 seconds)
  done (took 4.337460044 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085976217 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131933518 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076597226 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090762705 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121261742 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070489782 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103711726 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07194149 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11028012 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081922724 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09826153 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07538517 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076931852 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108018609 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071298018 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108798768 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080786496 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072525679 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100996666 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075199163 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.108492316 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083443911 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101766001 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069796174 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076917295 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097057389 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066951727 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115540328 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070200653 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119773786 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068465122 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075901624 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.111064317 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071623396 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098276867 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074366452 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073358604 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100986152 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071114531 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068926398 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.097034552 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060368214 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069046005 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.110584037 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076410741 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089922015 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075749503 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075712534 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102587177 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068142459 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100523599 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072234323 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073100664 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.107139872 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074684358 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075481464 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102581215 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068136461 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106109112 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073961451 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06656786 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096231869 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074998171 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068504465 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105426763 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074767122 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09621079 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073424873 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075172941 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104627206 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074518006 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072686113 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095660167 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072352719 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.103085671 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074330018 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074762667 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096800432 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069703896 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070696238 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085546229 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069531638 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05608569 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101790033 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068810253 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069059241 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100786185 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076495391 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111147859 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07169299 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.104068259 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071282234 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069525975 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100983916 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.0662877 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073593343 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113503496 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.1136414 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070390003 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069039221 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113396918 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075521781 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068824711 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.08638606 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077184928 seconds)
  done (took 10.083073525 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.100586757 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094874704 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099945127 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084688918 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125557552 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095546718 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105683331 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076531648 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071903707 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114938337 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070046767 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106112082 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070261012 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079204794 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126972309 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079142271 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099988892 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079764386 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074483963 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137918841 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085107563 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112357723 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082841204 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098416902 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075344163 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082324576 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.126506428 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082192652 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108851884 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087256494 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081969232 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126359381 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088746543 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102087612 seconds)
  done (took 4.382866543 seconds)
done (took 39.378283406 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.210428512 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.407570988 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.188236793 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.093016456 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.238101236 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.208949849 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201088803 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.192591643 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.43156698 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.193342515 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.432289433 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.855870657 seconds)
done (took 58.790848395 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.265094015 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.336913534 seconds)
    (2/2) benchmarking "String"...
    done (took 1.502506993 seconds)
  done (took 3.983416957 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.615322828 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.185982529 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.452352084 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.196103752 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.192531143 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.499500329 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.8160786 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.047106388 seconds)
  done (took 27.524257121 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.205013409 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.562152759 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.592921555 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.590353614 seconds)
  done (took 18.086900999 seconds)
done (took 59.61185334 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.200221367 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.275540101 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.200184045 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.17436143 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.299080426 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.223715397 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.360804015 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.25996991 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.197973139 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.181128913 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.209703349 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.208034534 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.199190508 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.268338985 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.197016698 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.195336489 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.228510466 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.80510819 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.584041223 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.210043193 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.220141177 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.232096683 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.198511631 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.196207585 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.195879625 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200453295 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.192810424 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.218897579 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.509906973 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.200963024 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.289701495 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.457783298 seconds)
  done (took 189.726099214 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.197205112 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.228460107 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.324119105 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.244096549 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.659217503 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393925878 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.331202655 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.743201511 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.213613904 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.217852729 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.507916984 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.193432538 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.54621684 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.157824137 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.204706683 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.30124884 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.492606872 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.533395144 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.206747156 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.43710614 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.223129839 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.429182738 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.324605078 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.432326357 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.218630344 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.234848304 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.239169897 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.212619989 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.385252934 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.410870328 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.236749286 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.245306777 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.77890976 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053529479 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.221687377 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.212461818 seconds)
  done (took 150.128736038 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.456769024 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.196916055 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.194733293 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19704208 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.227456227 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.196917986 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.740387448 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.74178453 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.738687321 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.827776128 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.2594867 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.451729199 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200073389 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291547771 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209545033 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.196275781 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.2115418 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.221917328 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199561212 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198532981 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.741470603 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211591037 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.196446926 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205668983 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.198323313 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231785032 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589559645 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.760794221 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202019909 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230259851 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.518435989 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240280058 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196239617 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.517539288 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.75804023 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309280047 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197875113 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230116426 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198939104 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.469108036 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197794258 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199224404 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199218746 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202421512 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.790357445 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.199320826 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.742546196 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200003971 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.128617774 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200934733 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198164967 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199344838 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.655441984 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.703599992 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.201480527 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198470728 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203511533 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.201642442 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199672861 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23238224 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.696174463 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.29939239 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.203539472 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.206656956 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230913928 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.200302235 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.534389913 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203062778 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.582889949 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.258160103 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.317258942 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.74586934 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203791156 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293225915 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317999351 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198768148 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20286317 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.202588034 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20230366 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200981716 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.308096623 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199527966 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.603431468 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205025055 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.203719126 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.261223043 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.296186155 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199105831 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50799151 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203798395 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.20242234 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961054877 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295509428 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199554152 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20130484 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202655319 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.608517245 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.745524586 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.401161646 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.204134767 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.997055488 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.205560474 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.623127672 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.722318125 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.805711546 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205007238 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310139752 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204153372 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.20563284 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.203885756 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232954528 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.203418142 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263253839 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200384824 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.599933247 seconds)
  done (took 347.198176227 seconds)
done (took 689.645397575 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.879358522 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.863450277 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.972118184 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.857466863 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.836849545 seconds)
  done (took 10.550036697 seconds)
done (took 11.69449931 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.384656666 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.385108751 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259944086 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.384485222 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230470776 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.403919608 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.363632976 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22157862 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.303440342 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.276855424 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.300462479 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250534231 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230240793 seconds)
  done (took 18.139209137 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.508871815 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.495138468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262954414 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504849225 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238338142 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.498542538 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39102322 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.396894066 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387958564 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21511796 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215337838 seconds)
  done (took 16.260295112 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510833934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.494643693 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266308566 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516859071 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241405392 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506160481 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389958217 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.401162945 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392353426 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215810737 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216105742 seconds)
  done (took 16.295507176 seconds)
done (took 51.839536698 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211869068 seconds)
  done (took 2.355223782 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245383577 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.409726581 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.225290217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216501972 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.211853624 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.212700849 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215884831 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213275322 seconds)
  done (took 11.095681419 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211256554 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212810829 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208106649 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208608077 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212051412 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207872605 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208674941 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210270158 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210971929 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209819359 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209991355 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212135609 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212058797 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210847941 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.210184287 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.21173332 seconds)
  done (took 20.512462435 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212039088 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210501833 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20887381 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.210061842 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.210004634 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.211132521 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209542446 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210447492 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209510239 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210506964 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210553092 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210426982 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211160635 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212239294 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210362663 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210796387 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211396101 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209982357 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215647147 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209702732 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211391674 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210059926 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.211222561 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210659092 seconds)
  done (took 30.206375178 seconds)
done (took 65.314272746 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.290065156 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.893641006 seconds)
  done (took 9.329761458 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213993511 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212878528 seconds)
  done (took 3.575937282 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.214274902 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212158412 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211468098 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213186396 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213094973 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212845844 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21274386 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.214098952 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.211660271 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213398249 seconds)
  done (took 13.276039369 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.214121357 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213171814 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211219293 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.213716946 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214395649 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21099123 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.213993384 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213082027 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.212302466 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.210290884 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212917861 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.210101773 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212070254 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210340148 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212633703 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209920312 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211710885 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210792524 seconds)
  done (took 22.965348479 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.215366053 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.214093101 seconds)
  done (took 3.579257812 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.213256608 seconds)
    (2/7) benchmarking "second"...
    done (took 1.213305293 seconds)
    (3/7) benchmarking "month"...
    done (took 1.212265322 seconds)
    (4/7) benchmarking "year"...
    done (took 1.211102802 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.212428323 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211319752 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.210837467 seconds)
  done (took 9.632766347 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.217357054 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.387351155 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.465892369 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.794887719 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.217031073 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21971952 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.015512903 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.217702595 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220751058 seconds)
  done (took 13.906819959 seconds)
done (took 77.412793023 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.210097831 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.205205041 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.052185765 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.220590858 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.2215368 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.55161819 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.208874637 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.344529159 seconds)
done (took 37.164814621 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.2232729 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.919239494 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.966709968 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.210229368 seconds)
  done (took 11.246576757 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.204337298 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.120568251 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.203272667 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.220032859 seconds)
  done (took 17.901389753 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.824699889 seconds)
    (2/2) benchmarking "read"...
    done (took 1.538821222 seconds)
  done (took 4.514066188 seconds)
done (took 41.03566027 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217006373 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216292527 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.214032644 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.216438042 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.21407811 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214242684 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.216669289 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.216291108 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.216662322 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.21665385 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215832175 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216309527 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214355076 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217879257 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.215144826 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214564481 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.215489973 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213984711 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216354835 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.217738255 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216892519 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.216742393 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21530622 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215287096 seconds)
  done (took 30.332298976 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.220319046 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216689304 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.217987419 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.218525958 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.214568269 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21786151 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.216904103 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.215633891 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.218106754 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.219379679 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214081797 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.215621722 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.219035139 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.215523986 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219345239 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.215970581 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.218842866 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215423269 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217845686 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.216535504 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218881314 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216020622 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215685186 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218142907 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217716187 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216234015 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.218018869 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214879474 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218493174 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.215245613 seconds)
  done (took 37.66686011 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.223385781 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.225620541 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218604877 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.217300186 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.217449425 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.220509161 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.219975605 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.218197152 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.2176893 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.218870437 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.219244318 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.219093094 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.218375178 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217560758 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.219759915 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.218660016 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221307502 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.218826555 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.220293165 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.218999311 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219470902 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.218834521 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.218788102 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.221819938 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.220986277 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.220773626 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.220932142 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.220603261 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221965415 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.22037965 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220660612 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.222553627 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222462075 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.221400003 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.223524912 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.222155827 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.227738984 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.230759079 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.222672366 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.223881124 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222725787 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.220826054 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.220846864 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.221469723 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.222637272 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.223348644 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.223073618 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223873612 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22188681 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.221657887 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.222701177 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223252327 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223464001 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.221805904 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.223721585 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.223185604 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223833985 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223178021 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.222665267 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223987316 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224260983 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.222806778 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.223616318 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.222986331 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223116954 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.223309437 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.223274133 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224238772 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.223989041 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22379853 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.224200181 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.222910776 seconds)
  done (took 89.124243868 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22314677 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220261237 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223499937 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.220172218 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221855475 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.222912671 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222685477 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22479972 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220893678 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224012918 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224187382 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.221639279 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221460654 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224421678 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225055045 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.221656293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.224475543 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220445325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.225297194 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225551876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223784006 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.222960501 seconds)
  done (took 28.06346893 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225750601 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225363558 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.221652138 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225949788 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22365551 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224776438 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.224658946 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224857819 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225732997 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223997053 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223977107 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226361483 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.225506452 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222906623 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222784253 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223373187 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227984557 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223646413 seconds)
  done (took 23.203059266 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.22584509 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.223772473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.227633078 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223866555 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.225140903 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22847786 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2232891 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227246365 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.229389298 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.225640329 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.227001025 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228075903 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.22652349 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224564667 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22737942 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224651567 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.227692839 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223556708 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226301055 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225393777 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225412988 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227701774 seconds)
  done (took 28.136908562 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229145969 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.227692062 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226121126 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225607668 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224972182 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227331387 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228912072 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.224016115 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.22780046 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.227546026 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224966596 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.227990604 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.226021097 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.226170981 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.225427266 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22458998 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226858655 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226592428 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228058811 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225817045 seconds)
  done (took 25.693543514 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228354367 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230122198 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.231075761 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230101486 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229945416 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229705781 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229899044 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230998303 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227689229 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.230187753 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.230973355 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23021654 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230746103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22976674 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230263623 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231507888 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231677539 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230531773 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.229617907 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230286649 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231428517 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231302056 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231506898 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.230983221 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.229230732 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231617613 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231836933 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2299106 seconds)
  done (took 35.615677145 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22997119 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228914164 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.226560988 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.226709209 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.227883913 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.226215726 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.226974573 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.226852719 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229303634 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227529045 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.230880761 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.228503306 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230456387 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229817571 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229195097 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.230853983 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230674818 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.227280897 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227354255 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228799066 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.232426103 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23039731 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.229177186 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22881024 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227760846 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.230754544 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229443627 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228327381 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231586673 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.227658619 seconds)
  done (took 38.030960238 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249472985 seconds)
    (2/2) benchmarking "in"...
    done (took 1.248212876 seconds)
  done (took 3.664690796 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229673651 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232405908 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.229053639 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228863045 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22917446 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230035251 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230989556 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228870741 seconds)
  done (took 11.004340917 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232725784 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.229948177 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23334298 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.233374509 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.233793521 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23588186 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244283917 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.247972187 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.236408812 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.233902731 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242363144 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245007325 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.239752787 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2334515 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235797417 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237864557 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.233181266 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.233716424 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.234486219 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.233054813 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235044544 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240104867 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237728513 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.230797833 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236948369 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250814706 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.243191477 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.233106708 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236235573 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243039921 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.236126526 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.23074255 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.23416136 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237929907 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.235451954 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.234022581 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247312697 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25087602 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245062688 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234060739 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234933539 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.232570453 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.238489386 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.239692156 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240542257 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.236187101 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23692066 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.231420612 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.23885176 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.241826355 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242848163 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237055505 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.2321238 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244953767 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.240160611 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247533776 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.253791975 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.24167746 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.248559559 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.25053214 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.253534059 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.247638616 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240699919 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.238792329 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249362213 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.268268328 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247124303 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.250701441 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.233992888 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.236079212 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246935562 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25329783 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.249977171 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.235904852 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237335032 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238648248 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238430765 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236128411 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247909559 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259358303 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.238339902 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238714234 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248798851 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26529719 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239230745 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.236468186 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237590798 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.236872413 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24046807 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253301254 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.253265496 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.237675075 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.238044607 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.239760842 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244098122 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.23694485 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.237739907 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241988505 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.23371666 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.237949203 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237482889 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242677562 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.25161382 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237892941 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238393045 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250770431 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.236839577 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23930404 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.252777938 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.23803523 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238840035 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.24123375 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248250983 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23624867 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243485871 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.252211018 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.238678574 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243405754 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.238866939 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.238903236 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250910731 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272973701 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.239208372 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.238478623 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.246559284 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254534567 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240079569 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247246717 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.240188243 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.238729974 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.238686389 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.242886033 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241028923 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.243226688 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240879853 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245148215 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.23613914 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.240271411 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.239285597 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.24327418 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245203 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.242611381 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.245279252 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.246106283 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.240226683 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.24468417 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250267138 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.242557245 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.245097689 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244267276 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238135372 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239611097 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244803887 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.242725987 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244027692 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241391921 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.240705669 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.241999418 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240666696 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.239536607 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240354737 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.243716971 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248023425 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.241066744 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25036507 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.243940433 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.239762057 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.240847278 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.242013266 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244923585 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.242346705 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.241754901 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248404873 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.25313039 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.240831807 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.242065635 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.250506678 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242110958 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245921002 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243538939 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247980022 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.254938031 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.243012915 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.255471219 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.243603916 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243440553 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.243570622 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245282489 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243771526 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242796061 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248737269 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.251476768 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261612721 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257535006 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246322833 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.248100305 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.245980376 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.247915 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.251860357 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.244523185 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.243383353 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242119612 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245485407 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243697211 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249396269 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.243221848 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244176129 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242756964 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241783859 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.24401117 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243011827 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.248489501 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249002567 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.243087687 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245309017 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244877424 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.246525676 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.241831815 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.246436963 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.246591113 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.244827226 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.246694773 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.259569645 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.245483981 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249046061 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248583443 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.247416712 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.247777441 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.245852222 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251741862 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.247269056 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254845505 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.264399526 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248746108 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257129622 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.264085579 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.246909639 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.252710105 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.245720609 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.243456693 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251390711 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.253749347 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.245101945 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.246669363 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.246985215 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247088286 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246572319 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.256422295 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.243229547 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.247909828 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245030257 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250788667 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242925059 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249464504 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.24897189 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250398535 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252383067 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245454195 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245485351 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250574711 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.247044096 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.246355485 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.246846029 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2522419 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.255829563 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25608804 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.25146081 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.252980044 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.250853851 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.25132641 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.251563446 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.249389214 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.250407754 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265238745 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.258698302 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259453187 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.253089695 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.248603972 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257741041 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.25167187 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.254731029 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251741694 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250682254 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.250775389 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.250610992 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.245783351 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251085945 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248197527 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251456016 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.253137707 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252015666 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248138306 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247362521 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.250279216 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25022557 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.250058892 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252217555 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.249046617 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.25583303 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252854034 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.25190296 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.251337601 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260458967 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266733173 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.252103396 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.251883942 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251501979 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.250980191 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.253417814 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.249498509 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.255032653 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258297011 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.253568102 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263664319 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.253222438 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264974617 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.249945827 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.257849205 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.259870442 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247053019 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.250141462 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.253279925 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249320893 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263086617 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.265898869 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.253514548 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.254893477 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251144244 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.251382289 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.251083782 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250939314 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250067409 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.251363054 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266014173 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.267828265 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257623663 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257088432 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.247841284 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.251436868 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.250815717 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250530871 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260496192 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250354801 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.255501377 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.253900762 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.25433339 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251414145 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.250967481 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.250557233 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.2490931 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.252046123 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26156555 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.269366364 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256439743 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25126965 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.264893609 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252388795 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26280314 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268102688 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.255663398 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251565359 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.252082791 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.256683339 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.254607374 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.256744185 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.252625081 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.255308972 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.254389683 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.253070511 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.259946436 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.254360339 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252571808 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.254942944 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264833684 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28042081 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.257564293 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257661564 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.250771761 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.2575873 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.259514731 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.253680559 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.254592444 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257459105 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267225288 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263710354 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.255497889 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.254296544 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257321871 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254446598 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.25367965 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.253119671 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.254414336 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.25391414 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.258502736 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.255154446 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264851888 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.25352087 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.257245728 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258915502 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.25711355 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.268583748 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.254719737 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.259282618 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254508846 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253686355 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.259293292 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.258479613 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.255961784 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260113943 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255132142 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.255778113 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264733922 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.265419707 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.260899412 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.258058702 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.256134068 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.258444173 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.259431599 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254827174 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.256591147 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255547243 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.260263399 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.255799859 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260481086 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.258862742 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.255332601 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.256867803 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255017088 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262109946 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.266055591 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2591569 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.25305177 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.25484772 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255351052 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.256538711 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.259929478 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.27101171 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261824598 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.272195963 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.270048002 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.260853022 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.259604449 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26272773 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26887521 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256272041 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.261848887 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.255930704 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.263079999 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.26010562 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.263689644 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25847628 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.269630169 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.25840386 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.261500928 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271999577 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.27700314 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258044895 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.26207752 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.266035484 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.260043068 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.255506254 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.258922509 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.259515067 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269868816 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.279032677 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258608565 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262932425 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257716869 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.263481894 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264307017 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259906856 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.264155571 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.25810056 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26202292 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259180955 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25805442 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.256213682 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.260048491 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.261354775 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.264154363 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.269558672 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255072464 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2638081 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.261173234 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.262590317 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258736037 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259042245 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.257320701 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.255741472 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.261422918 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260340681 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26434524 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.264184715 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.261426784 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.261801404 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.261409198 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258726765 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264988121 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.272481685 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.268657015 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.25597724 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.261878475 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.262887317 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.266036966 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259470181 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.260962908 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263867491 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.265268021 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259413506 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260827372 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.258958417 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.266278587 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283027262 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.274919296 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263303462 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.264449279 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269649819 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.259376037 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.25788727 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.260190779 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.267096417 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.266879852 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.271195678 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.262799825 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272647651 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27871494 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.265372078 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.266680659 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.267279839 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.276610517 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.269178815 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261712534 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.262416855 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.271655853 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.285635965 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26187589 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275016595 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299028536 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.28309472 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.266322476 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.262752467 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264094496 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262340367 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.268415565 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.261195314 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261871268 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261891731 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.261894105 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.266537346 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271312511 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.26672696 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.260486011 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.262419919 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264650614 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.26791224 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.258432139 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.262213123 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.263727275 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262278169 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.26472168 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.264326118 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.266531804 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281263332 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.280035086 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.262656198 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.262985778 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.260541598 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.271828389 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.268897147 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279203503 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272245678 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.263529735 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26609044 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.268186507 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26442211 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.262291845 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.268819157 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266912272 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267502141 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.262708118 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28278234 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275112711 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.276539449 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.268289569 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266936426 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267104121 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26955152 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264319507 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266969088 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272708899 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.269269867 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272104257 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.26562693 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.266001945 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.270241036 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.274942132 seconds)
  done (took 748.005420613 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264006702 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263055447 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262902499 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261846152 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263933641 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261964476 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262319986 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261989162 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262214169 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260846386 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259444587 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262323032 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26259091 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262747988 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262063556 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262606903 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264510723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262834592 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26363453 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263748321 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262096594 seconds)
  done (took 27.712769267 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267157774 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.264065284 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26342739 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266841292 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263402252 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.265293078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263268107 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265528217 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266447815 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262966369 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.265767375 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266827235 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.264407017 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265109599 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264886814 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266204927 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267454105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264581649 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.266675725 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26494119 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267100341 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.263629876 seconds)
  done (took 29.03734048 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.267801444 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267809014 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.268619427 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.265207827 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.266712281 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.26397689 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.267750716 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.267952366 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.268258709 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.272953349 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267827593 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.271152058 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.277492877 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.274690168 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.274939437 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.26746475 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.4117945 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.267867019 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.267381583 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.268347206 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.266080366 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.278038722 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.262751112 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.263859747 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.269639405 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.267688828 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.27001083 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.267380364 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.26856041 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.272907056 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273510968 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.269335396 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.271260868 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.272503165 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.271109251 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.271550213 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.27381108 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.270059118 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.264956211 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.268808754 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.282664255 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.294794794 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.270719915 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.27987788 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.269245349 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.269871101 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.275314547 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.278711307 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.267312483 seconds)
  done (took 63.611433497 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.268520171 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.270369449 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.267112523 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.269182514 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.269079785 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.268664165 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.269751975 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.269828687 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.2675569 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.26645995 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.270578887 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.267279484 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.266198364 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.269308148 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.271103998 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269436513 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268997564 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.268496754 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.267881188 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268051655 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.267961013 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.271338253 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.270208951 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.268310864 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272071269 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.267884334 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268168685 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.272326482 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.270373592 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.269599002 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.270737356 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27166184 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.27287196 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.270751191 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.267094053 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.270656563 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.272103797 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.269529566 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270591104 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.267563846 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.271991084 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272298007 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.271657614 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.270681457 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.267025654 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.268966549 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270038565 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.268405492 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.268062365 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.271931019 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.271354937 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.269499871 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.271678472 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.26908729 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.271431142 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.270624043 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.26840859 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.269151693 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.271016138 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.26994704 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.269917708 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269998298 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.269336312 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.272473892 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.27302562 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.270159879 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.269416049 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.271484453 seconds)
  done (took 87.550559406 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272070823 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.275551487 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273411045 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275226316 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272691797 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.274018977 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274031728 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.273195215 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.273893548 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272770159 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272512063 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.273149834 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.27266183 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274125453 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273984757 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273604787 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274643035 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273302247 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273835956 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273892861 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275953952 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274661208 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.273965349 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275442415 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275538759 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274106878 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274679495 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275084845 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272599498 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273942861 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276100776 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.275136956 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275543059 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27467582 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276022968 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.275791481 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275588928 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27570411 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.276658235 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.274368364 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274453123 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276464285 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272762292 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.275869725 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277011139 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275849836 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27625807 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278293479 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273979505 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275474144 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.275681084 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275921196 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277640292 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276344581 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.27661646 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.276350055 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274223807 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277324707 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276062357 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.276479547 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275992677 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.276462123 seconds)
  done (took 80.254966235 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274885686 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276706711 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.274129218 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.274557049 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.277337801 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273730655 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277187045 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.276771148 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.274656278 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.276026605 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277681329 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273962745 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273930546 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275607479 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273738816 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275094097 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273367712 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.274796351 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278065771 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277618644 seconds)
  done (took 26.721058366 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275562902 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276535011 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.275222293 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.276031212 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.277573422 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.273857037 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.277756758 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277332172 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274496802 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277206364 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279101791 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277212497 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27433145 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274065535 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.279211539 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275958454 seconds)
  done (took 21.632549789 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.276276288 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.28011194 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.278215362 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.277302001 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.276722998 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.276497329 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.280331681 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.276215443 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.278128925 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.279407353 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.276492657 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.28000273 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.278697779 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.277745441 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.275810977 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27707899 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.276582935 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.276873407 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.279231348 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281184685 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.27722495 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.276709058 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.279536278 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.280177159 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.276510906 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.277110139 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.27702417 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.278109324 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.276901228 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.279475043 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.277470934 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.278130035 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.277329142 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.276514256 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.279807046 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.278019013 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.280209798 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.281311043 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.280315413 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.28056585 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.279926518 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.277289695 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.281014293 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.280141588 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.277008327 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.278593629 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.276325716 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.278207221 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.277207131 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.277235525 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.281004423 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.281130285 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.281153339 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.280703195 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.281165657 seconds)
  done (took 71.528583216 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280106354 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281210889 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278802768 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.28017652 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280159351 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.277729186 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.28060518 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279327748 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279470517 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28223152 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279585466 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282346565 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279572395 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280580297 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281345418 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280597904 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.279076576 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278881755 seconds)
  done (took 24.255669726 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279781003 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.279561672 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.283285567 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.279234002 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.278281169 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283598485 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278921197 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282909164 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282288077 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279869324 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278625522 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.282787599 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281181923 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.28173718 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278984965 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280233953 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.282314413 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281980483 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279104923 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278264168 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281555474 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283981327 seconds)
  done (took 29.393378966 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.284954298 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.283568691 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.304600025 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.333261842 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.320756354 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.284530725 seconds)
  done (took 9.026298646 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28348739 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283823615 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278906912 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285760297 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284666416 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282011586 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281202107 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281343174 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282587689 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283496753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282163603 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283536454 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284532348 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281061814 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284922561 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285356121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282120149 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281767336 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283109802 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282935345 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281920636 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28606506 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282395847 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282705794 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281369777 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281909817 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284387923 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284238412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283387546 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285500618 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285023176 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28418588 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286383963 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283956177 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285382825 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2854986 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283188101 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285683724 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285159646 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285170225 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286223531 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286552953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287821743 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283451568 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286373755 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284755278 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284912069 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282996658 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283994036 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285593702 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285240639 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284240569 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288554583 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287779491 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286444743 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286676923 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285648942 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283277677 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286537059 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285690496 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285543691 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286754922 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284670373 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28582343 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289786124 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284732337 seconds)
  done (took 85.99070543 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284770835 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284235902 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284362231 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285096957 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286243754 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285214495 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285123828 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2857371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286513517 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286030529 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288297378 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285628354 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28491448 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284780006 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284918158 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285759374 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283720706 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287555274 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286105199 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288647253 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286170785 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285024864 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286271841 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285767446 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286597803 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288384924 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28602066 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286480155 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286511737 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285619118 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286751687 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286642212 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287470361 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286038285 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287232256 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287482993 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287813581 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284598553 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285685088 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289731759 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287560908 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289612529 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286706262 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287716472 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288147426 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287654791 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288070407 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287059888 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288870411 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288323274 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287593448 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288762835 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287731038 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287958268 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288078232 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289009254 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288106821 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288094569 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287941487 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291937852 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288027612 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286309538 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291283149 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289131735 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289709444 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287508225 seconds)
  done (took 86.163467032 seconds)
done (took 1742.572349617 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.38537508 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.343913631 seconds)
  done (took 13.951731066 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.456030597 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.40839783 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.288807108 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.325959389 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.291179243 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.302351822 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.315334047 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.291178913 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.292152527 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289843028 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.294074711 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.476746537 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.317402573 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.291627086 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.292699322 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.384995557 seconds)
  done (took 42.550144953 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.321176209 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.29966723 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.412322245 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.314017078 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.321691439 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.48089589 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.352458103 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.29883284 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.47398828 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.338505982 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.885091268 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.320659742 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.297210644 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.420003301 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.316600688 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.482519644 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.552294689 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.891940298 seconds)
  done (took 30.003271423 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.760621615 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.307785574 seconds)
  done (took 9.294718871 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.327934403 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.293908469 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.33572945 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.303078642 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.329024562 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.364601486 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.343238592 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.354523282 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.316636215 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.367682929 seconds)
  done (took 64.569056031 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.31668324 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.297022317 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.299302746 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.295360308 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.287469362 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.303079774 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.295700374 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.291500328 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.029075838 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.426928237 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.312879237 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.304508791 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.297332524 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.298258549 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292740529 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.336074556 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.42476385 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.293274202 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.292015412 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30251023 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.298745983 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.436525912 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.341018667 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.294154647 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.425496427 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.049163164 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.301472351 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.304733056 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.418335806 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.294164863 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.297388071 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.299154656 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.300859447 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.869809591 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.82341691 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.320823521 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.320625707 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.308942919 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.295368723 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.486151919 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.29818656 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.305992686 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.292579711 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.792956336 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.465223593 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.418100434 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.644694748 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.302621324 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.300050565 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.361188323 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.301926071 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.299010541 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.330912739 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.081607416 seconds)
  done (took 109.905234936 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.296659978 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.784718632 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464415474 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.314249203 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.088728054 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.961527034 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.295236752 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.592278937 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.304261899 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292899134 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.63955326 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814516712 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297659746 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.361631588 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.961066164 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.384509434 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292144779 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.060866915 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.292278286 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.297951773 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717583902 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311529183 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29503428 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.335109635 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.332680084 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.76548576 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.894808703 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.740596028 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.296359998 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.294346125 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.777228459 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.299448034 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.346294791 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.295975131 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.580274973 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659152248 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.636943149 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.299882666 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.305238512 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.295558644 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.32341528 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.760175508 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.644907106 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.295749907 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.305446892 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.76593992 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.294113572 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.296217758 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.300340843 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49916982 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.24341929 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.296450548 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.795989404 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.294858149 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.671211795 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.35052611 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.317594301 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794897827 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296014266 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.374874473 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298799839 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.29509037 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294774569 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294758351 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298608814 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.651357725 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.705295172 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.301093296 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.651674883 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.760236571 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.296106982 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.826046143 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.210561236 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.309063579 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.342608644 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.297018973 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.863828516 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793552859 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.303040243 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295059413 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.636589028 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.297175093 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.628302412 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.310985883 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31385603 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726793746 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.318430859 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.309494354 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.297475612 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.295814557 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.923813454 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298816344 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.588305414 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.321469776 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.294537966 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.297484977 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.343040173 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.298952205 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.297422194 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.297741695 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832966034 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.297580429 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.603323884 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.319387052 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29622471 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.315796493 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.297266678 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.30002991 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515340225 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.769668128 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.30482348 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.300207942 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.296429055 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.298337179 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.585888618 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.302534845 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.611687598 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.297307857 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.2977959 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.298184621 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.981104707 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.311246835 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298327945 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.298512804 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.159942982 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.512641377 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.320382346 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.299793243 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301358299 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313256485 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.675252781 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31402995 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.348688916 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.302400774 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020120948 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330698579 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.326534155 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.902692256 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.301847751 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298348333 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.305964179 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.300234387 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612759046 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.591262716 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.615300217 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303835916 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.300291916 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.009983579 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.338439468 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436421568 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320081803 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.301215244 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502029796 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.583375454 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299675415 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.890796209 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.300251651 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.516146413 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.302045201 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.624086294 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.797767977 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.301620932 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305638283 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.010659692 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.983080848 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.922327212 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.305158679 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.6478839 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.317286078 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.75673244 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.302131733 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.301682058 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.737176897 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.303951095 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.308734004 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.299113569 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.302303111 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369964934 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478213075 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.785243087 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300144366 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76873904 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321717417 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302043522 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.306896345 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302395141 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.65396319 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350106682 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.305273635 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.329136087 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.302385013 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.306694021 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781281626 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.199897024 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.305257138 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.458649496 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943948867 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.301892588 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.302755978 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.940554651 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.583757835 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820630874 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.319977491 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.620722567 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.311841296 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.344258795 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.028815293 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.302977919 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.782451289 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303641753 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.305224375 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915980382 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.304357821 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.359778935 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.302865768 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303246656 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.841550492 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.30378011 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.304328422 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.690808782 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305678145 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5531266 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.303690433 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.308175372 seconds)
  done (took 1104.674870997 seconds)
done (took 1376.172509645 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.303875576 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.308495105 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.290093401 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.305645904 seconds)
  done (took 26.44943071 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.311862636 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.311935658 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.309299004 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.312120983 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.311772259 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311912478 seconds)
  done (took 9.110623056 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.615445406 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.308143562 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.307161488 seconds)
  done (took 19.472090235 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.540707517 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.59302633 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.695060064 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.534124257 seconds)
  done (took 10.605868522 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.310403233 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.311707265 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.31232817 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.311475034 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.312603336 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.313038068 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.312975217 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.311985482 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.313412069 seconds)
  done (took 13.051331347 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.33505665 seconds)
done (took 85.26435362 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.35482713 seconds)
    (2/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.212740459 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.725365937 seconds)
    (4/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.972688499 seconds)
    (5/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.139629823 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.61121303 seconds)
    (7/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.319041275 seconds)
    (8/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.39147331 seconds)
    (9/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.290512415 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.342353266 seconds)
    (11/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.136522144 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.812031352 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.573334149 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.204519427 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.344036309 seconds)
    (16/309) benchmarking ("sort", BigInt, false)...
    done (took 6.307824288 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.935200882 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.344383865 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.025708005 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.196679328 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.34363223 seconds)
    (22/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.923190198 seconds)
    (23/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.369474088 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.568005928 seconds)
    (25/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.803368176 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.001991772 seconds)
    (27/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.37056987 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.195601475 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.681616785 seconds)
    (30/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.302601535 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.180485419 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.019956697 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.755396612 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.246824694 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.406603371 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.434121893 seconds)
    (37/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.691264047 seconds)
    (38/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.39159173 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.390944677 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.849656109 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.846196255 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.549653806 seconds)
    (43/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.331241454 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.93353422 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.33196069 seconds)
    (46/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.332103735 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.332038854 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.309829173 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.012111023 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.956524067 seconds)
    (51/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.769083721 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.417176759 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.101516086 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.587776465 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.332724012 seconds)
    (56/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.432230694 seconds)
    (57/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.308436891 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.326396204 seconds)
    (59/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.701049753 seconds)
    (60/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.299131605 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.24848893 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.362021513 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.092160541 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.426114203 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.295407427 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.310674786 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.713458179 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.334882336 seconds)
    (69/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.33426336 seconds)
    (70/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.426239108 seconds)
    (71/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.391933521 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.309391517 seconds)
    (73/309) benchmarking ("sort", Float64, false)...
    done (took 5.641162584 seconds)
    (74/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.290774484 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.64465872 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.802733281 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.293963388 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.75815705 seconds)
    (79/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.423381199 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.716812955 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.331663457 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.293307857 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.356185733 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.365546897 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.526664437 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.291944639 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.383637421 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.91098543 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.417020471 seconds)
    (90/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.325597594 seconds)
    (91/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.219113717 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.450203989 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.336687443 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.725520531 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.852729585 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.318474743 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.382203448 seconds)
    (98/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.43131255 seconds)
    (99/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.53492946 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.33264445 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.35304925 seconds)
    (102/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.701103645 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.211147068 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.972226813 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.443019277 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.833682891 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.373265017 seconds)
    (108/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.629397985 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.327186707 seconds)
    (110/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.860985654 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.535709497 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.310780322 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.339376193 seconds)
    (114/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411638848 seconds)
    (115/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.664474009 seconds)
    (116/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.947450239 seconds)
    (117/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.317779293 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.311817314 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.318111954 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.730637419 seconds)
    (121/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.31400462 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.310576821 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 1.834134846 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.333888993 seconds)
    (125/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.409117104 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.179595203 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.607381891 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.740584373 seconds)
    (129/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.063417343 seconds)
    (130/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.947545398 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.094441355 seconds)
    (132/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.293590896 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.674876195 seconds)
    (134/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.441100421 seconds)
    (135/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.337733003 seconds)
    (136/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.415599597 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.414910173 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.538511082 seconds)
    (139/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.327363577 seconds)
    (140/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.306618026 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.521642518 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.699224354 seconds)
    (143/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.112457115 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.504059444 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.892535689 seconds)
    (146/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.784048443 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.103136795 seconds)
    (148/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.673598431 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.335913914 seconds)
    (150/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.316614974 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.964264262 seconds)
    (152/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.504117858 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.332963617 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.947429229 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.857252774 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.740770954 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.408871754 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.301730869 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.326043155 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.737767428 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.017257331 seconds)
    (162/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.309073883 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.721131477 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.729643127 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.29646327 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.645924575 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.004395115 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.409092722 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.940383576 seconds)
    (170/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.320655948 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.143957661 seconds)
    (172/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.360215137 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.933068001 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.174692741 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.272903306 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.766691598 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.8158744 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.332825407 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.338556724 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.718583992 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.74738524 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338669598 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.387320986 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.364534767 seconds)
    (185/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.396262081 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.11656877 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.421471589 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.354186163 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.314257429 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.310855246 seconds)
    (191/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.956380747 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.3165367 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.33305802 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.508562976 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.856041682 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.345968644 seconds)
    (197/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.227880414 seconds)
    (198/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.65916259 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.249843664 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.743102356 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.36948676 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.18768721 seconds)
    (203/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.431292985 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.646627912 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.318885812 seconds)
    (206/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.315958001 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.400967113 seconds)
    (208/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.807388228 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.346790396 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.38332985 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.863755289 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.5330886 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.743704653 seconds)
    (214/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.399780327 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.419943239 seconds)
    (216/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.723909725 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.378410221 seconds)
    (218/309) benchmarking ("sort", Int8, false)...
    done (took 4.344892965 seconds)
    (219/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.593578576 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.339752568 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.263460786 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.318057408 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.167649485 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.901348159 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.757444708 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.358730251 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.680683547 seconds)
    (228/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.534829984 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.806003288 seconds)
    (230/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.1884991 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.633350784 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.389867514 seconds)
    (233/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.388507898 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.322966146 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.316956184 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.40152887 seconds)
    (237/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.4050904 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.826060478 seconds)
    (239/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.328131756 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.340602131 seconds)
    (241/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.50899342 seconds)
    (242/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.332307211 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.599290707 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.338668601 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.321734105 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.226736245 seconds)
    (247/309) benchmarking ("sort", Float32, false)...
    done (took 5.343222336 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.934875964 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.544224233 seconds)
    (250/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.677054189 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.328160402 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.116721513 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.486307057 seconds)
    (254/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.461396898 seconds)
    (255/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.121161166 seconds)
    (256/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.330676786 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.348970567 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.654928365 seconds)
    (259/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.481393047 seconds)
    (260/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.440208268 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.703370484 seconds)
    (262/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.333565982 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.654363635 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.321586121 seconds)
    (265/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.336043859 seconds)
    (266/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.906947715 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.97319965 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.399586389 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.318523771 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.899651459 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.925944731 seconds)
    (272/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.698886825 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.224535476 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.332616046 seconds)
    (275/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.872783815 seconds)
    (276/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.917076774 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.417945066 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.42832841 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.402637029 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.390269883 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.321924515 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.429980402 seconds)
    (283/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.188476287 seconds)
    (284/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.709752981 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.371159286 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.280980243 seconds)
    (287/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.510166918 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.520249045 seconds)
    (289/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.321111989 seconds)
    (290/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.676350198 seconds)
    (291/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.401713379 seconds)
    (292/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.679234262 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.196465558 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.411483685 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.651234405 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.361042175 seconds)
    (297/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.712564858 seconds)
    (298/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.330585796 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.559622165 seconds)
    (300/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.324272607 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.080872996 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.336875274 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.617166552 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.099965511 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.341428656 seconds)
    (306/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.346254527 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.328861208 seconds)
    (308/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.517770444 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.340133478 seconds)
  done (took 925.593397809 seconds)
done (took 926.837275844 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.351879545 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346342385 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.331994378 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.351731221 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.442371845 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.364832325 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.341670984 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.332810182 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.379559279 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.380095451 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.328481576 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.362740229 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.332347053 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.331457971 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.329646905 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344352671 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.381320199 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.329690817 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.347450864 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.342181474 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.347881578 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.329302759 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.381715979 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.364369044 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.335977027 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.334226707 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.334584121 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.351781601 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.440953265 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.334717859 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.336399093 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.341599405 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.375428972 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.330176969 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.326447118 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.349637798 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.342071089 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.341873666 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.33818277 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.363666331 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.788927678 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.330711469 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.331571836 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.334196074 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.334442323 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.336169377 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.333262731 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.339058619 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344300794 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347176996 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.785021334 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.347616115 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.335787714 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.332548797 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.346105953 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.334197903 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.336730193 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34990003 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.353051034 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348565351 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.381243826 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.337227274 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.336286123 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.349251474 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.339647742 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.824032669 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.32727081 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.33973764 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.790076058 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.337912698 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.82131255 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.342672296 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.336654835 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.348461412 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.365637494 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.379906943 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.329970163 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.3336431 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.339995447 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.332470329 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.344991671 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345361324 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.339827375 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.333893285 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348821703 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.368341034 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.345592613 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.336256351 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.346147634 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.35385231 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.343086729 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.346067367 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.339247114 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.331519364 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.346166552 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.338860837 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.33863969 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.338713777 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.339528343 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.34874031 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.79384059 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351807775 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.332584908 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.33444153 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.33690737 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.349389951 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.794609624 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.33567099 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.358179105 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.382733099 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.337389349 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.373341895 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.33845376 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352977636 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.348829056 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.341387715 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.333057062 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.374821272 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.793447303 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.349021737 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.338978816 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.333525956 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352873472 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.337548778 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.333802653 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.381905436 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.336541689 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350627645 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.458706696 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.347256265 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.36771933 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.335905733 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.340403255 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.366196233 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351938966 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.369444307 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.338371631 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353102645 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.353458211 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.335809601 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.348248564 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.351482678 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.340430817 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.344778239 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.33232541 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.366635074 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34952555 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350297441 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.359265382 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.461039256 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.337019154 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.380050816 seconds)
done (took 225.894409324 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.402196631 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.335588312 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.446180969 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.335153301 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.438773479 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.436214821 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.333701457 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.33264162 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.334095959 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.771218138 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33361952 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.335784212 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.34032801 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.33419625 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.421737003 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.336835029 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.335292352 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.683672987 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.336551403 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.410699406 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.338944242 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.335965845 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.33638867 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.721780347 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.338644846 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.335937406 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.41066804 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.33836995 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.708192789 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.340517564 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.336549491 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.688794479 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.430053151 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.355287035 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.348322564 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.345156059 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.441018925 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.356873833 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.423306751 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.42164744 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.447681598 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.375042803 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.337869688 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.335333281 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.342046563 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.339239737 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.336285718 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.364497618 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.342402001 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.336478376 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.702979566 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.349711379 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.337182777 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.338256317 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.337811806 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.368220101 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.336836795 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.339772709 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.430611081 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.340358878 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.404827078 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.747925179 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.721687754 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.339226294 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.343011944 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.337867017 seconds)
  done (took 148.987800609 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.408154165 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.415831021 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.459874672 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.343698968 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.391760458 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.464695105 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.346698162 seconds)
  done (took 11.099202075 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.347745299 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.341241103 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.391963049 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.392970373 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.340170176 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.489088552 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34010686 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.35482321 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.338657375 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.397232231 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.341633487 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340449279 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.348389919 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.339383322 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.392810311 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.355715546 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.457584386 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.344140159 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.341171741 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.494798143 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339596682 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.349592847 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.395386245 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.352715848 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.341661714 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.350629852 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.912876225 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342151906 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339014736 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.34334024 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340972614 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.38391015 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.341021409 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.339675307 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338007522 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.460599017 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.342294924 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.33881021 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.342943414 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.342951152 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.34225705 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.341981689 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.343119042 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.341179196 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.343279869 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.366687992 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.343677492 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.343081746 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.342950707 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.344523148 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.395205999 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341505759 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.341430907 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.342588026 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.401557892 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35103527 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.343890203 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.341354014 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.343413532 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340598614 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.496348099 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.392748822 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.343632716 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.394412465 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343334608 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.344745295 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.344421345 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.343800242 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.401267371 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.342058683 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.395140855 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.341079044 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.502950372 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.369118325 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346434311 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.351314934 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.350256117 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344942167 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.340104838 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.352547834 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.341653584 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.34733973 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.353097711 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351546774 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341713645 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.452644241 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.456741556 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.341387879 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.360952714 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.355313946 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.343368558 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.401811606 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.346036243 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.342399558 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.400587153 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.462868185 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.401208966 seconds)
  done (took 154.238466312 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.351745201 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.356520964 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.348383745 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.365008464 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.348764621 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.347883072 seconds)
  done (took 9.392471986 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.351814752 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.347731133 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.347883864 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.34494448 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.346051548 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.346699589 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.345435045 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350840839 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.350984079 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3456602 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.34785331 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.347892298 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.3470735 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.347257179 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.347415216 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.345788597 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.347363298 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.342970122 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.347829275 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348803631 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.44495875 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.347724186 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346659778 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.3497284 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.352224094 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.347728357 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358069394 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.34786083 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.348845155 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.35820358 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.351490271 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.348517008 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.35215758 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.359330119 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.353012894 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.351503856 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352122962 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.349938664 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.346817484 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.34816418 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.351119203 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348250121 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.348317087 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.34911114 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.35208066 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.358412371 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.355242351 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.358214828 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.348740297 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.350159563 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.350210583 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.350240619 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.349445608 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.350789436 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.356252766 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358831851 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.357305061 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.349996644 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.349211834 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.354646536 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.35176443 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.350968229 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354311794 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.356125405 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.356884587 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.350377342 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.354518352 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356164121 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349403679 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.347471384 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.350985095 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.34823444 seconds)
  done (took 99.614501469 seconds)
done (took 424.598532363 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.809261533 seconds)
  done (took 8.088159954 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.47041818 seconds)
  done (took 7.749955962 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.957619884 seconds)
  done (took 22.242781775 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.378069399 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.349511506 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.368988678 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.346156058 seconds)
  done (took 26.723605684 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.893750608 seconds)
  done (took 8.174097417 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.343545998 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.346478463 seconds)
  done (took 13.972806454 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.475326177 seconds)
  done (took 7.756148581 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.833753998 seconds)
  done (took 8.118922852 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.364510004 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.354276378 seconds)
  done (took 14.267586473 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.338597604 seconds)
  done (took 7.620025457 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.537698781 seconds)
  done (took 8.819591064 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.346039336 seconds)
  done (took 7.626522072 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.428164379 seconds)
  done (took 7.708129005 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.608809134 seconds)
  done (took 9.889247197 seconds)
done (took 160.038524831 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.345274181 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.344361742 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.346531123 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.344800057 seconds)
  done (took 26.659690472 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.385323508 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.384333784 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.38435411 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.395924297 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.387292327 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.384754189 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.376326612 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.376622964 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.396254915 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.388163735 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.388134175 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.386112795 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.385849161 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.376249679 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.387399277 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.387569478 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.395615166 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.386853479 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.375888863 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.387124144 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.352743429 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.394927705 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.387704648 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.353017751 seconds)
  done (took 34.485862591 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.554287307 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.424978342 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.509158613 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.40850397 seconds)
  done (took 7.177473656 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.40328552 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.406095105 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.416889841 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.455552132 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.498339446 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.414718712 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.378492852 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.373686492 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.360986519 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.404610968 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.479803385 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.421173027 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.491156074 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.352363036 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.551039246 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.350964767 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.352321915 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.404009802 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.457623103 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.47666472 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.352292293 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.403542112 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.409501534 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.421716004 seconds)
  done (took 35.319032082 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.351866448 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.359868627 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.357476629 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.353659838 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.352039582 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.35330479 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.359172055 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.354740833 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.376217799 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.355786288 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.351831515 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.353362076 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.35373819 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.353368151 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.352643051 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.365127014 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.36474142 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.353550665 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.356261562 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.359725935 seconds)
  done (took 28.422142744 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.34923672 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.265221765 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.701199651 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.604887302 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.35114142 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.354650757 seconds)
  done (took 28.911049785 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.429386411 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.56720639 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.35707082 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.751846656 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.825560648 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.356466031 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.357354831 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.613432536 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.94686575 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.946476172 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.417325837 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.427535917 seconds)
  done (took 20.281861721 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.358549268 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.354136864 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.36108083 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.369394655 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.417727886 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.36430868 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.364559234 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.352444631 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.419594731 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.424797074 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.36476376 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.420168047 seconds)
  done (took 37.858485786 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437245574 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401054571 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.457513534 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23870292 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.734522336 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561708259 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.244981917 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.803852743 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.356391406 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625335563 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350619852 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44015938 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607121915 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351052805 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353772861 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.438089748 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579239572 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884102914 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35406235 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.541335864 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378737862 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364232342 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.648088531 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.380259178 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563540366 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.486246415 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.612451961 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352220773 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651503507 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3621337 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364037884 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353025766 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62624509 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066062131 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445447014 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361877947 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.228467561 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.06729371 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.339182526 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.557010012 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358780587 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353972433 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36373592 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352519257 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288611445 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354633271 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829350622 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.361127106 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.062956058 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352606152 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364605347 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449332644 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.357455109 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.170492905 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45939506 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355152921 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.353164098 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362229889 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922697114 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.111709933 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357689234 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.291477586 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524528546 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.558982775 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995293977 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.454952421 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.356071274 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35748341 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290340001 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.632209897 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374068245 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492614494 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.373512095 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016687289 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092449793 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.363223253 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.282333071 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943528788 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36095205 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.292971811 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585499864 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354566425 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293702285 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.300154646 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.291279845 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130007318 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367769012 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.863893052 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368242579 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.807776508 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.370157418 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374096053 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379003654 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.580807199 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.238620378 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356564544 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.35859795 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472192117 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376970257 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.814900613 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293841862 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.359113494 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612271412 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.567327939 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371484989 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.449285805 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576275314 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367882987 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.373357642 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364363092 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.367216774 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.973606393 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369793593 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.10878036 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372897786 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356543923 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179206996 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375144201 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.457560007 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365949078 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622173091 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.210280397 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359808253 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438751294 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358602151 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35765317 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.646943677 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.878309062 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.356247604 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.360195929 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360308618 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.371383913 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.359043126 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318646386 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.355268739 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359508558 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.360365476 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58534545 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367176815 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636125768 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29155516 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496566798 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.456556383 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.581801746 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.5931898 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.356829696 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618915899 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36757888 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36488073 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372385396 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377987852 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45677368 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380244868 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.358303679 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633728839 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.363249136 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.363452779 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.661143908 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.843164424 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361590201 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.362569557 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237191596 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977698908 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333111182 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356876223 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253121109 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.371718114 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423175566 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364887524 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.36916571 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.327228623 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.356685007 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.366396161 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.3623821 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582918829 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372987408 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.647902207 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440685714 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.572052835 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.984627446 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37486397 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.29480741 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.071377626 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.053766266 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360839907 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295727829 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360637767 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369873116 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372012802 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.68771055 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984364899 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363035579 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.558774365 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.368035006 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37116471 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.364968429 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361042564 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.281047919 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133963286 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365973779 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.387174616 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503819968 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.374626715 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.296787071 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.365360194 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366809688 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361966984 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.361420335 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396107603 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.575121058 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862845851 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622363428 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.200483615 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376922206 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.758336834 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.393592547 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.358599044 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374194716 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373611344 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.379190077 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36874465 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.373824049 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.627877369 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046001476 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932578042 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116904151 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929961345 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415715352 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.374794399 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364837596 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.824944581 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299398124 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921319147 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572100338 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.827464025 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321739886 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579938542 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.610650064 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173119161 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373354464 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593754659 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378381236 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.367347374 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377910486 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577040681 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397953158 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374928773 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293056741 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.663829579 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606348256 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374299715 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440610799 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820150485 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366058839 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368598694 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.366811716 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.824036444 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551741736 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.08439762 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.545308868 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370369554 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377546079 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868670633 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375602847 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.592745777 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024433687 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365618301 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.585220952 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307756694 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.37626848 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.375165159 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.365961768 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.799623604 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.367691547 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.623652144 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375536024 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299996271 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376488509 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935047595 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.222670296 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.372949419 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365304962 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180664328 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383687499 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669250937 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.381648708 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.27628774 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372290787 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299351881 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300659441 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.060774547 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370666565 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334757937 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906664667 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.487887014 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45987855 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396729681 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218364335 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.622151041 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.379676278 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993062528 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594665381 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.311052243 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391102814 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.467662006 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366577526 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.354436448 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367456244 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603221317 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243983376 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591322644 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.504782138 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.273143166 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.367946369 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581402469 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368583997 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379706645 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634472262 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.077890389 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.3714725 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127092821 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39195317 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382164126 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.292433276 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.536461129 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376023617 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447316647 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381300336 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.379788718 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.378961992 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555012298 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374763033 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372209187 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.381640399 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463615299 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171348803 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.321886385 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.373106068 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000238155 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148935716 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996732271 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383115785 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368797688 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369161933 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304618962 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515141897 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.598529178 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642757788 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487089591 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.589217409 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390105221 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378875138 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375406976 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581435902 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644973142 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.269782703 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383971254 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384778463 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.369660042 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380192922 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.581288906 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914905192 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97689716 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494321188 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383663065 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.831640624 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645659398 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369483299 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371918846 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96760013 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.381218404 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.854076028 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.375470215 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368774809 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519869532 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382153647 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091524324 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.383409101 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.527957256 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.145100335 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.703413965 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631266784 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.893628667 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.381916505 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003095013 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.132675431 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638179022 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438751583 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383231341 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.489650669 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518286367 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.367055825 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372976841 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37232556 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220533083 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.081127404 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.381818056 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006802917 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638428716 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.370407158 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.378185563 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393140678 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.38236006 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595718769 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170797297 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599974895 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380831104 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375623543 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190055845 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00436606 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384423852 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306753345 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.374350757 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629242626 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609859951 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392807709 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.824944007 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.082922654 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969849439 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.348844667 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394876878 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374650626 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.136424327 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009679454 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.334296977 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919608516 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936991182 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37369521 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649731307 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.378444662 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386619273 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653094613 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.378530472 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388281619 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387403273 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.993432888 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211357582 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.385741532 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.626687024 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.312337356 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720307007 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.078540831 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311879793 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377195559 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.576429469 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377541499 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496070536 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383940858 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.380579201 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372606289 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.109319671 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660513487 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.379948289 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.369623586 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.370200409 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379788989 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387808228 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621048444 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382421944 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.062206554 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.725048347 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633444372 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.373837949 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.361877488 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.379919544 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377291923 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.374611959 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.580103723 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.701162144 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968812997 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.378909573 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.38681027 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381004363 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.592082082 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587413056 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376115484 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387374368 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392595292 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393572448 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.281552195 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.885345732 seconds)
  done (took 1618.234060611 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.406531055 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.390157628 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.421994299 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.44376107 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433916132 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445022045 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.489025227 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.422851407 seconds)
  done (took 52.766978515 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.385375939 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.602351679 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.408278218 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.379219223 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.388758191 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.387774214 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.850159187 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.381384161 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.387152367 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.388982666 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.384956507 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.380216909 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.047993334 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.389694773 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.391568471 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.374733392 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.386709378 seconds)
  done (took 66.235141301 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.381570632 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.737804865 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.495173295 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.377012824 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.729687001 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.382538822 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.625270184 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.430727839 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.394617508 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.635839625 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.047544683 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.408687206 seconds)
  done (took 80.961528959 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.389344593 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.390109449 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.389293293 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.388541695 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.39116839 seconds)
  done (took 8.261573155 seconds)
done (took 2046.858353453 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.629250367 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.144185799 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.099462585 seconds)
  done (took 5.55757216 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.528456624 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.577788168 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.748569178 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.7288781 seconds)
  done (took 7.898339672 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.657380351 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.764828829 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.560633426 seconds)
  done (took 6.296381389 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.906628868 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.384406057 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.450438005 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.378448412 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.38111267 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.37942129 seconds)
  done (took 20.454634678 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.382947454 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.385840981 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.382492308 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.385733557 seconds)
  done (took 6.851935971 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.362998148 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.15888508 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.368658659 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.382113359 seconds)
  done (took 18.587373167 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.131846937 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.141063025 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.126197007 seconds)
  done (took 7.71534078 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.381573856 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.226653534 seconds)
  done (took 9.923013592 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.690612851 seconds)
  done (took 3.004930143 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.514349185 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.653472422 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.492185209 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.443531879 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.500294011 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.648935702 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.215972949 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.744925951 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.434517197 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.809931462 seconds)
  done (took 29.775274676 seconds)
done (took 129.751683032 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.433018873 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.787958237 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.589531757 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.405924463 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.613550047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.591046555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.889646892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.370157413 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.91360892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.90051806 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.448408296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.61911458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.609047192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.785182685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.611780702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398944097 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.617493278 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.462842946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.13202201 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.289802697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.886568746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.041005714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.27768489 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.056297344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.618143948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.589095625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.624007229 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.395683667 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.30901916 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.636710791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.539991789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.384954602 seconds)
  done (took 196.144826121 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.384258585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.40479017 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.384458857 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.382701394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.383709852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.385104923 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.386308889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.420338438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.392729535 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.395828963 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.385020459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.386261451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.394224513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.385309724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.387638033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399348589 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.396458647 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.392477012 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.384546426 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.392362975 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.385264294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.415701775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.387261711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.386046295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.386718988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.387226462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.386552939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.399186191 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.401882019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.385275432 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.387911571 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.384962292 seconds)
  done (took 205.838208923 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.387647331 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.386603127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.396756298 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.389161016 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.400109091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.392088689 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.386612311 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.385221596 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.394937381 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.386766927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.387009234 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.386159671 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.386973288 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.393265317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.386555273 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.386146674 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.392992897 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.386166477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.385848696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.388388127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.389475358 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.386528905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.386666836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.406229808 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.405111403 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.387230591 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.39478751 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.3882158 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.407558817 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.399774533 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.387784558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.386694006 seconds)
  done (took 205.832518716 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.580595571 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.392163685 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.394295616 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.333197442 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.39335528 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.391973012 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.385052591 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.584597022 seconds)
  done (took 14.77743358 seconds)
done (took 623.909640255 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.791468232 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.498828494 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.598577686 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.414539999 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.231256704 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.415055114 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.414019657 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.593749633 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.342925163 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.599634749 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.711488994 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.413326678 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.852637252 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.411051945 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.678090039 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.514211686 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.340556714 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.455329611 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.757187372 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.011427121 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.675487085 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.005266874 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.596101672 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.343415149 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.866109781 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.975067154 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.188466168 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.330602316 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.410595705 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.753810617 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.115103686 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.438977546 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.484671478 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.464114927 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.516863518 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.501233027 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.386912226 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.460186715 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.60257005 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.702353817 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.004293971 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.155322918 seconds)
  done (took 95.346113975 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.382299515 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.381844631 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.382445611 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.383184421 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.381992628 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.382698343 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.382732399 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.381623428 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.382042369 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.381726697 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.382313004 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.383095062 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.383875918 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.385065551 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.382677243 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.382976627 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.384099107 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.385514621 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.383248658 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.38285736 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.384627848 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.384265772 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.383505522 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.383683581 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.383499129 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.383281152 seconds)
  done (took 37.285752791 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.396077548 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.639779403 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.831106938 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.405901435 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.39936948 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.401616828 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.485391713 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.39884751 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.403241783 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.402442331 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.562977639 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.400015255 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.438243764 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.855347235 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.405508311 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.396782699 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.397751219 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.401184868 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.646336833 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409817474 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.487186562 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.399849927 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.488104167 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.411584945 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.404865545 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.402116999 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.405174907 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.911175805 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.402337427 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.566229187 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.2494345 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.48637693 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.859493589 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.841973681 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.250450028 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.402173615 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.399809212 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.571161141 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.404446731 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.40167621 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.486388127 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.404362067 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.856325117 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.054615209 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.419688314 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.39969125 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.92614299 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.572600912 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.680311519 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.410782688 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.878412716 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.406889698 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.402334518 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.404618486 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.679446061 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.409550439 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.402767411 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.962597882 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.408444263 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.489544782 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.401384472 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.405326583 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.668429103 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.405175847 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.651217517 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.403605037 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.41042209 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.404128551 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.863101611 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.406208791 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.062391117 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.4195548 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.400260941 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.565835496 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.648254123 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.961591646 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.406946449 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.666298094 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.865576191 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.486636922 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.40964765 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.896734757 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.492439519 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.409847106 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.403864668 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.402955215 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.401770214 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.445706226 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.486394356 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.99412193 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.053536415 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.965311662 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.490854786 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.418120172 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.405738868 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.948233944 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.417616442 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.401602436 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.836915049 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.065915849 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.420234173 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.413426995 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.045914279 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.421978806 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.492359235 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.412376163 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.850038231 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.406963009 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.445721877 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.403573517 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.413596314 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.408134953 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.491425045 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.410974677 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.403461819 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.032247132 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.589080247 seconds)
  done (took 184.321236244 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.400795306 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.400066217 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.40104419 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.399131246 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.398869809 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.405781316 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.399699472 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.399899829 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.407904908 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.399158063 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.399049582 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.401668041 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.401432161 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.408056128 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.425669224 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.408641937 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.055740187 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.398625648 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.401593196 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.400805725 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.211723522 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.40313271 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.399831058 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.40129383 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.400331997 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.401535549 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.40307755 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.403200475 seconds)
  done (took 154.071377283 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.406385719 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.014949039 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.405503075 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.549993768 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.423823251 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.40204859 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.550700413 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.474162389 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.409606596 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.402001921 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.402060187 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.730581162 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.405516187 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.958530146 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.614011231 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.545764664 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.959799522 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.406238132 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.404875136 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.401429329 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.5512205 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.413588101 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.736510812 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.031340187 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.406435194 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.04322641 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.391920793 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.406339506 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.408437423 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.023652553 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.403626313 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.74341006 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.488645853 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.473351396 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.025587343 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.959712578 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.960143614 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.559097516 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.407385909 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.402347327 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.402843058 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.393913007 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.016930296 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.405620374 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.408060046 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.007985662 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.421035172 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.407898956 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.416745102 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.404024804 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.474763487 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.477855483 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.73839297 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.025103924 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.488336274 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.42676543 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.549582231 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.780624261 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.409406226 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.961839978 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.393094029 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.019040328 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.409255187 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.394915253 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.406905158 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.410590275 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.566713971 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.549282621 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.965768882 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.413509751 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.965233194 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.568590155 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.405403506 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.407221472 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.410786114 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.020432599 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.96642008 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.566860775 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.554942498 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.619910708 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.397701937 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.409942878 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.395852386 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.492331598 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.40766624 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018646301 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.965889018 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.40961703 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.409623697 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.409167642 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.408501045 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.607421233 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.022234528 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.49535688 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.957711036 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.753366678 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.740870862 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.408796512 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.475712817 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.409366238 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.739859402 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.410762479 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.473506174 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.843470289 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.73896147 seconds)
  done (took 168.477932103 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.666665441 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.702478991 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.507348336 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.52984177 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.960122367 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.986927335 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.597265734 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.540259118 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.521555527 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.666409911 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.633594988 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.499729445 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.602430753 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.491187639 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.136646066 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.483125616 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.506179653 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.538680733 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.523458153 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.498800641 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.064069531 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.705477047 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.591607565 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.842660779 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.513250038 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.21726291 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.977058745 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.933700419 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.587189765 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.729155528 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.939939923 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.593184881 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.411976988 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.108218062 seconds)
  done (took 68.148047188 seconds)
done (took 708.972253067 seconds)
SAVING RESULT...
DONE!
