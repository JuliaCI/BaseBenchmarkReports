cset: moving following pidspec: 596
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.338252626 seconds)
loading group "string"... done (took 0.543275148 seconds)
loading group "linalg"... done (took 6.989146467 seconds)
loading group "parallel"... done (took 0.151923575 seconds)
loading group "find"... done (took 1.08821002 seconds)
loading group "tuple"... done (took 1.803804175 seconds)
loading group "dates"... done (took 1.170086835 seconds)
loading group "micro"... done (took 0.211000578 seconds)
loading group "io"... done (took 0.911676759 seconds)
loading group "scalar"... done (took 36.019419709 seconds)
loading group "sparse"... done (took 11.088666204 seconds)
loading group "broadcast"... done (took 0.906265592 seconds)
loading group "union"... done (took 11.777467322 seconds)
loading group "simd"... done (took 4.106817445 seconds)
loading group "random"... done (took 8.444371914 seconds)
loading group "problem"... done (took 1.706925344 seconds)
loading group "array"... done (took 19.630732109 seconds)
loading group "misc"... done (took 1.627524581 seconds)
loading group "sort"... done (took 3.135755863 seconds)
loading group "collection"... done (took 16.39072665 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483887876 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123093048 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113988164 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118542513 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144436296 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113969132 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122038508 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082950238 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.828885914 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148161551 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11865426 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410910302 seconds)
done (took 5.15237331 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172832133 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082538262 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081246552 seconds)
  done (took 1.32337612 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065103725 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120683078 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066639851 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067210092 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066577527 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065575194 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065587754 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065813038 seconds)
  done (took 1.679044127 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072588083 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068616911 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069365765 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067777344 seconds)
  done (took 1.439111301 seconds)
done (took 5.850068195 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.760945133 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204067071 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182360578 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396008299 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12911989 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153934892 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636896828 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.302549815 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186508682 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081013974 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10389097 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315625989 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106682531 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636464089 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076161439 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089976051 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138911516 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.409476227 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067180039 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081886997 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088848482 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127968972 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086861638 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074071397 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143233384 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067249582 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129188186 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079933096 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065895485 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206410069 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172553086 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.649494572 seconds)
  done (took 10.149901875 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095077564 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096517241 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068092514 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135712194 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097830689 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069143899 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070697732 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066977837 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086253229 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127323608 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088147877 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100427339 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065053107 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068188766 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08425135 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204639269 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081248889 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080804577 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069882085 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07555553 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118568533 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077748961 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077226976 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076844578 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127865079 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180142816 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099142875 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098633786 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068614333 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07951706 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114324467 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125432874 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066912744 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065910802 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123235893 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093590888 seconds)
  done (took 4.623325876 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.27953558 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139261113 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090287096 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13112723 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064714737 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106469604 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065418141 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080546984 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198845646 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.362571052 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.576676957 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110720299 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103371548 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067509472 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06799401 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066825678 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347518653 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108128453 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104390445 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081084113 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070287238 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069285765 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341319001 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067702465 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064071841 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068012074 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057807617 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123679357 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068333087 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.920673105 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124268147 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065980509 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100016746 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160862856 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107064849 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08566581 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272106523 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068362881 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064227889 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150445267 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069878032 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064681957 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06415701 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065932299 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083800319 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103317403 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112030566 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065180753 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067429269 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161571297 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065281978 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078886553 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.982554422 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154161166 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077211019 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06403432 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244277669 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085092456 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069092079 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064338044 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064597761 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179964603 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133487271 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067029706 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06650235 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067445117 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068565211 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349371167 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065933616 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.714361618 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06944873 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077187154 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068894906 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071405549 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072475738 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072126436 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084883233 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065881882 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074634561 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065198274 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065380367 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066198262 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083746635 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358715301 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065818636 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067483514 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068832817 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085364462 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095937716 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066872899 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064757399 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.200265289 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068761525 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066027965 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105414258 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06713029 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084501465 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069081218 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113200142 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066187757 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.095703611 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066999783 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096237877 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069583786 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099134096 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081280837 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067833721 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.399873627 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064616487 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065813361 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067771428 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065104874 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067015843 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066140736 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078465512 seconds)
  done (took 20.887025342 seconds)
done (took 38.099593729 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.267760407 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074499563 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074765366 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075120958 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074711992 seconds)
  done (took 1.820635129 seconds)
done (took 3.054934621 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119368076 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098575928 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064474232 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094975878 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063448313 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098936549 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098650852 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080288831 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099054691 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063791083 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09554037 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063795216 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063723463 seconds)
  done (took 2.358218959 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082205816 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083041309 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069119659 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081449113 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063102417 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081204365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08014807 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087875457 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080468212 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071515129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063785035 seconds)
  done (took 2.069778529 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081737727 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083393951 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069305871 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080978694 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066135574 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080802085 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080583454 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084994137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08055975 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072538724 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063358678 seconds)
  done (took 2.067732222 seconds)
done (took 7.718557082 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077203563 seconds)
  done (took 1.291499554 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.584406284 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.060933466 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081026462 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111707651 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183119599 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118246592 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276348143 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086005862 seconds)
  done (took 8.896117097 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087023012 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068610555 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068822279 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081870959 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071199558 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070876323 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071388704 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06891066 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071326381 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068771986 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07011184 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06821402 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06916341 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071587438 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070819176 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069236078 seconds)
  done (took 2.433065066 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091922549 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090546418 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073641033 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074253358 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071985912 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071536013 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073971858 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073273597 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070149717 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071654544 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074202476 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07322823 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071164328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064778337 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073753202 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075185284 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070472949 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073980391 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074658105 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074127364 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074133197 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064136179 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071406435 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073483436 seconds)
  done (took 3.092757103 seconds)
done (took 16.936002723 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113445299 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070882115 seconds)
  done (took 1.404360529 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081054718 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083123281 seconds)
  done (took 1.39252499 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083902044 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065974835 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090967585 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078405176 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066299215 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065630388 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089038307 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065658493 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065665631 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065832036 seconds)
  done (took 1.966298952 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068660707 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078429478 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070739566 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081686818 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073505235 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06403183 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072165766 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067614619 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078016242 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062640123 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071067537 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082473713 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071563264 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083883358 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072276937 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068241197 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070592747 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067215228 seconds)
  done (took 2.53464955 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065302958 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066811645 seconds)
  done (took 1.363492367 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067162539 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064326059 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066357099 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067592129 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063342735 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062178359 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063457663 seconds)
  done (took 1.682538462 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388746675 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109803771 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297704242 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070207624 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081393702 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24814719 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064814008 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070196146 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070121298 seconds)
  done (took 2.672881215 seconds)
done (took 14.250711851 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078013354 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085593244 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094949144 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.361624997 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09113119 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065431881 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113431582 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190021253 seconds)
done (took 2.322264659 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214897582 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609362477 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385383083 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196063956 seconds)
  done (took 2.427009106 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323574603 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086250163 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059022592 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065799216 seconds)
  done (took 1.780164208 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065717295 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067427663 seconds)
  done (took 1.377087217 seconds)
done (took 7.042809976 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066015618 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065856998 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063763942 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066344431 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062840147 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063046851 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085779643 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065763276 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065378256 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065214577 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067963379 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065598247 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062898335 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063242471 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063349694 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062981347 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065480116 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074021518 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063083112 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063133775 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063365858 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065544078 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063065094 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063230522 seconds)
  done (took 2.854853273 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082743752 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066239864 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070463427 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070975579 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069784225 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070858267 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070225372 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065691954 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070836678 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067726602 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069237758 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069472671 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067513701 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069608555 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067991473 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069573702 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070530312 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065823979 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067773601 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069447773 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07021113 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06602004 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069510276 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07045045 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069033929 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069430686 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067757128 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065989361 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07048949 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06906885 seconds)
  done (took 3.33220456 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069337995 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063385236 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064496384 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07019174 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063694918 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063911469 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06301785 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063438879 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063946261 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06322969 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064178166 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06283242 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062843845 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064098343 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064366729 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066628832 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078257219 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063469866 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063340196 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063341759 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06616338 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063113351 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063399284 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062970572 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.174604788 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062662857 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063338347 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06287684 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063771455 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062784519 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065795174 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066455206 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063206307 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070117855 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066638543 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063077183 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066650692 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062625148 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.0633574 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062847389 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062453912 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062910381 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063034584 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069512023 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063087886 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064338789 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062799846 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064368393 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062904322 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065224201 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062276299 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06251787 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064882721 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064159769 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066497336 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062492796 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063509636 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062338304 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063754329 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062469554 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062722329 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062888402 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065349869 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063327936 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077144253 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069640883 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063011054 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064594262 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064347067 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065457145 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064707114 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075973256 seconds)
  done (took 6.026561338 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090422551 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086359246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06549721 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064826544 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061657319 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063701459 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066908785 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063570421 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06496384 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069186342 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063609305 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065202718 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065190945 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076597558 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064202361 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064971297 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069311406 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061662017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063982064 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0669895 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063772364 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066795921 seconds)
  done (took 2.754839465 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153134847 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069808494 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104708988 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072620425 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067428722 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072332223 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069198269 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069420203 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069270663 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06764903 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068061035 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069319047 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066910074 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067736026 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067621228 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067770084 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069529724 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067606884 seconds)
  done (took 2.618702295 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076445084 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065981422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086766467 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06553281 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065179394 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067550677 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070371061 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073616641 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06783889 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065466394 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07371172 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06819216 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067722302 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06533885 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067986512 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065573804 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067864412 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065224872 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073707353 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069826409 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069750185 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073527081 seconds)
  done (took 2.793390305 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079207905 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067665511 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082308514 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067461324 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061910173 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063692023 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069368748 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065677437 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069366789 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066868398 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065309456 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063980715 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068862359 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065714712 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068436221 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06550045 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067326559 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065310486 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067235929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061693942 seconds)
  done (took 2.614073833 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086092511 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066824745 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067367189 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075154267 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067100635 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067208489 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074863375 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067092077 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066686995 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088406358 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066781134 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067218033 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074375032 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071475766 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066410375 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074644274 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074387027 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074248637 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066693438 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066417654 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086132777 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066778319 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074270783 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067079438 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06640148 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066929391 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066783261 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071048 seconds)
  done (took 3.25803306 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066502111 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065771712 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063280951 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063437783 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063171717 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063397112 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063214213 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063200475 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065711477 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063136025 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065394213 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065252742 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065475326 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065726652 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065726151 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065225682 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065755451 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063050565 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062934731 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063087558 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066171178 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065121471 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065400632 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062889007 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062984147 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06533874 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063230763 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063119027 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065095607 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06295498 seconds)
  done (took 3.196863081 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074956527 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072530682 seconds)
  done (took 1.413905029 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062779189 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079389978 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062983326 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069034304 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069495564 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066573712 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072749594 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069104246 seconds)
  done (took 1.815639428 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080750502 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077252046 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067022771 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080038253 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076398969 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082020026 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131422555 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066419864 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072620594 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064090433 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079172497 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065121979 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071637868 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066265934 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071087554 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072166102 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063870317 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07170288 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067778947 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064703296 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06687053 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074651349 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067790125 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061539324 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066692328 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08704496 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076391857 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065815991 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068450617 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072944559 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071081432 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059718941 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065422294 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066087648 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063624768 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075075063 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080807274 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068660895 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074074332 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066472128 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075730897 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060503204 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069889555 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.0718338 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07554766 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065930936 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066503497 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060541522 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063732657 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06813993 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061383441 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065695846 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060622731 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075378824 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0691641 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076151577 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064921766 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067213961 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068569666 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069404794 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072756745 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067719351 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068244199 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06553781 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07542405 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070437403 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074141954 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060977119 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059904871 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06375458 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074932422 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087873434 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071822098 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066706104 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066766933 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063497716 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068721047 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066562691 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071297736 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071769149 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065581478 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070799996 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073245681 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066221836 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068213103 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073602989 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063835572 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068959146 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064014444 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08212581 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064727377 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063912942 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063862546 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075919939 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069101423 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065486466 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063456626 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07307701 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060163415 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066281195 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066434918 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06611979 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075427155 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069634153 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070295445 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073692126 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072203114 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065003319 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067560132 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061272789 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065618801 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063916228 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071418782 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058751289 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067452085 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065194197 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065062821 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199259486 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065143582 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066901664 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074387415 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072594634 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065084339 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062684259 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069219473 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066639123 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068443701 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074271618 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064683717 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061694552 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061681434 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06994302 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066348481 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069497968 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070550453 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069594928 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061230252 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064366444 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071744276 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.0744209 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066455433 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068255461 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072687595 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067860271 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065939949 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072987028 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068573217 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065459272 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071676533 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066743737 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061984681 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069112845 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069362442 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06450363 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070411085 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06940366 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069281534 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067281684 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065414555 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073430291 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06772419 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065517801 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065677944 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064436028 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076568786 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06817969 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061741419 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063745953 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07549875 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064477451 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066203261 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065270813 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068383769 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066355263 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064404045 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065684551 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068169326 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075903953 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070244292 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067107365 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071165931 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077992348 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06582482 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068321032 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066017884 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067358645 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066970563 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075354387 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071037041 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070504055 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068368145 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062992659 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071216993 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073254779 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064784989 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063600334 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065049894 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069426302 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071120256 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06975824 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066313017 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063954781 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066913244 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068657458 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068052417 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065420208 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064748176 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072075186 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063904946 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072530209 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066307296 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075928496 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06921905 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060953325 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06861097 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063623193 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071730345 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060763985 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063754302 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065152837 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066845991 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064751942 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068290906 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059650834 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072369145 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072359912 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065460825 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064638761 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065066347 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07146524 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066037705 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067895046 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067709797 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070681948 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074521831 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064040425 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067559638 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074518059 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.193302254 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061043734 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072458949 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064869967 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065747111 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064594838 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064247495 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069567839 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075655107 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072780416 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060100617 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06895615 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064134965 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065584637 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061863966 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070594472 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069610099 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067388395 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073170024 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067206454 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067806957 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070551014 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066362283 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067511393 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067647083 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070312807 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067048487 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067805049 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066721152 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068485054 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065691048 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064522064 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068592979 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066327762 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067232607 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071821214 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065536257 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066715481 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069036537 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06679219 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067205952 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066677012 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065600921 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069747071 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067033803 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06673929 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069094771 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061442012 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072842286 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06678709 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073370274 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066320868 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063137241 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073566965 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068373064 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071685004 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066339132 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06693449 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067345248 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065238953 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068572587 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072700993 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064129826 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076625042 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073798483 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067599517 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068890172 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067084478 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068330694 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064827671 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066667951 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066574011 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066105394 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066284332 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070083782 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068474064 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066488396 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067643085 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066784028 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066154738 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067241967 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060715485 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065610884 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065591915 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065905115 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075284194 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06715711 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065702204 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0652934 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067194991 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065819296 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063156117 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07384523 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075119411 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066604131 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072928768 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065367809 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068038383 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076530187 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060392997 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064062569 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063869423 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063883114 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073112856 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066565636 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075471113 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066525104 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065729993 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062942616 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066367515 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064550128 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060167844 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063567883 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068972063 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064581279 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063976337 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065057105 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066904271 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065340428 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073795768 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063671482 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065243978 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064938583 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061784249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063925465 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064051062 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067084962 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065222078 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06273168 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062259495 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064580344 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065365479 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065771334 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064275646 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066086309 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073526317 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064772054 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067661053 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067503068 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059701114 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067600846 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064225538 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063980659 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064001628 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068394992 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067822119 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065478237 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072863549 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064297039 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0653147 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064699264 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062982755 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064678758 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064341547 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06445863 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064076612 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065623434 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072087198 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062688713 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0677768 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06498594 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065336717 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07143758 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06534417 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067497404 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070887197 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064945394 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066382227 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072779665 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068189636 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067918791 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065348234 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066359198 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070262206 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06414785 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.070773238 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064855966 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064888587 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066276739 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062614494 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064140469 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064095359 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063469415 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070751654 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065407979 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064162414 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064205736 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062659474 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065942103 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067864898 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072175587 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066937705 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06776192 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059973656 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062198728 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065386038 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06295936 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066658938 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067422678 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070208266 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066921219 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065146276 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064112115 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073529803 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070419938 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068598139 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062852551 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06844948 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065705258 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067093676 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066230139 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065387241 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064912278 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.067607196 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.065884338 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063951258 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070692012 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066547887 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064728045 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065602112 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064594099 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064176207 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058494728 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063868186 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06538808 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06875238 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065769483 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063785395 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.072878425 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061337278 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064120867 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066552005 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062615382 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.068131192 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059077267 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065614225 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064534319 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063721868 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059328031 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063269156 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061739429 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065907559 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063067802 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05853513 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.072878207 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072316326 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066559102 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062613033 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.305269837 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063198244 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064164524 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068352697 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070795631 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070073841 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079857445 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068326324 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067176213 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063901286 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068054034 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07107731 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071349456 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065337191 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062766935 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066823866 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070718429 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073196925 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066277926 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067565342 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070867643 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069756192 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065681845 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070821565 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064240976 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070846312 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080314725 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067992004 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068287233 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073802464 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074850921 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068437414 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062878103 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068031777 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07083712 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067981683 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068802435 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06785728 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082100912 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07026299 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066307728 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066000051 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070756823 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066914078 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075184493 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06797982 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.0679782 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071871348 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069223801 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076477179 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070116718 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074820444 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070396678 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070147779 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065829793 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067321216 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065069489 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065855504 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068431398 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06740746 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071703638 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074641709 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066019612 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077339479 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076014016 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068689359 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06368116 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066119535 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065979004 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061875315 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067825823 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065713643 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064998567 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064935328 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065595027 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06789309 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072270635 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06811764 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067567193 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066397892 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061207058 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069084377 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069086762 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067604199 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063910955 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066700822 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067327639 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070508203 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07030089 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064284008 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068312227 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068158229 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067110529 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061888114 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072890131 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065448677 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06887061 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066046003 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066845432 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067125149 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0699791 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071674698 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067576015 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069051841 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070450188 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068616522 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06366434 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063991294 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071600671 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064567154 seconds)
  done (took 42.206827218 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10114428 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063480356 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062758357 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062971291 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073455478 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063069675 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062241202 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063167111 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063158746 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065570099 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062275245 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062391453 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070844392 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078341453 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074165926 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067337746 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06231316 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063336065 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062164237 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063081746 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071189838 seconds)
  done (took 2.825172836 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074616169 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070892147 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073162755 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075598438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067579348 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070976503 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072886229 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070771053 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076095178 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067739055 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085121523 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070813933 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067354557 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067473331 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067220692 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071144318 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076485236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068054733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071326617 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073084872 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071124473 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072844337 seconds)
  done (took 2.953236575 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067508074 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066759053 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068432762 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062285053 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066810219 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06199985 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070497512 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064743567 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069470079 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066175678 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06546807 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065498054 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067925593 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061673649 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066243221 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064356879 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108734135 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069592726 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066410771 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067064786 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061920336 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068008705 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061847548 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062739569 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065240095 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069609476 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066993376 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064617416 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066452814 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065433666 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067036097 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064134732 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067855171 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067211742 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065858061 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065781578 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066539074 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06651003 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062073068 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065006054 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067374226 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062407219 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066760079 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067946733 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064669726 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064294032 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068076008 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066430036 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062112728 seconds)
  done (took 4.643079698 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080303686 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109271917 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067760983 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088939241 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080658306 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075895219 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07011172 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089654198 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06375316 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064618914 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081878386 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079844287 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066675455 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070661739 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072926932 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066146594 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067369273 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065758826 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070651448 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065937612 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069830042 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072688636 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080321173 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07924223 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070187659 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065359816 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065864677 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070643348 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078336783 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070871908 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070762645 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071772443 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080762271 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071927044 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06560852 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068115926 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082037117 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066303977 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068222253 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063622946 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068004952 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070099081 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072686493 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081988363 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066200861 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071372046 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066003304 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063263283 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078445066 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06832554 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07372079 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080122703 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070028385 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066198145 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070551021 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080371545 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065813387 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064042499 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068607835 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078353158 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063583215 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069857663 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079146423 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067603561 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07265906 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080187691 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070929841 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069673699 seconds)
  done (took 6.440642909 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075472417 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071603314 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081307738 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079885599 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07215693 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073097038 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073177107 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072583993 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072529845 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076689358 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07258475 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09318718 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067983009 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075222153 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072564148 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072597028 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07268843 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073315666 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072575116 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072740878 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072707793 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080077547 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072585018 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080339707 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098612512 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068596903 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072066259 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072307289 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080222337 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07302658 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079387728 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072342529 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072543487 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080581384 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079712242 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072049269 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065288547 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072516837 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072368966 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072420684 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06755599 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079785126 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072360418 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067609938 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072697632 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071986014 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079748694 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079363018 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074929376 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076743677 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072533703 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079648654 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071717689 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072644864 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080332219 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105049091 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07976069 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079915605 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072452687 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079485028 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079388567 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085635982 seconds)
  done (took 6.102803765 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083781074 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074787987 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076659538 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061663541 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064425867 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070045173 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064410071 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064552897 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074575198 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074685554 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076949195 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069827066 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07285273 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076787373 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070075948 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072758646 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069956922 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069819442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074522709 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069810529 seconds)
  done (took 2.833080113 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074668658 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082902685 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067256472 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07142149 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069104862 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071466698 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068632188 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068916163 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067298488 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069188229 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076247062 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0768298 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067322982 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071791751 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076279459 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071671803 seconds)
  done (took 2.541810557 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075014992 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072548663 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08008617 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06606825 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064697888 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062853132 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066444082 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061667757 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063104426 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078138382 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065990139 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068772456 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0659821 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064814477 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063484778 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068438189 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063090649 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064218192 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066169255 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078261647 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076723507 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064490913 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066560762 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066337762 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066244242 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070929273 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065073059 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063758754 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062877803 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065977749 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066183982 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06916155 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063197559 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063663053 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064323 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063356423 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064956863 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06593579 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06819772 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065587215 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063598436 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065078691 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065391474 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066225499 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061982548 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066303157 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061944276 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067395733 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063388124 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065879631 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065179727 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067582653 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066289167 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071939129 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068321667 seconds)
  done (took 5.061923366 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079712167 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069660356 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061847762 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063699112 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068615502 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067494823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069427571 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067304799 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067666951 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064247914 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067516844 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068607341 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067231494 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069798369 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067354081 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069682288 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061715133 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067799702 seconds)
  done (took 2.623247512 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072124901 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066204834 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072824961 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066491806 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066531072 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068344921 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061917541 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064488628 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064776568 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065654634 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065660405 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068348644 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064631448 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067990032 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065889725 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065638881 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068469992 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065029278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065803914 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061908439 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068044399 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064235097 seconds)
  done (took 2.857957801 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091951145 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081510959 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137498823 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078336519 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083119646 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072010596 seconds)
  done (took 1.942996783 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090391212 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079124612 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066721408 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087541945 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073282767 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067057876 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067743475 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066866639 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075689634 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075704751 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067330624 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075902591 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075996192 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075110288 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072879526 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073234545 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067722975 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067240856 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066475912 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084003636 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067817698 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075748047 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067692004 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067081388 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067514325 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074955129 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075552232 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076301378 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066940062 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075675146 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072545467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066814732 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075633278 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075601791 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068701807 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075598016 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067278317 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083845744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072544209 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074785664 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068456594 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073444791 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075645964 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071625204 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075115134 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067163122 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071598968 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06717497 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06708708 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085391841 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072798315 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074942173 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073191556 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076043586 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076130137 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085761287 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075873201 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075214969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073474825 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078795732 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075171234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072831132 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074753683 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076075841 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073474318 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075099185 seconds)
  done (took 6.259568148 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080732143 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085957057 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067532375 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076245323 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075005979 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067195918 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067304362 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06735157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067267499 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067119757 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107177762 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068222684 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075253336 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075591093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067900224 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067870889 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067307781 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075336771 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067595165 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085671456 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067295806 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074891075 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075167589 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075060002 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076194208 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073296793 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067785783 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067141589 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06739262 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067213759 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071976854 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067450116 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075360559 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06751466 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075057835 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067843006 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067216306 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072007442 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067088387 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072816048 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075102521 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083449189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067301378 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066873128 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075715442 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067497018 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067152557 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066643386 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066978084 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066776994 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075905166 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075589312 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075861364 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074837328 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067650757 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06806833 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06748228 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067591316 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067900378 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073193096 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075034538 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067434111 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085687134 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067486967 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06758706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075542268 seconds)
  done (took 6.170182187 seconds)
done (took 129.382819254 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182635186 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165757968 seconds)
  done (took 1.745313797 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068754257 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097947352 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077171588 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12812383 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066321116 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100244124 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099067234 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07785914 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065988396 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066170183 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06631589 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068519148 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13122165 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066897729 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065977131 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069158729 seconds)
  done (took 2.725737812 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097361312 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158107533 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099867455 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064988069 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097189542 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073082724 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064700185 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074729571 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070841413 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065041301 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072924034 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070673774 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065438856 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070327139 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070910794 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072732834 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064806358 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072559713 seconds)
  done (took 2.837876106 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101247935 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091125959 seconds)
  done (took 1.606537259 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160316928 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105964487 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150684697 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34598081 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166840687 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231275053 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127757008 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130130833 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119460871 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124394747 seconds)
  done (took 3.074158159 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098363976 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152038993 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255862939 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114594322 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072100921 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094778653 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115884351 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07779144 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080645103 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080062202 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08010839 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076315128 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099109963 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073161814 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073190581 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076341864 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10212472 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072160747 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074331676 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076771874 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099436701 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066052502 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073536763 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072038105 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077491736 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077322327 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065739305 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065412023 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076529155 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074229564 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076553069 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093197045 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077317075 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106549765 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070082173 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107280656 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076309794 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073278855 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07416984 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073966586 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078753566 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078490956 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071870933 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075550192 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065330012 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076461674 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065809587 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065257551 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078177633 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067001796 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077765561 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077078734 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10718588 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066998719 seconds)
  done (took 6.010777344 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102057293 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104181584 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071941813 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11114556 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100153503 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0715253 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101059544 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093319178 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102513325 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070062146 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068286604 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071846289 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081925162 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082943309 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112285219 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103959118 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073791447 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070778121 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103665434 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102150501 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068171395 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094863349 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.08959861 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101479355 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067535174 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070281461 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068224242 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070453282 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077054625 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078099494 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070405443 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081536936 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084242963 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078597359 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067265196 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068244421 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068001271 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079717227 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079506768 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078986387 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077841257 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067204976 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067685698 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06916392 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069840955 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067816635 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078771099 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080135888 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079149624 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06969483 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070180238 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068435886 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069366569 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079928773 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077812838 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080581488 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080039427 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068603866 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069029814 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071914865 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081030585 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079445589 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079623832 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069490528 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078696796 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068081822 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080393694 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084446208 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068763814 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069933134 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068732155 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06998901 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069853686 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077910923 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078099999 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06987084 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069603376 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068119541 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080232376 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078404199 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067867271 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076883776 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067354863 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06869962 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069923227 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070193164 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078280214 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08003077 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070412821 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068634774 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069474516 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068778749 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067294909 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077078281 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080856485 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078861697 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078644501 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069019367 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078944253 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078107194 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069646902 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07898361 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06862689 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198077561 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070265044 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07991934 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077866165 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079296498 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070990134 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068805248 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078321668 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081153418 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069697137 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078086797 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082016094 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079898813 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068529525 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082721973 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069269262 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080364221 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069645731 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080342085 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069384128 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08007756 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069360494 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067926102 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069159468 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080659072 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070631417 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068921383 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070213664 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070005273 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080171544 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082748905 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070697051 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081801813 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078772961 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070488216 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079059441 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069455592 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08037577 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070828003 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070110302 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068612308 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083161283 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068961514 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06924707 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069791868 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0819185 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069487997 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080211622 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079647897 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069042806 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081161133 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080128265 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077212559 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081732419 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070284134 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068175928 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068619114 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070036988 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078747807 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080435648 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070721644 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069569738 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078350642 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079989013 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06750887 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078495333 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079121855 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078530767 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068416605 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070011146 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08021897 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080339237 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078195518 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078413645 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078100064 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068556459 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077426779 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078506346 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068116694 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084438653 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067983879 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082493959 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079120806 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076872579 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078486222 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080388521 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079985726 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079909208 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082892861 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068076604 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067746473 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079558787 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06830081 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069407437 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078238157 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070046256 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070218481 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08376529 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068703808 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079424096 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067494399 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078986156 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066841837 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069749416 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082760614 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198283527 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070341219 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080543972 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070983917 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078074914 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080490809 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079204998 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068485075 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070490572 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081016026 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079892055 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069046777 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068432624 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070672133 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078912921 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078096202 seconds)
  done (took 18.743748539 seconds)
done (took 38.164494422 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215430817 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150379374 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198213825 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118019767 seconds)
  done (took 2.193808127 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120843862 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100456085 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094689212 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064746389 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10179928 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065167502 seconds)
  done (took 1.995066381 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310011519 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210448972 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181787427 seconds)
  done (took 2.144171477 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198109986 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18783941 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394581152 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252609111 seconds)
  done (took 2.585108773 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142673135 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089023086 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066946592 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083490072 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133638167 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160185971 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100838811 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125792163 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078162342 seconds)
  done (took 2.47866147 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146613021 seconds)
done (took 12.991289879 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.12208063 seconds)
    (2/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095698715 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.123864127 seconds)
    (4/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.081563017 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.225562219 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078033394 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.203133008 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069230895 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070887666 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172321015 seconds)
    (11/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.186392027 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100619805 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077343424 seconds)
    (14/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.159747301 seconds)
    (15/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.221505813 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.219495709 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073571294 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076561431 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.194769827 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09059396 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.101981042 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07387389 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193375014 seconds)
    (24/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.153460912 seconds)
    (25/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.197969834 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067479485 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088981819 seconds)
    (28/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097147071 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.184042283 seconds)
    (30/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090056911 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139209405 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204877502 seconds)
    (33/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.216747455 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089186932 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071440994 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088757798 seconds)
    (37/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078648411 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091930271 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166277134 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 0.126191088 seconds)
    (41/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.183995052 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14443249 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072184165 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.149215354 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050924135 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.192426224 seconds)
    (47/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.107494692 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051189981 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089375284 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089885365 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065231269 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196333961 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.181581803 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051135137 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071970907 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.161462366 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.0720748 seconds)
    (58/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072362156 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.148938192 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093086752 seconds)
    (61/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072537901 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065224107 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09221652 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.1766348 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067535279 seconds)
    (66/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051292301 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139094026 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073260042 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090407167 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173904762 seconds)
    (71/309) benchmarking ("sort", Int8, false)...
    done (took 0.138358723 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.183828432 seconds)
    (73/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109203631 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.137796358 seconds)
    (75/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081150596 seconds)
    (76/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116356594 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155393539 seconds)
    (78/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.109266694 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051846328 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.163478992 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073650213 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086845061 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090077513 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.359499191 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.065493659 seconds)
    (86/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.10783858 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09430965 seconds)
    (88/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.18020977 seconds)
    (89/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147735917 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080989309 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.178732945 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116981852 seconds)
    (93/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104042836 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051399515 seconds)
    (95/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.145826478 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070060764 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.134730059 seconds)
    (98/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.085602449 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051515461 seconds)
    (100/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069378681 seconds)
    (101/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064162392 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075016397 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088929251 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061919905 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069430811 seconds)
    (106/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.14658292 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067207606 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087061847 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051289651 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065840857 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069894213 seconds)
    (112/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076516654 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07960919 seconds)
    (114/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053442231 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07300979 seconds)
    (116/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.153742526 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.070898693 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063162871 seconds)
    (119/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153103061 seconds)
    (120/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051615462 seconds)
    (121/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060801826 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.132230838 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063860006 seconds)
    (124/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05119717 seconds)
    (125/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065301451 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085478048 seconds)
    (127/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050094363 seconds)
    (128/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05127041 seconds)
    (129/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.084832944 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.130101314 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071454608 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132108563 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070554176 seconds)
    (134/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071217177 seconds)
    (135/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075660879 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069092547 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.147722492 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070420058 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051194398 seconds)
    (140/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071621636 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069306708 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.172457092 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.089788328 seconds)
    (144/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050154289 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073154459 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.11794713 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063397236 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070257969 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.129629274 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071375562 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066385852 seconds)
    (152/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.105836111 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063584483 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070643313 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.082919044 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050201582 seconds)
    (157/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051363284 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.147041605 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050777141 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05044067 seconds)
    (161/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065432274 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071811382 seconds)
    (163/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05038252 seconds)
    (164/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064432404 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071407321 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052714793 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066274154 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051948073 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050553934 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089605982 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053921944 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050201742 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063532764 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052564199 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116930433 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063504842 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07006391 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071653025 seconds)
    (179/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071596211 seconds)
    (180/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071612234 seconds)
    (181/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060827777 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091740048 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064820657 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074483208 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.069631417 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094151244 seconds)
    (187/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050935275 seconds)
    (188/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074222485 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070151609 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063194115 seconds)
    (191/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077171438 seconds)
    (192/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.065945522 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111448549 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.361035565 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05601878 seconds)
    (196/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068688192 seconds)
    (197/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054134902 seconds)
    (198/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.101241443 seconds)
    (199/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07662732 seconds)
    (200/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074716118 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068096964 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.064775715 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074402733 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067339769 seconds)
    (205/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102660515 seconds)
    (206/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053066923 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077017229 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111353298 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111147743 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06757862 seconds)
    (211/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107584195 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066207044 seconds)
    (213/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066289488 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053157249 seconds)
    (215/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053534867 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16738608 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073036366 seconds)
    (218/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062290408 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075502573 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065249834 seconds)
    (221/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076460101 seconds)
    (222/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153207137 seconds)
    (223/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072454681 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081613762 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133592302 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052167675 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094967813 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071516157 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072148083 seconds)
    (230/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073368626 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05205389 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095549738 seconds)
    (233/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066732838 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066217877 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089971733 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051805338 seconds)
    (237/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052222918 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086924256 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068453299 seconds)
    (240/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061897276 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052843177 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092793141 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061326863 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065374586 seconds)
    (245/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06459196 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101658634 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07170547 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066820904 seconds)
    (249/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051563771 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111712616 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066000879 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066736874 seconds)
    (253/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.160588331 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126441243 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072620934 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051683 seconds)
    (257/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063470549 seconds)
    (258/309) benchmarking ("sort", Float64, false)...
    done (took 0.126336037 seconds)
    (259/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104713971 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080006141 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06627393 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051949734 seconds)
    (263/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070311458 seconds)
    (264/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072621915 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073581732 seconds)
    (266/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186319691 seconds)
    (267/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052391538 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073469305 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053064724 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076943653 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165278997 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072514221 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051756264 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053036908 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066605104 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069281173 seconds)
    (277/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052169681 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065446293 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115455182 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065168248 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072789458 seconds)
    (282/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063452196 seconds)
    (283/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066195862 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06439698 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053905992 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065528095 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06473971 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051792147 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.152057926 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065862554 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051869321 seconds)
    (292/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051903514 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072704062 seconds)
    (294/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06707991 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051344902 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067298934 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05152265 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071065484 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087754866 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088048261 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051880086 seconds)
    (302/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052137506 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08766544 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066031898 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066032133 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052812188 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070603695 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089757473 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173998948 seconds)
  done (took 30.306913934 seconds)
done (took 31.764698042 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084300168 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092274903 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074257905 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093183661 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080283457 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076253763 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072040127 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077552923 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079380549 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080888288 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077540737 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05454771 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073585238 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073671685 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073699326 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090375598 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077799123 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072023778 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072128399 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064350057 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072653169 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065479807 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066995412 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054776302 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077414489 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071701672 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072310088 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073707355 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065600369 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065706913 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068566184 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073098686 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06562865 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077951461 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071450353 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07288269 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07432092 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076127062 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06742701 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065906339 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073890609 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065344494 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072803881 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073186927 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071493864 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071629536 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072854416 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077300352 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090527962 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06815138 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074396804 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075673851 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075719723 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071970918 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069477554 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072503301 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070350258 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091129361 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073294046 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067476942 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073528106 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073052753 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070846892 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072560541 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072266292 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074970809 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075003566 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070464747 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073882354 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070665193 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064824035 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072295078 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068496285 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06552084 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074853326 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076258479 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064248957 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070465237 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072219945 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070869978 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064471014 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066848902 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066661264 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071185879 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066993863 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054946147 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068543149 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071086232 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063794459 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072923908 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071304599 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071904735 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066883085 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075057878 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06523655 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070230543 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064935466 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065184835 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067105069 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068456293 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065056091 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067391656 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073139342 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066378457 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070864115 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078249451 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064617745 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071347079 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063659839 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064180114 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079111761 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073938795 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064993905 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06743863 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064370877 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072094949 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064273329 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064706812 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064898567 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064877865 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070532381 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065234125 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066892701 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07194825 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077401871 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064906674 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068343533 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066937136 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065265388 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070238851 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065254248 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065030053 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066573927 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061360304 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066525159 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064813027 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.0713931 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066761383 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071580631 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06695522 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072317699 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069030271 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069777355 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069473698 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063720983 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058171418 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067008725 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066730731 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066508973 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064532565 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065673476 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064464436 seconds)
done (took 12.335065113 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067635281 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14250368 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098606495 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094686468 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085285213 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066119187 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075536222 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101142598 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067416958 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101674255 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086886854 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084514592 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112024263 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064542425 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065398035 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06968358 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066828801 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081314516 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100778851 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08585476 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115012712 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065177232 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093664478 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089627743 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08660046 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091658134 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066703852 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070216667 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068689582 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099417372 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085881951 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069304736 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066546922 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09946529 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091412029 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083316499 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066156684 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082182918 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066180073 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065754212 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067781464 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097467719 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079308896 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079761833 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069624505 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069102146 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066961189 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083127379 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088531801 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078602868 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086094254 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102011114 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068799761 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065254795 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064532459 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085213526 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065234612 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068637728 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066184505 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067801045 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066100851 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069599932 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080961647 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082412522 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069534327 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080140351 seconds)
  done (took 6.874049404 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082631051 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090318049 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082917643 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082944214 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065058691 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066530987 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066097178 seconds)
  done (took 2.1326715 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066278896 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087288104 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088366436 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088725553 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084208256 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087571688 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075815254 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066372769 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080363957 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067496526 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087161602 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101357439 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066678841 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072507348 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090260167 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066231979 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090040568 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066181086 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06951378 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089672847 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067918064 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081425843 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069467814 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067174171 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080362986 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066746426 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112711573 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070992675 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06810011 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069093414 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064618288 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106335401 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079745592 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075049273 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06635101 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080351815 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080606871 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064668367 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082328368 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071649991 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080127075 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066614441 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.0671283 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.0647562 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070611431 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076374686 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067503442 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066803317 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069012269 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085812392 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06705588 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079347285 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069589791 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068624756 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067513971 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069924609 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076021082 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067004654 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085304191 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067522574 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082883722 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081943243 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079944643 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082154741 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068208315 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079467509 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079705056 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068933059 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067755426 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069699669 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082575083 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064960607 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067704764 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076878515 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068122082 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089676039 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088670992 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067567357 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07546582 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06643517 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066210354 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066450325 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089086706 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068343981 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066211895 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070245724 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068886294 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064616856 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065444258 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069910301 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064190625 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067571752 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06897635 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069156039 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068906579 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082038359 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06827103 seconds)
  done (took 8.830443696 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069171647 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068023238 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069067105 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067096574 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067918142 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068110435 seconds)
  done (took 2.027219685 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092631018 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06926414 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080754357 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072593375 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103977328 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086736915 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086819651 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07834657 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083548559 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078913684 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086268027 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08811022 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092223973 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072619516 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086312442 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07162572 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086502605 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075592151 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077992555 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072644657 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086160888 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072065193 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072569323 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081318018 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075302224 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071703396 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067237605 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078888409 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078137628 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078589324 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072199931 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075234288 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070378459 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078087866 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086504958 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070428206 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071683618 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076578559 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072054273 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075109127 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08728092 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072192141 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07410825 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076852531 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078500474 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07045356 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076589362 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075685023 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085670119 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076488936 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076624708 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070982914 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074579949 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076422167 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070109311 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077846372 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076511463 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086381685 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071875928 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.06984293 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068616082 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074963367 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077079374 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074672055 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078405459 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076239033 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07032749 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072380283 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072253332 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071606263 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076683973 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069001161 seconds)
  done (took 7.159103746 seconds)
done (took 28.63092136 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543107268 seconds)
  done (took 2.130963552 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.593368163 seconds)
  done (took 2.203579963 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.587959221 seconds)
  done (took 8.197662934 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388590875 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470661478 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.686621708 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129746471 seconds)
  done (took 3.328920867 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.667827917 seconds)
  done (took 2.288364693 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207762671 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194498531 seconds)
  done (took 2.029071977 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375731336 seconds)
  done (took 1.983930566 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.101045943 seconds)
  done (took 2.714095203 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259494636 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.166179074 seconds)
  done (took 2.046508673 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458740182 seconds)
  done (took 2.077877982 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.857035891 seconds)
  done (took 6.478524803 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204890156 seconds)
  done (took 1.866635837 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241444076 seconds)
  done (took 1.862776456 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.696454176 seconds)
  done (took 3.313450516 seconds)
done (took 44.137921057 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079406702 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080354023 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080081813 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07730245 seconds)
  done (took 1.923113999 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07573787 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071497799 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075742409 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071717755 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076148939 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072086418 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073140814 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076106092 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071817462 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072175865 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07162045 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07191982 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073831329 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073664616 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070257147 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074090334 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074984262 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071469625 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074499137 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071818398 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069931635 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074108063 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073872412 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071123689 seconds)
  done (took 3.374603332 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077268682 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072316196 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074521583 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070773509 seconds)
  done (took 1.922220049 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076824406 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090813959 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087713754 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077555347 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091639837 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085094481 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068111994 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068681947 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072417454 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076114152 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067125196 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094592135 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086651021 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076166469 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077699529 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065370855 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067701865 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086257958 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076034927 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076717094 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069220692 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076716327 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067478765 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086725066 seconds)
  done (took 3.493499521 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075894756 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103252207 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07661415 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087390984 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088614351 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064485981 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073812942 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088117291 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121551848 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064435217 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069108931 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064677335 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071569074 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064635004 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075798562 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103163775 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107094831 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067862715 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094868163 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064851846 seconds)
  done (took 3.261580394 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072006564 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068678548 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065246449 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068642729 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077025869 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071516227 seconds)
  done (took 2.05741503 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067093987 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066976512 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066738738 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066472031 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071599708 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065807837 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065660125 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06675051 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067026933 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066118862 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066283756 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065118479 seconds)
  done (took 2.431963041 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.169053203 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067971836 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068217631 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066040673 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070332697 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066092357 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079289569 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067077574 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089631473 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06591691 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065932997 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067908295 seconds)
  done (took 2.576204723 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20288612 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075775203 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234713495 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136086152 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110231841 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114157522 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10288359 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111892799 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141742587 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100424853 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165752111 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163118575 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106009103 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135653319 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087991388 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096792863 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153634812 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160937992 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102645948 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163609928 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142569963 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123436884 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145249604 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100374468 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105167213 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120783835 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070314845 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079426874 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168522819 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130178933 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144610962 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109753682 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092542987 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173887938 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168307555 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140468151 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133273211 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08334081 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102292716 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13249616 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197262659 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087878701 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162586987 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24308145 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080360979 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133093696 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119057724 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11856687 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106182373 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088972222 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145067183 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182281351 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138451692 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086468777 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110678748 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113538077 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116146218 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103070628 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18016239 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159851507 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12747948 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070713456 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09789768 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151354497 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130878437 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107903366 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126761706 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092499699 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131969925 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152985761 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116831987 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141775251 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127569247 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087342401 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117793082 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138246551 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126542918 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167744446 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122960612 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071976726 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122908217 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101994085 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080487945 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14119416 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074421364 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17317809 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097936727 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106291989 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112368276 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107605268 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107432386 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160352381 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142818448 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240610914 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065351035 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104005127 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119608095 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145255143 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086748648 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107479108 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116380893 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077268984 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138113568 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07379326 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122381883 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074751011 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12392585 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13234088 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075227995 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121591947 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099690731 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100335959 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1324814 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157818489 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089001733 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081887792 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165675655 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121679487 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104442443 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141675439 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153599922 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098502201 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101559753 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147453714 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177507274 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08828613 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161020804 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105960723 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082731789 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086735519 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122169661 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111195285 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120581092 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081056962 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117348583 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166134232 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074737945 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094559078 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132155698 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078300471 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080167263 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102910356 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100129812 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094279137 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099185465 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103264123 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135687071 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12168562 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104015786 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265651157 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097066659 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169297616 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087600574 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099857137 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103596145 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068726096 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136204474 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155099679 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079300524 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163031261 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122136866 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105073519 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117922352 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082843383 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139479779 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078260955 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069183831 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141626843 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111277716 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109008199 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149610726 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103949955 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125470581 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11800854 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132118453 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130446793 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128510193 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104748231 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08740686 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110864996 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124172053 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072332188 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090013051 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.0792522 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102790701 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094397175 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082707447 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140895108 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123406675 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099325686 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11047681 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09543493 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145577274 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075780769 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127440889 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11833931 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093486115 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151010962 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15030914 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130427119 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098021641 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143214999 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070113916 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073338415 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.230021966 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122447728 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082324151 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083301734 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117411192 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146025886 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12903524 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136874469 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11080966 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12000036 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15367538 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069454482 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115942487 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146995136 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121370969 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103031514 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089664131 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098607361 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140909249 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106799528 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180473345 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112802872 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125208718 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151661226 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098973263 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083871262 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102156282 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1338988 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103516082 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14268296 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098788709 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087234107 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109050895 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073389832 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099270753 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126056037 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118333732 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133853876 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113255118 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13134169 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076285299 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115749997 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119492778 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121597743 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063602837 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119049972 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160507302 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09304497 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117275433 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151209375 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078442144 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124159867 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173862045 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143261274 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083336402 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107664851 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116590626 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125727021 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117559267 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137131444 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105913672 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132376008 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107384996 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084330004 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085451403 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095396785 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102867277 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092923606 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10392403 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10977461 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.0917846 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126565212 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099237909 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105689786 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113878154 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.093703671 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087225479 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09355466 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168097942 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114535616 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162712097 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095837958 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13897769 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157648605 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072788927 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076459702 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075569063 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134563439 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080756135 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125362291 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.093923104 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102193343 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119139239 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135224328 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091480356 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066492008 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10416588 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127840312 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108111161 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094403446 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100416422 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155404918 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097291774 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076811071 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109635718 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10124168 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098739426 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16173089 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.059658929 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092914143 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072197855 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077078255 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120118268 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139438243 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075831688 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.096386546 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112215011 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103003252 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120181194 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094935308 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094827072 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108737859 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13790652 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120283201 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.084824779 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104586604 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119808696 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14533947 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098445923 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.091810182 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156712029 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158310464 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.146966648 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083338078 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108006082 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107668605 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1024896 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129234909 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079818264 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152739312 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076676921 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125852525 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097165664 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083770322 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119783585 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.093437302 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083513061 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13608253 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109358597 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078137312 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073272056 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109421848 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112028251 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100398198 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.071492832 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128927741 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.069836208 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122589532 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156164059 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076994859 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098185704 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090531962 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074329147 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100538587 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096801109 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084369756 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.091513016 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158189311 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08196725 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138000166 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130580068 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10517532 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124841457 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093625071 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.628276816 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073743068 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140952263 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109011216 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159528738 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09206901 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110035533 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103341674 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114375358 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1331292 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097466127 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.169448155 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121723658 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109937659 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078615668 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096648457 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095430112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083727356 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098465811 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106358053 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107296737 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.087028621 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109476817 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114200185 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078122498 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089572081 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145273137 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109427668 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132919685 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131288655 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080703088 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110821982 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127351311 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076519596 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113929652 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139587723 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09925789 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092556562 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076239547 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.095647615 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156153242 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.069834395 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14876812 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111793749 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102705221 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105834802 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104121751 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121182382 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100763863 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112763191 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087025432 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.103671594 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106301659 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077042313 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072908928 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098571017 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104071463 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.093154833 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09172881 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.091505307 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139853177 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069045023 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089718783 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097770549 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134462099 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161539695 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084341792 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078802492 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110305706 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104885053 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106406931 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112320843 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075055365 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077595074 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077006681 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.075888076 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.102984202 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106373218 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098662222 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103601774 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152062913 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.078336533 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.21585733 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088977803 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098543244 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.067127122 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073889882 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089066509 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090923834 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099985906 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094743325 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156231909 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.089957439 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.085078929 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086771238 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.62983919 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084961465 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129629751 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112845468 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121105479 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099337497 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064767523 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11219791 seconds)
  done (took 57.144898169 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112088635 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086933159 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101791404 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.154192091 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127187502 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.216836945 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.162387845 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20461175 seconds)
  done (took 3.022152326 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073858676 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099572052 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105610655 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.0882356 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069544946 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073076386 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231824606 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085195707 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069444661 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092210021 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083600926 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073031065 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.435082448 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069030964 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071217164 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065572695 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07039541 seconds)
  done (took 3.683242552 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37959838 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608088403 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.380852573 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075583543 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.952079513 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090687981 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.102304711 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128523151 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075159634 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544600998 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702938669 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127342629 seconds)
  done (took 19.004353991 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077971081 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071461169 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086634105 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087160429 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074998268 seconds)
  done (took 2.233954294 seconds)
done (took 107.78119914 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082500136 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.396749662 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055346573 seconds)
  done (took 2.318947162 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085199396 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086816167 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086644235 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085550994 seconds)
  done (took 2.188867504 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076738562 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079447291 seconds)
  done (took 1.993530658 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229847388 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.142694923 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088947449 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.0846072 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080213925 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081196861 seconds)
  done (took 2.089157602 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073752718 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076352355 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074181498 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078392789 seconds)
  done (took 2.141054778 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078125679 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054374389 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056746829 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05676849 seconds)
  done (took 2.085545136 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088732802 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080345497 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080222199 seconds)
  done (took 2.090150665 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10358189 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086074458 seconds)
  done (took 2.029725853 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08283868 seconds)
  done (took 1.924572329 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100659572 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.116034373 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130617849 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11063336 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137899513 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110371757 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08628349 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087514015 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077933499 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087688439 seconds)
  done (took 2.887038486 seconds)
done (took 24.126941976 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079468144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370724043 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361375846 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090545828 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668047124 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35738561 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989908682 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092892292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114511606 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068471038 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084990725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64780897 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979449882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324371659 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966932768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320930914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650726723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068490606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06812006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068851193 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975382572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068057275 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068477089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069370421 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650470645 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371952181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068680015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322074581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068776402 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070368037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355801763 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069315659 seconds)
  done (took 16.360584079 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071870036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119386169 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074166879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084903976 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070799398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070244234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071960159 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070205979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121137822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068909559 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085289182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069142774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072967407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069548073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088286815 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068618679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06967172 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06901733 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069331534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069535121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087608785 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068670875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06910874 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069645316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06910498 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080474787 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069357831 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069297009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069452596 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070691177 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071986944 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069960132 seconds)
  done (took 4.277219531 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116441208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125938633 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07513362 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104770275 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113934239 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070923373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145847537 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093526354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129147857 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069050797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085188144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069146259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10204762 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069749042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088114949 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069434342 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070222276 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069829815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069057679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069279259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088122294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068750945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069272354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069601056 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069251427 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082001736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069647099 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069422317 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069172876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070901527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072736532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070101771 seconds)
  done (took 4.533357724 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07366876 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075705107 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083273457 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085150242 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070390589 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072871041 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073471006 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070700557 seconds)
  done (took 2.466920749 seconds)
done (took 29.484356415 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079342834 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069875484 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073468106 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081833236 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07360949 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079056296 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067773246 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075337445 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073383624 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073873692 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075801235 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068277162 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071653772 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068042323 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07495737 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069025857 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080114135 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072719158 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079772989 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08082935 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070875683 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074246802 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075134515 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07977286 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079437001 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079613407 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078100283 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073471374 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069811114 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071310003 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07756971 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084249011 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069279701 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079717546 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068521193 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068595723 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072203225 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068394222 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080031504 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0773877 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070638156 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077054453 seconds)
  done (took 4.974502337 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08854999 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092162182 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085782069 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061947503 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068095438 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066334007 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089567646 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060342561 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060449583 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088601815 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056463912 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060107391 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063049133 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055152109 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060101987 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057543666 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062532685 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056741045 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060284284 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060302303 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058900956 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054970725 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061030244 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063726635 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060169658 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062751062 seconds)
  done (took 3.588930309 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074695817 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084301705 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089623925 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129053753 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104898205 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078273912 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078378667 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093730697 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086173517 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067624739 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072512178 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094709249 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088677167 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074747791 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068288708 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084909839 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082478404 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070748247 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074141229 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091753908 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084786814 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084345557 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093294942 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081712395 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067557874 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070344035 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071937084 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081739279 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07288375 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077650066 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072116045 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071596938 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070168604 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080127502 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072147161 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06956054 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091540239 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077574062 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07871872 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068842678 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07124761 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069403954 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090203626 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123844348 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067566836 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074802139 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075723603 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077195281 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067984559 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08667332 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079212122 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067514622 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070980694 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067093637 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068106186 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081007171 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069998882 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069875847 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077398617 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071109365 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086348472 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071993326 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083911593 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06815007 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075538241 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066776436 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06917541 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.0667436 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093689428 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070170729 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108673928 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069249385 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068978086 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076339349 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075943485 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073759186 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068358147 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083397076 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078217897 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071826807 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076747771 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071754018 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071484785 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088564841 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070786231 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069575264 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069088782 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074327886 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071603469 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069439915 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081364805 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068484012 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072161271 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084539512 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068506253 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070215639 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074122864 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073882508 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067963144 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079859478 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073436676 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069436527 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077575211 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068481095 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071374922 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078890608 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074997108 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067693104 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073140516 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074373983 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069249834 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070189229 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071306483 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07055314 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077197862 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075177564 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072915069 seconds)
  done (took 10.870213622 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161601213 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.166475375 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071157323 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148556647 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077412588 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079429255 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148427792 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094933959 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068452386 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06918111 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06965525 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110380319 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10678157 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115632898 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079215379 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068293309 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084040169 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114795135 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150133433 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144107137 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084454068 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077559387 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.0704715 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069632153 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071643117 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079258579 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086543746 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07749852 seconds)
  done (took 4.65177641 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081615439 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097520783 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075255027 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090671642 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091617462 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068620903 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0707232 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070643004 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081299279 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079363204 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068173022 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074034656 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075304877 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071581643 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069329525 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075874474 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075477091 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069996578 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071851477 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073467935 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07853064 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081360767 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072191603 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067948741 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074907157 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067616134 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064688817 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085332798 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068865828 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091096449 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066667246 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075840663 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082875351 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069633238 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068580064 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068638008 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068411819 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068261691 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070518346 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067550021 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067080072 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058817765 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067838571 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080369086 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074926579 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057609909 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073270397 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074072024 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07389928 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066608773 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07135512 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071220164 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072027838 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076065099 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073428516 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074425476 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069891315 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066758213 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076297677 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068398871 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065470894 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067050423 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073239222 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067153054 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076720547 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073362161 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067085726 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068454318 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070930176 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074983381 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06852983 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071719559 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066419641 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070368998 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073110699 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070456907 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069777439 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067049042 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068414626 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06897297 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056504097 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068576067 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054804451 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07157694 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066670541 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066947628 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06848451 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073256839 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080533859 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069571286 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074340529 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069498067 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067753773 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071849794 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061392164 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071431569 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084543745 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08365902 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068601375 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066684818 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083574184 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073294748 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067869955 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057992218 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076474197 seconds)
  done (took 9.466235395 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089880667 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071397002 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084845064 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092305772 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086532297 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075227669 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077077946 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069803559 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08263437 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074372069 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076871126 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06889955 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077743653 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078022426 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070818224 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077676342 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072748583 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083939142 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082796016 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069106734 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076824964 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080571744 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090265885 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081109046 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079187374 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08117412 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09043433 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072900048 seconds)
  done (took 4.132497357 seconds)
done (took 39.540782966 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.959538252 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.123998657 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.949526235 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.334368847 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.03758752 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.184357978 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.006709757 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.94265869 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.179349498 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.980527278 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.183102513 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.9893152 seconds)
done (took 67.754814113 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.987386161 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.082040945 seconds)
    (2/2) benchmarking "String"...
    done (took 2.21554005 seconds)
  done (took 6.181762707 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.2345742 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.657632314 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.189540378 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.941360758 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.947912485 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.25172609 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.729831095 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.459574169 seconds)
  done (took 32.061761189 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.077379082 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.169441788 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.627023743 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.662591987 seconds)
  done (took 16.46823296 seconds)
done (took 66.893333775 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.940921001 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.961148032 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.944236285 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.927486011 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.002437538 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.948170921 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.381407452 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.055796006 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.94438704 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.929335766 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.944514486 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.385601474 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.954793917 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.729241598 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.942844284 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.949993176 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 7.00066562 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.516871627 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.100887368 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.951768512 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.966620314 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.00423009 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.949403074 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.951029677 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.98058473 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.947278966 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.391528352 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.949793828 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.58211209 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.945451824 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.973982809 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.502085866 seconds)
  done (took 210.541879229 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.944291315 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.016920611 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.112744708 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.984512702 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.536815545 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.12480312 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.063021486 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.564080066 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.948519371 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.94911802 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.075384376 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.945194625 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.097897882 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.889626185 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.974107584 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.950608455 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.201062924 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.099861671 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.976124612 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.111174592 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.949996593 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.905041 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.877660211 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.063060544 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.954971655 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.978786262 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.970787288 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.962471285 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.138290316 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.172403389 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.968383514 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.95178856 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.079683142 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.818430075 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.966352202 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.953769689 seconds)
  done (took 176.165423941 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.108262114 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.946308667 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.945602197 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.945833042 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.951443157 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.945697151 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.067867955 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.075048261 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.400325646 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.336635375 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.997051367 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.78982211 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.946055259 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.014471566 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.959830105 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.949103561 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.961251895 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.973717666 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.948202345 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.94718968 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.071995763 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.958441761 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.977607555 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.956394512 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.948200624 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.95287191 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.316886478 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.947948952 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.952511541 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.190642241 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.948812346 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.948333323 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.85317214 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.741821462 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.959031737 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.031031734 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.951111699 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.95468636 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.948822235 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.167455882 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.949960045 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.948201762 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.948904926 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.948985973 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.952429402 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.131165871 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.949942091 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.07316508 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.949202807 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.451559727 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.951530014 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.950733696 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.891771365 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.643362731 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.955811933 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.955153726 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.95689398 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.954287238 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.954904177 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.955049774 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.960221447 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.768650896 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.219570844 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.954305304 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.955620403 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.965978608 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.952437558 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.056130838 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.953071174 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.319651777 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 2.009495313 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.170790985 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.09314274 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.95279721 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.019106725 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 2.046700951 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.95260805 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.953271807 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.952700191 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.952316385 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.034106759 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.952988973 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.103673637 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.961951199 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.954975136 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 2.006047417 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.023080031 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.95392331 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.861326746 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.95501274 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.953465861 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.301746127 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 2.020554606 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.95294152 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.952707668 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.953033079 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.088367816 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.078664171 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.745862062 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.956391281 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.688085339 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.95559896 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.098698714 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.955510579 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.149040219 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.955711503 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 2.035847772 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.959981565 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.95555892 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.955769437 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.987556276 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.954413519 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 2.011158077 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.956090026 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.323701535 seconds)
  done (took 423.211725065 seconds)
done (took 813.969753708 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.602448806 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.565936858 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.694199199 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.601222345 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.572226962 seconds)
  done (took 14.93286499 seconds)
done (took 16.829522639 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.046580108 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.048097763 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.979501992 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.044886844 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.97634981 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.044737914 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.025690958 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.980707267 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.010791318 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.981712037 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.013832542 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.980618369 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.968682396 seconds)
  done (took 27.998960068 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.190328434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.20011915 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 2.026734056 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.19825196 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 2.004399983 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.186100517 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.11888088 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.109855583 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.108343058 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.972481988 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.970130219 seconds)
  done (took 24.98499591 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.196143291 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.196349549 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 2.031216797 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.195938322 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 2.004150195 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.192848295 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.119911223 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.108860968 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.112808012 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.970559551 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.969435756 seconds)
  done (took 24.997146212 seconds)
done (took 79.878832345 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.964599488 seconds)
  done (took 3.862754187 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.987011894 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.124861285 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.972179817 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.968537969 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.965691698 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.967086707 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.968760075 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.966009632 seconds)
  done (took 17.819364082 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.962257237 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.963289544 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.962192033 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.965939156 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.96757972 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.964842901 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.965621515 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.962340441 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.965695147 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.963003797 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.96572834 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.963048746 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.963581608 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.967398793 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.966012397 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.965674425 seconds)
  done (took 33.334736435 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.966344409 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.963965976 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.963346691 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.964161418 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.964043221 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.964906455 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.966000446 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.965628934 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.963878046 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.964503496 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.965664185 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.964312696 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.965446654 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.964340493 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.964864062 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.96450446 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.964452771 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.964652308 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.969385038 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.964444585 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.965478099 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.963917522 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.964775789 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.964349138 seconds)
  done (took 49.060989858 seconds)
done (took 105.975506716 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.858014975 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.344382332 seconds)
  done (took 9.104049314 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.969260173 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.967543356 seconds)
  done (took 5.87213245 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.967723591 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.967058487 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.967696162 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.967619256 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.968084496 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.966475107 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.968605875 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.968555762 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.967878467 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.968559033 seconds)
  done (took 21.579279824 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.968287159 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.968713919 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.965290102 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.968636084 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.969086375 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.96617671 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.969209658 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.968018495 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.969181995 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.966374541 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.968285032 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.967683636 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.96908617 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.966959197 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.968258628 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.966496576 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.96700181 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.965480106 seconds)
  done (took 37.32078927 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.968527709 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.967940124 seconds)
  done (took 5.838409667 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.965968285 seconds)
    (2/7) benchmarking "second"...
    done (took 1.96694386 seconds)
    (3/7) benchmarking "month"...
    done (took 1.966282448 seconds)
    (4/7) benchmarking "year"...
    done (took 1.965424613 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.966513818 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.966504639 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.966384231 seconds)
  done (took 15.666366153 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.970202753 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.126700757 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.202089421 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.658649138 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.970999902 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.973479725 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.8836216 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.974188406 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.973449608 seconds)
  done (took 21.636828504 seconds)
done (took 118.919288928 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.788768426 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.969877141 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.28904322 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.015826711 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.021256955 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.308925063 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.992593572 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.191462626 seconds)
done (took 44.48084481 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.071303482 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.551086241 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.576196059 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.233610189 seconds)
  done (took 13.265341687 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.950771678 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.488171127 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 7.002713307 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.55943762 seconds)
  done (took 20.927256534 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.334342358 seconds)
    (2/2) benchmarking "read"...
    done (took 2.32140688 seconds)
  done (took 6.56792624 seconds)
done (took 49.737226012 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.972679786 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.971406952 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.969143195 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.971783669 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.968681776 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.968795589 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.972410102 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.971750651 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.971831722 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.972342076 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.972992294 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.972096895 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.969899886 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.969327761 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.969613895 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.970269653 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.972640815 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.972933076 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.969629308 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.969771634 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.970231808 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.972367056 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.969722669 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.970084444 seconds)
  done (took 49.209187058 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.973752265 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.971144499 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.972717204 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.972903006 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.970984627 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.972826512 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.972823726 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.970982714 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.973964404 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.973120833 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.970200722 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.970844264 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.973006771 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.971566173 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.972896108 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.972162455 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.973637948 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.970285346 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.973815075 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.970895318 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.974710317 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.971842951 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.970851483 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.973845868 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.970948539 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.971058987 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.974156917 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.972557242 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.973812964 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.971892578 seconds)
  done (took 61.077978487 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.978911645 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.983315489 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.974636095 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.974275348 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.976168944 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.975235112 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.975368278 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.975639232 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.975017357 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.975952129 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.974803701 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.975630926 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.974733621 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.974918967 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.975934418 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.97621424 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.974414394 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.974657477 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.975862026 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.975740647 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.976598663 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.975677539 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.975031495 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.975935537 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.975426215 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.976049454 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.976161653 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.975054484 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.975556415 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.975696958 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.976283143 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.976026004 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.976421927 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.977031806 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.976124528 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.976463606 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.980948706 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.984537099 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.975945614 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.976630971 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.976203443 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.977153293 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.976119882 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.977014243 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.976459607 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.979419015 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.981362233 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.977647684 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.977445102 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.977305798 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.976862679 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.976854133 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.977633601 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.978066477 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.978240878 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.976952954 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.976812061 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.976880563 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.977655669 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.977941958 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.97772658 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.978347804 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.978297739 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.9782326 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.978630301 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.978451382 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.979118251 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.978861152 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.978628152 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.977581667 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.979072841 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.978609848 seconds)
  done (took 144.253983338 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.978808793 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.976235095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.976214928 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.975899224 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.977019175 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.977323813 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.976287355 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.978624841 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.975662059 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.978338795 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.978421573 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.976543033 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.975737746 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.979780087 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.97885229 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.976771439 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.97905496 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.977008053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.978888138 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.979593903 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.97900698 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.976164868 seconds)
  done (took 45.419175917 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.979626019 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.979349218 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.976391388 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.979723485 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.977229261 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.980513146 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.980343706 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.979892895 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.981180408 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.97766959 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.978347862 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.981019157 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.977664529 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.978488509 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.979143944 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.978064808 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.980617482 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.977894288 seconds)
  done (took 37.536671701 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.978601757 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.97853948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.980984425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.978603413 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.979224905 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.981474963 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.980156443 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.98100372 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.981044103 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.978162206 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.981139614 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.981425274 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.982061006 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.978233547 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.982756613 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.979890123 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.981725622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.978436222 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.982918276 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.979502532 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.979150693 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.981399751 seconds)
  done (took 45.482089747 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.981346884 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.982166454 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.979431667 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.979721216 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.980186859 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.982216016 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.983090953 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.97975423 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.981828475 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.982350068 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.979853907 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.983125472 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.980971913 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.980876403 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.980804185 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.980224706 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.983271324 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.980672556 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.983319254 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.980171758 seconds)
  done (took 41.540724409 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.984019685 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.982871724 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.98424227 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.98313563 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.983412954 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.984578358 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.983277758 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.984023825 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.984275307 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.985125099 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.983443467 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.983521915 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.98638673 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.985618444 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.983369939 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.985510942 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.984733046 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.984178619 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.983322002 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.983069863 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.983829319 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.983132168 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.983986758 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.985319835 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.985389466 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.985052854 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.984246653 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.984326864 seconds)
  done (took 57.475336003 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.984938501 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.983591876 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.981894198 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.982160041 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.981897859 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.982302381 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.981863238 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.982713484 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.984098166 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.98353304 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.985412098 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.984593172 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.984740103 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.984494822 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.9854231 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.984944185 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.986262186 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.983052244 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.982101008 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.982407083 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.98520525 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.985594624 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.985376717 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.983421757 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.983487519 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.986443489 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.982978703 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.983454003 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.986506046 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.983655958 seconds)
  done (took 61.437110428 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.004919016 seconds)
    (2/2) benchmarking "in"...
    done (took 2.00437449 seconds)
  done (took 5.928979431 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.983548124 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.986339667 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.985638306 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.98416998 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.98483334 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.986614136 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.987328699 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.983638566 seconds)
  done (took 17.803075504 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.98587951 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.986940483 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.987179057 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.987938327 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.98798797 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.986916447 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.992055868 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.987632159 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.986859751 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.987872173 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.993510549 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.995482054 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.989997796 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.987077867 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.9868481 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.98882646 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.986935118 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.987992615 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.987163561 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.98847263 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.987334045 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.989449084 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.988873998 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.984957091 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.989343923 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.997205821 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.991910169 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.987662544 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.988200419 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.991407966 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.98862426 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.986514294 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.989438115 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.989123053 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.98907532 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.988804956 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.996459814 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.988612312 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.995476679 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.989226492 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.988979729 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.986328967 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.989732895 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.989519456 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.99007368 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.989394288 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.989148583 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.986604678 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.988968405 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.992097599 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.995811838 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.988385589 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.986988388 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.992005218 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.990433092 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.994551635 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.99037007 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.992730596 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.001209448 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.999402707 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 2.001834811 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.996514171 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.990530345 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.991671014 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.999764835 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 2.014659488 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.9957725 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.98893643 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.988271488 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.990636604 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.995587674 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.003559174 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 2.000526878 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.990666445 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.991389364 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.99045481 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.99118244 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.990413541 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.995222207 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.994700114 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.991164384 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.990686985 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.001301987 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.015010721 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.989821946 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.992680569 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.991023811 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.992026506 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.991981454 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.000823281 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.991863878 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.99220487 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.990835615 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.991032409 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.993169637 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.992465927 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.990807987 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.992417659 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.990164526 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.991581348 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.991733339 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.995003452 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 2.001042577 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.991650805 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.992669058 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.997485333 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.991570675 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.990732618 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.997723607 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.991862812 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.99320932 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.99391439 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.998342786 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.990194153 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.995882337 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 2.000873167 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.991784765 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.993367398 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.9924205 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.993024337 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.002194691 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 2.018659857 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.992860854 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.993730544 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.999264122 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 2.005218926 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.99386377 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.997123773 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.993540624 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.991176579 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.99082164 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.995723483 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.994236799 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.99461588 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.995072007 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.9959367 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.991726646 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.994017754 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.994389278 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.994917383 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.995833526 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.995875601 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.995727205 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.99672043 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.995695882 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.996234355 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 2.000165937 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.994062163 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.995942058 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.995565609 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.990771031 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.995669037 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.99563855 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.994965128 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.995007416 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.995322037 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.993747045 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.995271015 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.99594826 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.995178459 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.994852597 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.995560136 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.999905902 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.996770878 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.998734409 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.995119473 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.993138002 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.995627668 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.995860593 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.995689743 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.996098673 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.995154586 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.999751105 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 2.003923461 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.995850291 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.996973851 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.998986335 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.995210911 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.997373072 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.99728288 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.999252319 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 2.004215712 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.996654574 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 2.002100362 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.997415231 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.996286854 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.996357634 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.996815873 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.996035984 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.997496115 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.000281143 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 2.005199201 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.010579914 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.005748723 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.998695557 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.001860971 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.998061674 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 2.002613121 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.000825354 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.997837437 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.998247659 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.997472278 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.996618534 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.99730668 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.999015412 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.99689277 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.996880697 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.99751011 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.996973249 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.997402191 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.997448817 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.998634468 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.998405769 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.994966467 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.997289196 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.997599697 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.99694089 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.995564978 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.996996458 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.998449888 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.997738017 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.99835486 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 2.005076715 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.995594109 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.00108976 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.999591329 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.998447436 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.998013991 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.998695903 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.00079946 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.99872269 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.003889023 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.99923611 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.999935439 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.004918979 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.999598832 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.998909538 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 2.001426481 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.999391459 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.997488411 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.003054066 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 2.007835348 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 2.000060772 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 2.00000743 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 2.000467075 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.999671699 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 2.000251616 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 2.006363778 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.997778049 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.00015756 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 2.000700402 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.001346516 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.997481677 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 2.001033153 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 2.000769943 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 2.00102656 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.00132319 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 2.000525869 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 2.000598856 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.000448321 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 2.001196275 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 2.000842024 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 2.000667926 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.003435617 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 2.009945674 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.004883218 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 2.000465314 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.001757909 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.002276743 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.006510881 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 2.001291823 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 2.001575308 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.001605216 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.013921729 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 2.010547625 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.006276436 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 2.002510628 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 2.001949947 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.005900362 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.002891732 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.006139676 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.001434126 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.002655573 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.001181183 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.001487622 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.999285688 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 2.003033435 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 2.00327831 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.003207583 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.004154091 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.006879255 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 2.002662617 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.001352554 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 2.001924309 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 2.002115733 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.00171135 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.001434218 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 2.002763457 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 2.003245489 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.004246645 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.001828762 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 2.002876749 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.007920647 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.002065798 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 2.003998463 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.001526256 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.003022312 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.001666641 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 2.003392689 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 2.004359634 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.006942127 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 2.012795058 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.006464296 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 2.01258475 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.004909697 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 2.011420015 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 2.003821577 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.006968547 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 2.011732052 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 2.001411393 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.003697434 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 2.003144546 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 2.003725157 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.008912292 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 2.004639259 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.004749148 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.008163204 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 2.003723963 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 2.003985388 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 2.003973169 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 2.004659476 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 2.004596997 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 2.004830976 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.010565028 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.006278121 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 2.008404697 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.007012543 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 2.00240892 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 2.005050033 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 2.005376604 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.00468829 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.009116798 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 2.005709814 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 2.005699938 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.004562677 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.00573515 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.005752109 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 2.005625499 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 2.00531686 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 2.002859451 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 2.005955101 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.011385043 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.006731035 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.010723088 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 2.005862618 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 2.013915745 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 2.005833151 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.012248556 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 2.006294319 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 2.006975037 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 2.006005545 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 2.005879501 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.007747602 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.005627087 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 2.007807837 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 2.006584958 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.007271489 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.010610022 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 2.007115385 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.008068421 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 2.007000276 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 2.007483442 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.0064763 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.016510893 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.031531323 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.010324658 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 2.018043708 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.011067888 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.015773311 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 2.019311692 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 2.012230676 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.007770263 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.011199155 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.017623385 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 2.015582193 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 2.007839655 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 2.008877897 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.008582268 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.00910346 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 2.008021045 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 2.00901614 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 2.009091374 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 2.008810784 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.011517974 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 2.009316012 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.011494975 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 2.008577066 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 2.008729183 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.009930381 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.009238482 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 2.01828175 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 2.00896545 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 2.009281202 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.008587067 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 2.009637428 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 2.009186235 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 2.009105532 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 2.008524505 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.009810707 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 2.008473561 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.010169522 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.016273899 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.016120035 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 2.010977651 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 2.008227929 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 2.009599374 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 2.010775896 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.009607855 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.009453095 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 2.009195459 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.009718325 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 2.010084622 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 2.009827235 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.010900276 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.009001551 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 2.010129998 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 2.010569299 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 2.010571206 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.012259931 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 2.017875035 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.010392248 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 2.008296513 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 2.010353754 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 2.009805459 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.009122736 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 2.010721301 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 2.017809515 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.013155641 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 2.021030569 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.019173715 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 2.014587419 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 2.010580148 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.013909302 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 2.018666149 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.009898585 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 2.012050506 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 2.010881397 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 2.011280848 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.012586094 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.01549947 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.011737746 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 2.016740721 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 2.010928083 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.010619141 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.018258114 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 2.01225484 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 2.011960509 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.01311012 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 2.015714119 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.010715785 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 2.010033245 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 2.012243706 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.010435018 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 2.01725984 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 2.013226489 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.012543931 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 2.012670832 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 2.010512419 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.013201196 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 2.015910296 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 2.012002766 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 2.013014707 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 2.010197021 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 2.012174685 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 2.012215043 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 2.012505666 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 2.009849293 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.012288458 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.012353206 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.016204841 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 2.020014132 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 2.009876295 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 2.014492377 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 2.012911412 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 2.013015153 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.01358424 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 2.013169617 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 2.011093997 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 2.010824095 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.013312262 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 2.013701148 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 2.01430282 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 2.016001403 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.013583223 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 2.014350811 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 2.015662698 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.01382396 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.017312107 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.024357843 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 2.022252368 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 2.01131562 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.013028778 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 2.013915914 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 2.016547049 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 2.014575917 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 2.013728127 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.014269409 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 2.014522312 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 2.014082299 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 2.014532681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 2.014728296 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.01680964 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 2.027528145 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 2.013183169 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.012532542 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 2.014588054 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 2.015717101 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 2.013279903 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 2.010331978 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 2.012834544 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 2.015350844 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.016137365 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.02125886 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 2.014335567 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 2.019663456 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.014071115 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.013673409 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 2.017252296 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 2.016612418 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 2.020829069 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 2.015293153 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 2.014142768 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 2.01334664 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.017679116 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 2.029620955 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 2.012963842 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.02459126 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.042939665 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 2.014405434 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 2.014164717 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 2.014155481 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.012138662 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 2.014064596 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.015779859 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 2.013348024 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 2.014058304 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 2.012432483 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 2.014183354 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.015415954 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.020234246 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 2.016562839 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.00838094 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 2.009236624 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.009287686 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.008813673 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 2.007556755 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 2.008057978 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 2.007692698 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 2.007659578 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 2.008112696 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 2.009065526 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 2.007721208 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.019445765 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.017582459 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 2.007938479 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 2.01089686 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 2.003969187 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.009376821 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.010000655 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.018417531 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 2.016425799 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 2.005749381 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 2.006947881 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 2.007179083 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 2.006806226 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 2.004381394 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 2.006510289 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.006126837 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.005540399 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.003955033 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.020823136 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.016630533 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.010688086 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 2.006969354 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.006806352 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 2.007866726 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 2.007302562 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 2.008109936 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 2.006853368 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 2.008233888 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.007387477 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.011310234 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 2.007033142 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 2.007487192 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.010725181 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 2.017193354 seconds)
  done (took 1196.158010185 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.005479643 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.005094971 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.004718376 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.005127702 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.004985188 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.004594489 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.0044322 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.00455519 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.005849974 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.005234327 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.004547029 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.005188962 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.005224735 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.005394576 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.004941492 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.005785815 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.005367421 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.005227199 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.005921767 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.006493841 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.005791146 seconds)
  done (took 44.050997409 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 2.007470423 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 2.005719609 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.005291563 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.007512381 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.005111277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.007795624 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.005994594 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.008363159 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.007790331 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.005305322 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.008012956 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.009137582 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 2.005763826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.005652538 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.005754014 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.008188098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.009146252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.006092409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 2.009083944 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.006010597 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.008952557 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.00736099 seconds)
  done (took 46.09725333 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 2.009515574 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.009363998 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.008438541 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.007551991 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 2.009278268 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 2.006620082 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 2.009418091 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 2.008976723 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 2.009681033 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 2.010126516 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 2.008240772 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 2.009715176 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.016296484 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 2.014160148 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 2.009962227 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 2.009094053 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.152647888 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 2.009430214 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 2.009735588 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 2.006768012 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 2.004542185 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 2.011572969 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.00538323 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 2.00586818 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.00605344 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.006927233 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 2.006258074 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 2.006495263 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 2.004603057 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.003377924 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.006754913 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 2.002695614 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.002154024 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 2.004356203 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.000582928 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.00230527 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 2.006456532 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.002701918 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.999469569 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 2.002022722 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.011262073 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 2.023375525 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 2.001977531 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 2.006664712 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.999369592 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.998957775 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.001304495 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 2.006784744 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.994833266 seconds)
  done (took 100.413244183 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.994352497 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.994301166 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.992418527 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.994768315 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.99491114 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.994930671 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.994621231 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.993722805 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.991102063 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.990252803 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.993627235 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.991608235 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.990398171 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.993100599 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.993596142 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.990465277 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.99071527 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.990685423 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.990315985 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.991126973 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.991413632 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.992809977 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.993778293 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.991308906 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.99386665 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.991082148 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.991592339 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.993852595 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.991508052 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.991027967 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.993775521 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.993996921 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.995454675 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.991803109 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.991321891 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.994540487 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.994070042 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.992430199 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.995757355 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.990318645 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.993889298 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.993792678 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.994616264 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.997381518 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.990906527 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.991222965 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.989862815 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.991141973 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.993878084 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.992915638 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.993807561 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.99084017 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.993822725 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.993554422 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.993042624 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.99405192 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.991299448 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.989903556 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.995794817 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.989933793 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.9918466 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.993002941 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.990207459 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.994486503 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.992459698 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.990779158 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.989477932 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.991939761 seconds)
  done (took 137.427017864 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.991884921 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.992280969 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.993036136 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.992555336 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.993383633 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.990782323 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.991435724 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.991714746 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.990999716 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.993623477 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.990105206 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.989861299 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.990039357 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.989252634 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.993765605 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.988860699 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.988678783 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.989223906 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.988710335 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.991333853 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.988353603 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.989590193 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.989293977 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.990013338 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.993054076 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.989989906 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.990249872 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.989505656 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.989700798 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.99205008 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.989414181 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.98930698 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.989900041 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.989980548 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.992242708 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.988372158 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.98866051 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.988857272 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.988664868 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.991083575 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.98741846 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.987876396 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.987876752 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.987524072 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.989328324 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.987280748 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.988421779 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.988126834 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.987906273 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.990270137 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.986677525 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.987350086 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.98814616 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.987245234 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.992035079 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.986911888 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.98600028 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.986649315 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.986022433 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.987448136 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.986524386 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.98612235 seconds)
  done (took 125.279386789 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.986371234 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.987727245 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.983250843 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.983947828 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.985527065 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.984370707 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.987035887 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.986220097 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.986328142 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.986090155 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.986109715 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.984867374 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.983680878 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.985688894 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.983614937 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.983234457 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.98444643 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.986608699 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.98541579 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.983955117 seconds)
  done (took 41.624835895 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.983464938 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.98747475 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.983056006 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.98266511 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.985416368 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.983335905 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.985878552 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.985885883 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.982769568 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.985100894 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.986012774 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.986444304 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.982306277 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.982806359 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.985751928 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.98273045 seconds)
  done (took 33.670373445 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.980731086 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.984521323 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.9838898 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.984207189 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.984996279 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.982474557 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.984802361 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.981592955 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.98360706 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.98637024 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.984118005 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.984597046 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.984933529 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.985080293 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.983032888 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.984385971 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.98199099 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.981912702 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.984033607 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.986400933 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.981746608 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.981655755 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.984660297 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.984608389 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.983639427 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.982096761 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.982957043 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.982768335 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.982432332 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.988901885 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.981778476 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.981682112 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.982256562 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.982736975 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.988148171 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.98111895 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.983499054 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.984827196 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.984562102 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.987529472 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.984307017 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.98112167 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.984259132 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.984592922 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.984131805 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.982688688 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.981165918 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.98154042 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.981472783 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.981979707 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.982403844 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.984255018 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.984159206 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.983913563 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.985504696 seconds)
  done (took 111.020905302 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.983505482 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.983459201 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.980140315 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.986243263 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.983117302 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.981682708 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.982584561 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.980638231 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.981306917 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.981820691 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.98105365 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.98308312 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.981320427 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.985811543 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.981145918 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.982625309 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.979775814 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.979824624 seconds)
  done (took 37.595536501 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.98085636 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.980158865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.983037577 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.979980876 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.980228735 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.98504141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.980072428 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.982403055 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.982863369 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.980854935 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.98239715 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.981624551 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.981533699 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.982892607 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.98094019 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.9811975 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.981932326 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.982028828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.979343859 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.979889249 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.985555844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.982547877 seconds)
  done (took 45.51543325 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.981041922 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.981781391 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.99849151 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.997769113 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.001044505 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.009155037 seconds)
  done (took 13.885570565 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.980979788 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.980088424 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.97762863 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.981220226 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981200734 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.979655538 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.976571652 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.976298762 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980467968 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.978120287 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.979367515 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.9797105 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979680832 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.976860935 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.978700103 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.98099648 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976736823 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.97752699 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.977521246 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.979796305 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.977255431 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980174022 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.977546997 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.977931546 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.979019117 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.979789897 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.97987455 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.977537867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.977520109 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.979792869 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.984191441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.977550448 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.981298457 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978202894 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.981781798 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980911077 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.977291892 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.980871186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.982075887 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.979379305 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.9806862 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.980389396 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979903923 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.977542202 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981425676 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.978501653 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.97899682 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978354316 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.978024023 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.982212921 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981564187 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.97917943 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.981213746 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.981304994 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.981645046 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.982514613 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.979800612 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978052683 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.981892484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.979485551 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.978168113 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.980490445 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.977579048 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.979102904 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.98106293 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.978753812 seconds)
  done (took 132.564585968 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.97906805 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.979024342 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.97887769 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.980994413 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.978961994 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.979328288 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.979530893 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.979725642 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979505626 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.980097644 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.982052228 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.980259737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.97891685 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.980486258 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.979350376 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.980204404 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.98013071 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.979920152 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.980655684 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.983590039 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.97989361 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.980838755 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.981498341 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.981366929 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981145842 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.982431385 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.980285763 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.980477917 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.979761385 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.981206775 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.981210627 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.979969408 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.980845694 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.981570762 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.981483779 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.981283282 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981242333 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981569635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.980588336 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.983751974 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.981729499 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.98413394 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.981111737 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.982016732 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.98258356 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.981820982 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.981659107 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.981255535 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.981466676 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.983061227 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.982464131 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.98245645 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.98346414 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981593997 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.982056559 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981720443 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.982579569 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.981606135 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981904546 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.984422293 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.982419893 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.982451273 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.986919422 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.983587765 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.983007198 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.982886759 seconds)
  done (took 132.687065865 seconds)
done (took 2767.061012906 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.016206283 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.036850932 seconds)
  done (took 15.971855572 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.146994481 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.097819857 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.982704488 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.021551562 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.983717136 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.005039989 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.003078589 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.983083057 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.983356035 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.983761621 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.984624554 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.171067645 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.982740535 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.985553677 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.983235449 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.078136745 seconds)
  done (took 54.302345031 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.988063612 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.989278369 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.999152227 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.990679091 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.988687606 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.000221156 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.020819007 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.991114566 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.022927425 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.00102163 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.058544377 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.000439164 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.988474005 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.037395775 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 2.001947203 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.003444011 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.07734456 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.063661626 seconds)
  done (took 38.142898889 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.066702019 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.992273177 seconds)
  done (took 10.986322801 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.012293 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.984743408 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.01656407 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.982678534 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.993569393 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.015695333 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.014847066 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.993901152 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.99035964 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.005783241 seconds)
  done (took 71.933414332 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.994797894 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.990913668 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.989114324 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.987397933 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.980880066 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.984033007 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.990919629 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.979848553 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.672780321 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.024602436 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.995386364 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.994629552 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.989646339 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.991263065 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.986230532 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.011813316 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.116688828 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.986246071 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.987783573 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.994350704 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.989556656 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.052335244 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.003081059 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.990702162 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.019869793 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.674129734 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.997236278 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.996536383 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.113585288 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.986632134 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.989111078 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.990794248 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.993977734 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.373663359 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.275962283 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.988786978 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.999653292 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.997500136 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.987018935 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.114282103 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.990655755 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.995226514 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.983717408 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.259712503 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.086081166 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.032972152 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.346428552 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.994132125 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.991669762 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.020200429 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.992856187 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.993862389 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 2.003307292 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.506992805 seconds)
  done (took 139.307319622 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.985058799 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.274391601 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.138415479 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.9854242 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.258064331 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.193309001 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.92633046 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.03554032 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.986240224 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.188350536 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.150158367 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.092190206 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.987607828 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.988178364 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.988196376 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.985625365 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150620056 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.055774934 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.986530457 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.984143616 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.017445334 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.195335882 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.115704271 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.98674394 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.008985637 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.197355485 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.108576606 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.095081286 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.264776307 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.985695031 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.053822235 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.988315558 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.989738643 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.988884442 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.142345504 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.084671326 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.083040648 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.988427546 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.990935564 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.986814924 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.655718863 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.184634424 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.087050726 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.134664918 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.181763159 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.191708913 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.633732786 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.990330338 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.623355096 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.152959981 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.202264451 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.194207541 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.112744537 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.988483254 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.224194728 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.987627637 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.98748785 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.226284493 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.135091378 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.097999962 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.989997665 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.988106981 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.987150302 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.233739468 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.990780399 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.087173642 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.990074387 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.991430823 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.088139067 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.098657455 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.130129316 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.202818652 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.023693636 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.862116787 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.501816535 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.202585944 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.060306396 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.225931785 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.992121555 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.993904495 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.075073134 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.739905543 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.150494261 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.238172534 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.210986634 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.030014736 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.585267429 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.989542638 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.185178468 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.176165396 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.185577244 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.19726792 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.142024378 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.190529353 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.990168804 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.990720378 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.222755835 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.127936972 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.992967118 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.349211773 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.225109007 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.576118224 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.01315287 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287508469 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.124385574 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.363514241 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.618003799 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.995989436 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.159180225 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.030163235 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.995990964 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.989139403 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.183621075 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.802182164 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.995854475 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.513770212 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.057237468 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.994396994 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.197035078 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.993426021 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.202540769 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.994043115 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.23055336 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.4352996 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.025952475 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.166042332 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.197637595 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.78552827 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.23822871 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.235564272 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.110063972 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.215509186 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.583557171 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.992961769 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.268544165 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.993668306 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.992662627 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.161930544 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.994248433 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.140763148 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.998127779 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.220042475 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.021916644 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.148543637 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.998040779 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.226652753 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.029969938 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.04589938 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.995539314 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.125595297 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.994580317 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.9842456 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.148833227 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.996673824 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.993274574 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.438413891 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.992821398 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.142210193 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.223551652 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.023313718 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.06235419 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.518817123 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.993836241 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.081349999 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.020444712 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.421493395 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.997445744 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.150677699 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.944140982 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.441739426 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.99541578 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.238622111 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.176830729 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.995878621 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.99468979 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.73791968 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.69805585 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.993815976 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.153866424 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.329149921 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.640983856 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.199595835 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.996947476 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126551521 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.997596049 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.073636592 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.343475393 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.994459207 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.99540591 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.997864706 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.995237569 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.996124425 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.208407194 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.027277929 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.490741762 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.132045329 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.210741276 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.306699188 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.213925657 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.040069104 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.998959384 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.260233019 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.998434739 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.060944509 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.997812466 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.01934832 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.225929795 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.999366648 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.210978527 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.24528939 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.901148211 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.047316187 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.997985096 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.994721747 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.996959953 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.144729606 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.091811967 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.999705247 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.996173221 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.106975404 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.123200489 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.190663423 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.588772399 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.171691232 seconds)
  done (took 926.084640128 seconds)
done (took 1258.646458044 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.002241385 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.999360649 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.984894152 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.997963508 seconds)
  done (took 29.920690294 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 2.006655071 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 2.002876632 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 2.004637315 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 2.003642498 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.005101231 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.004526345 seconds)
  done (took 13.963081341 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.02315879 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.00038197 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.998442001 seconds)
  done (took 21.958800957 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.07198643 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.408468457 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.104332455 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.443512393 seconds)
  done (took 10.964065796 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.005784417 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 2.006413192 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 2.005421981 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 2.007102571 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 2.007497008 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.008324198 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 2.006700407 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.005919426 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 2.008688187 seconds)
  done (took 19.999522864 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.423890413 seconds)
done (took 103.164986952 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.643608893 seconds)
    (2/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.089639236 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.293134392 seconds)
    (4/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.097278778 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.986340183 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.296049451 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.358790718 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.065155344 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.136637204 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.026749126 seconds)
    (11/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.989083667 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.323237495 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.043632915 seconds)
    (14/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.327658429 seconds)
    (15/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.893900873 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.986879795 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.06112989 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.638360176 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.09111172 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.103016481 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.248600377 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.520034697 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.002444168 seconds)
    (24/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.621991591 seconds)
    (25/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.413342574 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.361897107 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.433595166 seconds)
    (28/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.664307786 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.992876342 seconds)
    (30/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.094051167 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.130105835 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.215301092 seconds)
    (33/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.384191554 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.307975791 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.135497625 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.007264234 seconds)
    (37/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.008443886 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.560254947 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.006487606 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 5.776743598 seconds)
    (41/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.594570971 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.104235738 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.027968276 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.922517034 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.064034978 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.583864104 seconds)
    (47/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.141537306 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.348126148 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.901202497 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.39307639 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.337246807 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.166769227 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.301757813 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.374750158 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.115494884 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.208138238 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.269118301 seconds)
    (58/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.026982909 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.987169669 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.005713824 seconds)
    (61/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.398383941 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.376737692 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.685606131 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.010204257 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.062002959 seconds)
    (66/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.202145471 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.00191972 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.104082265 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.148096911 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.005568692 seconds)
    (71/309) benchmarking ("sort", Int8, false)...
    done (took 4.966380646 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.360117326 seconds)
    (73/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.303353069 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.13683286 seconds)
    (75/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.906992407 seconds)
    (76/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.005954943 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.583476049 seconds)
    (78/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.156653637 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.577579575 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.885105871 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.121639283 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.903968886 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.658795244 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.009226555 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.732104339 seconds)
    (86/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.216755676 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.053052667 seconds)
    (88/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.389775039 seconds)
    (89/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.085465064 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.830108398 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.209660619 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.990971123 seconds)
    (93/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.215810444 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.876435437 seconds)
    (95/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.916446177 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.334758762 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.005632536 seconds)
    (98/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.017186106 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.97663257 seconds)
    (100/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.162592301 seconds)
    (101/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.002856164 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.208431399 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.375946835 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.408506305 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.091492302 seconds)
    (106/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.106202476 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.067870633 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.905769025 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.268866561 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.00456807 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.799888804 seconds)
    (112/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.516247906 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.818234867 seconds)
    (114/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.99318756 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 9.527562252 seconds)
    (116/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.585542868 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.247874816 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.086473878 seconds)
    (119/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.286699487 seconds)
    (120/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.346293443 seconds)
    (121/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.288202229 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.004749788 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.30148823 seconds)
    (124/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.369073327 seconds)
    (125/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.095552087 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.021208799 seconds)
    (127/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.077732914 seconds)
    (128/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.988320902 seconds)
    (129/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.091081733 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.450676338 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.028771772 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.004147327 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.263259362 seconds)
    (134/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.575700183 seconds)
    (135/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.183201558 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.219957566 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.111351347 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.287665951 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.504982519 seconds)
    (140/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.019970849 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.169909533 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.371390367 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.029776917 seconds)
    (144/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.271204416 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.091065456 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.02944528 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.393280281 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.108473326 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.004311361 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.67164399 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.164615458 seconds)
    (152/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.292272025 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.223103002 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.032958482 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.021066954 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.1983808 seconds)
    (157/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.615118598 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.102444975 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.298541407 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.311893894 seconds)
    (161/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.136029963 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.02811811 seconds)
    (163/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.197238855 seconds)
    (164/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.66516305 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.130588793 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.991951887 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.11959372 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.431173701 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.31170418 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.6667296 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.992574607 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.457987159 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.282743603 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.108233872 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.697624745 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.339428935 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.037373265 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.046976 seconds)
    (179/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.031605703 seconds)
    (180/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.031341333 seconds)
    (181/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.20961001 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.011548486 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.08539879 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 8.602969138 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.16039202 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.156332105 seconds)
    (187/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.074771495 seconds)
    (188/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.03458635 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.358591912 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.067032698 seconds)
    (191/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.152743785 seconds)
    (192/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.130196009 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.10828137 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.220241789 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.077829076 seconds)
    (196/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.191155485 seconds)
    (197/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.992586894 seconds)
    (198/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.140722784 seconds)
    (199/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.797864888 seconds)
    (200/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.224003382 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.008059458 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.180089571 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.126624301 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.598688944 seconds)
    (205/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.151219817 seconds)
    (206/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.145149696 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.011365617 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.560195201 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.085163319 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.007326155 seconds)
    (211/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.258346357 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.289092735 seconds)
    (213/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.411781476 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.995010822 seconds)
    (215/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.291756745 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.96930466 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.036569743 seconds)
    (218/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.199885053 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.125539743 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.049392352 seconds)
    (221/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.143323684 seconds)
    (222/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.065840043 seconds)
    (223/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.042601947 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.681699816 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.999375461 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.201774345 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.061090355 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.226193618 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.03786156 seconds)
    (230/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.128810873 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.381356591 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.99749112 seconds)
    (233/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.053599947 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.312113478 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.806156272 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.250588462 seconds)
    (237/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.361770187 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.931176475 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.080785618 seconds)
    (240/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.511964254 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.996808984 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.604061228 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.186137691 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.111594081 seconds)
    (245/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.096807968 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.084016501 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.036451093 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.136589592 seconds)
    (249/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.528978949 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.085267915 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.388107849 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.012698062 seconds)
    (253/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.283993746 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.1108631 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.036882872 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.313700551 seconds)
    (257/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.303027837 seconds)
    (258/309) benchmarking ("sort", Float64, false)...
    done (took 5.81878227 seconds)
    (259/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.999068307 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 4.18164215 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.345227691 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.62004826 seconds)
    (263/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.098036578 seconds)
    (264/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.038729783 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.022691942 seconds)
    (266/309) benchmarking ("sort", BigInt, false)...
    done (took 7.010304653 seconds)
    (267/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.144593308 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.40650204 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.025698588 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.016147291 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.083770965 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.043262161 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.210017769 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.420961222 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.074904677 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.03059612 seconds)
    (277/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.181603899 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.36270598 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.55471469 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.144048754 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.100587434 seconds)
    (282/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.259762624 seconds)
    (283/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.106209223 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.164617999 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.999102079 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 3.777941226 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.127891492 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.184295903 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.113760221 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.672492588 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.301253612 seconds)
    (292/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.324887617 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.80390943 seconds)
    (294/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.065348208 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.199082492 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.058957956 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.41109875 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.060106038 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.999035718 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.293367777 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.900180594 seconds)
    (302/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.160565594 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.019208049 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.210872397 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.304587695 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.239365601 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.040814459 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.813056779 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.021879913 seconds)
  done (took 1058.862112874 seconds)
done (took 1060.874736286 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.052860334 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.046111384 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.029871138 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.051893435 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.141225905 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.059366644 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.040495423 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.03188081 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.077903403 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.079107582 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.028092647 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.058722441 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.031573642 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.030335613 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.030052789 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.044515365 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.331669131 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.053109908 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.047209324 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.039680286 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.046537662 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.028441598 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.080184424 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.059561044 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.03438239 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.033912809 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.033565506 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.050464386 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.142325106 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.034858976 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.033804111 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.04253675 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.33211048 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.05235323 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.026098068 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.050827313 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.042060357 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.04195939 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.035857309 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.06439724 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.464934923 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.03746975 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.032779502 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.031048136 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.032491687 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.035702015 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.033635042 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.038873314 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.044081781 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.046197665 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.46296857 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.052472126 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.036154054 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.032763221 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.044373593 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.032004508 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.035457162 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.047837984 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.052453346 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.04859093 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.321796462 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.059952221 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.034777713 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.048496967 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.040543348 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.501980345 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.033188608 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.037852143 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.465647673 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.043650858 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.500600502 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.046575127 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.035508233 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.04754198 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.065280068 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.335010496 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.050819528 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.033469708 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.041327743 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.032125591 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.043314783 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.04638622 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.038947777 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.035178375 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.047427401 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.064242886 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.044705268 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.035915882 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.043376715 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.053371191 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.042238158 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.045092496 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.037778739 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.030017223 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.045063024 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.039155267 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.037807357 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.037712741 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.039401835 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.045600638 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.466054374 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.055816509 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.032678926 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.031686695 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.035173494 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.049683139 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.463433125 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.042040335 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.056498469 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.083124998 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.036144188 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.326044905 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.060870602 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.050752346 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.044441581 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.038859328 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.031173621 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.325333239 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.487634733 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.055675522 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.037627516 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.034795253 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.051156777 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.038874263 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.032406033 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.338543526 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.058996788 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.049724759 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.156420232 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.046039545 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.06826527 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.034007121 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.039714594 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.066780771 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.052906815 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.069256274 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.039953596 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.052680974 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.05233225 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.034082343 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.048815346 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.04787423 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.038569408 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.043473608 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.032007565 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.07028043 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.049395809 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.049927711 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.058547627 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.157953823 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.035205854 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.326854595 seconds)
done (took 318.892390273 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.103197286 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.023784532 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.132378866 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.032187535 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.116200724 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.117140776 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.030159814 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.030327029 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.029780435 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.413498223 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.030246891 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.039105659 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.024179918 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.029970992 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.114471475 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.033977546 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.029326837 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.374157775 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.033647989 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.103705519 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.028304578 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.03144974 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.033630608 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.414242333 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.02431861 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.034342129 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.105285495 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.033869906 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.380779259 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.02873303 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.026296076 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.380558443 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.124939476 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.051755952 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.043417767 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.0395721 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.118163747 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.036704479 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.113719933 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.114122309 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.134171499 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.073688079 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.029654369 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.029331228 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.035807011 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.036121649 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.030476882 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.061162577 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.034172805 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.031807425 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.377070508 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.043168158 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.041667883 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.032507423 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.032360991 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.055916647 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.032108774 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.034791303 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.125894573 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.035411502 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.096648159 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.425455707 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.415793433 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.035255038 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.032008383 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.033757862 seconds)
  done (took 195.316613487 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.102366773 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.108188053 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.101460577 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.038387104 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.0867082 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.514553936 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.037766299 seconds)
  done (took 16.955779647 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.042014089 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.035508288 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.084854723 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.086218592 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.03488236 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.185385679 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.036288326 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.047552556 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.033525975 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.089251542 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.035370248 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 2.03718726 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.044153907 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.035547781 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.084787314 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.049654808 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.150985493 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.036767675 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.036930624 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.19357585 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.034877621 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.04414902 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.091626287 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.048878334 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.037089001 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.042648382 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.626855619 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 2.037140881 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.03456897 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.036638298 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.034498759 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.080758216 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.036562178 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.036310645 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.035646978 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.153846162 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.036690736 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.035346602 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.037430994 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.035357279 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.037181865 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.038107011 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.038545732 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.035557304 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.037421229 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.061685922 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.038266658 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.038572081 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.038502478 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.038806919 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.089019185 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.037632376 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.036174688 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.037174743 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.094869134 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.046090108 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.037738767 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.036301135 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.038720237 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.035850285 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.195721391 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.086564997 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.038026452 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.086758393 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 2.039006627 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.039940423 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.039380733 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.038147182 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.093034028 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.03807537 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.087691312 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.03712054 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.197477576 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.06432711 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 2.040346799 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.042289749 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.042242612 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 2.040162069 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.038519625 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.045993236 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.036625906 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.041069317 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.047883261 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.037968287 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.037188892 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.151944156 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.150061618 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.037207482 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.052681099 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.047143657 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.037298227 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.093795985 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.040259198 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.037280748 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.090961042 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.154850563 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.096616847 seconds)
  done (took 222.321310848 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.045388887 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.048429795 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.041087409 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.055466029 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.040485661 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.040688339 seconds)
  done (took 14.242887191 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.041892032 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.04193951 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.039695893 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.040402888 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.041229157 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.041323887 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.043081099 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.042138425 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.044988287 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.042077268 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.04284683 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.042786304 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.04247829 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.042081999 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.042785807 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.041542915 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.042895715 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.039240724 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.042710015 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.044060272 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.197704339 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.041620115 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.041763755 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.042143352 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.04503514 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.042350135 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.048693482 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.041146556 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.041767342 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.047377947 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.045853721 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.043691098 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.042279412 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.047135786 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.045156324 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.043188664 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.045364371 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.043395607 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.040044182 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.043502621 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.044402504 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.043184984 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.044485164 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.043793812 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.04421274 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.046806822 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.0463527 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.051560777 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.043245696 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.044355596 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.044890841 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.042026288 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.043637762 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.045043224 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.044810729 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.047799398 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.048146561 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.044641215 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.04346076 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.043947068 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.044088942 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.044351346 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.045205505 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.047211857 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.042347384 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.045662048 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.044719153 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.047669494 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.045012762 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.045016825 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.045968966 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.041701858 seconds)
  done (took 150.285389546 seconds)
done (took 601.095520912 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.302688535 seconds)
  done (took 9.277924781 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.11027837 seconds)
  done (took 9.183352518 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.441700165 seconds)
  done (took 10.420463295 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.043862947 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.041553603 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.051674107 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.045488749 seconds)
  done (took 30.169627632 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.084646375 seconds)
  done (took 9.063767294 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.052619041 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.042230291 seconds)
  done (took 16.10092163 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.074089908 seconds)
  done (took 9.054716425 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.159042035 seconds)
  done (took 9.140158456 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.058184895 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.058424313 seconds)
  done (took 16.103699284 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.028937015 seconds)
  done (took 9.008239861 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.723677792 seconds)
  done (took 11.711450295 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.045262225 seconds)
  done (took 9.033519629 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.113332365 seconds)
  done (took 9.092913489 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.116346267 seconds)
  done (took 10.096228995 seconds)
done (took 169.432037915 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.044919097 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.045081382 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.04382296 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.042712852 seconds)
  done (took 30.157180676 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.082825533 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.082660128 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.083833986 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.092893588 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.085310797 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.082491153 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.074636264 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.074803334 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.093828434 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.085592519 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.085555311 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.084900051 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.085161832 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.075795818 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.084864051 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.085068962 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.09327616 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.084699062 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.074990998 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.086469606 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 2.050431096 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.093513435 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.086770039 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.05165707 seconds)
  done (took 51.942259095 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.247114805 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.120910055 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.203912176 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.103661186 seconds)
  done (took 10.656902966 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.101669802 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.103821902 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.116340442 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.155687112 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.184792867 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.113521585 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.077447039 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.072595495 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 2.058121126 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.104223328 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.179234324 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.119744486 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.190254837 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 2.051545727 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.237841249 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.050347842 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.050816723 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.103670669 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.154682685 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.167611134 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.051311921 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.103008604 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.106770635 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.120769513 seconds)
  done (took 52.757702386 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.050938146 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.058719452 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.057130633 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.051452251 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.050581375 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.051469584 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.056831331 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.052259489 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.072562812 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.052411447 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.050701478 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.051436317 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.050657694 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.051351984 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.050714352 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.064341832 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.065242547 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.052478193 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.053865659 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.058287677 seconds)
  done (took 43.085891496 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.045099018 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.991375674 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.398032732 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.302171188 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.046543879 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.04791218 seconds)
  done (took 33.814536317 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.0641319 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.055021019 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.052471796 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.106721804 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.187261834 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.059199695 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.052724337 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.06146639 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.095115593 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.112037224 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.068175912 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.076650601 seconds)
  done (took 26.973904437 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.047781248 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.048940117 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.050559825 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.064512268 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.063063574 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.059157314 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.060177891 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.047443507 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.067300157 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.072658196 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.062845793 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.064429362 seconds)
  done (took 46.694482173 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136103499 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.092666643 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.087489013 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717458615 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.425605913 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259639165 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.696956969 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388994596 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.052940689 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.321866739 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153136389 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150427874 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306053464 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.432881034 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.075230172 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.531195658 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347940999 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.246682908 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.068022663 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753283931 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112463366 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.114161208 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.824385941 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106636608 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260107743 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.182689432 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.310097094 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.049788167 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188681399 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088492804 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061282999 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.049861502 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.323881859 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427809956 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151704592 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061612458 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661509066 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.768436301 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 7.037921545 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.84361262 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.804494544 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.173308204 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061803855 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.050401891 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.985237129 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.092511868 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435759373 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.055638506 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.762435215 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.050491496 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061778416 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146001934 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.055291165 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.867210468 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.997638828 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.052992477 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.049215102 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05798221 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.6213505 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.201968168 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.126611286 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 4.018905549 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.141315319 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755476941 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.448619639 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.195085811 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.055212372 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055600552 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985917236 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826354518 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107782039 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401421152 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.073419741 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701920889 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367715371 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.198031752 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.994847061 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312239094 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.468536478 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.018082196 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28122369 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.053096528 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.989815782 seconds)
    (84/481) benchmarking "5d"...
    done (took 4.000609696 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.987008755 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.31263481 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080279383 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.839575314 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080681331 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391918843 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.064459874 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072422609 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077475064 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.277588328 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.938122583 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.053842946 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.92877546 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196145704 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074198394 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395721916 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.987464096 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.057992087 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311901446 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.264670874 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.015207235 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.566060229 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215896547 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.514506947 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.100054097 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.091513722 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095813988 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.323423041 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10771996 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.197650284 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108175771 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.056005172 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345343073 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.522204759 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.184160838 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.188549342 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179090191 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.375332304 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.073270823 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137815282 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.059128355 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.055390401 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.860267675 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.605163237 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.05498188 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.058019001 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.022596668 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095558156 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.056335118 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.008021791 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.68404015 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166459729 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 7.068195204 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.279698834 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.519006667 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.361244103 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.989747656 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405614155 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.145193502 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.2780952 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.706433122 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.135955832 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318201339 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.013019363 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.040804241 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097339 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075581667 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15490151 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078030336 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.084435277 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342596164 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.060577031 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.060234689 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.875003791 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.093224644 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.063051114 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.063169404 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.807834624 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329839072 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.075597979 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.071543794 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.945618956 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.072960843 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122865194 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064372867 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067977996 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.595779295 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780955358 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.064044439 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.64853827 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284823498 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068837414 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.82984324 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17230749 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.146182195 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328877901 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112124792 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.992423042 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.770218491 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.751258404 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.058943018 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993196954 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.059735561 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068271334 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069939511 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.254834517 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332876028 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.101190625 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.770018224 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.101718461 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069947522 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.064462655 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.058892264 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.568153504 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.213159871 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.131780386 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.100192891 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202383597 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.07453959 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.993658129 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.063456947 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064710227 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.059816813 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.060593892 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093538889 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.765685478 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437800005 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3213275 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.708398993 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073916565 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.851558219 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.118788776 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.058849752 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.795866389 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262976241 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.105698265 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072914094 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.072148197 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.8436081 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768325634 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.62882815 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37564598 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.357641987 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497838151 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.158837067 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.085564963 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40989791 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.995387332 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.617308253 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118337563 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413572821 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.005045134 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150090439 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.713607294 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.407728837 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079067431 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289404442 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454396631 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.849949052 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204262513 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273104972 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097413639 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.098596304 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018747614 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.349547973 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205273863 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.785154343 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266020684 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397666453 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.797832802 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.186601194 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.061687176 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.736280027 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135127175 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.775131811 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.233898909 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.133366369 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.067437745 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531503227 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.072911254 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.288953853 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.411683813 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.110130851 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.181843791 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.998447208 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074467585 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074544878 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.065408582 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.059665496 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.952325702 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.316937987 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074345504 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.996881705 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.06921337 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.345442098 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.959647247 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.070771611 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.064628972 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35664624 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.489204838 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230488121 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.04513585 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.579024879 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.071276446 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.998477658 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.997781687 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.756730608 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.070874169 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039256157 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256988558 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.152679618 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974529367 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.019555923 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308683821 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.320750639 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.078100292 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.334050501 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333053815 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.760331873 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089184818 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.165600682 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.797117246 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.172739753 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.064777152 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301022136 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816307356 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.290995015 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.110957318 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.004511994 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.064242973 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278618681 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.065487713 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.035887186 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286657209 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.786164892 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.148320238 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388134414 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13197229 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.052286165 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.107629752 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.155195599 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076109541 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146634639 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075521276 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.077192411 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.076987869 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114221985 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043056472 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.18837152 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.079639252 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161088875 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.218769587 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.590342578 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.071631945 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338386578 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430231081 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383425536 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120741168 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.067790115 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.067364363 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.002199215 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216471649 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.292470841 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.340778764 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198078054 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.182364255 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092692908 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.777890744 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.153694316 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304950091 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.342782676 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.962219352 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.466352839 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.104168258 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 7.068115078 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080502573 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.280125322 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.266047501 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347737969 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20721065 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.032544246 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433827305 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.343032128 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.068142409 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.068909045 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.658561488 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.154616947 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.744888163 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.097368168 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037864731 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341773379 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079138489 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442958647 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.088035413 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.225740794 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.842959548 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846350123 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358244113 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.045765987 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124804494 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342700531 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.447709363 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379492214 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136795782 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082308831 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.180206807 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217040673 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.95583097 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.071336182 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.069991742 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.118264489 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.780091156 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080068329 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344663602 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37522489 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.067526555 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.961904372 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094705603 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.080341081 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.294184723 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318883156 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313339171 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081499135 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.078199724 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.88749951 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343381463 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123558658 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.006792295 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.074902059 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163652452 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31604787 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091987306 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.524480647 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.782152673 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331221874 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 3.061791265 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09315168 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.112524342 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.430267157 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38731603 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.601395787 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.267419685 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.647644907 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.537089017 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.36935195 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.077697365 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.170223732 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.372231664 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.077136591 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.032454822 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106937135 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.339725455 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.378318397 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.123425929 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778761701 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.041703353 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.414784312 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.633191256 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.010535284 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.082390332 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.133053595 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.074066073 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203243582 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084541471 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.971979348 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.117883716 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.852225746 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359045522 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.078166953 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.058679357 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.848248186 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.241675631 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10249749 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215674437 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.083477928 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.74820996 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.424652064 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329210725 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.042294327 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.07829342 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.078863929 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.076626095 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.06014234 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270464281 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.270711827 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348868547 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.062872137 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.107304874 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077857032 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.290266001 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285951636 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.018094646 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209622346 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036771052 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112952489 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.983922734 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.575027979 seconds)
  done (took 1764.125064438 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.085049723 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.114245322 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.12999182 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.144116461 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.12127742 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.155202329 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.106048829 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.181615008 seconds)
  done (took 59.04848306 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.083930329 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.270733164 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.084267477 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.075306524 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.085153476 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.076065626 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.238486022 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.083280189 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.084240139 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.084741325 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.092991001 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.075405016 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.381275462 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.095851016 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.076099448 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.062614827 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.083986494 seconds)
  done (took 78.06646828 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.084855372 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.143248121 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.09893811 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.089092414 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.028324306 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.093214217 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.856006094 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.08864912 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.079125324 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.299185284 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.708298852 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.078729474 seconds)
  done (took 92.660654779 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.086889185 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.082994161 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.082949806 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.082595877 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.082629018 seconds)
  done (took 12.433510553 seconds)
done (took 2304.420572978 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.330780675 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.293688162 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.305491418 seconds)
  done (took 6.612562273 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.225124149 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.273601441 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.392415572 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.397368223 seconds)
  done (took 11.302746432 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.370778049 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.461307979 seconds)
  done (took 6.843907549 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.471994816 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.091487414 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.455913868 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.075248893 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.078722136 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.07750278 seconds)
  done (took 23.249747092 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.079480438 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.08265129 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.080696468 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.08255219 seconds)
  done (took 10.337817655 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.063000952 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.796197829 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.065162255 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.077206547 seconds)
  done (took 22.01413011 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.828325857 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.839074573 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.823760685 seconds)
  done (took 10.504018634 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.579927568 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.966922257 seconds)
  done (took 9.560209284 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.345867812 seconds)
  done (took 4.359136486 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.212737619 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.389731165 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.549379512 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.57770379 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.658751311 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.737643402 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.3873139 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.315543436 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.469488435 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.49524933 seconds)
  done (took 26.806814051 seconds)
done (took 147.953441352 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.455767639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.314024791 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.282689081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.413287925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.298544838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.282714833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.299219576 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.396495031 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.922745512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.921460579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.416249508 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.298337205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.246099067 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.314221845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.245719667 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.312573566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.297253737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.464651743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.113002269 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.317536769 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.301443668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.05173967 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.258344989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.064036987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.301408517 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.231500948 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.629556915 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.319290262 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.267192282 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.641418911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.234906151 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.470647053 seconds)
  done (took 179.399044284 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.840362106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.080589905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.080995806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.080578941 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.697233861 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.081059087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.082425002 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.080956549 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.32620109 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.330530761 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.081231854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.675434418 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.080540487 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.08137509 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.086117986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.080647462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.471841983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.916003679 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.099756916 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.102834558 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.107750613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.639745173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.104914825 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.687950209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.491285722 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.101601794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.080696331 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.102251329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.088154376 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.090465605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.093169229 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.082444066 seconds)
  done (took 216.044674116 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.081018984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.082463319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.082851944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.082276376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.081713912 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.082779128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.08181886 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.082121445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.652845495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.658659083 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.093911026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.090327104 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.094498854 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.083169661 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.089525297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.082742868 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.112456904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.099793546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.095882283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.100054421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.10692723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.933343708 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.109440836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.936264908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.114832673 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.096634869 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.083748903 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.602974504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.113157427 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.11232674 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.115203644 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.091504002 seconds)
  done (took 228.36221568 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.292259997 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.098130367 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.097476768 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.051620713 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.097244976 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.097277548 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.092759024 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.295074073 seconds)
  done (took 21.169676735 seconds)
done (took 646.997772271 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.638351166 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.418348026 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.285827906 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.120468386 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.356113284 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.158885534 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.117867498 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.185412077 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.855030871 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.189761893 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.781780622 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.138256048 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.858531262 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.143142028 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.245136016 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.172224348 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.683219112 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.773054415 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.296532033 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.17217582 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.293708548 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.100087696 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.192611601 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.879822594 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.875924442 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.111902131 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.296580542 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.691937647 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.129014482 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.28161497 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.862041911 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.51088352 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.130858211 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.11675886 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.169079694 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.152110943 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.473242793 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.128632157 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.246466584 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.867817513 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.17309528 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.739195876 seconds)
  done (took 113.040646635 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.089594523 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.087108837 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.087131504 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.088776543 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.088866937 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.087764617 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.08733948 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.087757166 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.087710771 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.087376242 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.087266544 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.089165614 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.087678603 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.090091521 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.086944941 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.088040264 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.089388261 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.090455522 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.087542161 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.087378489 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.089615592 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.08769607 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.088905634 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.087167893 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.089170754 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.088895422 seconds)
  done (took 56.334070061 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.10105144 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.245423611 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.327347391 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.120447905 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.100490889 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.104564136 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.120292577 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.106898877 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.103583567 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.103515074 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.193904563 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.106633497 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.119371047 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.328157469 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.11543022 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.099880674 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.100772549 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.100045524 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.251207859 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.117313202 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.121483242 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.105779591 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.119995754 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.11449992 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.102874021 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.100213609 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.103835086 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.536176155 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.11021492 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.194048627 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.178351397 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.122303032 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.499530135 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.337207083 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.170259095 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.109119979 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.10151861 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.198748725 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.106560175 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.100762085 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.119412868 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.106568155 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.326999873 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.600159731 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.116292583 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.102402488 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.548857026 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.206624344 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.142972273 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.115263339 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.329358754 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.118342299 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.103107245 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.102740376 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.138431582 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.112870523 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.101784385 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.411144122 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.114146487 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.121929782 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.107576282 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.103017564 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.270311305 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.110259177 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.246265807 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.111681741 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.110424182 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.103168549 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.329470279 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.118891987 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.599260872 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.117051114 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.104393658 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.195479736 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.251772138 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.575940836 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.116275038 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.276149973 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.516762935 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.127348588 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.111003646 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.527604499 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.131900563 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.111308078 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.105558026 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.104990959 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.104583831 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.148392123 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.119667536 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.539639396 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.60981457 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.427502577 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.131828489 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.119463629 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.105344561 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.414895043 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.113004791 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.104555904 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.322701438 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.616943601 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.118701414 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.111778932 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.587701378 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.118652393 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.123669092 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.115388263 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.33394333 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.11882374 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.148424393 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.104797561 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.111450363 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.107928338 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.123003943 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.112717647 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.105978679 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.579619419 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.216043295 seconds)
  done (took 259.274082885 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.100003569 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.110494802 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.099076002 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.100707369 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.098336733 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.104895793 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.098218112 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.097810085 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.105047779 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.099066812 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.098169113 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.099696975 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.101523752 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.109445224 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.137554888 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.107014875 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.714524651 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.099693515 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.104147057 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.102116859 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.747603341 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.113967389 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.100918265 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.10159935 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.107320287 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.099286932 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.107319655 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.137918818 seconds)
  done (took 174.241162368 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.107213201 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.222751916 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.124838208 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.135956279 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.114767943 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.104822615 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.131006608 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.123126451 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.112044814 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.10460773 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.105612142 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.167848776 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.118843879 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.208542361 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.138468591 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.138452248 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.21251328 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.11663972 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.10610312 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.106601974 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.135901879 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.106765591 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.168785417 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.234047321 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.127695767 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.222748014 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.117656777 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.111212903 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.107177294 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.226472466 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.124249798 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.168206734 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.137587646 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.126790093 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.228334453 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.22658796 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.21519932 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.142165238 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.11188972 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.106325523 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.106442572 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.098830391 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.227117199 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.1281761 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.109303898 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.216738379 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.129542842 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.110343495 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.117478264 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.108300823 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.122623411 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.127486732 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.175432182 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.24158471 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.148594532 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.135158432 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.133072948 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.401441692 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.121288936 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.209289853 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.104368403 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.226173981 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.133357274 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.098966844 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.109216737 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.115118895 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.13801148 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.140634943 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.216072642 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.118650389 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.210376964 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.14617583 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.116211679 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.109767796 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.11831439 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.228950714 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.23230195 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.144461664 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.148651621 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.141903078 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.106433122 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.10979496 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.100173311 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.128335342 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.115048462 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.225935946 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.231439651 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.118760454 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.113234278 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.112270286 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.112232126 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.137523956 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.234605147 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.148989195 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.209689033 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.179214001 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.184961979 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.12534983 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.123841137 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.114748883 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.17467938 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.127142961 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.122349089 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.450523724 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.185483591 seconds)
  done (took 228.045033988 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.559005518 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.165244303 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.167555944 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.403748307 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.543632033 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.969512699 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.160051861 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.161159246 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.187203948 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.322272367 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.219836006 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.172587895 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.147948386 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.1346135 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.160656944 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.180223661 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.166253802 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.462140904 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.301724464 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.310220606 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.1408517 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.434926299 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.484575457 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.547395794 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.195810089 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.496573431 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.841556007 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.397236959 seconds)
  done (took 68.482199699 seconds)
done (took 901.441504977 seconds)
SAVING RESULT...
DONE!
