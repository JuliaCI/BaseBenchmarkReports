cset: moving following pidspec: 4322
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.169786007 seconds)
loading group "string"... done (took 0.53745765 seconds)
loading group "linalg"... done (took 9.665231067 seconds)
loading group "parallel"... done (took 0.169227395 seconds)
loading group "find"... done (took 2.45000979 seconds)
loading group "tuple"... done (took 2.225549031 seconds)
loading group "dates"... done (took 1.414907614 seconds)
loading group "micro"... done (took 0.201950389 seconds)
loading group "io"... done (took 0.509009939 seconds)
loading group "scalar"... done (took 54.08998832 seconds)
loading group "sparse"... done (took 13.917574442 seconds)
loading group "broadcast"... done (took 1.304435915 seconds)
loading group "union"... done (took 10.445232378 seconds)
loading group "simd"... done (took 3.713697612 seconds)
loading group "random"... done (took 13.568666199 seconds)
loading group "problem"... done (took 2.201707311 seconds)
loading group "array"... done (took 23.576908923 seconds)
loading group "misc"... done (took 1.133116717 seconds)
loading group "sort"... done (took 3.760469854 seconds)
loading group "collection"... done (took 20.595057438 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.747146529 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123248097 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204566273 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.203091894 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277660753 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168177096 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.167254572 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.161255779 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.619423716 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210382368 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139794553 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.379032696 seconds)
done (took 6.120772294 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.300098329 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.065096777 seconds)
    (2/2) benchmarking "String"...
    done (took 0.196456045 seconds)
  done (took 0.93356183 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.081447024 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.164188484 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111465222 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097917815 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097305093 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112218441 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096474744 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112084695 seconds)
  done (took 1.457578027 seconds)
done (took 3.436809998 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.523252509 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.953854197 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.54571644 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.191064731 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.306038819 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.307152626 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.276184887 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.235390029 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.095340298 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08959486 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.263133934 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.447400959 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.43045294 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.984535116 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.073801079 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.097133995 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.161914942 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.848255478 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.085866729 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.12790787 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.504877833 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.220956181 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119699532 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.111179444 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190106559 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130150552 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.145446392 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105078779 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.744532193 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.139490859 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213155572 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087693539 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.143309815 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.173866721 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.222774583 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11457204 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.747903565 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205203638 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100493776 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105014997 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.749933272 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.131683285 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.213748025 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110167795 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.072365356 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.171389707 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11729206 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081992636 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09726506 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.105310218 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173075469 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.479053795 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.1083894 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.199392634 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.097055303 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.779099183 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102746349 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.287168917 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.13250017 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098040972 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095553529 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.093659015 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.172355095 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.101271137 seconds)
  done (took 21.02860191 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.194059085 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.212410766 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099653152 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.148179516 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.150091429 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087407709 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.093109314 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099656787 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119322589 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.199002271 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13310362 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.217976849 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079961851 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.111431839 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.187538915 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.238702385 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111648028 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126903436 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094959446 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.097870707 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.148285351 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100972452 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.116379681 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.101615801 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174107256 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207618073 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114947895 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.130338456 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095774696 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.103745697 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14873673 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156102143 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.100377437 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09359449 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178429722 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.131197967 seconds)
  done (took 5.594580954 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.238689239 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107641172 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249886668 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.193115079 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.134117855 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18380709 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.197796322 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.306468999 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.285714801 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168645278 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130166696 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100957405 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088558979 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082713916 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.101750516 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.852104444 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158116487 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.163700263 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188217019 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100675514 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102253456 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.722171696 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105701654 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.089679426 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097755311 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085924978 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.227836685 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097671218 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.479144431 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087795379 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118190101 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118660407 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211487496 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127391345 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124279668 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115879563 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.090195661 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213020351 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102439172 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099470076 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083455271 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135318785 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120555402 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.110663362 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10904122 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.137443446 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091356631 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112759565 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.154202766 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198574914 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.188188984 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.108800263 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284210976 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110891707 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121319829 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091151385 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093176017 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.197830229 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.865105988 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127860131 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100989775 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084773015 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098980018 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099839779 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.854959636 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107737457 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.777704788 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089090062 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162112827 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099883374 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118919387 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089577164 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08869715 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.127753776 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.087601586 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.105092242 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085249189 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08990434 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.100577497 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.093474767 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088175081 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.13291797 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090594283 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084791408 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164955333 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.1022111 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109831007 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129584731 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.093402638 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.104648754 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117300782 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101675896 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092768517 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.20801581 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099702117 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.136494181 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116883241 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.132957412 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.106659894 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.310176988 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.090589563 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127124373 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105549658 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13177879 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102939686 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084769721 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105320688 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.085550225 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.086752346 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163392534 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091872814 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085459088 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.107744429 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097349852 seconds)
  done (took 29.126242365 seconds)
done (took 56.413328352 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.808193475 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.0827508 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103416349 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084128713 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082933714 seconds)
  done (took 1.892363469 seconds)
done (took 2.607574449 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.187977955 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.270252733 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202026176 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.131978545 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153979368 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.173731056 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.157218727 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.171696205 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.152303908 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.173667763 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171965916 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.11009645 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.176605553 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188680562 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124523473 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.192208669 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.107757514 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.152307361 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.107161564 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177744083 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.107383972 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091466363 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090854804 seconds)
  done (took 4.306341025 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107856465 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105036997 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.107134988 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125400232 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091235151 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107351363 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125414171 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112632783 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106706462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119539618 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092500897 seconds)
  done (took 1.925029943 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105920612 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103281398 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09695588 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.124600699 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091807086 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104209975 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122124069 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116106617 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104612226 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119023728 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09265661 seconds)
  done (took 1.905197459 seconds)
done (took 8.85141515 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.207434021 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.939814634 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.184834386 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.252467188 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.331367094 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.301479853 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.608914689 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.205370158 seconds)
  done (took 15.863924275 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.118782711 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.201668637 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102379999 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099421036 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.119414499 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097634867 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101808795 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.119017495 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101538789 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095234578 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.115686585 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104014774 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096103047 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095841531 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.11310766 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098905361 seconds)
  done (took 2.558044926 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140328744 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121041649 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.120817335 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.104684244 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099007332 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.121538548 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106408628 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101663614 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.118085215 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100533919 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.106421277 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.119936361 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10309672 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09802207 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.121292905 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.122970938 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099429895 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.120927147 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.122840359 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.119972576 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10473625 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102019592 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117342901 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10460431 seconds)
  done (took 3.485967857 seconds)
done (took 22.633828072 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155564025 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105518238 seconds)
  done (took 0.991125716 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.171698012 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.18744459 seconds)
  done (took 1.093199106 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117411386 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095533072 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142407073 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109537033 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.097387374 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.112564183 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121529473 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.112145133 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097766043 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097057314 seconds)
  done (took 1.843783114 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.10036222 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100050736 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126128806 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164068563 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.123010978 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098980458 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099756782 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117851366 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101439047 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095232369 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.119093724 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114993626 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100093264 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.13204364 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100446235 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.11804916 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106319237 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099659235 seconds)
  done (took 2.757777451 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.098625432 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09928882 seconds)
  done (took 0.942618305 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.099849549 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095278645 seconds)
    (3/7) benchmarking "month"...
    done (took 0.097052203 seconds)
    (4/7) benchmarking "year"...
    done (took 0.115069022 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096903689 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094971833 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.11197603 seconds)
  done (took 1.453787689 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.527759382 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241236256 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376620808 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07750416 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127036856 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.33592325 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.108632025 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.077148121 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09726393 seconds)
  done (took 2.737463468 seconds)
done (took 12.557250258 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.097585746 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.211527335 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.608431155 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.135724301 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096426708 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156727135 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.355409879 seconds)
done (took 2.406644165 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349968612 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.182821131 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090673233 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097017737 seconds)
  done (took 1.460539654 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.088097185 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105513529 seconds)
  done (took 0.943658774 seconds)
done (took 3.152431533 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11724258 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095685215 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.115227263 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099963244 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099312861 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.114363486 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099412859 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096712724 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.115489144 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097472769 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098375904 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.11506716 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097509709 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.099680663 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096097157 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.115971139 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.221679578 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096007581 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112585649 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099872459 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09798382 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112917869 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099235049 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098307264 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116058084 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099597517 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096257796 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.113220773 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099799385 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099253197 seconds)
  done (took 3.97989158 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.101637222 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091903124 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09451668 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119808453 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09331952 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095005446 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.108490975 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095524953 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097282644 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09330852 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.114881116 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094855912 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094298376 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.113149629 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09652643 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09787852 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120191173 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095779374 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094413891 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095804418 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.115147762 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095936163 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098250199 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.113109506 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095882195 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092220474 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095433437 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.112790562 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096330681 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093555306 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.115461319 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098686787 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095057944 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.121430346 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099401016 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096006731 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.118362659 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093535183 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096378473 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092466083 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.110034499 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096993128 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.094873288 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.117657156 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097208357 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096347491 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.094466187 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.115462073 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097024199 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096923646 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.110948836 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096400069 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097666168 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.114435087 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099050997 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092198474 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094787049 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.110104559 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097233164 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.095167254 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.109555718 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093208511 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101763995 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.095841337 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12750316 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101196217 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094771737 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.115564846 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096440757 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099060496 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.115356354 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10581181 seconds)
  done (took 8.079943468 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096329823 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095709472 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094462082 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.112826827 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095886706 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093817539 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094396877 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113530125 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095551477 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094249045 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11327794 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095599284 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094665677 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111771689 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0959132 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095690519 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09449215 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113251385 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.096795065 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095069465 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093693471 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114655148 seconds)
  done (took 2.960780458 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242368376 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103379177 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144085465 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126913316 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113224597 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.128254374 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100363161 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100809345 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118412601 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106314804 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103875085 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1192755 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112902134 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122600493 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106257376 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106007148 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11776518 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106325742 seconds)
  done (took 2.939157647 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096311905 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09577 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095771933 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.113609687 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096613233 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095633919 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094704976 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114194218 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.095956579 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094337739 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113953739 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096049934 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095813112 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114097617 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096610893 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096072239 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094670859 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113633421 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096660961 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094722974 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094536896 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113454265 seconds)
  done (took 2.9742139 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111543675 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098136859 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.132452279 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100931478 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097448723 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.115397249 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105444325 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097484805 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.121886702 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098553014 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097994516 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096075629 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.130306612 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097928654 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102785782 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116891032 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098110673 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096715344 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116348693 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09747518 seconds)
  done (took 2.891889606 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191403325 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132254176 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115468468 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120335707 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132855092 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113716 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140217894 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114507083 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112407938 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143346386 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114020419 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113809605 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140596799 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11782899 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130971797 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121316668 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121475705 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140445952 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113005875 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132060765 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125801005 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112898288 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140261301 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113780413 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.131049866 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114224843 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113716356 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137481781 seconds)
  done (took 4.316487368 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.109069152 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105903943 seconds)
  done (took 0.979742077 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100265147 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0983806 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.097182914 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.116649925 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098746192 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098427788 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118427231 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098991379 seconds)
  done (took 1.594701561 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.188245925 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.214718521 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.121455588 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10890215 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.213835443 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.191402954 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13468099 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103122247 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.116092753 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089396086 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.20463865 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.088600392 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11610425 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095271275 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.096529339 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121531015 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099876205 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104808658 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.121633764 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099925491 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102205107 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119158032 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099371998 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108091018 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.109748768 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.100743101 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099375907 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.128184335 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095269185 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.098923487 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.113856845 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099249686 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101308004 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101505746 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.11682659 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.212770872 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103974993 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093111348 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.118510359 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102616411 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127460522 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.118896721 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.099150959 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.096351068 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.120699767 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101982546 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101710634 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.118087636 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091367292 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.092189534 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098406617 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112862002 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097988077 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097547565 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.117369912 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104637541 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098976489 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.112353571 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.094181015 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092404811 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.115215085 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.094956943 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098642366 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.120038603 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099285061 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.097001389 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115842347 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098846452 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098185798 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.117196415 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097378713 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112533027 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11734576 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10362212 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101871045 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.11872289 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0947484 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102464646 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118572241 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.098600964 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102323557 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142847025 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099877393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092856532 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.113552429 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104599472 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098467914 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.119768105 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.090969462 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106283636 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100058422 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.118915337 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090295081 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094231642 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.11284888 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100622583 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089797948 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116872822 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096977389 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101880151 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12376904 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096626052 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098506438 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121774744 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104323299 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095918442 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.167561498 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093917318 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.092488091 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.119888824 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103399169 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.091943661 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.117177259 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096774408 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094181423 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.114711144 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103178727 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097588407 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.119243181 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104097122 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098696808 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.118549443 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100763787 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097478296 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.094451523 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.121724211 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106661742 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.098730871 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.120899507 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.0999596 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098737697 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.118499118 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103043366 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.094483714 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123852635 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095213126 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097976196 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.121414879 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104656047 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097823493 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.113288193 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097589309 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.097272686 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.116879297 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101983617 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.099247145 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.113769932 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.09064723 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.098802675 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.112568283 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.100549602 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106082881 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092541083 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.120601428 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093670597 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105768746 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.114312948 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103573622 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101446705 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.123957003 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104326278 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090102763 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114536063 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100760912 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.098622516 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.114445709 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099640334 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097982666 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103951742 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.111206221 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10140588 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.090668956 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.115923952 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10370617 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099628182 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.121056036 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09389488 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.134296767 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1296832 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104446821 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.097447503 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.118741307 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103119533 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.097877136 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.123474813 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105421346 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104168847 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114936608 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.098123159 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104280588 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093578632 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.121247596 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097098207 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098355108 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.112764256 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101104762 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0901748 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.125895521 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.101847024 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.102220558 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.123372973 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10139836 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096779836 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126933083 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.096094196 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102817149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.110426101 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104219282 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108207105 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.102758805 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124514577 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099649317 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094933045 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.121455012 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107425423 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100255572 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.119485286 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100727424 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.091858497 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.112861391 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105780488 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102147041 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.113986073 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098711977 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099120329 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12066744 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09653938 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090740178 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102454105 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122597724 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.093906633 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098720761 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.115908317 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.096413598 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104501858 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.113131812 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.094605581 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.099391114 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.122924091 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099691068 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.097033954 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.122275006 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10540987 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101261158 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.120932388 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096652067 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106207672 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11699021 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09842207 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.095074771 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101433511 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.113312244 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101282592 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09833863 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.115810231 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.096039677 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101815051 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125130539 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105519321 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096430514 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.124235906 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105633894 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103896911 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116028548 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10536828 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.095276692 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.111011086 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.095275985 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.091296738 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101013201 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.115377537 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10516916 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09593353 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118834987 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10440187 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100090756 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.118010551 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104799781 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109192218 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.113268126 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.09286461 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095986901 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118023695 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.095026928 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09429212 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.120339871 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101124881 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103666697 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.120684589 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096587299 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101724421 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.126187836 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097226527 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105421121 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104867166 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.125325401 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.094409916 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103893455 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.115875108 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102154293 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.092545431 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117414286 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09810036 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09764422 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.116857894 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.097563524 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.094624278 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.112713789 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.095698443 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106063272 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.117153857 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103604389 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09805946 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.115999593 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095628862 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094983286 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.12478532 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.097977728 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104965797 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099594255 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.112068205 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.093126319 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104131836 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118866364 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105381309 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.093480279 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.123201777 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106296156 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.112540762 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.121525702 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109361434 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107452635 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104569523 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124167737 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.092706554 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.095817634 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123876781 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099715607 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101701721 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.122475767 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09355728 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101541796 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.126115523 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100377399 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.096737659 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.113100105 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.10146947 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105098869 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.124032616 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102467185 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102667004 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099529138 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.115451219 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103143726 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10415687 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.119310942 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106767841 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098848713 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.123337794 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.095858395 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104934981 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.122011617 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.094612995 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09369063 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095552668 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.126516972 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.093522675 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103495062 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.124224525 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.096877983 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097861125 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.124329688 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.095598482 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10142653 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.1244799 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09895226 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119209303 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.120415462 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09791578 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103408797 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103446181 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.113326299 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.098007077 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096945429 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12730234 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097478527 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10443759 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119178576 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105368247 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102665924 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.125580874 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105901589 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10474933 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.113693814 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107292209 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102301253 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.122743834 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.097229911 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097780623 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.094258386 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.118414135 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106343729 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.096489395 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128902302 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103896161 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097144469 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.118200655 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105409101 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098530976 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127232872 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.097035564 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099560406 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.114103271 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.102451566 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.098185467 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.126145357 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.096360225 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093314907 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126324306 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105979764 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104144816 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100459184 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.127295884 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.093572749 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.092986917 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.123381262 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.097177172 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109025146 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.12296731 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.097865787 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097063182 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.123777241 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102076541 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106213495 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.115628002 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.097596239 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.1004006 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.122549797 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.098995458 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09442943 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102865967 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.119171575 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101787778 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097097463 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.118050216 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.099963527 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106112406 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.119423976 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.096197338 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.096247406 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128732725 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.099431166 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.096082265 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.114208932 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105076599 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.101560309 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.127499176 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.096982239 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.099177836 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.117865467 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.102299849 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106644354 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.118785702 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100956325 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.099384802 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106056213 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125627911 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.093323887 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095971629 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.13227726 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105644897 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099996995 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.124794187 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.098802553 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106693967 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128694176 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103992082 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.093322906 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.114512613 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.098972284 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.094120426 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.125364407 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105386189 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.098739217 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.11889484 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104808956 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105511934 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101723743 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.127167175 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.094601711 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107509097 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.119693823 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.103276129 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.094159114 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.115414038 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102922555 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105525287 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.119567485 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.100643505 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.103012309 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102014448 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.116658983 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.097503287 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.102209121 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126220233 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106580239 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098966468 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.121072439 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103863609 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111762846 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.122548703 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.099766698 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10717082 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.127391749 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101306192 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.099194838 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.123064222 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107717795 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104245069 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.128898035 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.098274078 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.100174776 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106898598 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.128028943 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109019123 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.120924678 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0939086 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106276785 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09751665 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.115809308 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.103338602 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107698941 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.129057205 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.100435324 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.097022455 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.130597539 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106495698 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100604076 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.121044498 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.098920891 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104541322 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.119532718 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105461762 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.097938727 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.130579075 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108491798 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106737977 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108354628 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.116654052 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105568639 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101894376 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.130912809 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102499155 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.094407956 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.116250608 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104126426 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109004818 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.128065114 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105832809 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105306823 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104332365 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.125347295 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100736462 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.097179209 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.130141079 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107230483 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.103299794 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.122160816 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.101840616 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099995269 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.125338858 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107082106 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107766769 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.120960647 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113659913 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104559334 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.120673889 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.097929459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101702471 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.125745127 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.102755048 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105636042 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09742222 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.117249099 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107849143 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107825881 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.12006043 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109355421 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108043864 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.122661365 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.105440935 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109516484 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.125267502 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103241523 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.102155403 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.126320641 seconds)
  done (took 65.154963176 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1525498 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109465157 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124921164 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104358938 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119133905 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127078269 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103441891 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104530375 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.126356365 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112986965 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103601359 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124313302 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118450197 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144205258 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122024253 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113245133 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124092086 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105347763 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103449998 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123820504 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11870595 seconds)
  done (took 3.302793638 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104361479 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.10349972 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10338014 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124211763 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103181039 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.104125108 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102580185 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12360161 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104299963 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10199531 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125420173 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104154542 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.103434457 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.102796602 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124468271 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10461585 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103102511 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124468749 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.104033573 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10310486 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102968468 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.123925381 seconds)
  done (took 3.221695911 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.131893784 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107180071 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.101692553 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.126265984 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107437088 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10402729 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.127122596 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104361139 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113267611 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.120428117 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.095169459 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.099833544 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102170981 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.125644256 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.098744133 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.103173664 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.134374806 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.107320619 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1076612 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.124647601 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.095712696 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.105308686 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.103918715 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.117070983 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.108261702 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10813996 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.130355081 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107928174 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.094836391 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.127163991 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104312875 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097876814 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.094504417 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.117136498 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.095371432 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10616402 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.127314749 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104391644 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104587285 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09453478 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.126254214 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108443228 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093840004 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.126510541 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104139923 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097595858 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.127788075 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.104405071 seconds)
  done (took 6.099661631 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.133010049 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161245086 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.108245911 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13313247 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.139797883 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115535695 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106305014 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.157101368 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105251267 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.106209785 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.142528047 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117348314 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.130878785 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111920632 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108702234 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.131472019 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110694888 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107499992 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.132081096 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107504027 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11120539 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.130154408 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118434253 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.138304804 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110896882 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107897269 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106556531 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.133517774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.115635496 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.133863275 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111386303 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112226538 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.138422813 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111256867 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106664443 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.131485864 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119897591 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10847757 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130606408 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106494063 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107469198 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.132504718 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110430028 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138962238 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109822228 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11054727 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12886244 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105931461 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11653966 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.130509803 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115442182 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117571772 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.13048773 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110774451 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11018937 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.139676114 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110706654 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105795668 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.130750708 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116963931 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.126860406 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111635216 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117852643 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.128896692 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113821777 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118732333 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.130692512 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111159894 seconds)
  done (took 9.096745476 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.140202726 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11190291 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140988783 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119899286 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.365021076 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.134012109 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110827768 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.110471107 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135096528 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117037299 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132999039 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.219157838 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.131597089 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11608562 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133801737 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112695719 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110991641 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133093064 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112733574 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1111849 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.132500121 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120376 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112316653 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.141093178 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122732279 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.129979354 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112186289 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110954954 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140804265 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113387214 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120806576 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.133117869 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113687561 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.140843193 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123527611 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111649652 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128917088 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112210834 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111195422 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.134137921 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109229105 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118232861 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134313589 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109880331 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109969982 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134865179 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120295748 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.143638274 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117687761 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116081846 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.133549634 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119714887 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132630709 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112636569 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118351445 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146896482 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119384054 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142308249 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112417083 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118371621 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140403661 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126111884 seconds)
  done (took 8.838672655 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107869569 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107699389 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.106343432 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.127781467 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107708234 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106238345 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.127369394 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107610883 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107590265 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10603996 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.128274141 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107680106 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106189244 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125886083 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109553077 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105854657 seconds)
  done (took 2.634016698 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123734338 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123171652 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.206644168 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.108323255 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.130319269 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.114245384 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105958869 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.13108738 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.106083283 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111296311 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.132325796 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109934095 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.122553032 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.129254791 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107774354 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108992372 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.126072015 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110375253 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106863799 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.209955566 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.110026037 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.131148698 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108431486 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109920937 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.130230343 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112864307 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112529421 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.128723901 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.110039168 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107300589 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108024652 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.134935329 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107143394 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110312232 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.1291508 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10822369 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106216345 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.129440835 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111140732 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106546333 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.130186705 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10902566 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105823207 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.130060547 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106971176 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107735171 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.126323173 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11224091 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108351131 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107374388 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.128621475 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111857863 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111078507 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.136410179 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114089594 seconds)
  done (took 7.424682908 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117244875 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108281468 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.139415491 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105560195 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108123074 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106859482 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.129782154 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110641127 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107475448 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.127400987 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108609877 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108105791 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.129244757 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109420292 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108693111 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128984613 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.105178263 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108772467 seconds)
  done (took 2.913540951 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105347263 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104831762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105024481 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127206818 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105576605 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10523828 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104032719 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.128156564 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106537336 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104821829 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127587714 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105778226 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105187516 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.104199746 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126880449 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107103686 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.104413717 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127173932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105700633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104658386 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104189623 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127920633 seconds)
  done (took 3.29608425 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117371127 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.233376202 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111170516 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.24075449 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.128220135 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.103579966 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.114000075 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.127588147 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.120452767 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101780915 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.126180243 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.102992084 seconds)
  done (took 2.475191419 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135112631 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143264408 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129440559 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108847185 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116007169 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133261924 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112702665 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112463025 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14372098 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122424355 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133605831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120301407 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119359612 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142488339 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115662566 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138575651 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112064955 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111942605 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12871025 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126757265 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111446508 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142138436 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111993234 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132637662 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112035116 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119759605 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142355614 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122869644 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112188259 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144528069 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116898458 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133435351 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12129952 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123604154 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132262001 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12116057 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133801866 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127430082 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116483292 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143113634 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109317695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116272787 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141789765 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117939748 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143862628 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112719312 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116749512 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133320509 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112459098 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154421389 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116802979 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118545385 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138551247 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120126713 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142277186 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133204555 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144279083 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121553398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115738377 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147623725 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120278708 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138274257 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121023996 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144163697 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116666251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120399104 seconds)
  done (took 9.201718012 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146690355 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108458228 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134759908 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124137023 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140798256 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114052297 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112091943 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133086582 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113027535 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109880277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175486666 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112877502 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142907802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120798637 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111668966 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133367343 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11339868 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120236876 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132495992 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13317371 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134039993 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120202639 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118952369 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14267613 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12285598 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139823181 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112882603 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111176743 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134242661 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112505102 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11682224 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13407749 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119862745 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.13161531 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121638166 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112003163 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13358062 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118934152 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11223943 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138435753 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121537867 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148930336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113075933 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112235871 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145416617 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113290276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11164539 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131328481 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113260777 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109025061 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146749803 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122735372 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145773495 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121288923 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133898151 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113100322 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112185326 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135040989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11384802 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116860929 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141957966 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113773523 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155338423 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114282183 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113410286 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142846544 seconds)
  done (took 9.145874772 seconds)
done (took 164.271620443 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.178330735 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.22178071 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.201860075 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168299614 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.097208558 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.156065583 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.131125705 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.203997244 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.097203656 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.097805306 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.121440253 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.100836572 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.165016368 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.120379852 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.098733087 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099860781 seconds)
  done (took 3.113623196 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198633543 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.344839424 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.138482431 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101875651 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104060979 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.126576854 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.102670368 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10394968 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.103163522 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.133244564 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102770343 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099715304 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131678039 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099422884 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102486891 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.125150628 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109165302 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103848727 seconds)
  done (took 3.196671261 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123295941 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156387843 seconds)
  done (took 1.144398533 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134468806 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218896093 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300427831 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175390415 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122854786 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.143947856 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151812117 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138431757 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.194708926 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137740863 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.115794624 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100870258 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.15189872 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.109360523 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.143007749 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102614119 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129820858 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.141673026 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.118867271 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.104950136 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.150694517 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107033464 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107723191 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.140269102 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183981973 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.139042866 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107221062 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105203503 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.130758746 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118536201 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.109029109 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.142085636 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.115621616 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182237079 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106176381 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178296485 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131489349 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.105068082 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117134343 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.12461027 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.108526806 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.106122063 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.139307389 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102101353 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106146144 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132483246 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106807165 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105594455 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.133993175 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110375197 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.135028387 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1111401 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177315133 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110935405 seconds)
  done (took 8.092268661 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.912070536 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151018138 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102643519 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.042300103 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148578559 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118679143 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.937704055 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129768225 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258554588 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.930528062 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118832259 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133292035 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.246355144 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.285077039 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28307179 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.363148407 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.771752846 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117038968 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156106166 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.14879881 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131179309 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12219753 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118450406 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.461997911 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103826636 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.127229748 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109213017 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112235186 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.183882884 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104547576 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131724604 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205144068 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.278154534 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.216168978 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127476115 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103834442 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102533041 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191012998 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273895046 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223245173 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.196829288 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100380354 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.125208071 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108585637 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117885994 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123335285 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165350602 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197830366 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19763309 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10834624 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134831382 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111833093 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12826813 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16257275 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.124866445 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.367037831 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.368539158 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103337039 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132933282 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116237833 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272257069 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127001175 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243694269 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126013062 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219038888 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.126495145 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821102074 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169293718 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.125889008 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108407849 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108305373 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132528925 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107579567 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188126553 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.413695543 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133226882 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10900943 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103804527 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234914189 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127666957 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104026569 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18729645 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104962071 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109863169 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135211084 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109913511 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.195938626 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278709498 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111958237 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109925421 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.131381947 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114329698 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.126592161 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214848232 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234931383 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.181786432 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.2369738 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108067501 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186882408 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.192993391 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108918866 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194850374 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10975358 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140277006 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107592581 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229023273 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.164292762 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106407209 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132506368 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111783891 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.168262223 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108600969 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109444222 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193854505 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500364576 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191391034 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.102520856 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108958885 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132265885 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162458673 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135573544 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269149918 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110659505 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192669903 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109651495 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.125365079 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11126389 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.190778774 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112628308 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132061565 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109068813 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113374225 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.284939979 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226503834 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135635204 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255319587 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178240597 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131571835 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177055008 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133818196 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191466316 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115211438 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108163873 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127558199 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821520898 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116060919 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109612311 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132490058 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188917649 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127226427 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108622785 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104237161 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124581542 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807676803 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108643075 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102658703 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107277242 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132795806 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110706135 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132565136 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111005201 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186128498 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252863511 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1129486 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131622821 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105180841 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.185659243 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.106580331 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104643549 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.127425635 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106341788 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111589875 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.132041748 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107800679 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195080031 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18293858 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.240635978 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.586521762 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104351169 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104717126 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.273032439 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10554225 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332492077 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132875648 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.244473275 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188355117 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102950011 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367552347 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190959307 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188435385 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.132908361 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197276743 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103615478 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110845244 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.187376459 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103964163 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135514373 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161602329 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136930969 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112145205 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.268452132 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.128007393 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230208223 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.126618283 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172893425 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131016853 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11101443 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.334940549 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.127802657 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116962862 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187626567 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109941616 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127031832 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.962680385 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.128994038 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114010564 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109321655 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.265004722 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187891927 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113592092 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110907682 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136251749 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16414736 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232410979 seconds)
  done (took 47.829905932 seconds)
done (took 64.237307992 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257833869 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173404919 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.356819986 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152226172 seconds)
  done (took 1.873526791 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.26201942 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169641936 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.245338857 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.102237903 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.252159123 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102471443 seconds)
  done (took 2.026586796 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.174243758 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169024678 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146775135 seconds)
  done (took 1.38377747 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213844103 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212010734 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.350071406 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.237686345 seconds)
  done (took 1.967061628 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.278307518 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12140072 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.132455574 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.22992353 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.24662422 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211424116 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127885127 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.179848908 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134359205 seconds)
  done (took 2.588598433 seconds)
done (took 10.726808663 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.295883667 seconds)
    (2/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.315223114 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.14262738 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.314113214 seconds)
    (5/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.19569157 seconds)
    (6/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.311472786 seconds)
    (7/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.38062074 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.239666508 seconds)
    (9/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.239938542 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.125777865 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115912617 seconds)
    (12/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.317206204 seconds)
    (13/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.285242464 seconds)
    (14/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.334195527 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.248186405 seconds)
    (16/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.230927225 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.130288772 seconds)
    (18/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.152142406 seconds)
    (19/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.412450976 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.324810901 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.157050124 seconds)
    (22/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.382610966 seconds)
    (23/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109503132 seconds)
    (24/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.24224163 seconds)
    (25/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.219873166 seconds)
    (26/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.138380934 seconds)
    (27/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.143031512 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124572905 seconds)
    (29/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.086954475 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.160079149 seconds)
    (31/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.171395849 seconds)
    (32/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.394555353 seconds)
    (33/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.204329405 seconds)
    (34/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121013011 seconds)
    (35/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108494281 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.140891513 seconds)
    (37/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.169501195 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.082787067 seconds)
    (39/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.108305903 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.169504969 seconds)
    (41/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.17048512 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.130247673 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.125748532 seconds)
    (44/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091098173 seconds)
    (45/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.390960829 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.253231889 seconds)
    (47/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.220877602 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.089793168 seconds)
    (49/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.228718284 seconds)
    (50/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115353648 seconds)
    (51/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.089872023 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.085202342 seconds)
    (53/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.157861425 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.124986356 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.219916729 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.200201945 seconds)
    (57/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083270924 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.131925301 seconds)
    (59/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.136762041 seconds)
    (60/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114196735 seconds)
    (61/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.136688349 seconds)
    (62/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196058008 seconds)
    (63/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.12057468 seconds)
    (64/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.111261091 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129227276 seconds)
    (66/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.181454242 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082126108 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.134348069 seconds)
    (69/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.169854516 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.132516792 seconds)
    (71/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090673341 seconds)
    (72/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126520001 seconds)
    (73/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109538039 seconds)
    (74/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.135963196 seconds)
    (75/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.129290216 seconds)
    (76/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.171703246 seconds)
    (77/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.161155551 seconds)
    (78/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114160569 seconds)
    (79/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106428734 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.219480502 seconds)
    (81/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113768041 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107261545 seconds)
    (83/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.115259351 seconds)
    (84/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.135939471 seconds)
    (85/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.195394887 seconds)
    (86/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.140519716 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107680361 seconds)
    (88/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091516328 seconds)
    (89/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.086031442 seconds)
    (90/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.114585381 seconds)
    (91/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095188625 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10508524 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.1141485 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.110072119 seconds)
    (95/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.141695327 seconds)
    (96/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.136309643 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.157760919 seconds)
    (98/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.084252786 seconds)
    (99/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.140783754 seconds)
    (100/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.155109702 seconds)
    (101/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.140733763 seconds)
    (102/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.165703206 seconds)
    (103/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109577432 seconds)
    (104/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.137920258 seconds)
    (105/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116713959 seconds)
    (106/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.085663396 seconds)
    (107/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.136404962 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117737261 seconds)
    (109/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.085635537 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084538281 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.115323752 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116135076 seconds)
    (113/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.145633447 seconds)
    (114/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093391713 seconds)
    (115/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.110149839 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108231849 seconds)
    (117/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.158970368 seconds)
    (118/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.09387526 seconds)
    (119/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.116548323 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084110859 seconds)
    (121/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.150209791 seconds)
    (122/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.083883785 seconds)
    (123/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.110805518 seconds)
    (124/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.090145117 seconds)
    (125/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114588868 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.104800823 seconds)
    (127/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.115061354 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.087602305 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.088079222 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.107214446 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.131246089 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129151046 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126173501 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090604684 seconds)
    (135/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.168084852 seconds)
    (136/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.09251414 seconds)
    (137/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.086536617 seconds)
    (138/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.136952373 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.13032454 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107248246 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115603202 seconds)
    (142/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.107329256 seconds)
    (143/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10562074 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107894573 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.134587266 seconds)
    (146/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.140321517 seconds)
    (147/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115888994 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.083349087 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.133249073 seconds)
    (150/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084323091 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.086970167 seconds)
    (152/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.089062591 seconds)
    (153/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.177939695 seconds)
    (154/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.088588714 seconds)
    (155/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.133063208 seconds)
    (156/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090679276 seconds)
    (157/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.177599603 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.099545144 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104441464 seconds)
    (160/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.09104091 seconds)
    (161/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.143253937 seconds)
    (162/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092415303 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090556061 seconds)
    (164/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.086135896 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.133311732 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116665009 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128816475 seconds)
    (168/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.138860133 seconds)
    (169/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.092291777 seconds)
    (170/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.087278571 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.089638645 seconds)
    (172/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.14150905 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.115154552 seconds)
    (174/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.144084005 seconds)
    (175/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.132170266 seconds)
    (176/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.085439213 seconds)
    (177/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085096846 seconds)
    (178/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105242185 seconds)
    (179/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.083896884 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.118141 seconds)
    (181/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.09090743 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107961626 seconds)
    (183/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.084304782 seconds)
    (184/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.110586711 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106168517 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.126857409 seconds)
    (187/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.091147268 seconds)
    (188/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.109234359 seconds)
    (189/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.090859768 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.1082557 seconds)
    (191/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090629856 seconds)
    (192/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.110617881 seconds)
  done (took 28.247030761 seconds)
done (took 29.145619896 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.229645695 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.135437641 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.115935789 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.115265011 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.236784827 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122552993 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15901448 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.117431689 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125090323 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.141797563 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.106077066 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.129441387 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.140149993 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.248864962 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.120303289 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106414509 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.130631844 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12797751 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130149708 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.158531221 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.213034531 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134158969 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.125592201 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106617093 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.23639158 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107981594 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.14093854 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117204864 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12794574 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.142494984 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.11645866 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10635856 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.157308352 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.133217492 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106244176 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.140545378 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107645543 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.091209444 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.138931203 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119821576 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.129187422 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116945217 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.14063014 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107652296 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115735076 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.140514492 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106313418 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117639049 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.13007305 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.116548919 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107755876 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.154813517 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115537332 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104471239 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.130576245 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.108199546 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.126983912 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13030048 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130473876 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106535362 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.13049731 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108145737 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118204248 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106463291 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.140358253 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.107635964 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115659024 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.142714325 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117408168 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108783101 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130625533 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116943205 seconds)
done (took 10.379294096 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112039692 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.15031564 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.25132552 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.255353451 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.160818561 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.123007262 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121388543 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.156638304 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.121176462 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123926668 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.169412576 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.138110533 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.258053448 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121816059 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.149168844 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.12019114 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117591551 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.141614962 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.254003831 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132295209 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155159027 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12515246 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.131177109 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.149675176 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112119668 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14326625 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.139897365 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119272032 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109480693 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.144645429 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131753788 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111337033 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.139046193 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129974241 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126583339 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.146092892 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.124033405 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118171177 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.136275637 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111876784 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141941706 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128162979 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109839762 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.147352889 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.120844292 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12542029 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.143930618 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123925788 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.111583681 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.141205611 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113402753 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135341353 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.147201781 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126194485 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.12210305 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.148139426 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125012682 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123228564 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.139628591 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.124145841 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111370501 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.135679561 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113638599 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130861915 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.138493529 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12369082 seconds)
  done (took 10.069351195 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129538208 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140187735 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.146790691 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.122952911 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114913722 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.129949086 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10514358 seconds)
  done (took 1.837447889 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.107957657 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.270649017 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.262569432 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.262392017 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.252332838 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.27169086 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130579427 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.106263716 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.170816742 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.118048394 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.27011726 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.325120953 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.14346238 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122840258 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.266367975 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.106008082 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.26452449 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.132862385 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122424417 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.264647016 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123483752 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.16474037 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.120960121 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.107394589 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.264260955 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.135494057 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.313335977 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125266061 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115966163 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.147699844 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12366358 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.209086211 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.267124142 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.121882672 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116043914 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.261889978 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.254416342 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.149738557 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.3138799 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.1109971 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.250532949 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.122693357 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.150921699 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.122401161 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121936717 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.247835719 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.155423929 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123938265 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.121243225 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.273281008 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.146700646 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.26865885 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120341193 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120917571 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.145483469 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124572353 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129898552 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.150594599 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.276146402 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125745212 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.261974537 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.263502559 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.256968354 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.262169325 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132263451 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.268181261 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.244269585 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.121046937 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1435925 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125777677 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.264903429 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120778782 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.146155936 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.225247587 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152333687 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.267075308 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.266073668 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120956659 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.119764013 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.138533933 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121748909 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.107011118 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.254911892 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148517196 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120724478 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126265875 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14646344 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.123501592 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112711821 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.157679939 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.122077106 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117989378 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.151656592 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.12188161 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123189915 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.266743215 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.146619853 seconds)
  done (took 18.141596898 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110714817 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.109120898 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113050555 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.135386186 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.110912251 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108888503 seconds)
  done (took 1.662023464 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146636724 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123088914 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.155887081 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124411154 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.170113301 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.25292363 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.262668764 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143928864 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.142702091 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133655389 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255889399 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.259458717 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.258009197 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125103637 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.262051419 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123158996 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.264628108 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.148307613 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.132020653 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120175347 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.149417036 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.127045209 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120045775 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.247802341 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.150079116 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.126043529 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115004361 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.157740887 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130510353 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.116041458 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.154036685 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.124018061 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.113623816 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.142109533 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.262224831 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.115712008 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118440336 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.15283845 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126263573 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.123224136 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.260981488 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119558947 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.15805002 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.124954259 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.143505823 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116995183 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.126076046 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142883266 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.234732337 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.15459748 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.125623128 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.150028079 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.125818186 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.125125696 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.1411649 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11799681 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.125341044 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.26136552 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.153192256 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.117739391 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124161469 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.14962189 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11868826 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127783315 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.151292465 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.126385577 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.113856054 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.149416562 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122683755 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.123793394 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.151655543 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125322645 seconds)
  done (took 12.064382276 seconds)
done (took 44.717301186 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.572697513 seconds)
  done (took 2.546456146 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.088466207 seconds)
  done (took 2.063423039 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.438919946 seconds)
  done (took 19.448579699 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.42125599 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.35063909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.016859652 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154822206 seconds)
  done (took 2.922346433 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.090400477 seconds)
  done (took 2.084376798 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.414317732 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.278795841 seconds)
  done (took 1.676632406 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.722753797 seconds)
  done (took 1.709816279 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.906821635 seconds)
  done (took 2.892424988 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.27300121 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.248068811 seconds)
  done (took 1.516827923 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.67262577 seconds)
  done (took 1.667173616 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.650783264 seconds)
  done (took 20.650373547 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.261657687 seconds)
  done (took 1.264334288 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.295944659 seconds)
  done (took 1.299854237 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.621990662 seconds)
  done (took 4.622187613 seconds)
done (took 67.35081689 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125207875 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126371915 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125082015 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.149704937 seconds)
  done (took 1.519252317 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12771153 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12224608 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124937739 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.148608962 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128741138 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120806365 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.147606016 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.126177201 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120549609 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150534816 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12430748 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120573312 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149744303 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122339314 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.120348928 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150456408 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126244717 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121904911 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.148722383 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.123159113 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122978234 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.170213614 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127186593 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.125858494 seconds)
  done (took 4.17780971 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11913443 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.113488409 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.114533064 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13797594 seconds)
  done (took 1.492104332 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131978513 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.134978848 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.158194071 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131265755 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133956625 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158847879 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123379756 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118797345 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.147539418 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132291177 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137105285 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.161258006 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135155513 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12459392 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.158506605 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117698866 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122798053 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.159328621 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.129817508 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.155558589 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.125666623 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129500148 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.152008023 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.134041682 seconds)
  done (took 4.317571838 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.198841594 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132976664 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176575776 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.167980341 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.179140306 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.122036249 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.150365822 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.154938416 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.128921808 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.130264971 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14959241 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.170394474 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.154409855 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.125681934 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.123750751 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153363086 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132413932 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126701055 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191388241 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.126931539 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126254484 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.161580312 seconds)
  done (took 4.294537034 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126624945 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114884274 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.137846096 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112503036 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.146415433 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140091617 seconds)
  done (took 1.783701736 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.114376186 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10802018 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.107403633 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.1327319 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.113171291 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.108119705 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.131140205 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.109127358 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.109109386 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.106959258 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.133947147 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.108276571 seconds)
  done (took 2.38567803 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210094309 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15076058 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254296485 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396203707 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194456246 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16409148 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.311754646 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190469073 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179906948 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169492243 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211188317 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167233139 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156305859 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218717835 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145337858 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193152861 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203207013 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214260591 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175313193 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214225512 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187417625 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206865538 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193680836 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179159284 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144203302 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195078987 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124452071 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131773764 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200318249 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194072425 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180201482 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181919316 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145408782 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217961139 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263969915 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179956646 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.323901336 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138111038 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201693573 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.195348234 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259802617 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171701907 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195718833 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184049674 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132772509 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224002242 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15270306 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.218910333 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138024847 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176968662 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210808413 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183127717 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200508846 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142788762 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327710101 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138681199 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.172274343 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178643869 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218932131 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23366272 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182893869 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.156070587 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201238123 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19435497 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245926939 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145235822 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.195369906 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126562936 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194084683 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239036771 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186852527 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19240954 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.221981788 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13652061 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202643874 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168638259 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18838477 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210311187 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204580615 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123720748 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183571301 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136720986 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156761596 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194499026 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125200383 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247096965 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162076531 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.186716108 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207797597 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15501173 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192982241 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163305851 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194985284 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150627606 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.133139802 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14680666 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186510721 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16247655 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131107291 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183187402 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143344551 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.160689746 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155710318 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125816934 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201820513 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.138713064 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190869582 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200392885 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.136279517 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211428542 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151594731 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.192003649 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171739513 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228255029 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134429115 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163948514 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221706729 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204552996 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139186366 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202112149 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229800009 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.156070414 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166945393 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169225296 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22744384 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147598106 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235549252 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141920404 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169960138 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.143798811 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207145989 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162207317 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.191964582 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130830836 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.19858344 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216802728 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.131698743 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142434578 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214845391 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136467992 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159596017 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140406941 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140377981 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.174870002 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154655998 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.173914166 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158545549 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200403866 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169952151 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191963611 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138292603 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204985567 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134090655 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.202452833 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151955749 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.15141313 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17718672 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232845906 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132980648 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214898123 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16344771 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212497358 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204752207 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134082697 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219053827 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131105607 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124317934 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194541444 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202997589 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166428363 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.22088891 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207435334 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16818724 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.194597248 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152602187 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20169467 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.213351362 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161880123 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170650182 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176486258 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201545166 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126965126 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.126531412 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.161150496 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141824435 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133610521 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169348065 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212016171 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168767782 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20525446 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197581105 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142628963 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222670809 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129427439 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161006988 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20562042 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141957641 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.221302007 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223980994 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182436085 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172534773 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167128506 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.154148731 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130015821 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136420784 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192380083 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139705158 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171017647 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144161858 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223830422 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199315577 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15310973 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21872083 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194606276 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204155213 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123877513 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.19705999 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166408283 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199979317 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.188720679 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162836233 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162413411 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225717704 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144847291 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224173673 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200704185 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183325477 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225370777 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168077754 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163009565 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146875622 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194565855 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142211643 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191845281 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145767714 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132837587 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180322883 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.140701169 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172607747 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218223541 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147378279 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207157811 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157689837 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200291546 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127880585 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173259887 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179245764 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177455446 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111944546 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167583748 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222349806 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181944107 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155513558 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201138353 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134486105 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.348065383 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183508434 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204219275 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138277048 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171416123 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1772882 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189052111 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161743033 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217888048 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144044737 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242920223 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201399906 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143402584 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133436058 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17901678 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152931793 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.172064182 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154096259 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.19754312 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146013001 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218691725 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138852068 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203820592 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209065067 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149467615 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.152360892 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172104968 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259402824 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172167708 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207224102 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16669337 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.197497774 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213930575 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128671383 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129808438 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.16429815 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187102157 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132014829 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211859075 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192256633 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210181185 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178950255 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193374075 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143992227 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.157836903 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169680042 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150453288 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215656217 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165755485 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.141119903 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218843604 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131465923 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163227073 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164056207 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318076882 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149885738 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200101631 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.112004779 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.314089226 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133065676 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135608017 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189824671 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198828062 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138469874 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18506307 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20601711 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142332349 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191669701 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137862439 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206784653 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211550111 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17137885 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207987305 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147886742 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195135701 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158213687 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204165109 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148249349 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.180149494 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162124851 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227111626 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206587349 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.136753805 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172477351 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20358869 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172759724 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205138344 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171728165 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186668263 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130759752 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197776934 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13980786 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157544676 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162570251 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19686775 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134596886 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203477957 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202437129 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135745869 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129016014 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179228912 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169254 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173710599 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134265199 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218671728 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.131534987 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216507285 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241264647 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1342615 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168750855 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176460522 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133457672 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170549047 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147723104 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133460566 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.205552408 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179652978 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.163295472 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176720749 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198881466 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166229033 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187155362 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144080806 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.298914426 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131603599 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225017391 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152852936 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230074289 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150743235 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208777448 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20103168 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153997242 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197471562 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151667831 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2541081 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170076403 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.200636924 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135021629 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145723532 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17098014 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.137144496 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183695493 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175996576 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175345201 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.140296727 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.200780919 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150031829 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.177022468 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146237072 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232093765 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154262387 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221127599 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189421019 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171856908 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178386711 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207257481 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131880307 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196950655 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203230259 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148811674 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154072593 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.168668473 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139143543 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250849801 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.128064659 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193290924 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176995868 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202710984 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174574719 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.169184476 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18040131 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174996424 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178735976 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160653127 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.154953715 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202437807 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137212397 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130021855 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20615221 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192936657 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.169192664 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17329457 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.180723676 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199659943 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.157037003 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137533921 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319532716 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163025854 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225856208 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13648098 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170369935 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14916285 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191685324 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167331492 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205488936 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13425331 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161021268 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.149893882 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.186890777 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143940773 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171873129 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212602286 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188995324 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189532945 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136469168 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285543603 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144564709 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205627059 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120727204 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.16171828 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144886899 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13848734 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175666199 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208018078 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221402758 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.195228436 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.149150082 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168905936 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130734909 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134121481 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194206172 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152604969 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204680146 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151067755 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.138613926 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144591295 seconds)
  done (took 86.977538147 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177853057 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.177941386 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.19177088 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.241681593 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.219459327 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.311214266 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.253569077 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264883597 seconds)
  done (took 2.932341531 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124055949 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164402187 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146730659 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.148668507 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.113322505 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.513639007 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.165994763 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.126073066 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163785657 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15883765 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.14248599 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.574132769 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121515353 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.149376141 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.126454274 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.141036889 seconds)
  done (took 4.16827125 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.163433698 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55103791 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.147725783 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.31190527 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.244898692 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.238503149 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.791840087 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200459295 seconds)
  done (took 12.739144309 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.175666184 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.172210116 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.998834698 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.34182903 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.219195227 seconds)
  done (took 3.006148881 seconds)
done (took 130.786890727 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129067296 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128998987 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.128715258 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.160052859 seconds)
  done (took 1.633823801 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.199882568 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.097191827 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.128693537 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.097040057 seconds)
  done (took 1.621282718 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.397723377 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.097616775 seconds)
  done (took 1.614271753 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14921445 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139160513 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16889711 seconds)
  done (took 1.567885939 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141908204 seconds)
  done (took 1.242196809 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121794826 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.120655383 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.28111052 seconds)
  done (took 1.628421538 seconds)
done (took 10.408137135 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147838304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.935583585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.453359627 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138292398 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.746538127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405575714 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.442326892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.183480588 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186370294 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.144927531 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135953153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698684654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.457029068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.882180141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.410123045 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.911306674 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.70113665 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116773527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.151743794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116271387 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.419828709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.142608337 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116606307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116112697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.724323129 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426369095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113451699 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.92419544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114359648 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119147471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.43583705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115135087 seconds)
  done (took 21.224314628 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155949953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172429927 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.166753445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116068316 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1181091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.14694607 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127493834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156479282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192311331 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114013812 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.168319118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115037328 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119643213 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.146162726 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13947317 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115049301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.149297205 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118016092 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122016767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.147227098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136884365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114129601 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.146658568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117805114 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115110167 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.166596174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115923261 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.153259833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117649913 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12105579 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121525397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.145034902 seconds)
  done (took 5.48680236 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166086019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181174881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.168108171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153593825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.196266328 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118066059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.232210162 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154143164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.222423637 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116213353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135753404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.145356394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156549869 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115788883 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.171627665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116647645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.147040896 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119990988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123939222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.146680884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13972009 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114454841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.146037511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119989934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11623179 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167981039 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117362288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127425271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.145755751 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121299599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122600636 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.145543178 seconds)
  done (took 5.780148366 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.131446768 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131662026 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.138821808 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.17054229 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.125953697 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129915883 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.161293168 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126606092 seconds)
  done (took 2.223687219 seconds)
done (took 35.819181861 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13990209 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133469919 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138151617 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.160845741 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.279508238 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123390226 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.134877126 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.154701869 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.132720329 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138476173 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115891995 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.1586715 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136700414 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.127314736 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.278103289 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.164504648 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.283228614 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.279943238 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.126100107 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.133525793 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124578525 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.283280132 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.162798072 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.125762416 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.275696092 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120421496 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.272173302 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127974306 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.158669495 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.118753914 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.282673469 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.126664527 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.12575329 seconds)
  done (took 6.745624387 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.235027763 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.157329316 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.12719067 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.125452682 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.126177271 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.156254711 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.234293083 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.157947957 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12446809 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.123942824 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.156748648 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.21753676 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.163086733 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.121636444 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.127009217 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.116446578 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.268610914 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.158667908 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.119835448 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.099557515 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.121163829 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.15561954 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.249293249 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.153144417 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.125911065 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.123965159 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.124913274 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.163036162 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.127984636 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.126618153 seconds)
  done (took 5.71397617 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130350748 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.138291504 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.143673787 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.223515201 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.153343482 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.167829302 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141549376 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136333978 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.177905972 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120226666 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.132679563 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184911945 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135111769 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128233551 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.148678736 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134443467 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133322413 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.149127997 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127848625 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136387339 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167379875 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.135623126 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139987764 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.157385539 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118776877 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12474895 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.157477945 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.130657558 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125836173 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.160760915 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121012519 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11995306 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120265069 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.183965034 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.118544418 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.161444463 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139585824 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131122078 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.160963659 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.153002787 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119508086 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.149454844 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145666564 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.174031872 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.150404006 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131554006 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120722183 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132245144 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.147032618 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136297417 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.190108125 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119856746 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13879546 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.14679881 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.118943027 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126619843 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.118252074 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.153454642 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133096836 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.119350919 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.170436318 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126980094 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129457 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.149806304 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131373061 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116711802 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.116988156 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.152774124 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144132304 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124866243 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.186113936 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.117349469 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.129643384 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.162347244 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130704618 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130091355 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.148235997 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131874938 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132482232 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.152620129 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131549697 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.120489205 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.149045248 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136922807 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.137172886 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.162692155 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.130785061 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128886662 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.150788563 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.121468597 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13573967 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.148798905 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123007484 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.131895752 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118329511 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.153901575 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129096368 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127168993 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.146911864 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.144287241 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120076145 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.148145437 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.145637655 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120735785 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.150948897 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.128985843 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.15967494 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.148540642 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127863497 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128844999 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117411158 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.157782978 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120066043 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117380286 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.166464862 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.135375506 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125393824 seconds)
  done (took 17.510153986 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.377207991 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.368257373 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.216655475 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.412395152 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.165231478 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.25430124 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.399239253 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.370585903 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.118303339 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183162863 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174093921 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.331324846 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.151516749 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.148181428 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.372021903 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.44865104 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.14710575 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.188979585 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.153995762 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.163492385 seconds)
  done (took 6.283619813 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.127345237 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154461514 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.171241802 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.138742758 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.129432436 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165507028 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120186666 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140220332 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.161510407 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127955561 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.121581681 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.125782352 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.162681116 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134502223 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132641457 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.182839233 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127991401 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122234607 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.172618517 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123596869 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107346424 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.175336073 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127872813 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.13968636 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.170004908 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.128963874 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11655704 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.154308498 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126918574 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.127162191 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.152676848 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.128362703 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126099604 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109536862 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.160860837 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.134466519 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.125121604 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.152329958 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124166227 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.119987321 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.163447401 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.131932601 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126976958 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104530852 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.168657158 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117526807 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.132016208 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.160093198 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112700884 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139084123 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130375019 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.16464976 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126178979 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.140172102 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.15636679 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.136182402 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129686276 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.163332563 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123647361 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.117208596 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.147195576 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.122300799 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.127202175 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.162295375 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132924567 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.126664099 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126494646 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.149550446 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12263338 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120964679 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.152845706 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133080238 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138517867 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.159287618 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.127189008 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128292288 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.157089086 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.100176918 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.126737786 seconds)
  done (took 12.002279584 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145205513 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129165198 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.164689137 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.154465628 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130683701 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.123947239 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.161571158 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.138898839 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.13275586 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.168306145 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132949275 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132605379 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171685722 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130246649 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128335118 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165964012 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130757768 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.156247872 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161960049 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.146115241 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.165303779 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125506968 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.13153613 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.129726533 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.179322465 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.130762624 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.175374181 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132843838 seconds)
  done (took 5.234948176 seconds)
done (took 54.604902128 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.308290482 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.495318425 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.263834784 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.260945707 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.28136729 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.291822734 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.267057694 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.264909886 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.894487067 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.236414576 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.264084544 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.261618619 seconds)
done (took 29.234180629 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.391924571 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.402818567 seconds)
    (2/2) benchmarking "String"...
    done (took 1.582013026 seconds)
  done (took 4.135267612 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.253202003 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.254720121 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.497501894 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.253030793 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.256512953 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.256083352 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.270349958 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.267662788 seconds)
  done (took 16.196177284 seconds)
done (took 26.122022596 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.259862553 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.595739243 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.523291525 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.244836557 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.255088546 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.256556222 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.259578234 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.312175153 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.264027434 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.243479118 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.687322349 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.543254479 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.268089553 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.674927508 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.247209659 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.265567976 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.271667954 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.596769185 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.260951044 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.290426655 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.23945556 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.237716506 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.273306103 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.285975074 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.265944991 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.268931835 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.288365463 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.255513938 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.523540262 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.264808037 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.2495668 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.279628403 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.289152733 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.257852848 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.287838891 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.261988504 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.539828285 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.268092379 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.238759472 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.26828925 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.537089428 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.282890812 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.258519046 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.263029028 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.245277515 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.262077828 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.241113651 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.380922843 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.293997754 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.27086355 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.337217379 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.667181027 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.262454847 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.261338823 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.27191222 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.578158023 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.292317337 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.358863244 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.293915548 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.26129005 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.258187473 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.257109113 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.28819652 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.273809753 seconds)
  done (took 148.007037721 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.257278673 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.262539592 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.26279569 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.263242854 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.263499091 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.263066078 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.258619603 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.258049398 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.263826847 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.288441533 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.264008582 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.259813397 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.279705729 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.204950661 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.269408887 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.281327186 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.264898201 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.280240281 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.272125555 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.258883307 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.265969179 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.264753966 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.26487812 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.263790898 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.270015559 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.350183213 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.273131157 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.281151453 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.274658217 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.260333509 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.271447953 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.26913556 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.94896417 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.133868539 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.267173469 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.305106226 seconds)
  done (took 82.387383766 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.26061689 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.261163907 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.261123092 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.297189667 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.262084151 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.87289165 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.873659835 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.321508206 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.586475569 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.829199314 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587241807 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.266401345 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.356584778 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.27594299 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.262523569 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.35876526 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.289054608 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.261374384 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26159371 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.905152651 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.279732081 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.835401154 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.446610632 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.280931074 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296664971 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.654260885 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.2619709 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295436831 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.603208077 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.314974662 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.262282745 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.667522767 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.722156042 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.377445335 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.264208815 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297738041 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.262381836 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.55118379 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.263004834 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.264722923 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.266289526 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961806212 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.268037449 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.875306789 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.263776797 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.291604693 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.26744822 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.262919297 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.710393515 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.10182014 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.270517229 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.264892253 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.266950236 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.264079324 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.264424234 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.264031486 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.298936581 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.264300084 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.646422405 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.227000481 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.271374355 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.268780923 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300614298 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.264280061 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.279143716 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.268678269 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.799559294 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.325970957 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.413484673 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.908385932 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.268437584 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361567902 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384814088 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.266006037 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.26428167 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.266066917 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.265269071 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.266338906 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.379051799 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.267360522 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.264998279 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.08240126 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.451394879 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.283899445 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.839453543 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.370547375 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.267264595 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.681648799 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.270829163 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.265855865 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.016162866 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364215031 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.266828713 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.267007273 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.26660662 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.084506826 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.881099238 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.584922059 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.27189731 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.268434596 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.27320539 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.237126447 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.875133599 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.980914657 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.273572409 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.381106936 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.453302041 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.287605456 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.268829112 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.848432271 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.273943602 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.329970841 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.268509225 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.668992896 seconds)
  done (took 387.868099202 seconds)
done (took 619.407093116 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.245340774 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.247406762 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.247280406 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.250919834 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.249971214 seconds)
  done (took 12.393715604 seconds)
done (took 13.547892301 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.493454722 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.475627294 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.477419118 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.336188977 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.492319526 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.495404287 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.397059835 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.343476754 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.471416744 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.494425475 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.479277069 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.305735155 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.494894786 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.459951653 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.287665521 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.387963737 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.417330012 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.413808842 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.357994351 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385722507 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.513803436 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.3084409 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.305195515 seconds)
  done (took 33.74861305 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.572849061 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.281187176 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.336892224 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.547275431 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317082383 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.56870155 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.611494368 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.281499637 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.437243111 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.313821014 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.292408591 seconds)
  done (took 18.715726443 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.576690857 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.280976289 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.358894594 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546141088 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.316667122 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.575977358 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.612349363 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.28301149 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.46647585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.29380702 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.293120377 seconds)
  done (took 18.759015246 seconds)
done (took 72.380323921 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.311921602 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.378130031 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.310077535 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.29009885 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.289262206 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.288842576 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.292313109 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.28969238 seconds)
  done (took 11.605569895 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.289433075 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.288006898 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.287935966 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.291000844 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.288969549 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.288430397 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.287101315 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.288442891 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.288435962 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.288668619 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.288330508 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.289987368 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.288737795 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.288004255 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.289283475 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.289348589 seconds)
  done (took 21.776505496 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.290952205 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.290073979 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.288379708 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.288471178 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.290010261 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.291008025 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.290714657 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.289717654 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.291097626 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.287613516 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.290527996 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.29073373 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.289409648 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.290200882 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.29011081 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.290079263 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.29212808 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.291026208 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.294406567 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.28977704 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.291068798 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.290723628 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.291023993 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.289589722 seconds)
  done (took 32.12541817 seconds)
done (took 66.665537303 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.286116169 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.279606472 seconds)
  done (took 5.722895397 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.350614602 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.349046351 seconds)
  done (took 3.860717449 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.291746536 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.292399675 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.292034702 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.292273338 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.291452011 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.291553243 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.292417465 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.292822721 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.291194766 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.290802087 seconds)
  done (took 14.076939611 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.292426336 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.291751684 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.291035829 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.292405739 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.292851017 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.293481612 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.292365402 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.291374371 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.29312691 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.291756354 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.293541626 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.293620245 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.293076563 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.292064061 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.292835501 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.292489634 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.292392169 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.292970954 seconds)
  done (took 24.424618411 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.305083447 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.31247427 seconds)
  done (took 3.775700598 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.419979891 seconds)
    (2/7) benchmarking "second"...
    done (took 1.335377245 seconds)
    (3/7) benchmarking "month"...
    done (took 1.399465668 seconds)
    (4/7) benchmarking "year"...
    done (took 1.387913142 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.335548952 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.313749103 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.336138907 seconds)
  done (took 10.68894547 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.278135377 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.58285752 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.781024253 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.442405726 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.273717485 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.296173078 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.2554285 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.301950679 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.300787018 seconds)
  done (took 14.673107639 seconds)
done (took 78.383801667 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.277154858 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.314807874 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.307887294 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.295399576 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.588964682 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.335731872 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.285087224 seconds)
done (took 16.569598479 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.256689999 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.26487915 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.26293829 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.294408605 seconds)
  done (took 10.240318774 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.27823402 seconds)
    (2/2) benchmarking "read"...
    done (took 1.627034353 seconds)
  done (took 5.069589215 seconds)
done (took 16.474127632 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.297533967 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.297221366 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.296082887 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.297370808 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.295053388 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.295065266 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.295843683 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.294836415 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.295510087 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.294818171 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296061766 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.296570595 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.297464187 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.295618773 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295655307 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.295266837 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.296463589 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296830317 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296667577 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.298334217 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.295101873 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29659791 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.296456844 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295292766 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.296005832 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295948322 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.296636306 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.297844967 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297027003 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.297637767 seconds)
  done (took 40.052249191 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.301722895 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.304276345 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.29640051 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.297436802 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.297147325 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.296010614 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.297403967 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.298192846 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.297458761 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.296639261 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.296829104 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.297158516 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.297329928 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.297727089 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.296739197 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.298965753 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.296669784 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.298483953 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.299438879 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.298910052 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.297734257 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.298394647 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.29801222 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.299596184 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.298584093 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.300033487 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.299482283 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.298434601 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.299178861 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.297750787 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.299104314 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.297925405 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.299137343 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.29980656 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.300083533 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.299207049 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.30453826 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.307719694 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.299267486 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.299610482 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.300207714 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.300138257 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.299432436 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.298454098 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.299943992 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.299479077 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.300981273 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.298793941 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.300230025 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.299707554 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.300032718 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.301700028 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.2996873 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.300925877 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.298768535 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.301534608 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.300926891 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.301558712 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.300843116 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.3024832 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.301103233 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.300599125 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.300857929 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.299802633 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.301543225 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.301227693 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.301514546 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.300378619 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.300731823 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.301901252 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.302011976 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.301779843 seconds)
  done (took 94.740246378 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.302579537 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302893715 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.301920465 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.301361435 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300809451 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.302895594 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.302253106 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301784987 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302397022 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.302421411 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303223846 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302800926 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302671683 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.302395984 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302474665 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.302981658 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.302313971 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303568302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.30430017 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303154053 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303246647 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.302012261 seconds)
  done (took 29.824901392 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303733582 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304327674 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.30604264 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.303584579 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.304718829 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303525375 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.302313111 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305048955 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303433557 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.3029185 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303615319 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303585232 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.306072714 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303728666 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302771285 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305071359 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304578166 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305056604 seconds)
  done (took 24.642513827 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.303464021 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.304976347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.304572637 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.30376582 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.304118102 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.305838198 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304655481 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.3049314 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.306296261 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.306014542 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.305717478 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30452683 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.305354609 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306959259 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305604396 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.305489647 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.305681024 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304374716 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306433156 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305633312 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.306747819 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.304587281 seconds)
  done (took 29.88588744 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306439361 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305616705 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.307227486 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.305576403 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305084737 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.305961731 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.306746717 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.30749617 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.307322782 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.305484522 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305108633 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.307485076 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.308103194 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306742301 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.307629541 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306326402 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307515673 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306794809 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305057886 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.306432724 seconds)
  done (took 27.301786344 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30831987 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308571294 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308113525 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310018305 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307917629 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.307403692 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309293307 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.307895424 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30828134 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.30910315 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.316555517 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.307649033 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307187299 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.309025358 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30838554 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309753957 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308226136 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.309267946 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309656469 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30960686 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.309969505 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308797138 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30924692 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.308616973 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.308506804 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.309526498 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30926765 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.309318624 seconds)
  done (took 37.827044467 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.327125031 seconds)
    (2/2) benchmarking "in"...
    done (took 1.325642559 seconds)
  done (took 3.827318486 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.308179202 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31007071 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.310234535 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.309946189 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.310309128 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.309192202 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.310805223 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309211694 seconds)
  done (took 11.652212025 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.301343798 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.311671099 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.309380207 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.311781632 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.310021841 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.302828357 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311235687 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.315287844 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.305274434 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.30408431 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.31078308 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.311272994 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.305884253 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.30653066 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.306196389 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.308531489 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.314614985 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.311762211 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.311999603 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.31303409 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.313846984 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306902164 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.309776645 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.31532125 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.304427011 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.316559613 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.313018372 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.316138196 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305067092 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.312088233 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.308748542 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.315859896 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.313080936 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.313870946 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.314272718 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.311746641 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.314780203 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311775066 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.314762307 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.319106137 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.313137217 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.312854644 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.307180115 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.309771072 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310683924 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.317454664 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.31297238 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.314411901 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.306316914 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.311236463 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.321380282 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.305860206 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.316255639 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309485585 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.312537124 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.318749658 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.32250032 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.310202557 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.314471221 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.318571149 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.323893173 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.324795907 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.314158077 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.319531085 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.318801454 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.332934266 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.319509432 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.322210618 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.31685636 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.31522028 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.3178083 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.329276597 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.328949584 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.321546364 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.317995074 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.317457713 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.309916164 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319186328 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.31960399 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.321713538 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.321184217 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.316695212 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319590052 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.331463638 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.31162173 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.320862877 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.317632887 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.316304414 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.311112094 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.320893806 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.324610408 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.316708529 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.30795149 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.313859308 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.314393166 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.319091859 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.30917208 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.31159519 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.321893284 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.316937109 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.317083416 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.314215036 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.320016787 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323755631 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.316101691 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.320802159 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.326134145 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.311692421 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.322265784 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.326347986 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.317602569 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.310858318 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.316242618 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.321398756 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.311476131 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.320508025 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.324621543 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.315503704 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.324501163 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.31894447 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.319223226 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.339826655 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.325603606 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.319618732 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.315930654 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.329445975 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.318200658 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.316385646 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.326194379 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.318559001 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.320423882 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.315935473 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.326737531 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.313203595 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323865338 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.314996565 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.323296229 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.319726682 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.319465997 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.318268019 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.322229202 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.317408874 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.319444752 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.324831859 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.328171396 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.316493399 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.328156057 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.320163159 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.319028167 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.322436412 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.326269959 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.321833729 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.317256447 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.32435938 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.31550724 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.322787238 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.315264143 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.324442841 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.322935584 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.32166973 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.321578005 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.31271382 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.320705291 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.324641844 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.320884076 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.321875034 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.325183474 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.322323355 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.322515491 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.315006866 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.324810235 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.314064413 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.31940998 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.332372607 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.323263018 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.324219339 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.320650924 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330752808 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322252326 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.324898883 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.317839074 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.32452325 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.3270393 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.325258975 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.33202778 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.322766386 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.323338858 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.317529354 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.319055957 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.327348845 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.318421317 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.33202954 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330287961 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.338653076 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.320287834 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.328650746 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.317834974 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.327810941 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.323069609 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.332752461 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.325356733 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.324306772 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.318561813 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329714518 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.320625169 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.328351842 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.317275995 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.327446673 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.326617378 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.323896377 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.324730322 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.318966124 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323678432 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.328675419 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.325510011 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.325125233 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.318898461 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.328747688 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.318026694 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.320943083 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.329187999 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.326156233 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.32871946 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.333826368 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.32514794 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.332483847 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.328234611 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.322187854 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.329234198 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.326555231 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.325830552 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.331492852 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.330365491 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.321561957 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.333164277 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.330076519 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.32062344 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.328677006 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.335168112 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.326674151 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.321623514 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.335790126 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.329354019 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.327659606 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.327155294 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323207901 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.331406921 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.329958665 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.338063246 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.321709593 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.332065795 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.323398817 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.331896756 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.323691256 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.330009702 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.327223109 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332075861 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.337758809 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.329932351 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.321635345 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.332358464 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.32779146 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.328005195 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.322484889 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.335830755 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.33110562 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.330769481 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.326730512 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.325735201 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.333033464 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.320988686 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.33110238 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.323271121 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.340497957 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.351483677 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.333630822 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.335297871 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.334617113 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.331933736 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.333925262 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.327090585 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.326364631 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.327662728 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.325574491 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.3261395 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.334327138 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.325169807 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.333780648 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.328965617 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.333948382 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.333291348 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.332063726 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.324660789 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.334695916 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.330320205 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.330880742 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.323370345 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.332883288 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.327789224 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334132399 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.332764038 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.327353022 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.339039155 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.339085398 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.330499628 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.329638559 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.328457329 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.324943839 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.329005622 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.338262748 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.326881415 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.34042429 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.326400135 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.333926685 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.328518796 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.339784707 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.343404127 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.326473212 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.339978239 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.331929626 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.323035128 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.326732021 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.335631073 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.337156068 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.346764256 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.326062744 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.337594164 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.334877332 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.333551522 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.333178069 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.333525471 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.333224856 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.332934195 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339409602 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.341337706 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.333641508 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.3381331 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.344673597 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.334898468 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.331534895 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.3251107 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.336358201 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.346641981 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.329380188 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.334149847 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.331033049 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.336961701 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.33506733 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.335661959 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.333809273 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.335127887 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.338779095 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.341338415 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.339144019 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.335933849 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.338670724 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347088072 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.339951398 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.347916651 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.330373591 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.340906603 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.33470522 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.33114559 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.331587909 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.331114356 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.338379687 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.327923603 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.341944329 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.335738263 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.332476763 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.337093648 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.343176587 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.328390678 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.339804866 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357827847 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.328093183 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.340499661 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.336308604 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.328339342 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.340652026 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.33733868 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.328660745 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.334114495 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338871628 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.344949673 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.332074898 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.341793513 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.331181999 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.341793927 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.33844212 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.33705726 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.337803846 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.33755519 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.330885247 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.341091799 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340196701 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.349810714 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.332350271 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.338508757 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.332628692 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.346605795 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.350705441 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.333936189 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.3433091 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.338650892 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.332191849 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.336282843 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.344381373 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.332061879 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.341101329 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.330726548 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336417128 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.338004337 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.342599488 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.342323257 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.342721429 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.332580004 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.334676657 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.342055398 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.341572367 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.338285408 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.336706058 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.347048394 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.333033697 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.33314349 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.341530588 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.334869244 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.345120835 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.332950256 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.341790035 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.338076469 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.343117309 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.339898879 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.339832709 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.331527272 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.334518881 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.348637558 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.346675371 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.34161289 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.339772962 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.344333131 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.334753186 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.338746839 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.342536219 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.336112644 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.337067555 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.34536671 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.3358275 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.33786111 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.3364134 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.343020436 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.347630275 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.346496879 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.336521557 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350889471 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.353346195 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349237217 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.334299902 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.340048055 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.337694466 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.344204244 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.342427381 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.336163036 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.350536622 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.350732957 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.346857662 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.343445019 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.344633221 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.336290206 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.346492277 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.34324358 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.339898955 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.350920562 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.339962526 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350488694 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.342337949 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.342461767 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.335593131 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.338658185 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.340903276 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.342782123 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.344226441 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.344621623 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.348380433 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.342154968 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.348093576 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.344160718 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.344186031 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.342628963 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.336339358 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.346227006 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.336798372 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.347639147 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.348154421 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.338024253 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.347441533 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.344936574 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.339273033 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.346403793 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.352250936 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.344279244 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.338515704 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.343785752 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.350973383 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.357646738 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.343849577 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.339819058 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.342751758 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.349322338 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.344286516 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.344562773 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.338438766 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359707618 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.358978299 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339635442 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.343897589 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.349555239 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.357362992 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.347143852 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.345674863 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.34249676 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.346214216 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.352793554 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.346695394 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.351102976 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.35409854 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.343339559 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.349644932 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.341498937 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.344570316 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.349016244 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.357864104 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.346537429 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.343181371 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.361644893 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358269834 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.3511274 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.376134959 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.357984043 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.349123083 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.353371006 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340031114 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.349425653 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.344988889 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.353417469 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.348206482 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348934022 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.34886673 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.339742285 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.351295005 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.357251497 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.358041898 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.347630903 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.341088717 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.342301905 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.351272687 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.35005396 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.350879292 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.348929997 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.349210047 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.347807078 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.344307123 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.361822579 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.368910885 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.355516034 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.348459679 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.350270765 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.351727806 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.356543899 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.351739922 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.357221658 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.349432376 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.348957842 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.348029114 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.359392025 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.351623254 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.342463572 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.346739676 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.344841754 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.354019921 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.359938615 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.372167221 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.354219225 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.35555223 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353472882 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.350099078 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.345105183 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.355173472 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350975233 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.34510704 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.347328173 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.354834313 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.350582172 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.350318398 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.344261281 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.358483779 seconds)
  done (took 795.028502706 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.351180527 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350423055 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.351205885 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.351457922 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352472853 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351173181 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351813265 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.351935118 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.353416882 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.35082953 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.35310987 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352727947 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.35222198 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.351755031 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353421293 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.35256423 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35297916 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.352290822 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.352466469 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353137853 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.352986321 seconds)
  done (took 29.605313227 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.353264878 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.352673851 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.352653174 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.352561861 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.352494541 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.352405645 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.35300931 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351959779 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.355094419 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352319739 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.352100671 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352269122 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.353496973 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.353493726 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354194926 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.353348655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.353184798 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.353030698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.353494207 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.354555371 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353392208 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.354195402 seconds)
  done (took 30.981766828 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.35343962 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.354164056 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.346794198 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.357365733 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.352918534 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.352834877 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.353852726 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.354100064 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.355612997 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.347224179 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.349059709 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.348174749 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.354497935 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.362517262 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.352481895 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.362414182 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.3556905 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.353547677 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.355364835 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.355025459 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.359041226 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.36829247 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.355463678 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.348145467 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.358635061 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.355476127 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.355464705 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.355123646 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.346784464 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.360542084 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.356590442 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.350235602 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.360121538 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.36005587 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.350785163 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.360227759 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.35773289 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.354453455 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.356342239 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.359162741 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.379387311 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.357184522 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.361180738 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.370115725 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.357568985 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.351600519 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.36580861 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.356950823 seconds)
  done (took 66.319412018 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.357321782 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.357812034 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.35645543 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.356474544 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.356603627 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.357511073 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.357496632 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.355900986 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.357332431 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.356925603 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.358733062 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.358889736 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.358417053 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.358400974 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.356872192 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.35921781 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.357980129 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.358149148 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.357571046 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.357067165 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.358564651 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.358979893 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.359697026 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.3581214 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.35897226 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.357052615 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.358487736 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.359320504 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.358610122 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.358772069 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.359782359 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.360334036 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.360447966 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.35898169 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.359862884 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.360851584 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.359309296 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.360270602 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.358955585 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.358344998 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.358653384 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.360194219 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.359803181 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.361094013 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.35954219 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.360502285 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.361618189 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.360336739 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.359979164 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.36131882 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.359758494 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.359787523 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.361109797 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.360235963 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.360008432 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.361006274 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.362006298 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.360706547 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.360518675 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.361038863 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.362184349 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.361803442 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.360986715 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.361421807 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.361445859 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.361932302 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.361753465 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.361102402 seconds)
  done (took 93.653723839 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.360760002 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.36234219 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363227406 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362789265 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.361217965 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.36247153 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.363498177 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.361959915 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.363122819 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363109839 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.362790924 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.366377795 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.363482945 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.363532586 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.363387464 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.363382962 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.363210297 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.362708224 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.362616628 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361607627 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.364525555 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.364063699 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.363495666 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.364183797 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.364919257 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.362223299 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.362641192 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.36308945 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364320279 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.365643235 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.364468885 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.363486021 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.36449876 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.365421388 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.365051977 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.363743344 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.364061646 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363185189 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.36371638 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.364090443 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.365925274 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363095302 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.364942351 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.364875378 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.364868958 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.363822359 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.365081963 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.365234302 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.367355643 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.366203351 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.366063539 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.365334586 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.365507273 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.365405788 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.366228339 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.365635356 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.365776223 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.366312844 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.365638806 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.366188424 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.364741205 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.366615565 seconds)
  done (took 85.801670121 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.367299908 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.366060631 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.367100171 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.365100973 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.366224292 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.366847106 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.365922972 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366388486 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367055072 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366482907 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.365877701 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.368728863 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368608335 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.367720134 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.366242023 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.368117558 seconds)
  done (took 23.09251962 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.367630253 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.368275339 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.366210184 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.367177183 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.367879269 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.368443873 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.366787904 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.367031523 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.367769237 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.368371372 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.36881768 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.367947873 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.366340452 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.367975932 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.367187759 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.368487817 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.368352257 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.368262364 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.367833888 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.367874834 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.368903488 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.368504622 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.367598647 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.368089875 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.368927999 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.368992584 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.368573999 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.367412802 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.368275432 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.36892576 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.367670089 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.368738969 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.368827908 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.368875275 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.369343255 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.369393433 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.37034118 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.369368247 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.369947106 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.369520172 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.370336436 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.371189606 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.369917191 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.370531427 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.370222709 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.369930131 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.368847213 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.371194192 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.370518582 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.371835801 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.369254333 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.370429873 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.371495685 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.371167452 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.371062612 seconds)
  done (took 76.515238573 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.370963963 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.370490422 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.370671916 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.370745911 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.371142789 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.369690582 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.372099048 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.372990497 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.371158671 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.373251382 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.370809452 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.373893889 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.371822662 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.372795153 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.37051149 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.37202876 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.371843031 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.371815768 seconds)
  done (took 25.915112158 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.372877319 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.372844284 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.373117819 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.372642807 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.372614233 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.372506392 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.371498542 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.372248683 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.372135579 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.372020929 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.37289947 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.372226406 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.373665343 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.372426248 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.374050753 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373838725 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.37207352 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.373635813 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.372942927 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371876045 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.374699536 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.373211168 seconds)
  done (took 31.430051804 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.364450795 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.363584614 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.362997773 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.381975922 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.38176785 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.364564493 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.362133331 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.364004328 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.388678311 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.417877283 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.409920616 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.381052478 seconds)
  done (took 17.77081738 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374836969 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37323072 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.375259245 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375603279 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374075597 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376036173 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374371985 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375119945 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375204633 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374487537 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37515526 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374545482 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374814571 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374141902 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375324957 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375895072 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373619195 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375411154 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374348526 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374617881 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375192993 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373797375 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37610613 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374865906 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376005062 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375778702 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376384399 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377669426 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377183791 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375526892 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377814861 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376096884 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377439709 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37599109 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377580749 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37575799 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376885226 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377013145 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377205717 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377402527 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.377177862 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377611831 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376963072 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376759693 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378035154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377569685 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376715855 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377583454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379186189 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377148699 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377639085 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377576719 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37821582 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376394001 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377775329 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378942141 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377827812 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377139427 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377292942 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377503236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378383569 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378541194 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379094332 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37863663 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378384975 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379029817 seconds)
  done (took 92.077445372 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378302684 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.378666203 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378427214 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379838835 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378090156 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378015601 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379065256 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379760059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377906045 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378639857 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380098326 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378467315 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379925267 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379382033 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378711885 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37887014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380795455 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380686303 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379803379 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381080043 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380518625 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379327707 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37891026 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381289021 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379429246 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380328203 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381307884 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380821876 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381493825 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379823396 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381087985 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381050374 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38398802 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.379966366 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380891148 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380908248 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381609574 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380921882 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381756155 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380720664 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381608164 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382893596 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380878055 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380739153 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381571173 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381286841 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382592508 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382242364 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381907619 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382390514 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382269647 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382474579 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382740954 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38151681 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381948874 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381691974 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380198794 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38233036 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383012946 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382249608 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382526174 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382456432 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383661651 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382848162 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381432089 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383746883 seconds)
  done (took 92.370985192 seconds)
done (took 1761.481509829 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.541020949 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.495591701 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.374416653 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.388173136 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.37337222 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.377787725 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.386995078 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.374686078 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.374481801 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.374196341 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.372038106 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.565425779 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.407718136 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.3745201 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.37438102 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.472145568 seconds)
  done (took 27.863777441 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.404506619 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.385679194 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.511909945 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.381566375 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.405594591 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.599976076 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.444879294 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.380474134 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.581987338 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.403466471 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.373442078 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.403135909 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.379438702 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.369548716 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.400331746 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.594614945 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.682028167 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.373454236 seconds)
  done (took 30.314289155 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.926081918 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.39924592 seconds)
  done (took 5.565038807 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.401824974 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.379364394 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.382072439 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.379319498 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.370349171 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.371857497 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.379466906 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.37226464 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.371779263 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.534312063 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.386583227 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.395518721 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.401021613 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.381227314 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.388871976 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.426777769 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.534241424 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.389966457 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.387332776 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.387952239 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.379193448 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.479570483 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.42862725 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.392661227 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.527987477 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.377689444 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.388591344 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.388762777 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.513077847 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.390568546 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.378528022 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.381614772 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.382033433 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.374955922 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.964084636 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.389423913 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.406175467 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.389680304 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.389598462 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.539099916 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.383424825 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.387071527 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.375234515 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.941369009 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.496067635 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.517488995 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.404702265 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.388651903 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.383745812 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.451035413 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.383194854 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.382969248 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.446491306 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.27532184 seconds)
  done (took 88.349371354 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.413051289 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.376207788 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561922211 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.395802265 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.375617208 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.380202113 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.396399386 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.727835342 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.386478416 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.377828491 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.735813055 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.074352808 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.385089377 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.436945107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.425162292 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.438406391 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.376600121 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.373932912 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.381287677 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.379031667 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.988834823 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.393320656 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.378196737 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.579398439 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.421144476 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.998293795 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.382422192 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.382775752 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.396459269 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.377131782 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.050840897 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.38985449 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.482126611 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.378414489 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.692156452 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.832108703 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.789783126 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.378546621 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.376656436 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.382787539 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.378892666 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982453608 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.812232318 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.377894901 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.382356604 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.984659078 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.378878689 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.37909528 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.3830785 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.654599194 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.380012992 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.381890448 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.388960797 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.379157857 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.379233547 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.43996619 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.452320349 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.984827596 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.378927524 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.379496274 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.414710102 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.382036239 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.388434059 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.379535048 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.381937263 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.81625916 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.567836881 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.380535847 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.814576462 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.031228774 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.381783273 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.140844911 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.384215479 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.406816269 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.493713447 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.392982223 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.380538958 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979152976 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.414085464 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.382291284 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.794541153 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.384608997 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.716202142 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.399418014 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.381315312 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.017563796 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.384178413 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.447586562 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.381711867 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.383963934 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.381216318 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.383552202 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.698078677 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.410675631 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.381798562 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.381827092 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.416749821 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.382621875 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.383266463 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.386654924 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128678145 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.395205456 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.381762675 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.383171774 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.382893756 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.401754868 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.383684609 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.386036057 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.66589687 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.38306468 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.388865572 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.383782922 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.384059261 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.408225077 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.586968307 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.388097895 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.752995207 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.384978192 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391358986 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.390908239 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.382606125 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.434432995 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.384643867 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.38269881 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.340575688 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.746291062 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.417757897 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.382780064 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.384152126 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.383999799 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.393408229 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.388203324 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.421202124 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.388462996 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.258758503 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.397927529 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.400924789 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.383560927 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.39244215 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.383421358 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.392131899 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.38713339 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.716566792 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.714422306 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.669088469 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.388427385 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.386732589 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.257085191 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.438293903 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.573480291 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.407156662 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.385047987 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.690264294 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.588503198 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.385613295 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.384823326 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.389731918 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.683985972 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.388368849 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737619745 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.07806651 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.391915151 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.385690098 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.24874389 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.159410065 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.392009915 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.386749169 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.719012676 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.409073571 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.386323176 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.386375495 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.386154692 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.387474491 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.389291359 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.385218348 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.38671342 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.38652502 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.501438641 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.585274489 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.406033226 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.388205413 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99793658 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.397918452 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.387991493 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.389329884 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.391344216 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.387182158 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.442012589 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.389360378 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.424591665 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.386781159 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.399764555 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060640656 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.387951979 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.390247863 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.588593099 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.212599555 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.394399031 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.387491572 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.387386429 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.425195073 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.020039208 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.391480882 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.759033927 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.390294013 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.432400373 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.389014347 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.434558383 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027180773 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.396771789 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.389057029 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.202343057 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.395192878 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.172838958 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.389504015 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.389533576 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.138715094 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.395473911 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.389734786 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.389814529 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.390831723 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.702865239 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.391190298 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.419708158 seconds)
  done (took 512.512790496 seconds)
done (took 665.844136247 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.390696914 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.396139469 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.396196067 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.395302789 seconds)
  done (took 10.834047592 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.407872942 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.397865776 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.407221823 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.396338247 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.407854733 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.395667946 seconds)
  done (took 9.669686077 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.389691769 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.394503642 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.397254115 seconds)
  done (took 8.43652072 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.634419419 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.411155598 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.811421775 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.399429327 seconds)
  done (took 9.514955484 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.40874905 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.407107117 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.408565003 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.407873959 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.409621732 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.409764804 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.407653602 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.408730693 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.40949648 seconds)
  done (took 13.933294024 seconds)
done (took 53.647192447 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.659525947 seconds)
    (2/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.576769782 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.431258948 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.210766013 seconds)
    (5/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.795732547 seconds)
    (6/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.537088271 seconds)
    (7/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.370004267 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.481503445 seconds)
    (9/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.509272132 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.50185341 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.42747433 seconds)
    (12/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.420588714 seconds)
    (13/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.40385839 seconds)
    (14/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.552143445 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.559996354 seconds)
    (16/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.388557606 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.498981344 seconds)
    (18/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.481744795 seconds)
    (19/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.518417061 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.697037745 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.484718015 seconds)
    (22/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.795798481 seconds)
    (23/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.522413639 seconds)
    (24/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.783003795 seconds)
    (25/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.717910065 seconds)
    (26/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.425976657 seconds)
    (27/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.423690275 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.563578447 seconds)
    (29/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.54739686 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.478986542 seconds)
    (31/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.370550032 seconds)
    (32/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.418831861 seconds)
    (33/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.484734855 seconds)
    (34/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.395102856 seconds)
    (35/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.503601909 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.467279808 seconds)
    (37/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.372171674 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.392400744 seconds)
    (39/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.504099346 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.372990561 seconds)
    (41/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.385790569 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.468789806 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.395598959 seconds)
    (44/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.390384624 seconds)
    (45/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.502023898 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.523339512 seconds)
    (47/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.470475936 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.031185672 seconds)
    (49/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.38160744 seconds)
    (50/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.43839132 seconds)
    (51/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.218437682 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.98214517 seconds)
    (53/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.469523731 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.397300621 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.763479959 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.383652285 seconds)
    (57/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.381944665 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.672759804 seconds)
    (59/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.5385488 seconds)
    (60/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.438052185 seconds)
    (61/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.616648187 seconds)
    (62/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.958875829 seconds)
    (63/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.4650838 seconds)
    (64/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.390220756 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.49885941 seconds)
    (66/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.62159833 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.389453231 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.419362251 seconds)
    (69/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.375148495 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.398396236 seconds)
    (71/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.388537445 seconds)
    (72/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.520370388 seconds)
    (73/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.494008209 seconds)
    (74/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.527996269 seconds)
    (75/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.480442567 seconds)
    (76/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.553055557 seconds)
    (77/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.686574062 seconds)
    (78/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.441101407 seconds)
    (79/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.428188848 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.698431098 seconds)
    (81/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.429309227 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.398332452 seconds)
    (83/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.050968683 seconds)
    (84/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.79815947 seconds)
    (85/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.390082581 seconds)
    (86/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.439770754 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.569485037 seconds)
    (88/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.375079524 seconds)
    (89/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.530371887 seconds)
    (90/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.961669899 seconds)
    (91/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.396139347 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.541079621 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.434174919 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.686906566 seconds)
    (95/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.385403796 seconds)
    (96/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.594296467 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.491166385 seconds)
    (98/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.428931738 seconds)
    (99/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.859228322 seconds)
    (100/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.680998863 seconds)
    (101/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.44331659 seconds)
    (102/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.717094506 seconds)
    (103/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.614626301 seconds)
    (104/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.441636247 seconds)
    (105/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.480514673 seconds)
    (106/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.585730811 seconds)
    (107/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.441588297 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.498533469 seconds)
    (109/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.575788474 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.381482911 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.717486825 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.443582195 seconds)
    (113/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.484757554 seconds)
    (114/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.379412907 seconds)
    (115/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.805988968 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.509657075 seconds)
    (117/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.63991534 seconds)
    (118/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.383747356 seconds)
    (119/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.414354717 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.38869223 seconds)
    (121/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.678006942 seconds)
    (122/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.432316749 seconds)
    (123/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.733947526 seconds)
    (124/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.561904387 seconds)
    (125/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.437458411 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.613428279 seconds)
    (127/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.39943309 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.73494072 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.632123022 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.578165099 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.572686391 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.540481018 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.492082101 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.91830817 seconds)
    (135/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.515798646 seconds)
    (136/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.916729681 seconds)
    (137/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.804862933 seconds)
    (138/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.509204762 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.493687517 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.567669861 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.475394806 seconds)
    (142/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.377829262 seconds)
    (143/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.541209049 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.681262149 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.540310718 seconds)
    (146/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.565933343 seconds)
    (147/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.487551843 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.542203855 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.42397663 seconds)
    (150/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.391126803 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.407089564 seconds)
    (152/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.692723129 seconds)
    (153/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.85532898 seconds)
    (154/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.853113559 seconds)
    (155/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.494019256 seconds)
    (156/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.37898763 seconds)
    (157/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.427332198 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.864783167 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.477135324 seconds)
    (160/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.381085678 seconds)
    (161/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.601249493 seconds)
    (162/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.381262337 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.931261717 seconds)
    (164/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.493837044 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.513823555 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.443098258 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.514467676 seconds)
    (168/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.441958678 seconds)
    (169/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.769743557 seconds)
    (170/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.509217432 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.710984045 seconds)
    (172/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.479892887 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.510759394 seconds)
    (174/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.470726457 seconds)
    (175/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.42877842 seconds)
    (176/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.511148658 seconds)
    (177/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.382156343 seconds)
    (178/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.542157151 seconds)
    (179/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.49008009 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.033439058 seconds)
    (181/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.683960228 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.539947498 seconds)
    (183/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.627353323 seconds)
    (184/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.401177764 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.537350607 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.619798899 seconds)
    (187/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.031216922 seconds)
    (188/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.389558617 seconds)
    (189/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.643396687 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.52749165 seconds)
    (191/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.73918641 seconds)
    (192/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.387057482 seconds)
  done (took 346.973599989 seconds)
done (took 348.232494977 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.434287872 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.497683636 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.415479458 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.414372854 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.416153381 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.420817899 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.440556882 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.416107003 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.429388987 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.430671127 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.416868121 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.428643 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.431452008 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.429402717 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.448161353 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.416421812 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.414824881 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.425433213 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.430220801 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.433891661 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.418518981 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.41829327 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.443400043 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.416064177 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.425440322 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.424078122 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.420999 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.421985657 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.424342235 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.432595012 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.4061472 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.441507591 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.432592526 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.428412459 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.418510059 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.427214991 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.419654438 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.50152754 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.438109712 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.429609179 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.425726343 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.433857287 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.421941283 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.422159634 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.429620497 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.446175229 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.426407449 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.432439714 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.407918721 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.431177614 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.440007487 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.429929159 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.42695532 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.411141597 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.408193838 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.452343127 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.428909034 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439475175 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.427208459 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.420404979 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.452762349 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439112173 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.430811369 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.428118775 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.427087817 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.434929248 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.42746342 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.43645736 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.428514572 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.421357238 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.422161883 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.429364564 seconds)
done (took 112.195501654 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.543062725 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.414836683 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.576026728 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.427213127 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.589607678 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.540373362 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.42559982 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.427558607 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.428119985 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.221046028 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.429538392 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.427312541 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.414235249 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.427850024 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.539542163 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.428402558 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.427997012 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.119008395 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.429530387 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.556257709 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.420569516 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.428321001 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.427681428 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.2243948 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.417445816 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.412123499 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.55562045 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.430442362 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.120365968 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.411483692 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.415591126 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.121385661 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.556963923 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.448657142 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.439738266 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.437728873 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.591677958 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.432251981 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.547061319 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.54679098 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.579116673 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.467843475 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.413319707 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.420312473 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.433015981 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.431965153 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.430126851 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.46038565 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.418847751 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.431200612 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.120725657 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.440459712 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.440749519 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.43250629 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.430134566 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.450891619 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.430444991 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.432164722 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.557473216 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.431133406 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.547381575 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.225579499 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.226578701 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.431609915 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.416818964 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.431793934 seconds)
  done (took 114.387346682 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.493397638 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.500048352 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.546736319 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.424468953 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.470788309 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.547970595 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.42520498 seconds)
  done (took 11.685929032 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.428911317 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.431441056 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.473037535 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.471756664 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.432131279 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.597592574 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.432683371 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.433884454 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.431532832 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.472526394 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.432242495 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.432800494 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.442092257 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.421553781 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.471675275 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.435741195 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.543625671 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.424722558 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.434426137 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.575673515 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.433182274 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.442817286 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.475517417 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.435254548 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.435175079 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.429180365 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.182572471 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431965133 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.433441306 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.435926248 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.434250857 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.492661156 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.434591288 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.423765032 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.433239139 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.538772752 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.436789783 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.435457904 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.433636612 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.425726359 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.43626414 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.434034919 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.435197678 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.435508844 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.434877797 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.450000463 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.434354114 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.436829559 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.43511145 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.436227642 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.475293321 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.436501916 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.437665026 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.434761905 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.480189651 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.443933485 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.435303897 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.435889129 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.436255395 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.435173757 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.578582486 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.472919773 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.435929471 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.474165996 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43634562 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.43597888 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.436646842 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.435160332 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.518190792 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.437735694 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.474358954 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.436202964 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.608031456 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.451872397 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.437361885 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.431001555 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.430487532 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438393724 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.42398832 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.434325189 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.437059428 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.430392074 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.435444275 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.436673006 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.437223263 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.58656129 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.535186049 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.435639445 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.443312541 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.436303068 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.436696618 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.479003839 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.437671549 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.43835116 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478861114 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.548593792 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.482005268 seconds)
  done (took 147.086252121 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.441838953 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.441445197 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.435388039 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.458340482 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.428817902 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.428075785 seconds)
  done (took 9.915988482 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.431410694 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.442103099 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.440357273 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.439763652 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.439587971 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.44013575 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.440791264 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.4320346 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.445266439 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.440895878 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.440995502 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.441004736 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.440478269 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.440112912 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.441246191 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.439965194 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.438674106 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.440063026 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.440973541 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.442269961 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.426579033 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.441959107 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.441116184 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.432428612 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.44411292 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.440874263 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.455306189 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.441922732 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.439743065 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.435970668 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.444475242 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.440378965 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.433937668 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.438388539 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.445346731 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.434684875 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.44610169 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.441758626 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.441061416 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.442593718 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.443075233 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.442860466 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.441891264 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.441488338 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.433478022 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.438687818 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.446163094 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.457107754 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.442959818 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.443650685 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.44418619 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.442090582 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.442902642 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.444558203 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.435868726 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.438735521 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.447663528 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.44333488 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.443075617 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.435872244 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.447186969 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.444339409 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.43621652 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.447495561 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.444162044 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.443463854 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.436829092 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.448338364 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.444146085 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.445912456 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.445662046 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.445373134 seconds)
  done (took 106.070205665 seconds)
done (took 390.420842293 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.925573561 seconds)
  done (took 4.214867548 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.546054564 seconds)
  done (took 3.836861544 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.562748141 seconds)
  done (took 25.855627045 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.476493754 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.432546239 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.435592978 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.433468868 seconds)
  done (took 11.065783407 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.996269044 seconds)
  done (took 4.28394211 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.443798065 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.437800347 seconds)
  done (took 6.170893749 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.737216686 seconds)
  done (took 4.024951789 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.311624083 seconds)
  done (took 4.603498677 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.460487106 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.448280371 seconds)
  done (took 6.203763876 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.404671899 seconds)
  done (took 3.692105376 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.057654142 seconds)
  done (took 23.348952162 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.450142054 seconds)
  done (took 3.744032986 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.464380819 seconds)
  done (took 3.753435534 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.652918489 seconds)
  done (took 6.941376333 seconds)
done (took 113.029816326 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.429435676 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.438448307 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.434565734 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.435577687 seconds)
  done (took 11.025592982 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.50800224 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.508788309 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.517322883 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.503826474 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.502405212 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.515528956 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.471864585 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.486408838 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.502186417 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.496666766 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.512885873 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.503305291 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.511817345 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.471581696 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.496144573 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.514085334 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.501375359 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.519125392 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.47261675 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.505376343 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.447599579 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.505355357 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.499650121 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.446868034 seconds)
  done (took 37.213202677 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.934847635 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.508183307 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.591658009 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.488464674 seconds)
  done (took 7.813877806 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.550106876 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.552841057 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.572326887 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.615302717 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.652852892 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.566408966 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.473086926 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.469024771 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.455845553 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.553309429 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.630164192 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.553298598 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.770140171 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.44830777 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.767270687 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.448180921 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.448977172 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.553853562 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.602692355 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.633401982 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.447012192 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.552691355 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.558775711 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.553448463 seconds)
  done (took 38.720584317 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.45743263 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.466329091 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.449814026 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.465185618 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.451760876 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.450361324 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.452396675 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.456219737 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.449046652 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.44955926 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.45061135 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.464496229 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.452340006 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.449280223 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.457314403 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.45163845 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.452714216 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.457375059 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.458752218 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.451374941 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.450432077 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.45664522 seconds)
  done (took 33.293434652 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.433829241 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.433223243 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.786546886 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.690257558 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.434694725 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.434781617 seconds)
  done (took 14.507305728 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.525745698 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.678135891 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.441516017 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.883574295 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.961805706 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.443666399 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.442227889 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.72139427 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.09657229 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.122084733 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.51124133 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.523192045 seconds)
  done (took 21.644547068 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527161415 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446331962 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.46415797 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531677901 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451650799 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446324772 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.53251794 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011499452 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.45830306 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722540988 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446419482 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557543279 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.695733496 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448222508 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455507433 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.417825424 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685190601 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011859664 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449133544 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44677664 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504915846 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.450486587 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.453290426 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.709110916 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.454277101 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447067168 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.710454036 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.446934444 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801622163 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779398514 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77921774 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456318672 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724225207 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957486766 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56011815 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701796902 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468741824 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.450322655 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.442119378 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.454875381 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46806713 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.45586018 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772259566 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454684462 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448011623 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448506504 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039179778 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.462768911 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.448617729 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449277107 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.774217213 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539994498 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.4562899 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.449373629 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481180608 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455810731 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.457315342 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568961764 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095793703 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455314419 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47549337 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.456181345 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455612606 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464257307 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19982449 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.458993573 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.456712123 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.456002695 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450802622 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.451367926 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480013211 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452000566 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.471534745 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450670789 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342731728 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45219231 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457279131 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065615945 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452405277 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.457763372 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680969995 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452246542 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453180845 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.452573753 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.452082047 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.350130028 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467394838 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.418540306 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48816623 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016516712 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.713417978 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480906015 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482560081 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.67594009 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.420047774 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45340025 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.456676572 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459389417 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475855219 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.016953308 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456534644 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.460106426 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.703252115 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.667036764 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46889043 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.433304298 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027906335 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458538821 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.4812103 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466459039 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.715573083 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.184803014 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.783271968 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475278389 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498004019 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.455216815 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417693542 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461491669 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.466240125 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.456849296 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776462186 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.431545326 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461198311 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52937593 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465768022 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455981792 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456066958 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463274225 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.456022765 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.685385793 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472566074 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.778543765 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.456660528 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45567794 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.473325413 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463617722 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.463904415 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.678763422 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454992837 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735446356 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455989852 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457134662 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456384958 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.676845856 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.454346646 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.463226218 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798496185 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467987574 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.471166026 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787849711 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498481949 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570010182 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491635338 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.466200502 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.712419798 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.46305443 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.463882974 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458581353 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.464445406 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459512725 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.466346759 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451584356 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195681656 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433905156 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464249976 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.458925051 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.472240813 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531963208 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46581359 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.715401648 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.477321046 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448746315 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.463928347 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.474770083 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681491846 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783395502 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.465117142 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639398324 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.026427798 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191225369 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475282851 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.460082311 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.458358313 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.458752809 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459962143 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458344078 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.460806543 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716822312 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796917248 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474313216 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.191365519 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462005918 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.462044609 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.472706944 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787159754 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.474895978 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459258647 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.45969257 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482654837 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476174021 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.793715376 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687534483 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.478080278 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.460674679 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.980336048 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.469608778 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.460756127 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.461502436 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489053798 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.466438565 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124460709 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806972258 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460002732 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811165057 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471556683 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.484809371 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.459537913 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470992739 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475324906 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.472569876 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492080401 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.719445315 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473447052 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469935383 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102206839 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359687085 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149979909 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485687252 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.474475674 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.467014225 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034003109 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468114696 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461059473 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751791772 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037640364 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468719464 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032153376 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.46876336 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.397702164 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798238128 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697853082 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477350981 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.480220848 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.802293697 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.683129171 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491073969 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478256247 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469188643 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.430741699 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119579555 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468687432 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649989968 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03472654 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481511034 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473502419 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.520170431 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.482731235 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957722082 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468776176 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465884855 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.465141572 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481488329 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129798644 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475238368 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463502977 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212016422 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464766132 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.04546577 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47071715 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.724941779 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.801996807 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.777808039 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.492062352 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.485616425 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.717396202 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797650519 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474451005 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.465948228 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156712876 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.330764648 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.473623565 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46740986 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43317945 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479548101 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829893051 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.473316777 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.4976722 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48092243 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467195236 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467829015 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.467489211 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473354382 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439752932 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03487883 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.463863085 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483488952 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469434995 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474861888 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.716640763 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.483274612 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.22824222 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705295754 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482435344 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503923518 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.473782911 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48411149 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.443368808 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.46931978 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468838459 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479200659 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.696899612 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47491003 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.44055562 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484169599 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.686409346 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.468918665 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.479254877 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745871976 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.474511653 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.473059748 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370293366 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500958276 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479600199 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474600158 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.458826106 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519759371 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54324382 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728750698 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.805819084 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.807435025 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965921238 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482362784 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476780664 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.486041143 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551304165 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469439399 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.482670629 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.477392437 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227262301 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380118788 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.209167639 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805524294 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477891713 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481297922 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469883815 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713202851 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470401625 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74702668 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470494165 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.474626414 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493209431 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484067713 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491792515 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689267899 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746473949 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472877441 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477927256 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477064619 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.471171494 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808682433 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.69610005 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043036425 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094538341 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473259829 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482869528 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0536386 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.752332924 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472841057 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472407456 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473271393 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.483130388 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.491167266 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.485876784 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472298581 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725038835 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804628719 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999575829 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.812087972 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.502224366 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.346719577 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471584885 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.726747153 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315928711 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.734632145 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225383412 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333823892 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728448786 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547907375 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.735722291 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.480203981 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710834061 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.49207877 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47987353 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47301819 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474886154 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.474545937 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.805688994 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217893548 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729705537 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.481012633 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.475791281 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509708886 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.73457358 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.70590437 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.379974321 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.701837136 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815193143 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489661759 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.476220979 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215685698 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811937155 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482670812 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.481266037 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.747142462 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482669447 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510919549 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.348642915 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.475306448 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101876465 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.689644871 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497166282 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476830233 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362406466 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215262607 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.485683182 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052202518 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478193238 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48630204 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757657298 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.483993673 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.482812595 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771586504 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.482550039 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481153688 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.744949048 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.215602583 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.418518455 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.497712673 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478382288 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.48736761 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478634784 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539915116 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48361141 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48580569 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.954914429 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505886094 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478010651 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492657035 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.482905752 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503683496 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.484144062 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478886112 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.487443036 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.460267372 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.451464865 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.511558851 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601216309 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142547321 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483371591 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.096024058 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.815815861 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.728701919 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497139958 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.452876596 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.4858386 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479306642 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479266432 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479703651 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.472520935 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107760421 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.48246553 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.821928247 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49462037 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.692180642 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694447413 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500834047 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751743187 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502140284 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506998901 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.44701345 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481683734 seconds)
  done (took 1032.25531384 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.474987685 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.538427753 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.485443427 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.514976697 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.48866281 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.493109842 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.537501859 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.496864667 seconds)
  done (took 21.35420759 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.473325547 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.481298533 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.489403065 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.481212068 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.489675236 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.048607663 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.494072092 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.481716462 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.497759948 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.475473225 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.494125664 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.219962999 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.488637741 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.491232689 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.491328605 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.482023706 seconds)
  done (took 34.414427929 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.832998899 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.684944988 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.241031129 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.482358469 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.542784005 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.471711214 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.91145699 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.506102727 seconds)
  done (took 29.00092254 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.486318013 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.487445294 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.487316336 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.487893639 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.489914018 seconds)
  done (took 8.764227919 seconds)
done (took 1291.300132922 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.490579225 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.489903037 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.490336641 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.49006738 seconds)
  done (took 7.288055541 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.451548872 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.451431022 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.45424091 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.471027487 seconds)
  done (took 10.155761845 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.925111898 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.136369078 seconds)
  done (took 5.38932889 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.485627451 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.249329622 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.235729484 seconds)
  done (took 8.299851256 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.78578633 seconds)
  done (took 3.113214587 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.92962958 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.988586097 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.494072643 seconds)
  done (took 7.743126309 seconds)
done (took 43.317426782 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.481850284 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.243321947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.631643777 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.475304436 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.637120814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.630914763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.764512377 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.492470135 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.488819529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.486188134 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.478552471 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.64087558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.758532655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.242984398 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.751357779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.243318212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.639131035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.489357961 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.483942775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.475516604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.784607843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.475961623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.481937149 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.475180377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.709842216 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.62720795 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.47786955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.244536669 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.47611626 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.479025645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.62378058 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.483601243 seconds)
  done (took 86.204315222 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.476847269 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.491702324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.477950504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.497350814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.494336284 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.47779636 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.496626984 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.497702702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.482984333 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.482708674 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.484778636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.490405218 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.484742785 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.482296972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.485141102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.482101309 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.492512503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.483394065 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.48259157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.483171041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.485072055 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.484924728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.485381056 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.497029384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.484189506 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.484700856 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.501620489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.484440643 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.504337121 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.484394981 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.486395602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.500824268 seconds)
  done (took 80.940538852 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.494132212 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.486898084 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.50714085 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.504426504 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.485616004 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.484755352 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.484155053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.484641854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.485132773 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.504804583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.505256493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.495943764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.488409664 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.48590172 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.48683664 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.486323689 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.488729646 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.503988706 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.50297626 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.486615357 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.490088893 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.493412972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.488765639 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.485387031 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.502368697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.485891412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.487185377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.485864559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.48741951 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.506419563 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.489256456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.491107357 seconds)
  done (took 81.077483736 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.72539758 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.497143644 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.499013156 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.49280684 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.501066888 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.496895003 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.491036692 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.740751363 seconds)
  done (took 15.77921318 seconds)
done (took 265.33306076 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.490116173 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.497129901 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.526416789 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.495536695 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.51610834 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.528381562 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.750936367 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.530251346 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.735118233 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.508770257 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.515439852 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.497907614 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.493627665 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.658375247 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.495455628 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.503365098 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.505176854 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.508047555 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.502052225 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.768182749 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.530038063 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.486790567 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.503454046 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.519254357 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.478091379 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.581350888 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.581447492 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.672459153 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.638443515 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.579058635 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.495464736 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.52124625 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.502312405 seconds)
  done (took 70.451047703 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.494346119 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.50834444 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.505697675 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.504832916 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.506493551 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.503626731 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.497231903 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.509825164 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.505865327 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.506372233 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.503064247 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.505482504 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.506998604 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.506881903 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.509376281 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.472238039 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.498746343 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.509578566 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.496143679 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.47652276 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.504015216 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.503949165 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.505922755 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.507362987 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.50727041 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.507437305 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.506288353 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.504935865 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.504914463 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.504239533 seconds)
  done (took 46.424988486 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.506709969 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.495730577 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.499593732 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.50884827 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.49782119 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.505897957 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.866656148 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.511226639 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.499982229 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.501613221 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.491734606 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.516131785 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.560038447 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.506465899 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.504987717 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.50600914 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.508801048 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.497605951 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.495915286 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.51814233 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.864823819 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.511010156 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.855748611 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.51232063 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.499392431 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.497949495 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.501028083 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.488138125 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.498850547 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.510822737 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.492401258 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.84995567 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.493717768 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.492034195 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.491387432 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.506534714 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.506793633 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.490661356 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.49893781 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.498098103 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.853033073 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.497276529 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.498106061 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.491524064 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.499474533 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.508839923 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.505163823 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.491936821 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.802688252 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.504414457 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.492051008 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.499777962 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.508464132 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.500162765 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.804217561 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.503489566 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.498094224 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.496020602 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.50491196 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.854358645 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.507780551 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.500143841 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.507507437 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.499823948 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.500344578 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.49942375 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.514037824 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.501217674 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.504277315 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.503584016 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.494131866 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.499233075 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.506862149 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.492589312 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.523472786 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.50936216 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.502097979 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.51192402 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.49775131 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.856115897 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.504817297 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.507595535 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.869655388 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.505057034 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.511985206 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.51064352 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.509879555 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.578738054 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.85420393 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.458922129 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.516200933 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.495935462 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.86089846 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.51098656 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.50171468 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.502084823 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.509600957 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.510431521 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.501232832 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.494884114 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.502260231 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.51697277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.496430444 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.504454747 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.862859096 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.507920824 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.498118178 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.50391422 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.57917879 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.510812608 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.514922307 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.507036268 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.871237165 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.507074634 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.511688282 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.496607048 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.498249737 seconds)
  done (took 220.257720304 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.496770929 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.498621566 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.498522576 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.518231946 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.497934709 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.504570992 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.496494878 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.500373859 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.50213573 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.496628922 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.498440831 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.50851213 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.504354363 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.49701705 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.498988419 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.499985802 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.495380728 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.503784421 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.499096628 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.498814899 seconds)
  done (took 47.360727163 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.512988717 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.194213285 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.17001671 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.515184944 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.513144152 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.505771569 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.573465605 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.515256979 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.513026824 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.873350024 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.721811467 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.514398922 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.514037542 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.513830131 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.168504093 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.484236958 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.873694803 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.193471473 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.513306294 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.193458116 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.483072534 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.514363375 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.504371639 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.195813129 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.883582176 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.869877799 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.575769773 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.196780902 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.516093563 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.514417951 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.194556701 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.51568551 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.507562275 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.178527649 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.516672974 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.530141252 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.517631754 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.577936301 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.578488541 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.87861945 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.202931598 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.873470727 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.527156709 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.685870824 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.518982654 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.484544539 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.207177193 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.517308528 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.484905953 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.520280988 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.521844149 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.182373577 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.510024025 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.181768139 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.517446894 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.517151841 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.198331443 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.183073676 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.173192869 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.723510486 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.507777964 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.866263235 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.518308712 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.209552899 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.5175129 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.51717716 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.518712132 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.725236403 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.201349067 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.869340389 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.88096056 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.880637104 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.519098523 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.590319951 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.519198548 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.881163672 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.589567029 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.932305478 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.883174214 seconds)
  done (took 139.03544994 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.823963457 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.64099704 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.952285912 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.151387411 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.081116426 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.677677436 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.645377803 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.785463093 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.52300293 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.619861793 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.288115804 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.613958203 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.354675458 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.589290414 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.630568438 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.650079484 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.984235167 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.506387735 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.247349254 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.265397822 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.512646964 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.638414811 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.330234192 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.922362425 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.505912055 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.307445025 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.509874302 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.107277784 seconds)
  done (took 58.21899429 seconds)
done (took 583.084241212 seconds)
SAVING RESULT...
DONE!
