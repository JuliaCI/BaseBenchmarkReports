cset: moving following pidspec: 16259
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.429397273 seconds)
loading group "string"... done (took 0.608722736 seconds)
loading group "linalg"... done (took 7.657380382 seconds)
loading group "parallel"... done (took 0.174403011 seconds)
loading group "find"... done (took 1.198233719 seconds)
loading group "tuple"... done (took 2.100803056 seconds)
loading group "dates"... done (took 1.346392524 seconds)
loading group "micro"... done (took 0.248615803 seconds)
loading group "io"... done (took 0.973611671 seconds)
loading group "scalar"... done (took 41.476055433 seconds)
loading group "sparse"... done (took 13.4896087 seconds)
loading group "broadcast"... done (took 1.04517362 seconds)
loading group "union"... done (took 14.484323055 seconds)
loading group "simd"... done (took 4.798829711 seconds)
loading group "random"... done (took 9.732799953 seconds)
loading group "problem"... done (took 2.008631496 seconds)
loading group "array"... done (took 22.84731245 seconds)
loading group "misc"... done (took 2.056252315 seconds)
loading group "sort"... done (took 3.487396598 seconds)
loading group "collection"... done (took 19.829180936 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.572830656 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144341829 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.15138277 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.132164645 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.208787467 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160011594 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163044378 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101255786 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.974305033 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18314757 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15740719 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.533002499 seconds)
done (took 5.217392987 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217987988 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09549725 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10512451 seconds)
  done (took 0.876549278 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.079027989 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146866955 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094715161 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079141446 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098520494 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079962896 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097449054 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095639832 seconds)
  done (took 1.373572218 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088448605 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099697471 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0837384 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098980084 seconds)
  done (took 1.049625205 seconds)
done (took 4.285173986 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.741564199 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.273844861 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205066776 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466789751 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19796376 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218273898 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674550917 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335763097 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253494335 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102986961 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.148605578 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.398841883 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140028791 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675689691 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091279994 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125099253 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177825324 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436836339 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084105741 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111200862 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117414758 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141686642 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130624564 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090867957 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185855943 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081926948 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.196288048 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108333634 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081272299 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277329094 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202414536 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.678260894 seconds)
  done (took 10.871327096 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112189868 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134885077 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098664064 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13906251 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135887043 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103395206 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084279039 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097956337 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123887224 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178461994 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131723344 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122042533 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095715486 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082536285 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116046689 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24467703 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120986087 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09948467 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101178308 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088702323 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138159089 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113659002 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11043813 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094835674 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167691554 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222606171 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113998535 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129144929 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099786608 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115847523 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145253407 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146203433 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095156232 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081595385 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177950529 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12462954 seconds)
  done (took 5.184111018 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.090671284 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191398372 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121819676 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170755738 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081295223 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143628487 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095523519 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114544811 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261751233 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.117958083 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178526226 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.110431809 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144744506 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117040961 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099963824 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083742401 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099804222 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.613082698 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159516565 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136717606 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115550295 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102071338 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086719713 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368319508 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106208368 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086182204 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101423715 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067713349 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167950861 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10187214 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.183933254 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122510755 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080423891 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13594613 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214166521 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125656759 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116937781 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097652951 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078937762 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.195567209 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087462108 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096755004 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105058086 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135813628 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13483124 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097979793 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080422056 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222204543 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080158436 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114146715 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.933078806 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179505358 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089638472 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096082353 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326526619 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098870788 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097429652 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077848852 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.29559179 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189649531 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098606594 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080213203 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097307086 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081910028 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400335815 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081141245 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.674787274 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084857179 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110045843 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083746087 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099315411 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106208814 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08940671 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118159442 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081648464 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101407893 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081799061 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.100003299 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082988805 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126539492 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111555969 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077941809 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103260957 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09789173 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149064174 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078963213 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115946421 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12726622 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083305183 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095336813 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131000198 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085225093 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097518179 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133963144 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081500961 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108112028 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100073174 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142772333 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081060205 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.14317842 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080655954 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124958443 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100689886 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11371483 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111816953 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09952372 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086454109 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096370744 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077311826 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166416661 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082685746 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099977141 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082416379 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097520639 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112966296 seconds)
  done (took 22.533746319 seconds)
done (took 40.359527462 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.320787643 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103350747 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103473275 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103199956 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10260972 seconds)
  done (took 1.493082488 seconds)
done (took 2.226884087 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.165300939 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115973064 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095560594 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.127936084 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078228005 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.134010943 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.13146506 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094456452 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132615323 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093604285 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.127508216 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07793131 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093623706 seconds)
  done (took 2.225492889 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094627607 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11553297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084304202 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113268647 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078440803 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114536005 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095809667 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121245794 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11187172 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087767266 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095801649 seconds)
  done (took 1.836366724 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094385578 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113953463 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085144353 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111529777 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078827889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112974613 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094593199 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118692481 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111880804 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087530026 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096008789 seconds)
  done (took 1.83095772 seconds)
done (took 6.616337088 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091440799 seconds)
  done (took 0.814634786 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.930600196 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.878987452 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113277831 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151718764 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317096528 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194111712 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.488994367 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128320754 seconds)
  done (took 11.116278384 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.142518259 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083336864 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103616762 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083211221 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100492746 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085656113 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100824261 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09744922 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084031894 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098748593 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086279781 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100736912 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101139178 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083569573 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102790864 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087457108 seconds)
  done (took 2.330789343 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11880242 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117500253 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106505965 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107287097 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086990354 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104587828 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106897848 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089804123 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103317859 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105471303 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092231796 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108027515 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105264943 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081029951 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107472169 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109610511 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088161584 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108593712 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108962516 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092386695 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108806766 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096506077 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088524951 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108530281 seconds)
  done (took 3.286471179 seconds)
done (took 18.277028158 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15969978 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10887689 seconds)
  done (took 0.997709376 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096133749 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112670924 seconds)
  done (took 0.944530888 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097743247 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095569885 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121714118 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108298847 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080653744 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096721363 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118752947 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080396022 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095713073 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096041327 seconds)
  done (took 1.730954424 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083439925 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109225547 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101436082 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097151628 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107664887 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097222237 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090852899 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102132757 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112658786 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079919923 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104560739 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116940396 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088967347 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119054016 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107529348 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101933658 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087552208 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100891819 seconds)
  done (took 2.544167351 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080495947 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097274692 seconds)
  done (took 0.916388414 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082246866 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09337238 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082721343 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099433133 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096005062 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079152652 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096285239 seconds)
  done (took 1.366815073 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.438553668 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135383775 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259461427 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085694102 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122678181 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304019576 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097689604 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084795062 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102815066 seconds)
  done (took 2.428446706 seconds)
done (took 11.662970466 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093720169 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115028239 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112640573 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.459835016 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107928168 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09690375 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159299078 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253681678 seconds)
done (took 2.14347311 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144094291 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.591862586 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.423483041 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.22942822 seconds)
  done (took 1.990326006 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.4015312 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098293785 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082110044 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082077788 seconds)
  done (took 1.413063418 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079720083 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099298976 seconds)
  done (took 0.926240812 seconds)
done (took 5.220189326 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080237572 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096429193 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077635748 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097178342 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.07867535 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095260866 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.110946933 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098029998 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08055376 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.09781759 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097258029 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079804814 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093802186 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077478635 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096393447 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080438144 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093555193 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07802213 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097586959 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079555637 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098136368 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080073444 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096029726 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079972507 seconds)
  done (took 2.924477715 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100123145 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098704849 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103549988 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085559735 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103162017 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087101739 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104876528 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099946418 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087806548 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103438425 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103066046 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087034007 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101795654 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08644425 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101283845 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104472277 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088746002 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101182248 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084127302 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104185425 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104793431 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083290413 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104102178 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105065149 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087029518 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103549692 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084271689 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099903065 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106185198 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086350275 seconds)
  done (took 3.652664346 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084950662 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093648303 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078654821 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102077642 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078504557 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098340353 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078830714 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098052544 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081336529 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098112247 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081507876 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097453246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080403797 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099969449 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098707278 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083456606 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115281808 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081150584 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097759121 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080929571 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101738789 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080503453 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098429589 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079731233 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097773715 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079867294 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097953205 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080167102 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098396267 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079426731 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101274653 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083964177 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097911702 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103996505 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083589274 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09688371 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084162139 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.097337751 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080793883 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096832802 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080048393 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097287268 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079514636 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104087194 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080050383 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100706718 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080554927 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099439017 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080185395 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101409726 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096628505 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081588608 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100107081 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081504866 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101381877 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079900461 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098177008 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080588916 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099121477 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079731713 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097128852 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080086306 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099452715 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080479547 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114457348 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103591608 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081057558 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.097973044 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080722007 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098548184 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.08028454 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110483807 seconds)
  done (took 7.311775266 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083714007 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106195406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080713155 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099107145 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077766822 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098709149 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101911222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081183864 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099735807 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087660244 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098062908 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082404961 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099354497 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110864379 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081557427 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099383688 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087434215 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0962501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08044004 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102419269 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081683097 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10259509 seconds)
  done (took 2.796301181 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20903727 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103019176 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143809077 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110655646 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085818328 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108680703 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10434102 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087456089 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106253879 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085836869 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103127865 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10499385 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085845119 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104131303 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103567013 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085989493 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105471406 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086368697 seconds)
  done (took 2.684997251 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09418402 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.208298314 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102686621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098353922 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099636962 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085766993 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106244563 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110037283 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086051439 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101201448 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091906665 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103430268 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102845107 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082657826 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104066389 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084397422 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103904891 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0840428 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111209468 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10752974 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106403132 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09438827 seconds)
  done (took 3.03202932 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098471809 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101157796 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119657791 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086951668 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097392789 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082435302 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109155092 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084060987 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107589504 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103219252 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083932654 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099773237 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088939979 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101698669 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106991259 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083680955 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102909158 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083798705 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103735842 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080546325 seconds)
  done (took 2.690757718 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103097522 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101779578 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101717461 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094658321 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103102513 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084977309 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112011908 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104045721 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08437859 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127500687 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102857065 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085107295 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11279527 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108394036 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101648099 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094362284 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112081595 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112089055 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084384157 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102577743 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127559895 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084756611 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11193293 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102589537 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085574984 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102431552 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102986597 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091471111 seconds)
  done (took 3.608625655 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081897083 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098471002 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083382661 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097769932 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081996843 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099073073 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081279099 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098905323 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083198061 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098425735 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083377983 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101115087 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083608516 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101171801 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083674781 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101207839 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082603232 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099116977 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081876933 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098767562 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083321698 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101541129 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08359728 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09932779 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080912987 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101651754 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080750023 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099518816 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083742076 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099446495 seconds)
  done (took 3.502103119 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090873146 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10666067 seconds)
  done (took 0.965966557 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080105247 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114254421 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079450303 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104220997 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087927147 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101782997 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107924834 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087424433 seconds)
  done (took 1.533783038 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09701831 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110722346 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083918468 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113627213 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109760284 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098651656 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171137201 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10094158 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107664388 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.07931151 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114174568 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081320584 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107781747 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083315979 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107740143 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090791906 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100559594 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108090278 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088026423 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100146329 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08663349 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114867172 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105082198 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080854854 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104533793 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093985461 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116480757 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104375867 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087139632 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111052566 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089869146 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096760765 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085275732 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10327044 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100260017 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093474978 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121306365 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08703097 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112957998 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104101165 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09603053 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098202788 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107467315 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090365946 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113657015 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084713897 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104546375 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079307169 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100421774 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086618751 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098735546 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103236069 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079093446 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110398821 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087605986 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114692804 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082688629 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105330566 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105131098 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088562535 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110222113 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086152046 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105912651 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084149188 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113901802 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107658687 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09500889 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098469388 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07857559 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101096657 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094800845 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129337885 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110795685 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086804962 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104832467 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100154344 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089092068 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105084671 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091268894 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109611465 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084679004 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112083113 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11172456 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085464154 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106133301 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112144316 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082821182 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105551075 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082558967 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12224762 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102114444 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082421454 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.101015887 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096020646 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.10670548 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084222881 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.101175827 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092851643 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096993594 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104736554 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087029997 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103661061 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096675752 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11009507 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110148352 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094855327 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111265321 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085218714 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107329564 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100639118 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085706273 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102357507 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092520905 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.098024949 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087777395 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105610917 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08578062 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114000033 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101502192 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086071032 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111571704 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090351075 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102685278 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099567497 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087974024 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104169284 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086770137 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110180731 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080762801 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096155218 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096489048 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088486112 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102375772 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087759332 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108943298 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087463534 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097838181 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099499244 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089773001 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11162118 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085430267 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10490589 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108837573 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084388522 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099061152 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089500426 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102878334 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08236074 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107115039 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10204042 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07851287 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104800525 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085977971 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099034259 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086563147 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106168427 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10388413 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083412774 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098828 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088684979 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102834952 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081481656 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101333517 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099397494 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094492357 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104806187 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079326085 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098809393 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089855259 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098534492 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099670141 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081123027 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103903106 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083683172 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099281455 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081934938 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102484256 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113947807 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088445864 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102180871 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089497175 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112637149 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101027001 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08480862 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100876517 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084525338 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102430798 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109756938 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088953467 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10745113 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085255149 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098009921 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088762671 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109506357 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100510553 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081475552 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099936238 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086853434 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106883024 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087042153 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103717322 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100015375 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084357046 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106154535 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085911259 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102261453 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081822205 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107614777 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103016737 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091735615 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104974178 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113389025 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086942606 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096605676 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088002817 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099974781 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088543811 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096726429 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08061424 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100151268 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101686797 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081385605 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104214626 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077517316 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108817649 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090920936 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101823272 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081985278 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101163511 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107821271 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085083769 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105458736 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085776513 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107896138 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11253566 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08227663 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104913268 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095044089 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102238414 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077198902 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106070836 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09960057 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082922227 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099939806 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080739715 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104668185 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092485206 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109510424 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094877707 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085776529 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100764391 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082175409 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097250689 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087785785 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104713889 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102286519 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090691309 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103852319 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087045668 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106097884 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083234048 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102327079 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103888905 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086037247 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101761236 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086123199 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100538956 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085822116 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100780702 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080600648 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103294824 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101911977 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083466009 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107759057 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082698814 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10198686 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085653704 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102827199 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102154278 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084989649 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101152697 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08659965 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102146206 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082858394 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104985881 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079114595 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109738157 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101185299 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090832092 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101793827 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079742832 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108364621 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085514681 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107609556 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102317301 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084141622 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103638775 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083711751 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105552378 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10852904 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081182037 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113980302 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092351186 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10336854 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085963614 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10247553 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103251511 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08256153 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102527015 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084682412 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101857502 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082792783 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107220147 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104236124 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084390035 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10417675 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084927991 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102055461 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085124965 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097004354 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082563918 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102056911 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083573154 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112653761 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10329798 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08404598 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101110217 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084762743 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101774705 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079882927 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111406045 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113142265 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084114461 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11027452 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101285806 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086177909 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113817833 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0773441 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100165155 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080921374 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100282773 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109582917 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085277191 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112364282 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083046234 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101757538 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080799628 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103339149 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081991841 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.1052765 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099182504 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087202096 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101359237 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082876664 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102615148 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086268888 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104377252 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112288822 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083374655 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10335583 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084144187 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099547309 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083226291 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101603462 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086646954 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104179937 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099916227 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081396473 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102348942 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08542342 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103735237 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083896647 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10408274 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091080495 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102841007 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105295276 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08781418 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096884606 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087718789 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101394514 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083338069 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101999378 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105288956 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088095808 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103551608 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092462278 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102219076 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083859184 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102086684 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100253139 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082764962 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102449251 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084332034 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101432251 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084479398 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111116471 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08110976 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105279231 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101464063 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084730587 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109633044 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084771119 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105509189 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110471045 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083679588 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103726388 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091457207 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106133032 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106398928 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085352295 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103630543 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090045408 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101528353 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089666349 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103356658 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10262116 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085802819 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099824246 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083592094 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101560887 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082942982 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109627813 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084410186 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103016024 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101234538 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081781706 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102769224 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088144584 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111101934 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086366179 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105600691 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097994333 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08183404 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104048273 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081487107 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104489948 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087049683 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109914817 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085474398 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103913641 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102072321 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092695398 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109285901 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087969079 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100805601 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088700257 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103682566 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105366722 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085282993 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102712792 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085525742 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106748746 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085242024 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102999184 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109906973 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087555269 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104313635 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085245963 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103718673 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084281996 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098289737 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084361655 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.1051607 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108739203 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086072663 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103472088 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095299883 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101243818 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.0836366 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107218131 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101551269 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089802177 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09829207 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084955302 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103993459 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10431702 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078873555 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101830167 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080958663 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105640005 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.0828529 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098095092 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095382001 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112589533 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106397284 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082799819 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101343239 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079825375 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098389127 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083722936 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104343797 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08576101 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115030264 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101181209 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083916299 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098086446 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084457017 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106092183 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086726306 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099980229 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079137585 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101491773 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106807798 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090035528 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101500447 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083814592 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106480157 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086584577 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100621003 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106825741 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080717267 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107744979 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099340231 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105063833 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103443293 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090813337 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112158085 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085439878 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099249221 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085082541 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106313919 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102898042 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085271471 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104878949 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099916461 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107169133 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101808714 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084034333 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10597711 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083241031 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112964522 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085776328 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104531887 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108164976 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086215715 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112829185 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087069237 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112232027 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106266018 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088331154 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102538551 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08445396 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102613046 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08259459 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104931169 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104349421 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089603547 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113320995 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084073396 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115338558 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114465947 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08656765 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100477081 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083859558 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104070011 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079875884 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107907307 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102707819 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082952888 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101799637 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083668015 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103876046 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092026073 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104594494 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085777507 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103839619 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077750903 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106087915 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105637058 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085011146 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100445676 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084547823 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104521814 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088463914 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10696095 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.082115931 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105974062 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105479089 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085870531 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098840791 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091033096 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102135141 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086753463 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103666376 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085233458 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104844282 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107032698 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091566612 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105363518 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086201492 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.113397011 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106499462 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082149532 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100941194 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090712998 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101651756 seconds)
  done (took 58.490867175 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146779349 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081843207 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098966655 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080225834 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113634922 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100609709 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079831625 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09888055 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081847268 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102620059 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079466369 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099406412 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109956869 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124115566 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09278427 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103832781 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098686525 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08078292 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098870683 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081495521 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108865097 seconds)
  done (took 2.883980525 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104524575 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117932688 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117023385 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120036602 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09026736 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116410981 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114086361 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114865819 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099514009 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11213973 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119151861 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11589077 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092204453 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111136981 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111955983 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092801766 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119089639 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109580808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115707485 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096302064 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113854517 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114908943 seconds)
  done (took 3.239250545 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084261204 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102759823 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085018292 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09799391 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083849006 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.0986033 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088526937 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101997887 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08730665 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102687509 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.101857187 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.083226385 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104568008 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079125812 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10347902 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081701167 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15380439 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107458103 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083219433 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105736227 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098733855 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085862725 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099085603 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08057151 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102093038 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089036789 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104490159 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081297772 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103906323 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082233423 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103181012 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.101491072 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08523529 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103606046 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083551598 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102747671 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084247497 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103575161 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079701593 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102036555 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084031665 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099936078 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084772107 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106025038 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.102439257 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081965654 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.105317455 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084753596 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099085497 seconds)
  done (took 5.484102916 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105893979 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162067184 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086865872 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143364833 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121289945 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113331867 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088015021 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142357465 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102846815 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083297719 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123349754 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121103094 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103608029 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089409058 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111179124 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104129116 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085828676 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10347878 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108934236 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084037667 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108949705 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091023075 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120828298 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118598805 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108518811 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083579646 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10442351 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108913698 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09741276 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110566379 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110263985 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090127249 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121387393 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110100792 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102426554 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087851538 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121824622 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104382481 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08746779 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10152007 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086708873 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109596262 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110884157 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101500656 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105790372 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109845341 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08477731 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101157438 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118707187 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086908368 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113526708 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121959698 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108681432 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085512698 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108429955 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120457169 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084538266 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103140199 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087428398 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117810504 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101438121 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088800129 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120966197 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106182027 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112933866 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100025472 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10939236 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108336422 seconds)
  done (took 8.156622349 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094458471 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11164801 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121191325 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121215335 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091147898 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111498238 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110917563 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091268281 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110993186 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115965061 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111312981 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134071948 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08608116 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115057235 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111939668 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092241178 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111243758 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11179945 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091441946 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110750143 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111199131 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120473431 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091168414 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120411065 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143297651 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105109791 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111465033 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091832121 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121453699 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111725133 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124967095 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091420505 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112014759 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122298072 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124260268 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092486254 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103443308 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110441044 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092368299 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111330983 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105647186 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120342008 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091441669 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105553675 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112173999 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092261995 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120837945 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123916165 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116078815 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117619766 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092241141 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123030145 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111523099 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112543984 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101550519 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147135028 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121046784 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121596045 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112002697 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121271123 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12193807 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109655521 seconds)
  done (took 7.702564712 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10816024 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115463537 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.1180131 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101646063 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083203093 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109042289 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082841963 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103073041 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114685047 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094749671 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117554062 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110358443 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09258207 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117877676 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109811206 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112893707 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089985724 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.1108165 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11550349 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108859278 seconds)
  done (took 2.955036158 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094420103 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12469247 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085798391 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113628438 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108618401 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092574048 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106839283 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108793521 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08683049 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108876566 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09654436 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117840275 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105869587 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092514945 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117556867 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112569851 seconds)
  done (took 2.508876164 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100521084 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117391938 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121244735 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084607988 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105354661 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102198556 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085294588 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10097988 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082783891 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121729701 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087368998 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110155562 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104963598 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082885937 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104079107 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092440652 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105432793 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086839347 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110117084 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123968981 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098290916 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106109141 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10655425 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08826054 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106062036 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090903468 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106887788 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103722746 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08461596 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106969211 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086115578 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114760468 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102556126 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084140911 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103671514 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08343668 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105232492 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.105458928 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089875448 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106277469 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083763388 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105464843 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085247297 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107265737 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.10185525 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.085770671 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10151523 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092195145 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104165242 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086034803 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105875562 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107530133 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086913817 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116828188 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109736754 seconds)
  done (took 6.329503911 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099259003 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109526896 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080733085 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104351139 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088543466 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108319237 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109144853 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087092006 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108505168 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083326746 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107112067 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088022385 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108524302 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109182025 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088315779 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110987139 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081154909 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107803167 seconds)
  done (took 2.621138942 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091419036 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105827944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093031228 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106638969 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084970172 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109317531 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081384571 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105351108 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104557088 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085979502 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105862189 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088353856 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104841815 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087777763 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106184195 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085664345 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108251817 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10442841 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085849304 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101428313 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088193173 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103871031 seconds)
  done (took 2.983035168 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.115235098 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121839246 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092753493 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228897773 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102368881 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13206601 seconds)
  done (took 1.636375163 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110350049 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122550578 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107719749 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107855658 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116546089 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107335197 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088166504 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108462913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119091635 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102052144 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107900498 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118580505 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118300652 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096933915 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115836019 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114817546 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109035827 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088574524 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10760734 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130206296 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088120067 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118857214 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109516165 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088383647 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108659861 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118324726 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118935992 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12319943 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089227287 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119659607 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115500979 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08825499 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118596737 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122547875 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109649205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097927625 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10958102 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130179381 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115284161 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11800127 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090048583 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115048012 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119441872 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093368577 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119798746 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109462422 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114326438 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08873902 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108916982 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13756338 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116423068 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096915324 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115176059 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119349532 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119539194 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136499539 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122832951 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097744347 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117694806 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123314219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118894293 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115610216 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097958623 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123675588 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115679261 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118201958 seconds)
  done (took 8.204487864 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102984042 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126855452 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109925079 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123536836 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09806503 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110389645 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109173273 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088078766 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108399303 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107597877 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153245098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088833412 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118618856 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118535647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108819625 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088593263 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108968872 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11868724 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087907498 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136632191 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108682154 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11842404 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118681221 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098733491 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123510205 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116134411 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107930563 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089060514 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108622246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108596548 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094325611 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108808687 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118456589 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086691464 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119438592 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109103108 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108695095 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093929154 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108759339 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116349516 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118767696 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108733406 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10916885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109666533 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123473997 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088065939 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109537128 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108417193 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089235857 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108482936 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12371653 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102406676 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122658512 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11911081 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109154162 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109501536 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088332108 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109335582 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088690585 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11637729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119544658 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109366479 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136467977 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088075478 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109596786 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120178928 seconds)
  done (took 8.074100698 seconds)
done (took 156.718209398 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214422185 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200824127 seconds)
  done (took 1.260926731 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098260979 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13769028 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09613768 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169245105 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107926029 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119020382 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138995014 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097842755 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107611525 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086655663 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108013725 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088484166 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170994984 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107124512 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086448982 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109367535 seconds)
  done (took 2.682267475 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118009962 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255880094 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125587395 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106652405 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090523248 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110632255 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08465014 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111420593 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09022815 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105779327 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088027184 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107433537 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084795998 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107145425 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111270546 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088311248 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106609328 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089347667 seconds)
  done (took 2.836304772 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113573878 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146602218 seconds)
  done (took 1.120172546 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242235734 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.16251181 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.229736345 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.473277066 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.275025783 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.355430772 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.199271906 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210582467 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.168753617 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209317359 seconds)
  done (took 3.379155442 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119651336 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180585458 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318751773 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156288283 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107822039 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130849733 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159024008 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13203338 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123465188 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10270879 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123506434 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118831587 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13944201 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095513144 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11616301 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118744245 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1212581 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114281978 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115175786 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095264565 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138363982 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106305683 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095711829 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115042641 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.119363141 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.0984182 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106939649 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085608475 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116605903 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115628882 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09379633 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125845932 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11961951 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155823447 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124460459 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156877826 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118977917 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091002765 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116126803 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091266661 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118754648 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119447704 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.12587961 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097164332 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105746749 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097842038 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106545128 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085118806 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115181645 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119950586 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.0934379 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113648164 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156017222 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120508533 seconds)
  done (took 7.41490184 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.788375116 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156668622 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09048091 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.878583389 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137498837 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103389503 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.771083455 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112291759 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258963451 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.752277346 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133666817 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120148691 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206933872 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256795193 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.924960274 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288658964 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.662605216 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125805681 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15147835 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152669522 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119118897 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137376324 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108758233 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429958651 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116553615 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111873194 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096830279 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119870355 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161757604 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126159867 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114696845 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17766291 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247422843 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204857462 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115684384 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089872246 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111332957 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169006558 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263016386 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195071342 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179377134 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108513822 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111353965 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100374386 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132762501 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108765744 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162573552 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175616913 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169315638 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114812372 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118720428 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098106689 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121598452 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164813484 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121683254 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310031026 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321331053 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089918048 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121606325 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12624816 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259654164 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103234808 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225351326 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140072947 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212331642 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090685301 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777501032 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169902231 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111155947 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095766113 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120313083 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115961394 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099028029 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168430552 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406269139 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124277566 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114630538 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0904875 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229269854 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125772961 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091191765 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162611905 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117162814 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12191586 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103667265 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122418945 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169697485 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249571345 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101347053 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120735867 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115835826 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104275519 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116470309 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210585728 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220216262 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.183897517 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212402644 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100733613 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.1858823 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169051365 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119130045 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172847461 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120266422 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101986793 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122037323 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217440886 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145115874 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124436422 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094011926 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118980228 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149526292 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.129012798 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097339729 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192216125 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459320439 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168014002 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109225794 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128450607 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098286455 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184543639 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097106308 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261813622 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122642727 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171567511 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120859141 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086932082 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121685204 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163172112 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121668019 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121163225 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100454096 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119719092 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235782609 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218702612 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121780639 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221882132 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184027461 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119008695 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171783111 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121598752 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168430876 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120659461 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121087493 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096362923 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771232212 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12473395 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098542591 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116725206 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187045515 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11173104 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102142408 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124639587 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109575822 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766759932 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127808997 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121765957 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103476985 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118178584 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125240118 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097252653 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117010003 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162130525 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231464137 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119921384 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120245403 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102646337 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182695634 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09593627 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12502206 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125550541 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103781473 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122068151 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115651869 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125126529 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169886045 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164106972 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219658189 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.598128485 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091707327 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125463828 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229639706 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091808479 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289784378 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119708793 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224203079 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163046307 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121544178 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.296932783 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186378003 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18706838 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105877176 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195809047 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087667863 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11893075 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165103132 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112197009 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096482113 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185133077 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102802523 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123380941 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.966714514 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090733342 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249011372 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.0877719 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.195024685 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094848022 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120188953 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288380695 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090745657 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128537851 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164968379 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114936568 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12480582 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.847624887 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126444687 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122613775 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09638838 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221322234 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165939974 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120818128 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120580786 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120018645 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163089813 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213412125 seconds)
  done (took 44.104990337 seconds)
done (took 63.650605141 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280407882 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21736666 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270530764 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170929085 seconds)
  done (took 1.901359227 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173349384 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150971402 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123752793 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108394286 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151725724 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085206457 seconds)
  done (took 1.67741711 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364261397 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277913762 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243843065 seconds)
  done (took 1.774275454 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320682777 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253108486 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474247638 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326027556 seconds)
  done (took 2.357658496 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212486289 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133992417 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112017563 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103947392 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198608003 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.24832303 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142789327 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203436566 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09946033 seconds)
  done (took 2.389409665 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197635174 seconds)
done (took 11.185340027 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.169132208 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.251830817 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.237099748 seconds)
    (4/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.169975201 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.231933891 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.214803348 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.157627982 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.23143042 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.147973212 seconds)
    (10/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.121544254 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091741141 seconds)
    (12/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.184868276 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096960766 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123007931 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.214628532 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.20645029 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.200647428 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120958337 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.173064472 seconds)
    (20/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159619285 seconds)
    (21/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11970522 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.163632194 seconds)
    (23/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.129106433 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099636325 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.12458016 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.138777008 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096903362 seconds)
    (28/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.183997968 seconds)
    (29/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.194314234 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086189545 seconds)
    (31/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121388134 seconds)
    (32/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.1577227 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.21334386 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.149363091 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.221171831 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.18360085 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116616707 seconds)
    (38/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.178102807 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.141986714 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119107792 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091977431 seconds)
    (42/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089823239 seconds)
    (43/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147906308 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.182316819 seconds)
    (45/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197033199 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.126490513 seconds)
    (47/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.126010802 seconds)
    (48/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.212633453 seconds)
    (49/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.203046008 seconds)
    (50/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127674749 seconds)
    (51/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092194795 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121128857 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118858121 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067340412 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.19202669 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151121818 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117492038 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094179504 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11033889 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.201050094 seconds)
    (61/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133754768 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120453392 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.072414281 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.136362277 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.22516284 seconds)
    (66/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091643069 seconds)
    (67/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.090282451 seconds)
    (68/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065888553 seconds)
    (69/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122504541 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088806383 seconds)
    (71/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113330674 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067740997 seconds)
    (73/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.137235327 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.100081914 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.202982686 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.18501185 seconds)
    (77/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087917876 seconds)
    (78/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.198400719 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.140292854 seconds)
    (80/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125246464 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.115353491 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111194792 seconds)
    (83/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.21149441 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.202523508 seconds)
    (85/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067083366 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.19119222 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087704543 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.176736191 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.111079377 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085818405 seconds)
    (91/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.197615049 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109186771 seconds)
    (93/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069098888 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138675395 seconds)
    (95/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086126349 seconds)
    (96/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.14053925 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066516685 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109944638 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.111881799 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117373579 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113935447 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098050638 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109190239 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113945998 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121349966 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.219955144 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.137907695 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088348717 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120614171 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094454387 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187194778 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117491968 seconds)
    (113/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067235568 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.198019909 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086903026 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.145596199 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068857315 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.19460384 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.140655892 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.157746617 seconds)
    (121/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.106116141 seconds)
    (122/309) benchmarking ("sort", Int8, false)...
    done (took 0.190060285 seconds)
    (123/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089175866 seconds)
    (124/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.176171757 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.192146661 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119658947 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.369309716 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118227637 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076189432 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111394965 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067035794 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11480553 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095367939 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113337748 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090291165 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.119340929 seconds)
    (137/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067361758 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.191623463 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109587098 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094237697 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092432185 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068615229 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118862366 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149119954 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090874539 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.141313946 seconds)
    (147/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090946833 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.108941311 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112118894 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094105331 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125138643 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118207374 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.160230017 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110092438 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.139340417 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06802347 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135430541 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.072468981 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.172129297 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.186518619 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068214818 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.205005387 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103539562 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.135951082 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119215402 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116937321 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.091376756 seconds)
    (168/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096921002 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.091564641 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068253195 seconds)
    (171/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219211501 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144021917 seconds)
    (173/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142397037 seconds)
    (174/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067016418 seconds)
    (175/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.077639503 seconds)
    (176/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.15139934 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.160761512 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.102042628 seconds)
    (179/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097736609 seconds)
    (180/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.206751189 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091718062 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084778291 seconds)
    (183/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087503765 seconds)
    (184/309) benchmarking ("sort", Float64, false)...
    done (took 0.17113225 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.092238725 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085737016 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116985645 seconds)
    (188/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.150062943 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110063929 seconds)
    (190/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.125452347 seconds)
    (191/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099967611 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096684719 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141225114 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067523462 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.200173322 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.092630593 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089252232 seconds)
    (198/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076745212 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108936881 seconds)
    (200/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.076143371 seconds)
    (201/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.089783591 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114612743 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.182990959 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109735211 seconds)
    (205/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094699661 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.140107115 seconds)
    (207/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092993888 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110218334 seconds)
    (209/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066927033 seconds)
    (210/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.191335644 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117868901 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096635558 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11865831 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067187164 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131156154 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06690461 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116480418 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110908651 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.137303481 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067242057 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115578729 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134815758 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126337577 seconds)
    (224/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136283026 seconds)
    (225/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09553576 seconds)
    (226/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.157653809 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088523431 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091752554 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067262737 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109995892 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067746771 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.226223538 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112010882 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108354125 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.182384527 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.134395093 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114132541 seconds)
    (238/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118831431 seconds)
    (239/309) benchmarking ("sort", Float32, false)...
    done (took 0.175827314 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166757964 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153795661 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173373606 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092321468 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.093006369 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217896178 seconds)
    (246/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089531651 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091480316 seconds)
    (248/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067873633 seconds)
    (249/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088782602 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.192360626 seconds)
    (251/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102372732 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067169535 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120844969 seconds)
    (254/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068773123 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086662198 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114328136 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.217782075 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068261749 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117120237 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088877777 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093301127 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086392758 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118488633 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088685315 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.0926822 seconds)
    (266/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.099344288 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111031887 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066892666 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119466616 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217534596 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096815404 seconds)
    (272/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07934199 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.119580033 seconds)
    (274/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125102462 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110927873 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118119928 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128506658 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.142806971 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111184626 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095258867 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110478506 seconds)
    (282/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087888575 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.091658764 seconds)
    (284/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088149925 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067547632 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118828468 seconds)
    (287/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092007034 seconds)
    (288/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.091651626 seconds)
    (289/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.1058318 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110132864 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086126133 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.09248868 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086658819 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119510023 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113121709 seconds)
    (296/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123854932 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117149465 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087621907 seconds)
    (299/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.092217182 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09268651 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111527932 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.0868685 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.09280958 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093162591 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136253272 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068640934 seconds)
    (307/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068043501 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.111421207 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069333468 seconds)
  done (took 39.885372848 seconds)
done (took 40.780498792 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099951008 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136915024 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09710079 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136268898 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124268054 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092584099 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120126599 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098764559 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12414824 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126733539 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098961216 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093963121 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096656937 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.1217453 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097188314 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13659062 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125181537 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094887048 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120549988 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086633243 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120276334 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087088305 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113279053 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07030911 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123263322 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095495499 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118512636 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121420701 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086707565 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111713016 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09118404 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.1185346 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087074536 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124891062 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094174959 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119292266 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097049046 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120901567 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113557375 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086985176 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119813464 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087270532 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118758826 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095729672 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118123822 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092677734 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119946195 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100220875 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136609466 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113921479 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095867064 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121648563 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097314718 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118398676 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09109023 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120328315 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116446368 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112891683 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120527007 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090427948 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.122105373 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095260957 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.119258708 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.122277697 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.096099859 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122057597 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098974881 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117774444 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.0973363 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116543417 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08721569 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120018625 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.115170079 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.08742423 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.121213806 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098185997 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110947487 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093560385 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11998666 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092531321 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11070334 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089908123 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113269445 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093620011 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112973034 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070581056 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115104062 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094256583 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111081861 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096351341 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117869158 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0940608 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114153247 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123426563 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087095803 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.117309484 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087886248 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112825693 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089824434 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115750612 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088351683 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114575572 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098290332 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113401679 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09382182 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124848072 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087475403 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.1196082 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087267343 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111813189 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126858791 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097725703 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111905915 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090392922 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.111750532 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09491532 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111242865 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087701115 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111587735 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088195976 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118794059 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087497081 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114205073 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094614705 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126258216 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088013382 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115105552 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115194832 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.088005232 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.118205777 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088012038 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.112288041 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089857403 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.102402717 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089827417 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.112118397 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095257159 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11438809 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096535314 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114227652 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097200397 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116670415 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094082562 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117360747 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086511146 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099756084 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090393465 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114347161 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09036374 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111502819 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089891455 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111987924 seconds)
done (took 17.064692153 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087435382 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186864618 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153936182 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143535547 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108524819 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113265807 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123769755 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121308664 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113938835 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144778694 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111426856 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133247336 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149239079 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087698366 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112960582 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091727173 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113381636 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.105042285 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147585137 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134175126 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166206764 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087228809 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148792421 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136647746 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122390619 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115373603 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112902091 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092055032 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116635011 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103708686 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133405912 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115722484 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088266942 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136238302 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105848606 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121625833 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11264072 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095221693 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112068994 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087501333 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142205045 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133796656 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094564295 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118457778 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092436464 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11521506 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089680025 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121759389 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123150078 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091909764 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127779336 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159184244 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092234275 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123043817 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111989981 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099186474 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123790904 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091116477 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113065843 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090878904 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112644296 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09141971 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127509087 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144185314 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116731728 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.098062338 seconds)
  done (took 8.684706029 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105326396 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140555164 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131663184 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107273206 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112853439 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089495655 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113395157 seconds)
  done (took 1.761262789 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089298778 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135604886 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128891538 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137376559 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133324299 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109795817 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124113358 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0887026 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131928912 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090206947 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13470776 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153454215 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091589429 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121253173 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13908835 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088965729 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.1378945 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088600613 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118347567 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.13768209 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091907593 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136218903 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091483466 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114487233 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102904793 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114211585 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163071444 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094936243 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116635598 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092527266 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113418056 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167955744 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106137658 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126720612 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114608449 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104181485 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129407039 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087595798 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131222973 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094453268 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128712994 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11548799 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09147829 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.113798463 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094241946 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125740805 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091129788 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116428221 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092276628 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134991718 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090491979 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1297818 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115229523 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.09327068 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115930768 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095728228 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125022792 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090478868 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134277376 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091776547 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13272748 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133653732 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104203692 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132452729 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092359232 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.1288654 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.129614986 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092588235 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11703539 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093577957 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13162322 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087714163 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11663855 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100507612 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116004172 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138265095 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113036002 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116910438 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099824113 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114805067 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089487717 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115591458 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138546642 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093943382 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114523796 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09350281 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118443105 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087477517 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113893484 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093062253 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11357437 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091517025 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118887105 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090177898 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117599111 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131710604 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090561615 seconds)
  done (took 11.926920733 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090880332 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116359007 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092633399 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.1162945 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090890077 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116353129 seconds)
  done (took 1.595564163 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115401458 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118709301 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105155251 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122350361 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158016085 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130272242 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105714382 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125025911 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108738139 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128946374 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131426859 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106178664 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137943643 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123484009 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105056677 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121175902 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130987581 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100246195 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128960342 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097771046 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137952193 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122417673 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097613132 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133150447 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11996217 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096093272 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127068599 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103461917 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130234269 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125224827 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096918598 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118860055 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122132785 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099468659 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131252585 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.121717792 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096726752 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120706652 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101388042 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120863478 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.132263502 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097842827 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128535708 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095124088 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124970258 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122561568 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094121704 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126861057 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130999697 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095445749 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121881188 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095952109 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120059041 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120376405 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097287204 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125095903 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095447348 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131708149 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122470395 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097836806 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119450685 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094599317 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124208542 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119942883 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105536906 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12041194 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122718105 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096544572 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123196214 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096817305 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120661973 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119796922 seconds)
  done (took 9.335854098 seconds)
done (took 34.253197751 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691414504 seconds)
  done (took 1.656992407 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.712608379 seconds)
  done (took 1.679873348 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.166114311 seconds)
  done (took 18.134136268 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504606171 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.584295499 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.890343471 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181238712 seconds)
  done (took 3.130872044 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941475588 seconds)
  done (took 1.928564375 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.246742773 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232850229 seconds)
  done (took 1.458476084 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774377697 seconds)
  done (took 1.759233689 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.352531815 seconds)
  done (took 2.328573025 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334334375 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186347976 seconds)
  done (took 1.506120066 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557849967 seconds)
  done (took 1.544658623 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.116562401 seconds)
  done (took 8.106945768 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26844445 seconds)
  done (took 1.267229812 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301135413 seconds)
  done (took 1.290097121 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.528926489 seconds)
  done (took 4.516039594 seconds)
done (took 51.279707465 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098693941 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127598316 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102735957 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125525286 seconds)
  done (took 1.435498454 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100887009 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121924048 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101760381 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121281831 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127326805 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096904022 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124375601 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102524961 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120649611 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097669347 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122761418 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121088009 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098329177 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123876126 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093208846 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125839453 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100767923 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121874587 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124246413 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096923242 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119579674 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098494301 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125605494 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094352452 seconds)
  done (took 3.672225175 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100427724 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119626418 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096597723 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11833942 seconds)
  done (took 1.43114751 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099668146 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142476492 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139239376 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100595651 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144662945 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137743502 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092696752 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117870612 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09466492 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125982763 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091898379 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150492394 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138743157 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100151636 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128320396 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089174242 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117402869 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138192782 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100906506 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12652082 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096862117 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12618861 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090422377 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140564144 seconds)
  done (took 3.82119765 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170755642 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127684519 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139567869 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095485728 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161022648 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142467977 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08882067 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142800084 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088667556 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132115936 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119622206 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133777466 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130129665 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088866166 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115121916 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08803107 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131314002 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130705953 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092035091 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128417852 seconds)
  done (took 3.444184765 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09883265 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118318348 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088444781 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117038901 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100154522 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122051756 seconds)
  done (took 1.644186624 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091676136 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115546896 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090893437 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115061989 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095366048 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114915294 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089294048 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11583178 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090395998 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115763799 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089975876 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114355782 seconds)
  done (took 2.238118677 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.464556064 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094070105 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122137654 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112714336 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097786112 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115618287 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104121603 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119964827 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142149031 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089940121 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11612246 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092616993 seconds)
  done (took 2.67193215 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240618935 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126109278 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297127717 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277377162 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159538691 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172498812 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282097914 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163200063 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.228020907 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161108843 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21200657 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225137876 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153114755 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198113488 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139181968 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.12006581 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230670716 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249002081 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156373579 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210975452 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230749764 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167411884 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180706839 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152623435 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112409861 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170070027 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122004904 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13098881 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213424136 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208064361 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193070648 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164247712 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147619673 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244940722 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250455054 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19987243 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287199735 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134874162 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172139248 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169263641 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269198545 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113731936 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239500275 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161509945 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131125896 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19575182 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16939862 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177514519 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151340039 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139806378 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225892951 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217087946 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.220128438 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111965041 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235416887 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161037694 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1694224 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193710237 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253657561 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22612032 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18289353 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093690088 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213355689 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191904912 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183580575 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.193833069 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183112679 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147869205 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195830581 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188994922 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193464423 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190381562 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183525306 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138202673 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172278115 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175450877 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198702805 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235267838 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20663013 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096653717 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170200022 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151056188 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132747483 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19461219 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099650179 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244272644 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149892653 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137959295 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243229574 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162517614 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163579564 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200775817 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223270282 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148885545 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084547848 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157788722 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155742419 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192100405 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140558347 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162348988 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162509258 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131404294 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179351405 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097847515 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205609688 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092423668 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179584169 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213787969 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100659789 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162129203 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154782137 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150791447 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18001598 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200431959 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142119514 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134844869 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211571399 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204875259 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150474976 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181998077 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20440219 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145233041 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150913426 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201575824 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248114014 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141621186 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207607586 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156245934 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136416082 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.108246829 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209568751 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157902871 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.136146073 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135177369 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.210323477 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213884765 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126247611 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111834783 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218108892 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107532437 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133086982 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163196373 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150000366 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140314056 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148316689 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.126291962 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210066591 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181864313 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154724006 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168701927 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151823307 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252985742 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141908753 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124757572 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150001565 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.1213616 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197100413 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22620312 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104988483 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233643296 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175333673 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203295631 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199445556 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108727622 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178069936 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1312311 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093784574 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222220359 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17120214 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164654093 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198329446 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226698123 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184291511 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.209528253 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173034738 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177716148 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165714272 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160158573 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112215329 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162430697 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167040859 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122969033 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144041574 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135473518 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124821081 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143406047 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134687134 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201818733 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201248639 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190669116 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159956148 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151566053 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182882809 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129182102 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181207603 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17993038 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148955459 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199757584 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221201353 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192781672 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14354329 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202279643 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121532054 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099456341 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143829476 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172620697 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135172505 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13585117 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167422925 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183100962 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186695978 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20585109 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211199071 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176002209 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218952071 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096143141 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169897661 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189005264 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177607948 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187418902 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13994484 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153971291 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178853382 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158311747 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258027798 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169282019 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179860019 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236799754 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123626367 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132461618 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152962119 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187526869 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156946791 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177840531 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14982739 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140554925 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163719197 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133769797 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162375019 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187941396 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16402496 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218387265 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124053291 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216143979 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101735289 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194847852 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133100568 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166499257 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10940715 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178831467 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232055538 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149145774 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171323019 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194305819 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1317146 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308033834 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213226188 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225677344 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111296555 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158387384 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161229275 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165743444 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202033611 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17815426 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160471839 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193775093 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159541471 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110080788 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142357268 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152682875 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154436059 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107646841 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150048002 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.204337952 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113461882 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22151306 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162730355 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159674474 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174853926 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150891157 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117522143 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15299954 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246894396 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178528904 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244405334 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.124007809 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20632146 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20788722 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126861055 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105753412 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135585195 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180653759 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137016782 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192550367 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190002657 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231036638 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181530411 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21782128 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113524029 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12155178 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157840977 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176030098 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235245091 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124652628 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158202389 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238452703 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143325188 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105294342 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173900493 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226972618 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121099234 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226558029 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080051074 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.300571035 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10079116 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134412307 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165016133 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211118349 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138390219 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184116487 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174585428 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170501839 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165578213 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150775606 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193304408 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244158248 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202595506 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216022308 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105334988 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159522826 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17735967 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225765814 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158588502 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113027386 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233935575 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197237519 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.227782151 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115100379 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172633659 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169969817 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158416587 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215205688 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108380982 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236630915 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134894214 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195705749 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154884089 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145115305 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177903732 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215898373 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115183744 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216810724 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177156315 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135752281 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106392248 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167348011 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207525776 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155230613 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100812915 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182728872 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127568085 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192671196 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264446217 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134017357 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156167566 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148435454 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109037952 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157974748 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160407273 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141108816 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163788172 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209297303 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136503467 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19300276 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23213318 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173472722 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176723856 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145940911 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694196348 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132930302 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198091043 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156508828 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234875291 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125018958 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202402086 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130948128 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169520431 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226810117 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161996918 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232362438 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194212266 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.206881748 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106574701 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159478729 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162664642 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145948038 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155649661 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169545599 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162910545 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154087788 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180004519 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170643926 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134959846 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141344134 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201453981 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156855809 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188050814 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180344817 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140154242 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174776563 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214126278 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107706608 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.20884282 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211535075 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143288821 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151457346 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134574559 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157637334 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236688269 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124988851 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201051571 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206023752 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160419355 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16895986 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.1485595 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193519045 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160577641 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18019346 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147591022 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159770586 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157837777 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138871523 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102912444 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157388952 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167196584 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151568196 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161149359 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165986952 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194852418 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123498481 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11782412 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226183039 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190863686 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245870598 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139261738 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109773258 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165153455 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15163402 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.182314835 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180092088 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137504268 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137180905 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137427073 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13287656 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139090819 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155370185 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196988344 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166562332 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207070863 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137350607 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278728146 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140545526 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128473986 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115508278 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132995474 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12271958 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147388936 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156641096 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219274053 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26195875 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121253344 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132796218 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150283789 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098996711 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137217059 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164948533 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167776897 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178238705 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145522685 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107851274 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158086009 seconds)
  done (took 83.435687002 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16292603 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131891506 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147320933 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202959839 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176837411 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270267115 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209914338 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253200181 seconds)
  done (took 2.640626284 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093706088 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14632273 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157431767 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13305487 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092135406 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120704365 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34499333 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132048164 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116765855 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121720632 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173858215 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093742631 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.521173189 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117827651 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119852582 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083372047 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116860332 seconds)
  done (took 3.765502313 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.478102865 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715614015 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.503703793 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097558229 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.188851845 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112858662 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.723609019 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196432693 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115006227 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.482129839 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.776620094 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159121199 seconds)
  done (took 18.640049318 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099902216 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122306243 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109311727 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136281834 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096610876 seconds)
  done (took 1.661057025 seconds)
done (took 131.482893146 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104326206 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404538177 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072398964 seconds)
  done (took 1.602589682 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109472346 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137929325 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109712059 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136721226 seconds)
  done (took 1.594519849 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098597153 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12830464 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109402986 seconds)
  done (took 1.430515315 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32425836 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192862723 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.163060535 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107026492 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129911803 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103663583 seconds)
  done (took 1.439077165 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098424055 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129307416 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098850101 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130868134 seconds)
  done (took 1.557847474 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09501442 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071947436 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104764287 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075254924 seconds)
  done (took 1.440136477 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114307772 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133577276 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105369947 seconds)
  done (took 1.452446351 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130943166 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139259419 seconds)
  done (took 1.368743848 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106853557 seconds)
  done (took 1.201946181 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118987409 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170815416 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190154514 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165387372 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.229507159 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167367735 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.143760542 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115461961 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132280453 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14606661 seconds)
  done (took 2.680218016 seconds)
done (took 17.649078936 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103544305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519982164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.415228771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117534088 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724158796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381109051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.071504706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146920414 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167203087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094736287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140537008 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.700765788 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.998572065 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.47076671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986800591 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372192123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705897562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093829276 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121215006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095995495 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.055172978 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093477653 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122717241 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093235705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702643928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426996577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09566468 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371486322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093015812 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127714728 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.412244182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09535959 seconds)
  done (took 17.208398342 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096523236 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17533901 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099600624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138745052 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125208614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095225317 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125049474 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094710183 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18074773 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124419661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140223379 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093532239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127086972 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095874154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142535991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093842529 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126025802 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121963807 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09372346 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122675225 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113176601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12209959 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094507418 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122386822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094493089 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136629448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12383513 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093241096 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121970543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09949001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129215288 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095676348 seconds)
  done (took 4.867839034 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142758909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184114437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129414688 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128574557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170187331 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125088592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201124991 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148008804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155303354 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123591465 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140589793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093507157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157619413 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124322462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115265178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122797088 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098088226 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122863403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093628998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124383629 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141071407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093500112 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123363127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09427972 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123846561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137270448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096177289 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121430589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093817954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127913629 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100839809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12439021 seconds)
  done (took 5.189533365 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097083774 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129472372 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110147295 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139602433 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096600055 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126921362 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098542838 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125910942 seconds)
  done (took 2.034499823 seconds)
done (took 30.397420222 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.103896335 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124125115 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100738151 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135171366 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098775107 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132549409 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092448693 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.130608859 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.10046928 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127142263 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13058993 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092877472 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125202142 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092928486 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129209388 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09370909 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133957816 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097451193 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13410067 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132845719 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095398593 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129874565 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100551867 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13275357 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104265466 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133501054 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134497017 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099595388 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12332364 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096421686 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12469233 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104073614 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122962229 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104881435 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122638313 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.0930804 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122069915 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09271584 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134604985 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130426406 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.097123571 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129596625 seconds)
  done (took 5.939476009 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107965427 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141175492 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106649904 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082142338 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11864086 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081201854 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139019798 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080336647 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111510887 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10915765 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074819513 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107665736 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080056937 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102563882 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077264854 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076065954 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109974394 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076720104 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077019001 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107711327 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080340898 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073356721 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108994684 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079472678 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104874731 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081803324 seconds)
  done (took 3.607735061 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101486758 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136868567 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114727102 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185061767 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162063681 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10102023 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132970521 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141897843 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109883073 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121503028 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097129194 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151146767 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112153929 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129887808 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092626941 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138104714 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136686711 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094921343 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129290473 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113545088 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13977096 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10326478 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143432449 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133374359 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091904637 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123982898 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096750636 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136660736 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098250891 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132143486 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126916599 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097292219 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123286377 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104555505 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126789524 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093810289 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143010454 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133204078 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101235323 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122680577 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096897816 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123763409 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114112324 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169005473 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121322692 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.104142125 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.130591322 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103587627 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122677833 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111227933 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13261106 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092739592 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127055735 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12152315 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.092892981 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136731072 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096056898 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124250222 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103279066 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125954097 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105444601 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126647813 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110169963 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122450616 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129684107 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092428301 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123185665 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092439876 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144984003 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095572225 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165317441 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124562048 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095805748 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132045295 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101505865 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129589991 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093667426 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139257215 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131998117 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.0976242 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132637688 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097473522 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1255783 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11245009 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124985509 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095007273 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124201821 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100090973 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125503592 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094079367 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137434098 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122297639 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096858847 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140571498 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093076133 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124713893 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100665835 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127581652 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121610573 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107006573 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12849386 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094549716 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133785964 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093657551 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.134544768 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133623503 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098079788 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121996207 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.098962905 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129623434 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094304408 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124497413 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096280366 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124786854 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103166378 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130035616 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127997641 seconds)
  done (took 14.976823557 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228906714 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219553481 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.126373226 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.211181832 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.106370495 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.135181792 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214171773 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156452267 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094394246 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.124507966 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.095246076 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.162626799 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.157979471 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.168063394 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105273316 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122550402 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112693935 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166582844 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215731616 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.20752858 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145046159 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131793273 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.09558109 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124526882 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.095756311 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133185589 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110557055 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13433461 seconds)
  done (took 5.225116642 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109240968 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158126623 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100082573 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145893422 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149883282 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093717233 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12811454 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095396799 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136556933 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136467466 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093603981 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130824623 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101720466 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132929547 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124580338 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103875664 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133296144 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095585724 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127710052 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097960794 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130163625 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132776203 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097671192 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122769477 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103280092 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122072895 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087615017 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143153861 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123977266 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116598367 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121951641 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100208197 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133690561 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095131298 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123962383 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095823808 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125133273 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096250131 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124246253 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122488913 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.092595201 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078029728 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123499553 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137366501 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100699463 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110411435 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.100422654 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12950183 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094973715 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121323039 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096709329 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126307805 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09788231 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132217508 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.0984399 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125369306 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.098140296 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117067724 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100527243 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126867097 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085348565 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122528401 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100322599 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118847807 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101981684 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129647591 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093345648 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126159609 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129590842 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101139333 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.126031211 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097384466 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121789026 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.097608497 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127877091 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099046341 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127407962 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.0946105 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124702621 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094876137 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107076421 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094349806 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.104628671 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098046449 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.1227554 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.093157746 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126093641 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.101680006 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138975865 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.125000147 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.104175765 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124668618 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094589653 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.128009714 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08447475 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126974344 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110058502 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143292703 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094722315 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122887561 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137749831 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097824375 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124089698 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077530946 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131688758 seconds)
  done (took 13.094886516 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.117358751 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151059341 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097012823 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139465825 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.151479436 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.117786058 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131694063 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.101373415 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125733081 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111914402 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124261491 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102833594 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12733098 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133130945 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.117250984 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132530711 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096862361 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.133943227 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.103216989 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.160256507 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138898768 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109360782 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.135606107 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095359797 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129466813 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.107797991 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.152515733 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134403102 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.104087088 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139491048 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104999333 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.150727036 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.110787923 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128710664 seconds)
  done (took 5.35927938 seconds)
done (took 49.313644027 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.237957006 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.437047223 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.208583201 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.146232941 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.245877376 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.228641336 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.238952141 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.208150057 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.870116129 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.210575803 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.460049646 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.89522751 seconds)
done (took 60.526869127 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.26035686 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.339550821 seconds)
    (2/2) benchmarking "String"...
    done (took 1.477727943 seconds)
  done (took 3.961169174 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.581412895 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.158425271 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.469054232 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.206405703 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.210884839 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.496360585 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.865017834 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.584609978 seconds)
  done (took 28.123614186 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.21510826 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.598952542 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.924633391 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.928521395 seconds)
  done (took 18.803085449 seconds)
done (took 60.865332707 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.198339913 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.287774081 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.223065535 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.187276153 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.322763187 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235131339 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.56272954 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.250092368 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.236184891 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.194199566 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.227065007 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.216531492 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.21379862 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.623776278 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.218024268 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207551242 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.266181025 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.704766822 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.614610619 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.219366351 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.22454592 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.224397677 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.215333501 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.211385793 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.214795689 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.208756848 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.210199628 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.219154374 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.763307532 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.206866374 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.224090049 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.753633604 seconds)
  done (took 191.021788663 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.207808883 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.143308387 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.262421299 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.255158139 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.585015036 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.409453666 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342633196 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.693729206 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.229699068 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.215615039 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.422106189 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.212870451 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.489365984 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.184006034 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.217326093 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.312170024 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.499860051 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.493649455 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229448138 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.484883936 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.219501123 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.539479228 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.458682147 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.382401646 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.243343916 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.226592576 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.218240488 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.247642127 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.399663574 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.436661693 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.218077227 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.234258731 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836023413 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.07295008 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.232141757 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.226839281 seconds)
  done (took 150.22169105 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.491043896 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.209982218 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.209182327 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209812006 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.243781633 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.210691421 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.780908211 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783316345 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.724859374 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.7050799 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.565510113 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.211113219 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491489097 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.211276839 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305382666 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.224051212 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211759338 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.226030173 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255396764 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209140204 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211239961 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795533167 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.226756776 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.205835665 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.388667259 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.227441593 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245393254 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603162316 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211713208 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24441799 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.543865948 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.260824422 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212040152 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.587685286 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.94145402 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326600174 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214520947 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244525544 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.212201197 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.493497332 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212275157 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.211297854 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.216871235 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.879553602 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213435519 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791860731 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215639563 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.175816921 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.212600714 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212825357 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.64410386 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.880354121 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.227966476 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.213311759 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.214817798 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214548794 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214185939 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.245981316 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.664431514 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.312871847 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.230062182 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.217349535 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246402896 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213322176 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.349794017 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214662479 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.888676437 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.272233073 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.327887026 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800072821 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217466037 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312529687 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336232913 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214815675 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.213588948 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213706831 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.213046672 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.326326171 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.213577481 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.215235652 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.644713944 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.214181191 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.392628513 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.231895252 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.588035813 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.312658139 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215271344 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631409837 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.21931675 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214023679 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.989078101 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312653853 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215087135 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.2154552 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214611269 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.646334185 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795689752 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.507281771 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.219408245 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.856876031 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.219785143 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.662732235 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.775306464 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.868803204 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.217940779 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328920859 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.394196218 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.233345613 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.216878141 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.59068808 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217045402 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275070566 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.217101717 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.215471978 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.616429412 seconds)
  done (took 368.630986451 seconds)
done (took 712.49963742 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.869563697 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.85802129 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.976085637 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.85348861 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.811092638 seconds)
  done (took 10.512143465 seconds)
done (took 11.65549102 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.403193345 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408526732 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28196202 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.409765607 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249443034 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.42576358 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392725188 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.239818712 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.31989876 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.301569769 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.32082621 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270147745 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247905241 seconds)
  done (took 18.416294016 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547622888 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.539695093 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285902203 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542617226 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261237516 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537374225 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420515172 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.427606177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433292672 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251485175 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231198646 seconds)
  done (took 16.624119666 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548010985 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.539301714 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284925922 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536743358 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260606652 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542014058 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422969382 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438736859 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435115791 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252271474 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232529059 seconds)
  done (took 16.638198765 seconds)
done (took 52.821608592 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.227334777 seconds)
  done (took 2.373808385 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265019331 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.422579681 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24766561 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.234176057 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.228964966 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.230614549 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.233897086 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.227603653 seconds)
  done (took 11.238047266 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.227316634 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.225395898 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228199578 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226062364 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.224674251 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228387424 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229542837 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225236015 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.22605196 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.225715908 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.22827456 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.226532257 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.228084592 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.22638297 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228835323 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.229564485 seconds)
  done (took 20.783967961 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.227383637 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.227993712 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.226916205 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.226519129 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226590443 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.227413236 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.228080254 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227037276 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.226697603 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22600563 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226920972 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227087235 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.228355846 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.227307217 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.227792157 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.227460134 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.226548758 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.226921249 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.231351164 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.226792178 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.227087192 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.227557724 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227803277 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.228061541 seconds)
  done (took 30.608075131 seconds)
done (took 66.149485882 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.420965714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.029937153 seconds)
  done (took 9.599789122 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.230286643 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.230994782 seconds)
  done (took 3.612005245 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.230533841 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.229995505 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.230337464 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.230658087 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.230971078 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.230510336 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.230294314 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.229172697 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.230153894 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.230562943 seconds)
  done (took 13.452404613 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.231604975 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.229944287 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.22941272 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.229666938 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.22998687 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228415086 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.231596044 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.231551093 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.23194607 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.229831055 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.231840545 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.229414093 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.230489763 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229541121 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.231101773 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.229279341 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.229698772 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.228608573 seconds)
  done (took 23.293890527 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.232647429 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.232461798 seconds)
  done (took 3.615258619 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.230389296 seconds)
    (2/7) benchmarking "second"...
    done (took 1.229431 seconds)
    (3/7) benchmarking "month"...
    done (took 1.229588487 seconds)
    (4/7) benchmarking "year"...
    done (took 1.229828461 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.229481644 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.229061661 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.228704884 seconds)
  done (took 9.757694896 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233529946 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404341725 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.484011176 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.861154259 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.233700535 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.237513077 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.119836519 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.236753573 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.238117089 seconds)
  done (took 14.201742179 seconds)
done (took 78.680000973 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.258057322 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.243111688 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.463858415 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.238058268 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.258730372 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.570772901 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.252726887 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.361211393 seconds)
done (took 37.798392971 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.230307888 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.986289356 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.007036528 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.236214844 seconds)
  done (took 11.382611559 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.216076616 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.202508911 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.223605793 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.261754969 seconds)
  done (took 18.057227662 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.30605332 seconds)
    (2/2) benchmarking "read"...
    done (took 1.567535199 seconds)
  done (took 5.026872533 seconds)
done (took 41.847665681 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234993526 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234262688 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.232031667 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.23527507 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.23038139 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.232269361 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.232683693 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.234732004 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.235429847 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.234491783 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.235912329 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235118575 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232404298 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232795195 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.234874644 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235935797 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.232869994 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233202299 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.235988261 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232638265 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23662457 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.233457872 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.232563183 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.23359678 seconds)
  done (took 30.769145312 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.234634078 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.233488373 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235293508 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.23538079 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.233616073 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.236038665 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.235424556 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.233382459 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.23549752 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.236945764 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23421313 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233472945 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.235952949 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.233388573 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236345269 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.234702396 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.236810838 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232706337 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235708903 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.233720191 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.236702228 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234049412 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.233998273 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236263942 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.233859041 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234919682 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.238467193 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.23498768 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237741935 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.236224184 seconds)
  done (took 38.210050434 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.242243235 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244525613 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.236936495 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.237016399 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.237333468 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.238396789 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.238328775 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.23759328 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.238161995 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.239239186 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.23946495 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.238563237 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.237879451 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.23888957 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.237659218 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.239297736 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.239865534 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.238440687 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.237214916 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.237055975 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.23898098 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.239080763 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.23880939 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.238619732 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.239021791 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.239164802 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.239489979 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.238989003 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.238976235 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.240188236 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239627399 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.23938404 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.23994647 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23961165 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.239673175 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.238956394 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.245568224 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.247994452 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.238771246 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.240569812 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.241857878 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.239207673 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.238727938 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.240560193 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.242699291 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240562911 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.238621822 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.241205387 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.241328606 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.240094361 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.241686555 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.240865045 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.240107163 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.240952951 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.240351621 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.240933824 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.241293554 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.241123443 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.242192822 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.241810795 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.240827923 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.242797898 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.241863804 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.241440851 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.242796405 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.242522427 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.241312703 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.242012089 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.242522219 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.242099283 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.239465898 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.241427701 seconds)
  done (took 90.450344655 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.240834733 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.239024459 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.238643743 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24025134 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241420737 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.238391483 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241452053 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238661509 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.242549987 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240327431 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.240768211 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245088793 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241830855 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241414944 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.239293169 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.242460191 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240379951 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.243250561 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.242585967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242691969 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.241693946 seconds)
  done (took 28.463561452 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242560802 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.243383018 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240787905 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244278634 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241389915 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243004908 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.243481267 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.243076436 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244446294 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241511067 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242761185 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244726932 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243587409 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241898318 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240669818 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242443877 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244827756 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241059948 seconds)
  done (took 23.530724471 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.242780034 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.242528519 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.243343424 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.241174275 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.241479542 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24533736 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241702173 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244770934 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245494275 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.24164417 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.244740994 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245674544 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245703054 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241214032 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244620226 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.242340554 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.244525603 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243346226 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245556629 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243053089 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242046786 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246974688 seconds)
  done (took 28.523776927 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246048471 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246293955 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.241584216 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243600809 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.244645455 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.246326286 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.246080136 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.244347303 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.245871428 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.246672141 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242110337 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246755449 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.244759669 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245319334 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.243965708 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243960839 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246431971 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244963039 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245361222 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.243292321 seconds)
  done (took 26.06247108 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246536157 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247104683 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247759048 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246488803 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248970897 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248456981 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247612192 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24956859 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249478569 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249644405 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248219214 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247999208 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247792209 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249349402 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247120481 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247421992 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248484091 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249487003 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249163473 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24882032 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.249017575 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24782239 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250299972 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248490713 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250226863 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249882198 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249048667 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249387998 seconds)
  done (took 36.126484555 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250160491 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248851316 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.246915051 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.247391054 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.247275749 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.246363877 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.246704995 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.246519852 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.249813862 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247498891 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.249368842 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.249971547 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248882193 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.250031935 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249528909 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.250658667 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249834221 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.248385351 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247708531 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246962281 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.250349077 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251484215 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.250861242 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248685505 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24672256 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.250575243 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247781643 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248435999 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250859487 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248043077 seconds)
  done (took 38.631699211 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.270619248 seconds)
    (2/2) benchmarking "in"...
    done (took 1.268639119 seconds)
  done (took 3.709034107 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.249266742 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251161548 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.251919642 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.248957195 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.249077932 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.251650282 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250402818 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249890252 seconds)
  done (took 11.171378754 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.251310771 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.252530272 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.25220946 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.251745756 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.253995937 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251194948 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259023305 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.270901645 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.253429823 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.254582254 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.259666365 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.260213602 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.253564732 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252584531 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.251855249 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255475325 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.253955937 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.253734762 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.253656512 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.254311787 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253751302 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2556157 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256351565 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.251526241 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.254351506 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.264663176 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.27534596 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253424308 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254155249 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.257382511 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.253041641 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251751083 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.253779561 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254915401 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254358277 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.254732524 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263959942 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273278328 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260658051 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273989429 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256323837 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.253196264 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.256092093 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.256246548 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257079387 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.254871856 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256169947 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.252399274 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255804564 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.258373666 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260993366 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25602902 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.253742401 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258415407 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255636924 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263331071 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.276455644 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.25994333 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.263597061 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.267049564 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.288785359 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.279681734 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25809467 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256407441 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266486302 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.278955649 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262690711 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.273835603 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.25422261 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.257389892 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.260775793 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288141054 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.28303234 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.257144213 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257316264 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.257150304 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25674573 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260373853 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265762782 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.279721296 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.258201511 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257854362 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2669302 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278762609 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256732499 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.257247481 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.256784587 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.257289127 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.258335995 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269228125 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.277612734 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.25968761 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.257260451 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.259919384 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.260331386 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.258366609 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.256615546 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259682101 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.256901023 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259273214 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258121887 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261683199 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.266089012 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258543289 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257851275 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.264087486 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.279722433 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259172882 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264197935 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.260375197 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258658133 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.259262597 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.265886974 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.257439287 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262106465 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.267665293 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.259269195 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.260819405 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.260373299 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.260615155 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268974966 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.284584495 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.260185064 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.261082835 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.264704792 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.270826599 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260982839 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262600352 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.261985549 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.257980686 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.259140327 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.263057312 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.261882666 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.261776528 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262233926 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262070115 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.259632845 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.261946769 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.261191994 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.261909172 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.263503453 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262022673 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.260682674 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.264048599 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.262533527 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.261757471 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.268498726 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.281439276 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.263060202 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.261771981 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.260083705 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262868548 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.263057538 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.260792956 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.261501762 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262738694 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.262227479 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.262231754 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26355885 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.262976033 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262745689 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.262537603 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265743763 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263540085 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.266485811 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.262094967 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.261142062 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263978535 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.264914051 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.262335129 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.26511524 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262222123 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.266435467 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27088442 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.265527656 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.265207576 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266420221 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26413896 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262623276 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265147336 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.267739323 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.272327304 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.265276556 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.269978421 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.286400731 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264134254 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.265573172 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.265967322 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.265109483 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264527934 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.268668368 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.272090326 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276424482 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290975054 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.266033649 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.268410802 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.266345023 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.268635423 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.268335494 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.265140964 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.265624129 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265737114 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264099598 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266123847 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.265752366 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.266775449 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.264533048 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.267091068 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.26587065 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.265844664 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267572887 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.265320685 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266435231 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.264279328 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265977565 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266592457 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.265388206 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.264292143 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.264906454 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.266663109 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.266780433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.267251474 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.270990982 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.264224925 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267997435 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267946291 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.266986904 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.264229582 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.268319522 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26764236 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.266644088 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273402938 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.286725838 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268672141 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273765275 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.285266921 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266526355 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.269705115 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.267900952 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.265061774 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.270219605 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275489533 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.269115771 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.267441568 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.268685984 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267048414 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268451193 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.272953336 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.288091355 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.268349386 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.268924044 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.270860083 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.267143319 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.270535914 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268077057 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.269758084 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269625087 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269750396 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.269234052 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269905538 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.269554865 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.269378663 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.268475851 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271330114 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.276634627 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.273895567 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.268104751 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.272212645 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.270607695 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.273041161 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.268379281 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.270806205 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.269129104 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281483114 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295204354 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275679427 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.294236646 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.272409177 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274924721 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.291696922 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.272277828 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269722146 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271000073 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.269779195 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.271704592 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.268188037 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271808845 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270355144 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272497773 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272438439 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.275512816 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.272129586 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270575454 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.271883789 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.272069558 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.272640052 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269975434 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.273382936 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.273956242 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272552961 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.271142935 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.272941159 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278918001 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291744588 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.272162342 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.271304707 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.271583323 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.272031518 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.271860744 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.271579635 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276756323 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.278787745 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.274526874 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.27927386 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.274146614 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.280366032 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.271648218 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.275470221 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.280131948 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.270759663 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.270625181 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.273790426 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.274207455 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279636856 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.294762966 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.274608192 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.27770783 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272764593 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.274921887 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.273054715 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.272554454 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274754532 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.272992426 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281967329 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.294100621 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.276887986 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276935524 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.272269311 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.274574723 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.274394894 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275355329 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27685584 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274658456 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.275706389 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.274860953 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.275891837 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.274236157 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.279597127 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.276826582 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.27337099 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.275407916 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280086945 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.296126467 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278903285 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.275360341 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.281130486 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296052668 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281744464 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.29659951 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.275967763 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.275079936 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.27599086 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.277576889 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.275200053 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.276227023 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.27779579 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.278611832 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.280433998 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27659309 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.277979858 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.277671195 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.276915053 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.275765935 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286434321 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30030998 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.277710808 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283109897 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.274429223 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.279124911 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.280225081 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.276829237 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.276742124 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.280710026 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288441216 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285817864 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.277579401 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.276035214 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277693566 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27869644 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.277679116 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.277384983 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.277854661 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.278957435 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.279065135 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.278461754 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279906734 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.277337041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.277455918 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278636726 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.280229018 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.289984905 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.299107771 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.278145862 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277561275 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.278693367 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.277833709 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.279910879 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.27835583 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278720266 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278293594 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.280508049 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284952367 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.283718964 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.280858063 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.280066594 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.279677009 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.27962494 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.279363713 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278708637 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.279790687 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280178634 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.280880584 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.279840473 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.280675586 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.279325663 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.279958361 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.277100249 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282269873 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283933071 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.286121461 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280396365 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.277899955 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.280870481 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281393138 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.27993627 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.280856071 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.289459388 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302888326 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.290386695 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.287606761 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.284816482 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.279886686 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284247695 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.288151566 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.280841019 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.281555923 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.281894906 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.280729615 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.281345588 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.283848158 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282563515 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.287508548 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.301724386 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.280767077 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29006979 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.30664582 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285023814 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.284251546 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286324742 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.281785356 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.279074334 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.28289522 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.281451138 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290665968 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.302741066 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283728459 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285639984 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.280311608 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.282833354 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.28647825 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283871511 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.282546671 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281000255 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.284063935 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283897161 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28486541 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.281957158 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.284359634 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.283931961 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.285769363 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.28924589 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.281932732 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285630327 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.283974873 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.286182053 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285947657 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285080657 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282282502 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.282034363 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.283907834 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284289668 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.28429553 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.287681493 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.282476176 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.286794304 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.287047805 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286748051 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286501872 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.294720827 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.293550542 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.283556569 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.286921096 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.283675548 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287341883 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286379823 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.286885075 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285594933 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.282262536 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.287299079 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283860539 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.285459387 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.289316015 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303483146 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.306741657 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290835933 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.288238932 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287659855 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.286922178 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.284301327 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.282820496 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.285789733 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.284839351 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.296369329 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.287966773 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296788306 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303096042 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.291239547 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.290464312 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290867449 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.292860985 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.288027712 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28584422 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.286769182 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.291907344 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.300974078 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287525219 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296446595 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316419831 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.307337335 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.288611268 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288912026 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284276179 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.288914325 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.291696137 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.289545311 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.28665571 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291005352 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.285727488 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.287067413 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.291947093 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.289495232 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290340408 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.287546188 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.285788367 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288496804 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.287054746 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.287162755 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.284456213 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.286696484 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.288488949 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.286991668 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.285627506 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30318821 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.318381461 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288457791 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.286564919 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.284701779 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.293701967 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.289668815 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296903177 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.294963718 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289704812 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.28851432 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.290469523 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293510138 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.284743134 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.28774406 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.292164631 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288567014 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.290449784 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.300839348 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316886867 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.293204328 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.292779332 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.292355319 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.290038722 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288848894 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294313729 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289895698 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.287313332 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.291660903 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29551254 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.293250529 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.28964424 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.292744394 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.299407092 seconds)
  done (took 760.885568142 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286795779 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288975639 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290002576 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290100455 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290380532 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287718831 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290819518 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293364496 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288823762 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291171056 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.295284794 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294074811 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289274653 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292408898 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287219417 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289380032 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293610822 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288658146 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287616902 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292924802 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289676952 seconds)
  done (took 28.299941054 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.29423323 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.289977555 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292208178 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297867091 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291788483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291187594 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.290096862 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296065975 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295924902 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288753494 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.292092965 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29157066 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.290920278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.290444781 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291141617 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293514304 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.293063426 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292927332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.290593185 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291040877 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297184396 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.293013172 seconds)
  done (took 29.637286735 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.295285459 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.293453827 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.293545003 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.292603149 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297541868 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.290404891 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.292786855 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.294890761 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.296471086 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.296967406 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.295939559 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.295947719 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.300413747 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.300902402 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.295942836 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.294207581 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.439680504 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.296357758 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.294794253 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.294599544 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.293582322 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.298603129 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.314705248 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.294221092 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.296941952 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.292795906 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.295846028 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.294607697 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.294605574 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.297146326 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.300506254 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.293436037 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.295559168 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.298197141 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.291640493 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.29421259 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.29691224 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.298059647 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.294303132 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.301013111 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.307466904 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.320344948 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.299219105 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.301889156 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.323159998 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.300179234 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.301850509 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.303100584 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.2904575 seconds)
  done (took 64.945747659 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.297793951 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.299818751 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.29011349 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298731713 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.297564401 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.295513587 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.297039177 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296701153 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.294343621 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.295846679 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.29632286 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.297476257 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295436604 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.29472477 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.297266271 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.29362571 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298397147 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297405227 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.299682738 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296473167 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.301912472 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.300300684 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.299975733 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.296717086 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.296820838 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294544058 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295051039 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.296930129 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.293424964 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.299422442 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.297694127 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299458829 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298261378 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.301242752 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.294114386 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.301438291 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.299247533 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297181238 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301631421 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.296216506 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.298163345 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296619012 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.298567223 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.299186398 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298623263 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.302003902 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.301811583 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.299818468 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.300709794 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.303125332 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.303200271 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.298901261 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299820799 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.299010168 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.301951752 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304705783 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.300763151 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.2991895 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.299159785 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.30147717 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.29537555 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300775008 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.301049783 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.302790047 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.30619191 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.298870844 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.299558258 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301019858 seconds)
  done (took 89.511678828 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303876986 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.3033602 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300391652 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301125451 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300575952 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.304856028 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300993643 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.304078073 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301258007 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2977594 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300142224 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304136618 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.300468291 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.298751525 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302436163 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304035133 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301790715 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299391034 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.299431751 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303295639 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304387068 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.300977605 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30290414 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301670447 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.304365936 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302586448 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.299127095 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.300653191 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301433031 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.298338324 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.301067249 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.301409988 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302732564 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.299951452 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.304426819 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.305782319 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304177546 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301685809 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.297834948 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302248914 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.303225282 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303079242 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30333026 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.306242935 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304939618 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302767396 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303843719 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.301892967 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30485368 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.303039832 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.302306617 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30289047 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301848444 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304138199 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307287596 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304669576 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303846193 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306395759 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301784655 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303934922 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304076464 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.306551622 seconds)
  done (took 81.969639083 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311731355 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310316895 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.305952123 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.306753554 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.307464161 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307458621 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.310545392 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.310702149 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.312333648 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.308615413 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305763773 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308762269 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305681118 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311823036 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30806613 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302461749 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308149008 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303424795 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311964968 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309269136 seconds)
  done (took 27.381658319 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.309613533 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311983152 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.304865241 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308850097 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.308913206 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306922851 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.312548918 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310777871 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306154087 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307119108 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309301892 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309134222 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308952851 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310181684 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310735489 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306941987 seconds)
  done (took 22.158427715 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.305989261 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.310375691 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.308253159 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.311396204 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307887859 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.307971541 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.312114981 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.308517175 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.309288516 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.313283727 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.313103755 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.30879598 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.313441189 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311296216 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.307361869 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.308253344 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.310016886 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.304267428 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.311576242 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.312117857 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.307335538 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.310587539 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.311816661 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.312754732 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.312883052 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.310886299 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.308438275 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.3083008 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.30841413 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.311029056 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.306074965 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.309545813 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307084 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.306595597 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.314066 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.307083095 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.310367086 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.311790365 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.31300964 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.313419585 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.312791784 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.314502173 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.314742583 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.31146466 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.312026197 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.316883088 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.314469109 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.309725402 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.31046864 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.312512566 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.31318581 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.30696148 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.312199805 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.31366361 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.307785087 seconds)
  done (took 73.300301308 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311407381 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310994732 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.30822029 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.31041592 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309341954 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.30490805 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.309504771 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306811767 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305915108 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.311007343 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312262245 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.31326031 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308047853 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310627451 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.313708815 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312650054 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310044824 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308633864 seconds)
  done (took 24.795490746 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.311801763 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.31051576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.314731933 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312011269 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.309148435 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315527711 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30670103 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313533071 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315020788 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.312422702 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310688152 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.314013001 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314652532 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.314976919 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311781918 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311002504 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.311800527 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312634008 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.310887249 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309834684 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.308934366 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312156749 seconds)
  done (took 30.086227579 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.310639664 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.309029903 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.3118298 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.330190803 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.333243581 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.335257967 seconds)
  done (took 9.153120614 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321713731 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314144269 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308818951 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314235043 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309510329 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310708519 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311143871 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308690125 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312640845 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307358651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314508497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316628141 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317117269 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307501392 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315985448 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316115688 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31103919 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312955066 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312694086 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313090043 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310358463 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314346076 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315286728 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314126136 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309841286 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312667588 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321670169 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313330415 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31581897 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31415614 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315023884 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314191806 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315818579 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31274995 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315659213 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312336154 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312001277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315602091 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315978721 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312751644 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317197142 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313135662 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314968006 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31297947 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319309217 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314132503 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312681421 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316342294 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313295085 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32268254 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311179484 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312666016 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319652478 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316248122 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319010905 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317540872 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314236463 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311750852 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317425981 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315005219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316822947 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320276203 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314440144 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316624371 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318533075 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315774711 seconds)
  done (took 88.005949739 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312308102 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313446916 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313892052 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318761331 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318508646 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320464893 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31317519 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315602344 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312489286 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317193807 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317129256 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31806049 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314756429 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311638985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3176993 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316920516 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317585552 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314462777 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311533548 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316520809 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314283141 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317074266 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314363904 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312815002 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318544893 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320322298 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316444733 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315260115 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317338007 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312463837 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315344722 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316309081 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319683377 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.316040508 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319916323 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31699204 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316941484 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31692974 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314888837 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323692489 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313132118 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317854893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320645672 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31712233 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31580637 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319721115 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313510221 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316605208 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313672206 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321385086 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317266453 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317435758 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315763875 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316993181 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318965788 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323392639 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316875176 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31813317 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316170157 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324730538 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317873926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316035778 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319843731 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320859842 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315719094 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318842734 seconds)
  done (took 88.14083804 seconds)
done (took 1775.073211222 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.388100483 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.409817195 seconds)
  done (took 14.028778978 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.483246364 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.443428904 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.315779967 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.313480373 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.321393375 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.344959208 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.323197771 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.318725457 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.317184202 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.31888843 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.320002056 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.510140446 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.31471628 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.317481026 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.318973818 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.413577812 seconds)
  done (took 42.938072299 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.352333043 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.331445932 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.449413026 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.350396881 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.351519306 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.530266447 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.384565392 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.324968391 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.513052884 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.371162552 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.066724614 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.353624871 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.325379531 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.526903862 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.346063136 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.526782361 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.60140906 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.01345193 seconds)
  done (took 30.952313949 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.82289988 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.35005834 seconds)
  done (took 9.406774883 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.320690664 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.317188377 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.334033551 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.350010867 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.335102704 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.408759873 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.328711545 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.348134726 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.359049325 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.356781608 seconds)
  done (took 64.702438498 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.354251947 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.330740941 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.330110895 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.324140413 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.318187152 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.319485745 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.323889224 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.322544196 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.333728364 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.468879932 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.336035366 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.341309534 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.35043453 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.32808191 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.327733404 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.365583068 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.499110337 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.330115221 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.326725516 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.335982414 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.32780273 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.432752588 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.37732984 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.330295726 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.462793388 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.340128227 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.335770095 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.335965102 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.480711831 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.334385132 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.331110247 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.332906603 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.330179682 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.965388194 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.844123717 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.343538397 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.35723191 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.34346505 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.327617081 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.489103695 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.336603582 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.33466344 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.321679656 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.837132724 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.494027124 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.461331481 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.684834324 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.353124637 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.331196134 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.395975871 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.336703352 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.329914342 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.361761163 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.142065219 seconds)
  done (took 112.34796759 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.37245321 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.712573201 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493465683 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.350338568 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.994418192 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.058935471 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.343181404 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.640990734 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.400791829 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327106592 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.675374442 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.871165031 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.349278911 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.380568753 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.966785254 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.408656628 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.320450859 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.130816062 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.341679823 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.323429896 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842324886 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328873361 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.325475706 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.490457055 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.364605804 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.832143181 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.956356986 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.816284308 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.346180428 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.323797514 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.825897922 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.351965175 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.377351163 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.323664589 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.608668073 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.712742234 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699280604 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.344470989 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.344762792 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320282217 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.355081815 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.804219807 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.710934945 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.342018595 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.328305066 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.824324342 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.341420728 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.322141831 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.334810105 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531459765 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.173221149 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.326170226 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.940108818 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.332097626 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.714538331 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.347997982 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.39374128 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.855065039 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.351138927 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.448868285 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.365582798 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.325074174 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.330747586 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327126998 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.334508512 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.721104053 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.484995971 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.329696516 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.716671249 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.847440911 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.358802813 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886160747 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.251818698 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.343941661 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.428831871 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.330189944 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.9279233 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.867255519 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.369505974 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.324455364 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.703959698 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.353915414 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.663468958 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.342908774 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344033126 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856943181 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.337207361 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.357532111 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.326169345 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.345766972 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.946939796 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330249436 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.638655454 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.396392314 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327910193 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.32743756 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.351223869 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.326685147 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.347003478 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.32525544 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.891254674 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.347086833 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.31925515 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.350523392 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.33421628 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.330880268 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.325069783 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.326186157 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550520088 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.755979253 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.353992369 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329437731 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.328758565 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.335111938 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.50474462 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.329294331 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.679029696 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.354063312 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332939918 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.334277856 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.105365613 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.357932351 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324536059 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.333238882 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.256762106 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.543978948 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.347773477 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.355040635 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330446343 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.355125878 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.765907153 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.356125067 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.376022503 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.33514033 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077299962 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.390753109 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.353170049 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.845766562 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.342704042 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.334032061 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.345021048 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330263202 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.646848952 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.61699629 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.373507562 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.338036972 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.335585875 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.050879071 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.376261422 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477003786 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352144967 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.39417663 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525988141 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.642476405 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.33118979 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.965589173 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.327542336 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.551076127 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.343505999 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.647366563 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.86259131 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.353898916 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.337384544 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.071945519 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048978627 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.992047103 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.331398042 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.67189656 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.306581353 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.805987224 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.333011595 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.33310116 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.778971628 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.340281314 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.33875625 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.334303996 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.330502648 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.480639914 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506786592 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.669896128 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.336736948 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.826185342 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368951781 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333825676 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.353806539 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.341335956 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.681384829 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.415174686 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.334685922 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.340238024 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.337248421 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.340491436 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848474161 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.205353988 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.339006517 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.493046837 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009931817 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.358591834 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.335042683 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.89184171 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.636967207 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.887405305 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.357861661 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.685696928 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.36077369 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.372756877 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.953270336 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357024683 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.854994397 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.356896736 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.340182369 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.968553021 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.359601288 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.680859322 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.334066739 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.334944592 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908416286 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.357451073 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.339698083 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.722558169 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.36127187 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590334584 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.343810568 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.371251203 seconds)
  done (took 1113.277035694 seconds)
done (took 1388.881333225 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.335656725 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.331762075 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.325017102 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.335586325 seconds)
  done (took 26.576067487 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.345067621 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.341076304 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.344604246 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.34057374 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.343235747 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.339120136 seconds)
  done (took 9.309617538 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.526855747 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.33758261 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.342622725 seconds)
  done (took 19.459015502 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.567095647 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.738886071 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.728728395 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.770779079 seconds)
  done (took 11.056289881 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.345859826 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.343045477 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.343424757 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341436735 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.345866562 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.347613269 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.34283221 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.3484501 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.348915602 seconds)
  done (took 13.358570316 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.59525571 seconds)
done (took 86.603236936 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.367940877 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.758384242 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.335846306 seconds)
    (4/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.346718762 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.321342216 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.622624683 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.340637856 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.341546265 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.337447473 seconds)
    (10/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.378920751 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.603405808 seconds)
    (12/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.358225434 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.362404035 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.376737395 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.339192963 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.360418254 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.633529027 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.386891369 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.953688718 seconds)
    (20/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.327265205 seconds)
    (21/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.368467995 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.000706282 seconds)
    (23/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.805819073 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.447767104 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.457602505 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.983067231 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.452918313 seconds)
    (28/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.75282992 seconds)
    (29/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.222333799 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.051373658 seconds)
    (31/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.469647992 seconds)
    (32/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.235286594 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.369810071 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.787539401 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.380527995 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.32231605 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.910860072 seconds)
    (38/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.202987832 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.074773303 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.445548634 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.604146542 seconds)
    (42/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.337808046 seconds)
    (43/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.112624864 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.646650931 seconds)
    (45/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.125550258 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.23245174 seconds)
    (47/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.223271502 seconds)
    (48/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.678491497 seconds)
    (49/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.331107659 seconds)
    (50/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.784807408 seconds)
    (51/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.873680592 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.364233081 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.424617496 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.322946753 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.240115415 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.321143896 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.452632404 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.605573027 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.345605939 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.360297101 seconds)
    (61/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.742609082 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.401274285 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.321732555 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.402533482 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.34020878 seconds)
    (66/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.465016748 seconds)
    (67/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.020158783 seconds)
    (68/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.234513093 seconds)
    (69/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.462757192 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.403178458 seconds)
    (71/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.405383809 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.341539106 seconds)
    (73/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.535008693 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.446700836 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.601742703 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.334496106 seconds)
    (77/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.401584721 seconds)
    (78/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.506525564 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.244196985 seconds)
    (80/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.488801179 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.279536034 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.344189175 seconds)
    (83/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.087937374 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.339511112 seconds)
    (85/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.75377759 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.955129976 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.453288528 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.366513023 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.566687478 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.467297643 seconds)
    (91/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.726257889 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.046586816 seconds)
    (93/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.330520428 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.368332426 seconds)
    (95/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.8783505 seconds)
    (96/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.02267575 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.326494133 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.732573724 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.577313609 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.380285912 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.415559482 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.476434249 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.708665641 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.061445638 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.345277339 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.349125955 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.056498862 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.458126893 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.409019603 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.378411651 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.848895466 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.557414804 seconds)
    (113/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.563650441 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.36697643 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.770845636 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.744720953 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.331642923 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.362118454 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.923132286 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.324544529 seconds)
    (121/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.925413936 seconds)
    (122/309) benchmarking ("sort", Int8, false)...
    done (took 4.363236111 seconds)
    (123/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.519302512 seconds)
    (124/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.325864141 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.877772262 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.393995283 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.32710194 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.65197106 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.939744731 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.368621187 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.328470264 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.173910734 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.608625689 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.421386959 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.37052393 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.255593803 seconds)
    (137/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.325032586 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.450236664 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.34068831 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.357675619 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.326868339 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.336286043 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.519041897 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.63143254 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.06213726 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.328121268 seconds)
    (147/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.078768908 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.569383487 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.445139265 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.376201728 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.081485282 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.393581057 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.44465342 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.199643379 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.227537479 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.986903658 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.367953775 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.329166979 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.334476408 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.399720474 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.388223003 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.365783644 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.957362724 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.598627316 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.391201422 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.34828224 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.803097876 seconds)
    (168/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.366330893 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.336103593 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.35959573 seconds)
    (171/309) benchmarking ("sort", BigInt, false)...
    done (took 6.352743967 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.420143071 seconds)
    (173/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.332258315 seconds)
    (174/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.84414515 seconds)
    (175/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.554314833 seconds)
    (176/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.801336239 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.36946048 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.281970164 seconds)
    (179/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.35819021 seconds)
    (180/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.162719497 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.311489654 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.435081428 seconds)
    (183/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.377989447 seconds)
    (184/309) benchmarking ("sort", Float64, false)...
    done (took 5.731199411 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.301959102 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.284030459 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.378338188 seconds)
    (188/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.330209145 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.790541384 seconds)
    (190/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.786726573 seconds)
    (191/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.923526981 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.410565067 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.893292338 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.33216503 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.351436546 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.514057972 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.423583931 seconds)
    (198/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.812321137 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.407201196 seconds)
    (200/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.727219093 seconds)
    (201/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.166921046 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.456259745 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.452298858 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.57660153 seconds)
    (205/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.378915923 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.330400842 seconds)
    (207/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.468252031 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.873170953 seconds)
    (209/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.349735066 seconds)
    (210/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.912458944 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.376817729 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.001443131 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.555523992 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.343600349 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.054414805 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.803919426 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.378077122 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.807319331 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.027894364 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.336782944 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.373394977 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.465435963 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.892359632 seconds)
    (224/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.361692801 seconds)
    (225/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.504507624 seconds)
    (226/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.333006595 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.39299761 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.340806723 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.891850258 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.394472405 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.333189535 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.355326984 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.353074436 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.152125951 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.36209507 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.809852749 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.372355685 seconds)
    (238/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.397068464 seconds)
    (239/309) benchmarking ("sort", Float32, false)...
    done (took 5.428526112 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.376176816 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.397670394 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.337512004 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.208153845 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.346623011 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.362052722 seconds)
    (246/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.437550128 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.541688983 seconds)
    (248/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.081032178 seconds)
    (249/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.389377995 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.359030349 seconds)
    (251/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.103873228 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.158926084 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.402447127 seconds)
    (254/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.653596943 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.600814771 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.437543744 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.480121752 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.352060374 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.37275167 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.441065905 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.336193969 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.177438621 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.382609604 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.36287504 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.340912783 seconds)
    (266/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.3567871 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.171290233 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.43191934 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.764968115 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.356139366 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.402566843 seconds)
    (272/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.337791723 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.51981364 seconds)
    (274/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.094454634 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.393656938 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.441423378 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.427374405 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.424794308 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.166042159 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.383910583 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.190866028 seconds)
    (282/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.357298561 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.344787516 seconds)
    (284/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.375440895 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.70607534 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.441475426 seconds)
    (287/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.483423357 seconds)
    (288/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.554673745 seconds)
    (289/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.837314974 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.440906395 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.487640349 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.021314761 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.386653361 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.206456351 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.399555368 seconds)
    (296/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.361197319 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.393048296 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.38112847 seconds)
    (299/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.624898213 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.402109173 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.37196502 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.448711726 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.478847669 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.399651317 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.403044945 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.962329709 seconds)
    (307/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.04643581 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.193246778 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.35546023 seconds)
  done (took 1053.827134645 seconds)
done (took 1055.080746152 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.392385998 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389173421 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.372497763 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.393306516 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.484176887 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.397512858 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.381987005 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.374416695 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.419343024 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.420056927 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.372528873 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.3937843 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.373366619 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.371968041 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.372148597 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384282342 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.516502282 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.373030629 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.387805226 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.380517421 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.388439444 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.372688519 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.421527274 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.395846817 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.37481576 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.375734791 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.377799233 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.391204028 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.486415655 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.378060528 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.374505188 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.386966044 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.507687317 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.369702789 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.369871685 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.395867926 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.385394578 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.383457904 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.378532945 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.40763749 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.955128437 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.390398768 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.375002158 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.372378499 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.373969347 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.378133725 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.375718151 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.380248262 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388517505 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390164035 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.945145217 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.406409489 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.380752775 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.37397314 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.383662447 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.375625438 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.376525971 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391552675 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.396941066 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390199131 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.496294751 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.379596614 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.377905521 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.394150371 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.385885108 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.984270039 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.389778086 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.380039785 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.954203423 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.398298211 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.981404309 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.40393366 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.373712867 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.391959966 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.408693233 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.510931454 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.371222107 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.374559065 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.385794439 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.374254055 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.386865939 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389261731 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.381769155 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.37885199 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39352664 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.399180716 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.385598466 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.380419073 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.386995645 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.398833489 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.38803589 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.386944219 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.380023117 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.371546535 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.387339754 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.382343984 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.381228131 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.38130737 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.383808668 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.387482651 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.954568828 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.411308199 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.375775636 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.375355799 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.378273974 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.393486527 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.95855323 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.3997956 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.399209247 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.424571375 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.379291569 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.499552724 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.383724584 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396426652 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.388176974 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.383510293 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.374434166 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.499351586 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.950691889 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.417187985 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.381368996 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.377728967 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398279404 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.380451889 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.374750671 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.570306206 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.385159732 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396356154 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.502357895 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.389319599 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.412442565 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.379277821 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.384081348 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.407854088 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398262668 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.412604715 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.382154931 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396747096 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.397470815 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.37612419 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.394218284 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.390880617 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.382512619 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.387947729 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.374751191 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.404179672 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394444053 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394779563 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.401055369 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.501798376 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.377568407 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.502766836 seconds)
done (took 234.132797347 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440621222 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.369575001 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.461822408 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.377661905 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.478368003 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.486145088 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.375188553 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.375515692 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.372738204 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.755764498 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.375417341 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.373735459 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.369351842 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.376694937 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.458879934 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.378014397 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372323708 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.721968544 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.377859622 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.447994617 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.371869299 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.376656441 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.377199513 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.762104828 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.371826555 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.375792916 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.459065686 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.379106173 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.727019455 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.375568029 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.378126636 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.725277731 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.47924583 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.396319442 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.38963048 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.385122114 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.486426392 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.400428968 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.468230479 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.458643757 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.466468686 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.416404562 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.374427264 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.372210589 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.380957698 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.380172997 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.377616664 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.407105707 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.378875784 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.378942847 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.722414716 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.389593656 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.379320401 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.377496761 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.377728868 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.408875105 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.37746903 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.37975722 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.470185523 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.379589977 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.451011928 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.765780246 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.760733612 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.379959301 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.380373599 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.378649892 seconds)
  done (took 151.488883238 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.448576486 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.452381533 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.498480278 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.398831235 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.428306012 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.504134985 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.398141342 seconds)
  done (took 11.417329596 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.385571553 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.38264085 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430050593 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.431401382 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.380320633 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.528602554 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.383121719 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.392510037 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.379334624 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.433047561 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.384369353 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381884551 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.390259473 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.374872111 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.429719314 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.392902637 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.497095828 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.38275014 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.383100553 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.5332348 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380254255 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.39005276 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.434848289 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.39429573 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.384398779 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.387800423 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.952209511 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382538399 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382070059 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.38287381 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.382036268 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.421611453 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.382844263 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.382646219 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.38078269 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.497495323 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.384733101 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380715343 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.384135629 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.382878931 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.383010219 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.384199473 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.383733238 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.383297518 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.384807761 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.405640404 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.383176417 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.385622598 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.385415542 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.384842822 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.434473308 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.384563545 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.381678364 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.381976403 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.440283253 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390146915 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.385574499 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.380443526 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.386724353 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383332377 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.535948853 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.431301769 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.383614452 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.43075696 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385916 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387885572 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.387566611 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.38581323 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437904431 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.383990173 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.434883556 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.381755054 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.53862745 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.405949839 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388544818 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.387072107 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.38673645 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.385920663 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.383088016 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.391715575 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.383701399 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.385461377 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.3920457 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383771761 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.385740697 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.488859376 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.492096169 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.38463567 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.399709933 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.392361468 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.385571252 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.439998225 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.387610117 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.385354307 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.436308492 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.50196365 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.438568232 seconds)
  done (took 158.133463077 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.392229918 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.393923515 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.38695841 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.401955965 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.387243648 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.385564882 seconds)
  done (took 9.641713172 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.389825631 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.388420037 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.387814915 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.38878646 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.38776364 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.388336362 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.387049555 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390117611 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.391090942 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.389207604 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.389294432 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.389980619 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.388780658 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.389783924 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.386613167 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.390774892 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.390432725 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.385680201 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.389147463 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38949032 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.48605909 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.388535721 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388230627 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.390901705 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.393263716 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.388593657 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.397407522 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.39096819 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.388868927 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.394129071 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.410807269 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.386445902 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.38953385 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.396735934 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.396264323 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.392562135 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394193413 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.394116309 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388398383 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.390703985 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.392026511 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391763498 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.392242692 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.391798455 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.394403688 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.394393076 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.397587744 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.398139287 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.391263774 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.394269743 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.391924907 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.393000714 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.391475183 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.394901012 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.394170824 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.413254528 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.398080919 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.393236868 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.393066928 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.392391254 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.394759083 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.392510439 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394606026 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.397947634 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.400972684 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.394417261 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.39423152 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.396859828 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392681906 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.394580719 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.393180875 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.391693666 seconds)
  done (took 102.655344494 seconds)
done (took 434.621189184 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.557198684 seconds)
  done (took 7.857804207 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.617081154 seconds)
  done (took 7.915980044 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.863337782 seconds)
  done (took 25.170770671 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.493314953 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.496840116 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.430085067 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.387712167 seconds)
  done (took 27.109348137 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.500641337 seconds)
  done (took 7.80206887 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.386190129 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.394152358 seconds)
  done (took 14.083285712 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.62491484 seconds)
  done (took 7.926584646 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.113725668 seconds)
  done (took 8.420103436 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.40538397 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.407844517 seconds)
  done (took 14.384727983 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.367495147 seconds)
  done (took 7.668036967 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.025312591 seconds)
  done (took 9.328593734 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.383380136 seconds)
  done (took 7.68507569 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.460163253 seconds)
  done (took 7.761283429 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.380154357 seconds)
  done (took 10.680136291 seconds)
done (took 165.092126685 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.384210001 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.394712014 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.395162231 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.395652265 seconds)
  done (took 26.868910418 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.894828223 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.446334367 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.429200806 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.43725738 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.431081641 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.429040982 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.423537128 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.421320983 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.440683672 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.432685419 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.431150262 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.431456094 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.428512082 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.422091364 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.432635168 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.431323404 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.441830449 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.429280385 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.42348168 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.433831674 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.398272794 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.441052674 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.430967472 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.396000713 seconds)
  done (took 36.061060649 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.92043138 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.468485058 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.548615246 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.450261205 seconds)
  done (took 7.691663297 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.447464776 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.449734507 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.464005457 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.502572704 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.529868949 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.457926622 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.422415625 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.416595028 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.405812574 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.446271387 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.525214658 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.477040292 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.534971205 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.395453593 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.585136732 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.39718612 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.397915901 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.450760176 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.501317057 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.536472366 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.396723566 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.450773328 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.460359856 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.463708849 seconds)
  done (took 36.419154172 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.39942596 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.415102354 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.396603318 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.394922598 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.405057125 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.39648217 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.400299507 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.397733335 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.397869626 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.404224273 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.396993591 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.411094234 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.393700497 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.394941096 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.403554329 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.398006316 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.404788832 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.396164914 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.398750665 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.405042514 seconds)
  done (took 29.313558494 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.390053628 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.244846086 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.73778036 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.648113142 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.389849888 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.399752841 seconds)
  done (took 28.114028371 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.474523199 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.658082595 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.403846457 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.800802212 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.897117571 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.417445886 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.399662682 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.677409221 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.052891693 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.037437856 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.465143065 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.482679786 seconds)
  done (took 21.072484714 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.402170089 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.397374062 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.40813381 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.418621518 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.459418709 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.420116074 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.405775168 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.393688253 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.468993532 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.484450762 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.4198915 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.462211299 seconds)
  done (took 38.448254267 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480911461 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.447362344 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.549395888 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408307118 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.127091699 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605554043 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413908081 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.880379849 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.406889756 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670140369 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403218118 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492452099 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652394134 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392835135 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402772464 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.514308967 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64660717 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940369315 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39792015 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.748337658 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42934765 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406877751 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.953897667 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.435334552 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608086175 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.378808208 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.65800176 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175712061 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721235864 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418121318 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406858338 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39435447 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670878901 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12516465 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522073679 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407437719 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399913449 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.94516121 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.39184333 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.832267687 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415724003 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406162645 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404998447 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39805434 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331712713 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396657443 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865833211 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.413034595 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.114917808 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398189056 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404791673 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495437353 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.402328372 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.389641559 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400360418 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.405923657 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.398089659 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423236415 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989114199 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.354168481 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414169481 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.34136206 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401554973 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.77594941 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093513389 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.521074584 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.402839686 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401726405 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331070188 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.817592362 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424859284 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536895059 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.420785823 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.059620071 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177582585 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.421416437 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337524925 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014423957 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402711946 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.340628859 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627102029 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.176367345 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338541374 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.352960117 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333419284 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228481886 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413392963 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.950679347 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428284204 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.884650444 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.422124886 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418441529 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423776161 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626255674 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.278747602 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401370766 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.414017865 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526787468 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425307317 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.857802824 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343376307 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.405721587 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660350323 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.611322968 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406125194 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.525249736 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648004611 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407639888 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.423934313 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401246675 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.416895818 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.040566904 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435281216 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.325878537 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424666699 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.176123412 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259384798 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408045702 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.511704709 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.417062658 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677152631 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.292097766 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291942115 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470672401 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409497138 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405949878 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.863342914 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.259358523 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.286083988 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.397766666 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416961249 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.421588266 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.403845313 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36135323 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.407815966 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404346239 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.21120382 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626772638 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41925022 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684673738 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340613477 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543100147 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42215926 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.628620923 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.711203156 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.421729762 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663296477 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42126224 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414772487 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42182786 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420389468 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501827341 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426317736 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.412866431 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670040952 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.408041841 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.409144871 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.889852 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.194130592 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406797195 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.414469462 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40727633 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050837855 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392792865 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409740981 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300523926 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.417540062 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474728711 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412729331 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.415801159 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.471154511 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421034232 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.408664196 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.4046032 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629731772 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416087728 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.875072934 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491834352 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.62743347 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060593021 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441212674 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.342428946 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.116905758 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.09930473 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40236239 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.598737341 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406571132 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418464684 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417794475 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415260167 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.051629574 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430072657 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.800294725 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.422460248 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420408558 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.412386084 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4076069 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.443916352 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.256922493 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424623985 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.427683232 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551806034 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.42382036 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.342060962 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.921521308 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415039573 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410510519 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.186024912 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444149765 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.800626239 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913928181 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671008262 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409711423 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429569876 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.004108367 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.452233178 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.412475916 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417373395 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427215268 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.419765082 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424286372 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.417208766 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.896013861 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.866739805 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975365405 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200000967 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028549243 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511754866 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.432695025 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.312898193 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869494297 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347848877 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.070115234 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620192298 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894036633 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378002069 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632573475 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.779150173 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.302667327 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429762371 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639552065 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483685412 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.436253555 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432266157 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621216305 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447210535 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411525416 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.36503448 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.699768823 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660660359 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412929246 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495551428 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87560719 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432168124 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.199072651 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.451963911 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.92968628 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.634075911 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.967611699 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.807130374 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427896581 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.437149189 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917725668 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416618323 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.939465102 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089399995 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436281914 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.640603112 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354562656 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.422649752 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.422285665 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.408265869 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.942905932 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.414714483 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.669650414 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424818599 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347145232 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426891159 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006834285 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.285759228 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.418859722 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413297843 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263074063 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418178157 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746840271 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.426839017 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.438115314 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434662905 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.348522967 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349974186 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.10773931 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422542898 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381334758 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972982001 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.435218903 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431666659 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42172176 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272591071 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.673267339 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.429473702 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061132044 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662535291 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417076625 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455189488 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.510484647 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432423678 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.401387655 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.312006501 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651472542 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42444445 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647277677 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.597025436 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.325770388 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.496487735 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636187867 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.311987456 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416455662 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717812707 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.155650782 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.427673156 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201527555 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461733375 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428771832 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440690758 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417395046 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461506612 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508334483 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42655596 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.431163846 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.429900948 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610593071 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441440033 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424909959 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.434757784 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510685149 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394400142 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.44817958 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.187656631 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069407519 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239598094 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.090418264 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449124686 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415100476 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419253201 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354352693 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565759111 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948132942 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692608911 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538800693 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.432347736 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44807299 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434738106 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431593905 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640046401 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694172081 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.294203935 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416444951 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.087788477 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.576557914 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430996927 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.630539365 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983658779 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050041482 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544935138 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421880173 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887230111 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70195787 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.512692628 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415591788 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.011431924 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.444975279 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.944993424 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.4558733 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427199716 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577082111 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430047573 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146918305 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.457791689 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.579111439 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.192817629 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929390539 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686917839 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.967386122 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.43248462 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075748868 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.24066711 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692675709 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493667056 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430516702 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.528459926 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567552191 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.425330499 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.31796908 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419105134 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269461727 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.1295445 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.428776588 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074433503 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707804422 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.420503039 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.421369731 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443949398 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.431894035 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64736189 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.245850083 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654475407 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4280532 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.430134901 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.995039211 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075000955 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453258015 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355773181 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.426187136 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699278042 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.687776071 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447059357 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.877151547 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.130236498 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034864248 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.397309454 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442764747 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439245248 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235533149 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084549911 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.469469644 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999193322 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.087080824 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432779486 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696854792 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.425832369 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428345051 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710868261 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.427378684 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.429487124 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441767051 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.078648651 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303421807 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.447235435 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.884405905 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.367669486 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.651843826 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442114389 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360268735 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423326726 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.625184277 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429848117 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544075349 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434085551 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.430092839 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448176304 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.167999721 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705579697 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.431676074 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.415160265 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.411564301 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448872954 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457555063 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699993088 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432188013 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.099058009 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.777726203 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681228423 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.434428577 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.411524197 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.430844438 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423149215 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.151132805 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404375169 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.444295103 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055109236 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.435263697 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.445009758 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42930759 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.641472128 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638391662 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440312539 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446298914 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430854244 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448209195 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.311364096 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.203805908 seconds)
  done (took 1693.302165481 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46549882 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.46164631 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.464249059 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.463863681 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443308613 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.5251216 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.476915633 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.566097414 seconds)
  done (took 53.205674824 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.433144542 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.592205039 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.468209736 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.431800435 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.445756361 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.427665818 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.937917401 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.446107982 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.438996379 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.435573977 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.433448668 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.427761652 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.154677123 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.437460711 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.431377961 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.420634764 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.437536272 seconds)
  done (took 67.142114971 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.435767954 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.020565051 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.47248618 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.440312705 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.040163564 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.447675164 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.922128377 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.439210745 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.427861129 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.501366488 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.086848721 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.430718945 seconds)
  done (took 82.002356718 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.43817237 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.435400854 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.436757796 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.435655746 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.437640217 seconds)
  done (took 8.525034969 seconds)
done (took 2129.469204974 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.683789324 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.224363175 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.155800635 seconds)
  done (took 5.71910608 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.578780197 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.625409959 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.797332705 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.76323913 seconds)
  done (took 8.1055286 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.711565947 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.820237033 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.630285833 seconds)
  done (took 6.50315539 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.039164005 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.432377315 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.45193934 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.430310204 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.439617656 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.434948584 seconds)
  done (took 20.647886038 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.434216059 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.439047106 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.433693676 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.437760721 seconds)
  done (took 7.087107704 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.411104296 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.146780655 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.421036992 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.431948187 seconds)
  done (took 18.750292029 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.181132207 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.195053352 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.180756547 seconds)
  done (took 7.898457174 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.435674742 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.287319041 seconds)
  done (took 10.063264485 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.735179543 seconds)
  done (took 3.078382435 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.56534773 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.762389075 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.598054035 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.520772729 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.630884867 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.835622399 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.313044451 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.832373237 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.493234848 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.998062799 seconds)
  done (took 30.893633577 seconds)
done (took 137.693672585 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.696250404 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.839441633 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.634983749 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.665712002 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.666555513 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.637776139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.946766613 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.633103518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.176105283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.167305977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.713673691 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.668204711 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.668891259 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.841949315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.669547653 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.463078237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.666180383 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.74517073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.392718057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.433221785 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.944013892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.305475775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.538436364 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.32488896 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.66492316 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.586709837 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.891455022 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.453984786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.439047683 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.902683413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.58566576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.446483862 seconds)
  done (took 200.749836767 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.432182842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.435041575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.453109435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.449928025 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.435060752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.429410398 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.450076045 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.45093121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.455905836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.462094415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.433619547 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.431212444 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.457452834 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.453927898 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.435984182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.452973745 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.43638438 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.470062065 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.449136026 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.432259649 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.436479325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.450442197 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.435719382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.464024989 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.436410362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.454648447 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.453233375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.436249397 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.455798739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.435794446 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.435942592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.454346597 seconds)
  done (took 207.602136229 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.436404198 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.436571293 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.448394189 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.435841369 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.46690485 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.442075805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.438572268 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.448366764 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.445139838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.437737897 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.435340929 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.436633504 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.458102756 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.445055918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.438224204 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.432335648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.447450881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.438717525 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.454376542 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.472650052 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.440858632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.443141819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.450179604 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.452673068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.445873447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.439716685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.438711368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.436460117 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.446278579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.443466214 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.438555757 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.437305349 seconds)
  done (took 207.554510673 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.634518889 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.442556011 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.444537844 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.380063836 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.44458498 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.444306372 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.441021358 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.643964379 seconds)
  done (took 15.223324979 seconds)
done (took 632.471614843 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.880494144 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.583431062 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.654344327 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.46514017 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.299947824 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.484834709 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.468327515 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.655183467 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.400484904 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.658775176 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.811159865 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.478712863 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.967619185 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.465146843 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.738476787 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.573024345 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.378134844 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.495759305 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.803311751 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.105990561 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.75319112 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.005334736 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.667425238 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.404738878 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.987910906 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.010429245 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.287022917 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.362143947 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.481643881 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.810474969 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.19935253 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.529280475 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.533782289 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.530115343 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.583519633 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.570628175 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.515745747 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.527966057 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.678321002 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.765589456 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.062219328 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.21572858 seconds)
  done (took 98.197774802 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.431612935 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.430095221 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.43175231 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.431212108 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.431034295 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.430622902 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.43174242 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.428672181 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.428697746 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.429045282 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.428721789 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.432287621 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.42896921 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.433043046 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.429335293 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.431326822 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.429173887 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.433026793 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.428294781 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.431875596 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.432597766 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.430115285 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.429251056 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.42955755 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.430109955 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.431690855 seconds)
  done (took 38.545219222 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.45256262 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.720567307 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.897323836 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.456738503 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.452956167 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.457142991 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.537758917 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.451367896 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.453506951 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.45620947 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.635027364 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.458860118 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.489073841 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.924726347 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.453944905 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.455309686 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.462258114 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.453863273 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.727963184 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.461375061 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.568256004 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.455729989 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.546992144 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.467186019 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.476815598 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.455274856 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.457019889 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.997288681 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.482489487 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.637849593 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.368246809 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.552980182 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.953366058 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.935301212 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.367524816 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.463852708 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.455064543 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.640087144 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.45467857 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.45456124 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.546413645 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.463695415 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.906341882 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.098999522 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.475170082 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.455537459 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.012794054 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.654312289 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.74399939 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.473547298 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.931556928 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.457336409 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.45672895 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.462697502 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.744709653 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.470759698 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.454778282 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.021795561 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.478640393 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.545771383 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.463697775 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.455549354 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.736520285 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.456015084 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.727299927 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.457482026 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.464816637 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.476151772 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.910266424 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.458689188 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.121493155 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.478678363 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.460249125 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.640630066 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.73182565 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.054830105 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.487058893 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.742101365 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.957874636 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.568999638 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.468372277 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.98230932 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.575816662 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.467964744 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.460234591 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.460301302 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.456532584 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.502111359 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.544925145 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.073281079 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.132511442 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.038793544 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.568261113 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.476989418 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.456403854 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.024338603 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.478191362 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.455380161 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.906405797 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.121206812 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.474627549 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.466601315 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.126358371 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.479963462 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.557775318 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.470373069 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.921428223 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.4584148 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.508592435 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.45982198 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.465695808 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.484395304 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.548388295 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.470297574 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.458108405 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.090625828 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.665005855 seconds)
  done (took 191.868398602 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.451428362 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.45212062 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.467913594 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.449798599 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.453288342 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.458300202 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.449548934 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.455367989 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.458290124 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.451111745 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.452472545 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.450952588 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.454522402 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.457161853 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.484726892 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.456110975 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.067127955 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.451984972 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.46910343 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.449857226 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.279253068 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.459042058 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.467042874 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.454599431 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.452824103 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.451291512 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.465017398 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.457212625 seconds)
  done (took 155.586642851 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.455893064 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.104844396 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.480282838 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.606408313 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.485510804 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.457342298 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.608013148 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.530242057 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.487712898 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.461938539 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.458712445 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.824876138 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.467958767 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.081223525 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.690290132 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.63516371 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.080404221 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.486994305 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.459286084 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.457717309 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.615993614 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.469610195 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.823120213 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.110818842 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.483828343 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.109043364 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.450056944 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.463824339 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.463830653 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.104861856 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.477274478 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.805049762 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.550289592 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.529368596 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.133359137 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.071389396 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.069157008 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.629050246 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.459884942 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.460139388 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.459125795 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.447601908 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.110461507 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.482974564 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.463942076 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.098852704 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.484419072 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.465598953 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.466627495 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.459934604 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.533514815 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.558537282 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.837413732 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.110196609 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.571113659 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.476316118 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.61689922 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.865400034 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.463872281 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.052648136 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.443798252 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.150024086 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.492957749 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.444160433 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.461044504 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.46817475 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.639933276 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.621887843 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.057384931 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.479832721 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.05452615 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.661411634 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.469168973 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.464135978 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.46754905 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.151012441 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.078632164 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.656672467 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.631509406 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.696864308 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.448231691 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.466567107 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.448956308 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.559582902 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.464742397 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.151191669 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.079605892 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.486530421 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.466433076 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.466053599 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.467220622 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.668633983 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.170466852 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.581204947 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.04160657 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.853551692 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.843180932 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.474488777 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.535185243 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.490234441 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.835566848 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.475912505 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.534950749 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.941619378 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.834379328 seconds)
  done (took 176.366043407 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.740246099 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.809782416 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.575788325 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.621542512 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.136845331 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.092295383 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.863531778 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.632417188 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.596779936 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.756468289 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.817355401 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.568078859 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.673915361 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.557058048 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.2441161 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.556848726 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.584099389 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.616231566 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.595298661 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.592136691 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.200687556 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.801332601 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.674689672 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.623887042 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.580910438 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.306012241 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.085621311 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.022722489 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.663140463 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.953401551 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.03764981 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.690746415 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.565617863 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.246460872 seconds)
  done (took 71.450497834 seconds)
done (took 733.359687482 seconds)
SAVING RESULT...
DONE!
