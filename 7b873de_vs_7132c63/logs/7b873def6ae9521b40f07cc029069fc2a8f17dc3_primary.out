cset: moving following pidspec: 28338
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.41423062 seconds)
loading group "string"... done (took 0.595667933 seconds)
loading group "linalg"... done (took 7.65237376 seconds)
loading group "parallel"... done (took 0.174983005 seconds)
loading group "find"... done (took 1.199264616 seconds)
loading group "tuple"... done (took 2.135178193 seconds)
loading group "dates"... done (took 1.348192288 seconds)
loading group "micro"... done (took 0.248139436 seconds)
loading group "io"... done (took 0.986046424 seconds)
loading group "scalar"... done (took 42.349030048 seconds)
loading group "sparse"... done (took 14.062035736 seconds)
loading group "broadcast"... done (took 1.104588677 seconds)
loading group "union"... done (took 15.059999592 seconds)
loading group "simd"... done (took 5.086392665 seconds)
loading group "random"... done (took 10.079696974 seconds)
loading group "problem"... done (took 2.025431111 seconds)
loading group "array"... done (took 23.504751413 seconds)
loading group "misc"... done (took 2.085508086 seconds)
loading group "sort"... done (took 3.49802294 seconds)
loading group "collection"... done (took 19.840376053 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576133704 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14539214 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.153335762 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133935983 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209977454 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160177074 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161242085 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101016606 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.970275795 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174913801 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156139415 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528596798 seconds)
done (took 5.210258728 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.244457194 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095457531 seconds)
    (2/2) benchmarking "String"...
    done (took 0.107409106 seconds)
  done (took 0.888474132 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078808574 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146019322 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09753907 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079866581 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097893644 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079259984 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.101387929 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095069952 seconds)
  done (took 1.383378459 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087442741 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.100082141 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085167143 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099398057 seconds)
  done (took 1.056018306 seconds)
done (took 4.345654749 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.74048837 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279239102 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20667595 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.47303297 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203906853 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222919245 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681364376 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348441974 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253868988 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101999754 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.145979982 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392291683 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140858223 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684500612 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09362355 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127785072 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.18055719 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454349182 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084099889 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111059138 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119373161 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14490775 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.135755313 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094140754 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.189499469 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082191855 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194739967 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110827067 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080724885 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277380239 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203073586 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689919742 seconds)
  done (took 10.973045044 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112058466 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137461001 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101224746 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14134221 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136597824 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102550265 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08624818 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100302783 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125178733 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180591031 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134077943 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124550958 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097925724 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084153531 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118289108 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248897108 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123643954 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101257476 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103055641 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089658516 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142240339 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115937822 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112219265 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095412664 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17055745 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223884295 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114233976 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.130004681 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099938977 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11525909 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145366755 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1468072 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098054541 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082507121 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177197444 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127650461 seconds)
  done (took 5.246805626 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.092315331 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195134748 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122778938 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172852904 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08216848 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146038651 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095972439 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11663797 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261975782 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.118108128 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177330201 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143256252 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099698122 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096663025 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082353893 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099661055 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.616235256 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1255326 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155263896 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118015603 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10531827 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086429159 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367458056 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106464795 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082970872 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100696748 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071134594 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132182299 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16629389 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102507528 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.171299751 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121974495 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082831866 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137307583 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207183896 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.127226718 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079368182 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128904141 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13811322 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08052764 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096837542 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17840273 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087169283 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098990628 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121183038 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121134905 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134328711 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099679579 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098141156 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204236059 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080407697 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09826222 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.966991964 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181760382 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104983092 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098055116 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330375857 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100486515 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10578903 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079065329 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.312001006 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187476421 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099092497 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081745154 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098054365 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082281649 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.402012124 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083117046 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.709827838 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082523994 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107018487 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085470262 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096531283 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105194993 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089485351 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117868669 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082571653 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100978318 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081126525 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098632076 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082836233 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096423018 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109406489 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087335214 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098273225 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150787532 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094949899 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101354243 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130299571 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101838828 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079763383 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133948199 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099584221 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081162774 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136130724 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099975336 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092024646 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100959021 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143912629 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098209038 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.166554132 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080696225 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12697187 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101348694 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115431845 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112675306 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100455864 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085851667 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.0971215 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079573446 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166377992 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08219073 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099564727 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083250459 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113921643 seconds)
  done (took 22.704419091 seconds)
done (took 40.702824308 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.329306244 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105295413 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10442636 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10433414 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101126226 seconds)
  done (took 1.50513186 seconds)
done (took 2.242917722 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.168059245 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118005201 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098120869 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.130871316 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078804644 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.134986237 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.132810921 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096805914 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.135799147 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096254915 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.130229556 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079043788 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094555818 seconds)
  done (took 2.253478635 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09517239 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116027989 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084507974 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113374816 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077822175 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113841471 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094146879 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120214039 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113967215 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087280532 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095079044 seconds)
  done (took 1.83912147 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094485565 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115591012 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08512628 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112333464 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078428527 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113093226 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094680371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119575895 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111975324 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087630388 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09620648 seconds)
  done (took 1.838335367 seconds)
done (took 6.655095631 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09134419 seconds)
  done (took 0.815920287 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.920462835 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.833919122 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112888813 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150642777 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.32089566 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19775135 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.484497607 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129618251 seconds)
  done (took 11.065285595 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.11468216 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.114930983 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101275441 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086851204 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101922943 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085287809 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099688593 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102349797 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086110102 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104834014 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087393686 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100880036 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100663689 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08655703 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103649711 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085083512 seconds)
  done (took 2.354861056 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119598862 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117425774 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105548877 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107423257 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08659797 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10407298 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105722612 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088537848 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101079103 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103126175 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089433467 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104641522 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102767852 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080611736 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107598384 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109688868 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086732032 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107387569 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10803485 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091735274 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109868992 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096064221 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088729502 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10854867 seconds)
  done (took 3.269954543 seconds)
done (took 18.237559502 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158906197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109256412 seconds)
  done (took 1.003722067 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095393809 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114283571 seconds)
  done (took 0.94538928 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097852905 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096062115 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121883692 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108567693 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08139372 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097774191 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120990992 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081938654 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097360389 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098439174 seconds)
  done (took 1.74196113 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083152606 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10964533 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100818237 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095865707 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107148154 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097059472 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090303103 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101348887 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111408253 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078788175 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103863567 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116719922 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08742941 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119249491 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107114483 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.1003438 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08703878 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100883138 seconds)
  done (took 2.537640384 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080531042 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098475426 seconds)
  done (took 0.922967679 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082205163 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094501116 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082606835 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100614617 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09713879 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079350814 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096709674 seconds)
  done (took 1.375152042 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.449638611 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138588686 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266137886 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08606159 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122343516 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302124357 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096666141 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085188972 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103089742 seconds)
  done (took 2.451470682 seconds)
done (took 11.72028769 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093647542 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115008428 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11477889 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46100847 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110864551 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099493249 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161257607 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255631321 seconds)
done (took 2.160658691 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.147239156 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.591316516 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.428909644 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235186079 seconds)
  done (took 2.007203961 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.401527794 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100389307 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084137742 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082978117 seconds)
  done (took 1.424140156 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079504828 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101243763 seconds)
  done (took 0.931778336 seconds)
done (took 5.265412445 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080271305 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.132045534 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081245778 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09933409 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079308425 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.102100431 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07926093 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098623971 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082086085 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099972828 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098732798 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081849506 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098258661 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081841247 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096670722 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079531866 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098587075 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079401626 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096800001 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079756796 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098964462 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079778945 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096260414 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079751049 seconds)
  done (took 2.964780671 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099462806 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099523065 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104574563 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087479622 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10439034 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087865805 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104779384 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099278871 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088082704 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10374693 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103689929 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086496292 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101943484 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087182985 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102190176 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103845697 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088430198 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101232188 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084636559 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103906628 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10513684 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083046497 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104192229 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105027814 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086732511 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104172184 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083968007 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100699845 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104606954 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086080017 seconds)
  done (took 3.6618251 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08506648 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095462474 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080670856 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104431237 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080062932 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099450472 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080488424 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098734948 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080175814 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09833897 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08157403 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098490601 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080264875 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099635991 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098543962 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084052246 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115234076 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081043055 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097947886 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080697611 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101832715 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080459529 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097864082 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07945951 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097879136 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078924004 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09821949 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08000396 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098107513 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080616175 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101741057 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083283747 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097775484 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103969004 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084343548 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097377195 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084410628 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.097139518 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081770403 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097164826 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080427492 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097958732 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080001193 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105090167 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079878526 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100468125 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080312425 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099705372 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080214468 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101511068 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096757897 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080680686 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100259888 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082382063 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102275199 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080281178 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099029239 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07951176 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098729413 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079868157 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098020877 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079730057 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100439106 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081472305 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113944313 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.104056016 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080008284 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099374452 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081597227 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099976816 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.082090447 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113311912 seconds)
  done (took 7.341628683 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084815104 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106811695 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081986083 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101058274 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078469783 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098984089 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102121378 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080706252 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100023783 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088112638 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09852382 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08204521 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100683352 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110862269 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082170304 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099790127 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087006779 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097356363 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080945457 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101689124 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081213391 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102899006 seconds)
  done (took 2.81453842 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207762817 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102968722 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142263935 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106913986 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083773874 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108763475 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104157945 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08727338 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106148776 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085938356 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102885931 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104961492 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084905378 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103246747 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103809081 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085638261 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105416961 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086063074 seconds)
  done (took 2.681941983 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09326386 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.208580784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105251401 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10160456 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101386119 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086006158 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106896052 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110951812 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.0853564 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101754161 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092418681 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103860153 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103684791 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083464795 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103608257 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084568109 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104065891 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083664698 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111308062 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106924768 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106295748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092935628 seconds)
  done (took 3.049338921 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096376798 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101929401 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121109838 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086470414 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098298644 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081724309 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10858487 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083760831 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108503384 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103172858 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083565782 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100960444 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089438306 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101531728 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106744076 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083466605 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103250894 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083756925 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104266014 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079228865 seconds)
  done (took 2.69444004 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10328826 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102940417 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10201487 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094726407 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102763171 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083606641 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112754487 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102426827 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084169544 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127727364 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103027576 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08439983 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111923981 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109091289 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102755761 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095355329 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112143425 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112345303 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084470933 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102737641 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127875411 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085137619 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111661887 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103399287 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084566466 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102625761 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102887535 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091029256 seconds)
  done (took 3.615112262 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082160725 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101207382 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083548576 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09920404 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08097731 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09965089 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081383232 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098513004 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083499463 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098681851 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083611988 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101217624 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083530628 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101020202 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082848982 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101723602 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083553134 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099144529 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080571181 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099750873 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082760975 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102254708 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082873733 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099497308 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081058285 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102189049 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080515796 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098790926 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083201194 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099047568 seconds)
  done (took 3.510657042 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09197483 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108704161 seconds)
  done (took 0.973523237 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079300249 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11623099 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08096463 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105623238 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088368712 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103463061 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110252885 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088755289 seconds)
  done (took 1.545065511 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097695074 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114214942 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086093349 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116411906 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113031173 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100185945 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175015663 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104394706 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108551505 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081928112 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117036299 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083267301 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108474534 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083882632 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109067631 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090039057 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100105715 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10883602 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087542289 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101726408 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085620198 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11476761 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104812138 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081715672 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103793323 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094175552 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11547989 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103787004 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087999489 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110595342 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089964356 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09654122 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084461134 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103920179 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100842992 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093987734 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12062852 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086332074 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112865228 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103845292 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096762948 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098225074 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10769157 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09106479 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1131628 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085219982 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103919248 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080272952 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10055786 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08701268 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098382381 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102968389 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078984256 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109787149 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08887511 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114485303 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082688375 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10393276 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105408998 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087799382 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110001871 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086685338 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106089766 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084435415 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113076622 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.10697666 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095016257 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098622464 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078975583 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101678117 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09453005 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128588238 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109823275 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085149446 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104874302 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08175673 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106637473 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104529144 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09088432 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109204887 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085742924 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110853634 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112499735 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085242639 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106596286 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110985514 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083186866 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105953816 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082482208 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121726652 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08354978 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101242834 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.10087261 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096174273 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106964617 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084725156 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.100642619 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092386466 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09761042 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105002236 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086497818 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103291875 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096191345 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109239034 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109568721 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094247744 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111206347 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084991265 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106685736 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100110041 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087727622 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10178505 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092140896 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09722226 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087450476 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10432631 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085459878 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113094448 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.10124622 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08514866 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111530854 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090428985 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101628012 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099488821 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089030814 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103439168 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089168274 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112230363 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08346111 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09811822 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098659357 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088513537 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103526405 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08942778 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110487377 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087732545 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098955238 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101530763 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090363502 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.114635637 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085593669 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.104835889 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110134061 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085976989 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103192853 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091660162 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106073924 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085250209 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110789107 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103768177 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080381266 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107985491 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087704209 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102213551 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088469909 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108254854 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106177801 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086098126 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103291576 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091429817 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105762784 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083783914 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103368709 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083798392 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11543254 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106478695 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080394265 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100768423 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093341273 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101680127 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102865504 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084939177 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105880948 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086085903 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102159792 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084580128 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105779128 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117105161 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089995012 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106085001 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090553585 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115462975 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103431111 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087538397 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103825597 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086669358 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105398756 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093960025 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110339228 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110375056 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087028969 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100454728 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091389549 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111623654 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103787166 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083179338 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102824665 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090324722 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110948154 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090487465 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105621036 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102265198 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085266479 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108819105 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088015184 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104102368 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084348545 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109072912 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102848461 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092394232 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10544577 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113794901 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089445435 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099419357 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088607232 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103392397 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091426588 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100066779 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082282789 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103502801 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105058509 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084817886 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106762305 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079629453 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11131089 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093385927 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105141394 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083979277 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10391447 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110771632 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086586969 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108864991 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089233169 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111679381 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115371261 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085373352 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106955201 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096485821 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104589954 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078549958 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109630499 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102798794 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085277346 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102949745 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083481552 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107937195 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095171353 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112925025 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097882265 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088527239 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103151832 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084122111 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100318994 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09026394 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108089897 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086649009 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111976348 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106227015 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089607245 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108961601 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084762634 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106258741 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105639279 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089056783 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105945194 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088392955 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103849197 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088742808 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103508621 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083237291 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106831395 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10482883 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085728907 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110649939 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084658171 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104592821 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088398213 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105565551 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105152966 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085748976 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103944263 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08843475 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105349112 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.0856756 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107121733 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080232306 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111802901 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104043543 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094510934 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105508254 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082289935 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111722715 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088269084 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110605178 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106000645 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08671423 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106377291 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085847211 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107938516 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092247378 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102265829 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116209946 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094551889 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105494613 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088805049 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106119908 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106378423 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085548593 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10640715 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087818075 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105207352 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085987343 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110122546 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088598185 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106471681 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108064076 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087614479 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105469093 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088618258 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099603576 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084843097 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104404202 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085815287 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116471426 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105746962 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085603423 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104421541 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087204425 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104930834 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082470326 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114751642 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114728516 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086811093 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113094198 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104215894 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088691422 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116776361 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07985171 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10357602 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083864076 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102985492 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113105109 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088140359 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114618944 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085713004 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104496287 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083037431 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106455268 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.093534147 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09968486 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102026796 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090330997 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103917507 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085896737 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106757665 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088992041 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107335318 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116217343 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085949904 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.1062138 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087094846 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103244895 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084787456 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104434478 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088721154 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106762227 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082743662 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103053261 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10496498 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087511623 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105491278 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08628518 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107289942 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093215413 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105145579 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107395088 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09091519 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099898963 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090108209 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105028672 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086448998 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104017552 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08996142 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109418381 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106021643 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095943926 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105262954 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087320608 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105813393 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10368387 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087073258 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105813318 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086847371 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105098141 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087870674 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114744484 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083786728 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110098118 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10538022 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087139043 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113085501 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087191477 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109043806 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113507676 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086230124 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107159077 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094271405 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109958853 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108639665 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088483377 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.1067778 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092758032 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105114988 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092333802 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105940078 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08695298 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10779725 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10331299 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085989143 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105866157 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08618608 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113772291 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087800968 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105327304 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104907366 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08524269 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106829599 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090729068 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114085103 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089365272 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109699449 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081156354 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.104023921 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107875103 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084554646 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107628207 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089616981 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112320123 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089616759 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107227474 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104853472 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096598931 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112347106 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090171975 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10417385 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089850496 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107972551 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108518448 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087455699 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105746291 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088982761 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110581028 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088516863 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105443395 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114344796 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090288619 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107383257 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088070534 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10726716 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086602984 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.1017408 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087196742 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108699056 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111827955 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089240762 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106622411 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097976104 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104167523 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086745553 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111986231 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105777663 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091853596 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.10174977 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088706422 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107714091 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088167879 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102249074 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104986553 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085473388 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109036153 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086509618 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101938311 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098439953 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116407094 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109449246 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08613995 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105178063 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08189826 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101959335 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085568504 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10854518 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088749745 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118262307 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105293323 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086303326 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101448831 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087840055 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109879655 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089926053 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.103789682 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081764991 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106531106 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109937216 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093712534 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10510678 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086651339 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110062089 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08917213 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.104404792 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11170047 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083918808 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109412998 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100820168 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107815409 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087040152 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113615076 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115523043 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088185696 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10233632 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087423546 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109934842 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106857962 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088227196 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107804309 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103822822 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11076812 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105213258 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086368486 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109284848 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087333923 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116475066 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088333859 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108107256 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111291871 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089439946 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11677424 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089956234 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115368676 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110152058 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090300166 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105580436 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08860707 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105463539 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085281716 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108797433 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107358485 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092314209 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116649632 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086137951 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119134837 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117375729 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089799756 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103889521 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087164914 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106770641 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082143843 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.112074374 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085316517 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106076019 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106110046 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087084639 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107271221 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093341464 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107704582 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088930457 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107728548 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081415166 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109613576 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109770747 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088142379 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103397134 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087995205 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108655761 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091979702 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112204979 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084861552 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109643266 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109254859 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088100149 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101721916 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094970032 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106683688 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090393347 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106533671 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087499686 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108800731 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110600375 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093422748 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107917075 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089334752 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116268448 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110277868 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08556809 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104531379 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092892991 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105121171 seconds)
  done (took 59.861656308 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145603235 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080990406 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098127451 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079847545 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11440146 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101039113 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081597117 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103316283 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084115275 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105695145 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082198517 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102401998 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112827112 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127397532 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09551031 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108655868 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1019388 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084954938 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102268213 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083979729 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112576613 seconds)
  done (took 2.930825696 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105076145 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117411073 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115286274 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11843984 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089841337 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114401551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114922823 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114389884 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098835433 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11130057 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119739796 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115816538 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091929458 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112556469 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111608454 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095427642 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122329342 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11103329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117870962 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098103504 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116973273 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119518648 seconds)
  done (took 3.254331247 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08511886 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101641914 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085953039 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098307521 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084381381 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100477512 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091406446 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105604391 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090727764 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106181351 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105654519 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.086518627 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108094113 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082134391 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106788847 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085449931 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156032852 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110241488 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086375574 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1096922 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.103100173 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089654141 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102284248 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083472033 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.106005009 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09184191 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108243578 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084799869 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107033275 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085437421 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108119005 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104564748 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088776565 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107384916 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085963368 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10569104 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086950201 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107266093 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083312485 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105048326 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087459051 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.10341383 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087675084 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110267819 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.105489938 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.085801468 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109336983 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088524537 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.10232393 seconds)
  done (took 5.635933506 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104463159 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166502903 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090115212 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149406287 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123643616 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115653588 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091610612 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145861734 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106460665 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086275236 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127506774 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124610198 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10751812 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09392189 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115505055 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.1079516 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089206997 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107327959 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.112549542 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088105232 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112898253 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094875645 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125490163 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12294381 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112687999 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086941508 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107822806 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112579176 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101726598 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113746104 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113396113 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094552895 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125342893 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110831479 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087054564 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111362527 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126224083 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088340723 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111462926 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105232664 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090201442 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112871475 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115018971 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106371022 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108940041 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11363978 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088036361 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105603276 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12304461 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091950708 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11765385 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125345744 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091685218 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110266419 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113066937 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123964269 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087973521 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106435859 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091088701 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122481579 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105591216 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093231117 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124200078 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109935624 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095019953 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120700853 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111555097 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108149184 seconds)
  done (took 8.405726016 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09322889 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11125329 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120477186 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121838777 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092183656 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113545954 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113606167 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095659405 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116127352 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119528695 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11261517 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137544928 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090135358 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119079638 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115614257 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09510485 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115544885 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115048862 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094620335 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113026947 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11379978 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123876385 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094633749 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125243589 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146995625 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110820979 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113691131 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09482458 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125268415 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114385746 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127368103 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09337661 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113802856 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121641362 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12377023 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091514077 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104249881 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111870972 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09237423 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114584233 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107010014 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122110518 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091694988 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105717816 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111033956 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091215014 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120884309 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123855039 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116093228 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118025708 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.093085656 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123942615 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113217859 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113467839 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100995734 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148786499 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122766387 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122148219 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111452732 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121476227 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120437957 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107799882 seconds)
  done (took 7.800843097 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107482334 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116116275 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116600266 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09989425 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083376359 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10947382 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083673282 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102960618 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115433709 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094391605 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1174816 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109466883 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093657714 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116924763 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10868134 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112297806 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089803364 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109712163 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114705412 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10890944 seconds)
  done (took 2.947639658 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094806623 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124079494 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085213538 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11191772 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108012291 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093078537 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110440999 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11198894 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088997769 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112721986 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099955206 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121271199 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109506319 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095232696 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121030753 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118041965 seconds)
  done (took 2.539896461 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098172487 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117788461 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120776717 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086036438 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106050245 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103481083 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087600218 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105516204 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085310323 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125520731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088902847 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110744383 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107177171 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083129734 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101100696 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088047025 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102457671 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082442022 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105427512 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121317776 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098277984 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106128516 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106616659 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087442629 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106556756 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091578857 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106258567 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103656115 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085750011 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109333568 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089680606 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115812148 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104335399 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085586664 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107243735 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087089875 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110264362 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109283489 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089834775 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106034066 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083830451 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105026231 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084852816 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.1068175 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100914401 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.0862461 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100710691 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091595003 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103128128 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085362397 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105452245 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106580706 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086630016 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118830811 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112372214 seconds)
  done (took 6.350229724 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098934908 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109197558 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084792715 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108446721 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091746599 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112517828 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113689308 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090811273 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111948499 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086936618 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112376548 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091671839 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112491924 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112823556 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090859528 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113087232 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084568044 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111464978 seconds)
  done (took 2.678966251 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090825544 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105587824 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092498949 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107409116 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087092184 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11359342 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084213398 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109634548 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108047801 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090497695 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109072806 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091722665 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107545019 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091742306 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110971675 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089434173 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113818481 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108147683 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088997809 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106510971 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092204002 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108682906 seconds)
  done (took 3.050716782 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.114970698 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124865156 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096241399 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230670532 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102199603 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13150382 seconds)
  done (took 1.643639455 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10992688 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121569843 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107297687 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106935342 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116520764 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110100023 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09037696 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113173898 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121995139 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105149346 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109864726 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122329085 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121723068 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101878336 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120392988 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119383683 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112138185 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0919316 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111012592 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133584338 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092004943 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123477106 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112878743 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091012047 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114594944 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121801964 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123277641 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127496181 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090086209 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123060888 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119621593 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091740923 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123610079 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125135108 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112357484 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10020248 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111663596 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129972256 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116553236 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117886559 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089096123 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118566547 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12310151 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097233304 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124717723 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113176523 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118494994 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092263415 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11301522 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139874281 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119703696 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100333909 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12090577 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123205292 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124190321 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140567518 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126650834 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099488484 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119216393 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124574579 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120185296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117617511 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098656363 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126218825 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118357806 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12047594 seconds)
  done (took 8.396638494 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101979513 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127032669 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108311443 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123537238 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097039277 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10853753 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108695027 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087439892 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10861464 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107606419 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152386659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089031769 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119305544 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119083019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109790824 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088251075 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109827657 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118642744 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089485893 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136625288 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108688108 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118387096 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118800477 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096896762 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122789061 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114934793 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108137291 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088720687 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108199151 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108338241 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094132834 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108854884 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118021601 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086445825 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118075922 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108906459 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108865602 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094418236 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110384494 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118921011 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121989361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112940897 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11412611 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113701243 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126924167 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092620889 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114452901 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112800529 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092274607 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112729004 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127908805 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106090513 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125503599 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122427594 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110909326 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110622185 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088820896 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108434748 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088654773 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116004722 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117912325 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108421546 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1374528 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089381636 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114268184 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123569901 seconds)
  done (took 8.139636347 seconds)
done (took 159.238164435 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.228010375 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.199106269 seconds)
  done (took 1.279293266 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099145604 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138591986 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102033949 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174475571 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106985954 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11902965 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13893942 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097827331 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10657476 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085448296 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107478996 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087449335 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172651378 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086164965 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107056214 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108470545 seconds)
  done (took 2.697889124 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.11841685 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255182029 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130924735 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.111786105 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094582571 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114509862 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088732353 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118357105 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094138652 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.111629201 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093455827 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.11310821 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089366606 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107945013 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11428394 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09095069 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110759754 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093159214 seconds)
  done (took 2.91227207 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112695055 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149061043 seconds)
  done (took 1.124480542 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241734799 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.16138733 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.234262833 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.471326316 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.274055545 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.356127048 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.20101034 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.211411566 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166273135 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208719399 seconds)
  done (took 3.381441958 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11951612 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180554132 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318408599 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156125763 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106850551 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130614314 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157408711 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131954094 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122713904 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103286179 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122666596 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118341732 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139601049 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097213927 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119314711 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124140393 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125751483 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.119819727 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120458766 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100964884 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144381893 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.111907341 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099453442 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.119932665 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.124042017 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.103334263 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.111943695 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08962869 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122870179 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119398621 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.096892923 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131900961 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12427645 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.161007882 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12651549 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.160077491 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118415174 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091222183 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117175503 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093249362 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119570823 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119146195 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124949563 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097201846 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105977742 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097544067 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107354963 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087284216 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116688144 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122109518 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.096586559 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115474297 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157912036 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124045824 seconds)
  done (took 7.540171688 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.791165636 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157098986 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090207289 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.876724246 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136862104 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103737116 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.770528226 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11505739 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259176446 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.754183786 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135524244 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121247607 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205408886 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260974042 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937906009 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289860602 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.667758716 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123297089 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152027164 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153114513 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11895332 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137373584 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109080375 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430943362 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117005473 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111836252 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097454524 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121810956 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160997036 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127421798 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114078214 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178202926 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249191296 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203606107 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118399885 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090657727 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115730015 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.172948245 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264560205 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193717594 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180569457 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110100328 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11116673 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100862592 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137044732 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109734252 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16335777 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175660171 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172022837 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115661779 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118973747 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098363977 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121527623 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164544499 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122126655 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311145517 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323656667 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089008085 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122175297 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126135542 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259793245 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102034414 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224765442 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141636738 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212419979 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08982192 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794876402 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169696924 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111699234 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095053883 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12074003 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116798757 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099161233 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167926774 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407128901 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123709608 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116227978 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091211236 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230956947 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126204339 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090022086 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16479185 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120926818 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12173447 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10292447 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123915051 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170709179 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250013377 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099993933 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120933911 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114763239 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102519356 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116481156 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210395476 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220065817 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.184481542 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213955237 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099160083 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185669993 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1707182 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119758856 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176228833 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121351101 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102871356 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125111904 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219258106 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147116307 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124734411 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093063168 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121648247 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148557699 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12849754 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096374749 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195003723 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458944546 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167418939 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109555311 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128732004 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097852688 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184602732 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096071367 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265557661 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121851739 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169759462 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120160797 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087783154 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12580494 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165084928 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122671646 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121693835 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100024696 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120174296 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236585801 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216752346 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121436784 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22225505 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185572826 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117855211 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172639232 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121629978 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167978504 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120699694 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121376013 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094559516 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78642874 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125624751 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100198114 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120521198 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190214988 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111464334 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104399505 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.130287195 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11121495 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765383591 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128270375 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122397131 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10268548 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118150681 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122033661 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097488383 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117028228 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161957874 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233212883 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12064321 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121840664 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105199912 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.186910663 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09627685 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127574361 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.127537115 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105068282 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124082918 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117248898 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103879305 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191650582 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163680686 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219356778 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575264964 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112556661 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127233792 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228163303 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090109992 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29210138 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119558186 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225448129 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164367875 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099439425 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320207732 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185998745 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186409477 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104742739 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195050525 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087830475 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118735887 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168060104 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11211341 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097768878 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.186687102 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102483179 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122946429 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.972582319 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089827675 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250646905 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087291026 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.194753095 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095548818 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121198694 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29054299 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089709397 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130619947 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165921705 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11686327 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126215166 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.846897081 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124664398 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124003394 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095133959 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220610423 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164627474 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120555557 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120008257 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097593744 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183766706 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210966143 seconds)
  done (took 44.280073678 seconds)
done (took 64.075954863 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28560014 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220778568 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268331901 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17049843 seconds)
  done (took 1.909097526 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172204136 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150896745 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122230889 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107906787 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151211342 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084731275 seconds)
  done (took 1.678868961 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.362561452 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276801649 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244702777 seconds)
  done (took 1.77875147 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.325502686 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.257499219 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47763531 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32991039 seconds)
  done (took 2.378875674 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.216468977 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.140791606 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.116161891 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107325764 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.203463804 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.25098208 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142066808 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20209828 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121782644 seconds)
  done (took 2.438545845 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.178458575 seconds)
done (took 11.255526648 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.331341085 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.204345151 seconds)
    (3/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.186527832 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.154638073 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.255145827 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.157756212 seconds)
    (7/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.163162612 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.127924397 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097051653 seconds)
    (10/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.137125104 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.094372446 seconds)
    (12/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.204826713 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.185103685 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127899729 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.155394997 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.233276421 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099075108 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.173733071 seconds)
    (19/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.221168512 seconds)
    (20/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.178497867 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.226525636 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.156078841 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.243721992 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.279844986 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.103164563 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.132388572 seconds)
    (27/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.150424842 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.140024858 seconds)
    (29/309) benchmarking ("sort", Float64, false)...
    done (took 0.170672143 seconds)
    (30/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.204981746 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090538189 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.202160523 seconds)
    (33/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.2039795 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146823684 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085686216 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.177325127 seconds)
    (37/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.216799681 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098662591 seconds)
    (39/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.109299558 seconds)
    (40/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153781742 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106135639 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118872454 seconds)
    (43/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.144820365 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.14643454 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156171365 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.162579074 seconds)
    (47/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.189886152 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.155092835 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.140948669 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.08138924 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.195494805 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119864127 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098268704 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.13842998 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127569526 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095428409 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110246964 seconds)
    (58/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.084651068 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.116243382 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109651104 seconds)
    (61/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.128896301 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.190273299 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088944565 seconds)
    (64/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.118925434 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090144007 seconds)
    (66/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114389288 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185676515 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091386827 seconds)
    (69/309) benchmarking ("sort", Int8, false)...
    done (took 0.189932894 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.18252544 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.093687641 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155655462 seconds)
    (73/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.120559774 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.199260919 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.116764801 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.114907921 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.196708043 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089437986 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.148312062 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.228572108 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.11285653 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.097838674 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.224838846 seconds)
    (84/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.100617917 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.125468905 seconds)
    (86/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14039369 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066368646 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116503501 seconds)
    (89/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.195640071 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11623781 seconds)
    (91/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.12629022 seconds)
    (92/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.213928794 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.154829376 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.14724865 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.181751823 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.206288449 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094289824 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.124479839 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13640105 seconds)
    (100/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06661212 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.120384974 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.095650278 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.071847386 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.143044286 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087997743 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.139729652 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.161437937 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095311697 seconds)
    (109/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175510148 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066806222 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109961153 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117498059 seconds)
    (113/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.168062887 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111298375 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.097623028 seconds)
    (116/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092104196 seconds)
    (117/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.132735684 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110834076 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194605143 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067312414 seconds)
    (121/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140043567 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.226516745 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084455774 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111477003 seconds)
    (125/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066551073 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.313506547 seconds)
    (127/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.192703839 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.172913228 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138589859 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115767703 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.182954051 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120983827 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.11379218 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067749724 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099149691 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.141369699 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096030828 seconds)
    (138/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.14173181 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118054814 seconds)
    (140/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.122837295 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121369682 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086779714 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112695944 seconds)
    (144/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092700738 seconds)
    (145/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120435414 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.068619235 seconds)
    (147/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115958736 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096521754 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118609456 seconds)
    (150/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095687626 seconds)
    (151/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118672009 seconds)
    (152/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093645971 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.139475203 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109616614 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094047529 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110106112 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110115563 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179790584 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.149533289 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101613658 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109188515 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088578892 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110958334 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120872181 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09413377 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.093946863 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157018303 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120959511 seconds)
    (169/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066380549 seconds)
    (170/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.128331173 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.111675454 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.134671192 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067602296 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.192109479 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111710084 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109507725 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092546639 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097285628 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091312923 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093893116 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116281893 seconds)
    (182/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066420174 seconds)
    (183/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11177702 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.15054484 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196676879 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.186231317 seconds)
    (187/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122901138 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092726556 seconds)
    (189/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111877318 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086255845 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109637332 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.185192048 seconds)
    (193/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094234737 seconds)
    (194/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.1187593 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095567873 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110386689 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.1363822 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066430141 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112467643 seconds)
    (200/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.108409032 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.106763015 seconds)
    (202/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.0911398 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093838896 seconds)
    (204/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.101035275 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088121742 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21759573 seconds)
    (207/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.099687571 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067818301 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13322599 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109466432 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.164316999 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078661752 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115457313 seconds)
    (214/309) benchmarking ("sort", Float32, false)...
    done (took 0.149100766 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119198614 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138683838 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150480394 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119170053 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095294238 seconds)
    (220/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116987846 seconds)
    (221/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06762444 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.138278554 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069217085 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.218975602 seconds)
    (225/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.143221526 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.125023509 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.101134733 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.122791938 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083353768 seconds)
    (230/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.082435152 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.19265932 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122786689 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091424339 seconds)
    (234/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.073471857 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.096901082 seconds)
    (236/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154039602 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.225213933 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128121056 seconds)
    (239/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069756924 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112537644 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085492719 seconds)
    (242/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110737021 seconds)
    (243/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155507602 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09193555 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.117739114 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.214873288 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.172256447 seconds)
    (248/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.097870096 seconds)
    (249/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168212843 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.146685647 seconds)
    (251/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079696878 seconds)
    (252/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117504753 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.117370065 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.072124939 seconds)
    (255/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.073966598 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.163561961 seconds)
    (257/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.072648564 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.124359065 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.072182194 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07304343 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.117811946 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092162527 seconds)
    (263/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108430032 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072600485 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.123464211 seconds)
    (266/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.073350856 seconds)
    (267/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.135235435 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094276631 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.099299556 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100663076 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.181845603 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.072778041 seconds)
    (273/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.099082379 seconds)
    (274/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106285162 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117843645 seconds)
    (276/309) benchmarking ("sort", BigInt, false)...
    done (took 0.228313008 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.137245563 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081236297 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091782237 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09945329 seconds)
    (281/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098955466 seconds)
    (282/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.171452753 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.12370558 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096683031 seconds)
    (285/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.069276208 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120551201 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086184118 seconds)
    (288/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.121681944 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109365663 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069085043 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068374974 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124929147 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093538025 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.095421365 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156249873 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.12362003 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.119254971 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069918226 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139577672 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067708497 seconds)
    (301/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.071626486 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.097743497 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.074956728 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118694156 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094856176 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.20288186 seconds)
    (307/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07257321 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.098552885 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097260459 seconds)
  done (took 40.68411424 seconds)
done (took 41.582916917 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09993997 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136823822 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097158574 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13855409 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126842523 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093417502 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124771294 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10232896 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129737926 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128666342 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099389922 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094739278 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096373345 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121704537 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097576579 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137001865 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124536876 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095049894 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.122688125 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086684676 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121985959 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089375001 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.118090498 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07345082 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.128507267 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.100597891 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.122590725 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.125940253 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088435764 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.11609063 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095662873 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.12452007 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091830783 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.131392764 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099016901 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.125426962 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098327471 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121209476 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112625568 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087034733 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11922691 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087231294 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118563888 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094872213 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117592555 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092829037 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121008412 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099858968 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136422416 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115860834 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095147049 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124025564 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096576178 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120396383 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090249106 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119611728 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116920787 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112845154 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120863604 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08983151 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120546114 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095470293 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116972462 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119751084 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095262427 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122103346 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098887298 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116897613 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097039892 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116630892 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086775167 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119416554 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114622147 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086750798 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120625337 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097633275 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110420962 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09250027 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118782163 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091904689 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11294612 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089195271 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113460258 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093161671 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113139635 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07031782 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11540305 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093492089 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110787478 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096592092 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117861263 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094003124 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113057064 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123229712 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086759732 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116685551 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.086906066 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111637333 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.08908395 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115081356 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086939239 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113852778 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.096079542 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113097649 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094294101 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124077429 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087343107 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118352006 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086650957 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110840171 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126191048 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098128206 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112266361 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089338159 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.111053502 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094349302 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110790159 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086777646 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112129154 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087114232 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118155575 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087042341 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114314799 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094214188 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126402955 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087338642 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11501521 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114114078 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087355655 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.117004387 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088059127 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.111657674 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089471898 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.102072323 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089747463 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.11190258 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095609098 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113331299 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095355222 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114149798 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096844427 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.11669605 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094365834 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117177128 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.08639425 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099245686 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089280827 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114626766 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089712554 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112461871 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089471661 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111528959 seconds)
done (took 17.12328653 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087636949 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1857968 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153240139 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142902615 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10782449 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112323972 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122630105 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119456342 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113654434 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144792544 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110823821 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133251248 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148481084 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087600874 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112569324 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09125732 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113551339 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102572684 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146152703 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134529028 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165480073 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08758083 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147764765 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13564044 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121501961 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114227859 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112914695 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091389865 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116489016 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103122936 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132943548 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116023111 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087667382 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135548623 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105004067 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122260092 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111724114 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094946593 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113394971 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087771372 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142041321 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134387246 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09381415 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118731204 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091103049 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115136389 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088718532 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122543388 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123182609 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091753292 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127952864 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158588813 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091139862 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122543932 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111815719 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098708362 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122691459 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090318139 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113665751 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090299585 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112609416 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092596091 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129745602 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143429699 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116235416 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.097287132 seconds)
  done (took 8.661664674 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104567632 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140649129 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132052952 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106686759 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113191135 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087828453 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113556917 seconds)
  done (took 1.762219917 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088722159 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13479105 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128753426 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136271619 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13487962 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109446595 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124485338 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088608606 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132077586 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089202776 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134645598 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153137985 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089825275 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121707504 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138756473 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088128255 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138057969 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088445953 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11714529 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.13786965 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091875228 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135513124 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090448498 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114620936 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102889523 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115421251 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162965843 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094282179 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116045241 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092941067 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112700097 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.169732647 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102759144 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125059808 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114439039 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104036367 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129512076 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087343105 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130753499 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119201543 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.103409932 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115142514 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.08982912 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112828406 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093326924 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124960202 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090129296 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116286149 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091531581 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135284178 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089701026 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128143345 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115033737 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.093299998 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116360334 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095076503 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125539672 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089499339 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135812992 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09091695 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133683112 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133890204 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103627821 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133034027 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091670324 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129294766 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.129086037 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.091818397 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116886137 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091905012 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131629748 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086385272 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116455468 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099861703 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116231218 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138138882 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112639394 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116674663 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100253249 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.118106313 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091913071 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.116643327 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138757135 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093329641 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11523568 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093102844 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118559625 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086882075 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114082375 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092517546 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113647948 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091120369 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11819123 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089284661 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11819181 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132207834 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090337896 seconds)
  done (took 11.908784105 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090219009 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115527789 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091881934 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115908243 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090642288 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116092884 seconds)
  done (took 1.595389621 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114692027 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119216996 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103948035 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121510479 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157483458 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130285783 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104120158 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125025097 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108197732 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102679631 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130613677 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105173132 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137163991 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122451458 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104572939 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121694747 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130899015 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100267464 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128321591 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096770602 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137512158 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122351259 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09764512 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133915147 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119400282 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096877208 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127714201 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103517547 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12855228 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125073716 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096415071 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119108595 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122381139 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098936614 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131445297 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12265605 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096055525 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121034278 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10019608 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120078695 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.13076721 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096967304 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127803956 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094767724 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124663382 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12284952 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095369917 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126208448 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130750365 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094353544 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120982977 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096175322 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119152967 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120172943 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095838221 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124589672 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095300358 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131086502 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123405664 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096446856 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119044753 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118849304 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099418153 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119883271 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104704886 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119712012 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122754045 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096166882 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123121774 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095679177 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119928647 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118389 seconds)
  done (took 9.311709641 seconds)
done (took 34.192998819 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688924515 seconds)
  done (took 1.65935739 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.714866394 seconds)
  done (took 1.687139029 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.44737695 seconds)
  done (took 17.418782639 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504698768 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.584935909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.888932923 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181182138 seconds)
  done (took 3.130565838 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.942789184 seconds)
  done (took 1.931757825 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245649402 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232192441 seconds)
  done (took 1.454747492 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.771364326 seconds)
  done (took 1.754460714 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.352338774 seconds)
  done (took 2.327933226 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333073315 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186611695 seconds)
  done (took 1.504355351 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.561253908 seconds)
  done (took 1.545937191 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.790601507 seconds)
  done (took 7.782297473 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26873898 seconds)
  done (took 1.265457591 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303720796 seconds)
  done (took 1.29317052 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.562181413 seconds)
  done (took 4.552694046 seconds)
done (took 50.287389108 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09855268 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127911926 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102790142 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124964115 seconds)
  done (took 1.438707383 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100996598 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122161211 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100952426 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121155154 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126977999 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096116427 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12387237 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101694764 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121581004 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097066351 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121829703 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120505148 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098876495 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124087192 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093815066 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12462557 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099427042 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12182996 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123886346 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096585256 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11953273 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097105509 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125289488 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094281511 seconds)
  done (took 3.667662892 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100114971 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11967948 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096360052 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119054992 seconds)
  done (took 1.432058572 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099758954 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143244119 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139140457 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100816944 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143525022 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136918244 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092326489 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118064665 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094463169 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125732028 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090219774 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149960836 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13909598 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100049401 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128141087 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088812689 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.1178219 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.141400689 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100152993 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127284747 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09321401 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126147397 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091249619 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141065357 seconds)
  done (took 3.822079849 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170505889 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127832985 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139541395 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096197759 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161185232 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141509014 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088476853 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141572546 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087772284 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132883017 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118459129 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132911017 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130467973 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088347202 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113849716 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088211038 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129313732 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12989889 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090489895 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128785987 seconds)
  done (took 3.438490168 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097765677 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118242368 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088797887 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117530376 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099339623 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121559067 seconds)
  done (took 1.643185775 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091202383 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115256531 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089844282 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115490059 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094859311 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115551285 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089046888 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116390578 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089928716 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116104257 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089697002 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11482044 seconds)
  done (took 2.237601128 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.463424462 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093965077 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121791814 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111883409 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097371895 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115932844 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103248843 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119791423 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141197128 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090433155 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115646212 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091214237 seconds)
  done (took 2.665259236 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240593273 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125858417 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293703273 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197754898 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161674142 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172346903 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155191072 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166440881 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.227300326 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158801528 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211135975 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223310386 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126302903 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221508798 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138798141 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119223641 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229686498 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222620033 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155710626 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234686469 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202705319 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166493883 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205645741 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127337937 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139313896 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170135125 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121711428 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130661381 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212227649 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206833734 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19204719 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164894137 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148615428 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245465053 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25233148 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199143539 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19365911 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136415268 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171252693 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168650217 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267898809 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112799036 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238103486 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160183237 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131238371 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197531259 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167247966 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17571654 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150358119 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140488278 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224376229 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216640327 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.220615216 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111691705 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16815228 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161314482 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168532325 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156755363 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254820304 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225338926 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182310791 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093198433 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148637974 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218437532 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184463089 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168550915 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182628182 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146847177 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220690585 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18800247 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166113816 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19170577 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.210723532 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138647786 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172063085 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175591924 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172127701 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261062646 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181580544 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122059552 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170115642 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149703068 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10497318 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195674583 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124553498 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217402331 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1509865 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134791615 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170998655 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162208796 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162270636 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202683623 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220009405 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122910141 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11195513 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156039183 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154362046 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192445489 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139353365 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160803467 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162978101 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104610576 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204843671 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098889048 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177967007 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118735274 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179212706 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185521165 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126687783 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160191254 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153554995 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149802156 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180192027 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201213376 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142700871 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13399927 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21010508 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178305745 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15088466 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180029254 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229687145 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11661255 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150732476 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22828428 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247049369 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114255842 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232946131 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156314364 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108314698 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134328923 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18142497 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156394095 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162018301 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134406769 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185131661 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240858241 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099162504 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140421773 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191405483 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134017033 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133623791 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162627672 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149828795 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111755931 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14773951 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152596855 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181519277 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208494577 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154822511 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168062039 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15137375 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252212699 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115263094 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151625606 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148901287 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120483109 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196708643 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200106206 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131306326 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205103661 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.201872044 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161656948 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172762961 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108657803 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177522426 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13201262 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120737163 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195187802 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169248345 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163742475 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197756284 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16053478 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.209989828 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184176619 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174824767 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17628158 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166464157 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158853804 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139650283 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161978791 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167568189 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096983379 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144069185 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134765607 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159660782 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143890821 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107437544 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229853356 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172944945 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1524582 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16097941 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152103662 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182245465 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129707707 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180617468 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179736464 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14903168 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199159385 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224551852 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190076489 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144035383 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207296293 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121329059 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098250471 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143253891 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171818512 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135145059 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135497474 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168102283 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183362385 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187005971 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204322825 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168987326 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180078678 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1922149 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.0954584 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170214664 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186115719 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20461556 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163415663 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138584538 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153996175 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178250053 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156918561 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260119357 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169637866 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179163962 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237319774 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151539823 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105353988 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152118052 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1870873 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154402227 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204646016 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122107809 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140996657 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162235923 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133781927 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160825191 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186573471 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163644865 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219040332 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150513881 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188280511 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12720504 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167477753 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160626295 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166638805 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081913754 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177406414 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232188896 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148963168 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171554845 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193262678 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131528772 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.180647239 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241109418 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197129733 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138554644 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161284203 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161820781 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163276546 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175435435 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179076732 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160908252 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191741138 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160608791 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136788347 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111992237 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151835817 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153701931 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135028519 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148937373 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179220448 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139846276 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191035153 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162646433 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159464905 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174021693 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150805764 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.11670251 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151027274 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247752767 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177810901 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244118958 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15137325 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179299143 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206684467 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126810605 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133210013 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106895483 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17978507 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137662428 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191527109 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.150967573 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162947836 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183824663 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221873835 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111793618 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121836902 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157488771 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175731176 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170947474 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151011232 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160160421 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208942027 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143807441 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132173153 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172092917 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162259954 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120194656 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226163686 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080890503 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15053548 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100905772 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134051043 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164923626 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237909514 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135923887 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158552155 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170284484 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169385031 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164919512 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149610332 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152517174 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170863181 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2281283 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187704078 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105420652 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158082168 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207845351 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197429645 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162067704 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141466197 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204533067 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195222274 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226556284 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141917443 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170129687 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168962962 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159166072 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187048755 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135709882 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206876871 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136754135 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226125608 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15365099 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143388741 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177257105 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.123130636 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14389551 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216863989 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176267332 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108943853 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134572959 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170625847 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178882397 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15644851 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128108498 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181180758 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126086631 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19354651 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263479105 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133542302 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155110879 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120536186 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136723573 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157959633 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159975272 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142041178 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16246018 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20880283 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135950492 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192956731 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231980972 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173520363 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175691026 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144613791 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695222049 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130728935 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196576455 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155638605 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206590085 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152196336 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1741588 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160279224 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16920017 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22541824 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160665745 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232290662 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193551638 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.204547888 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105389036 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159586796 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162802162 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144971001 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154840156 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170025671 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16107603 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154174437 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180974064 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169933512 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135222196 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141360637 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201069688 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156844587 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187984255 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18162062 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140195421 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175343006 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213637563 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107190892 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181178872 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238870518 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142501081 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150673633 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106140861 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155896329 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263572809 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124747853 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201046138 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20563352 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131557565 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195548857 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11948529 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222026511 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159648396 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180759262 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147840861 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160671096 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15695153 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137835598 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10239982 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1568688 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166201849 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150828807 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161274794 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164630371 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197752802 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096060152 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14642986 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162323316 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219907686 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218002869 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13859879 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107451065 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164092448 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152671122 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.203664253 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179389578 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108218164 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137143196 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138229335 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133509446 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137644091 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155457224 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162410797 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167010026 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207434542 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13802425 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280953944 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140670701 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128421649 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116306621 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132595728 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123129827 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148423746 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157420563 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153285468 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264046081 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147704817 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106274967 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149312847 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126240771 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109071038 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167032523 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165213574 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205936528 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118726456 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108657275 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159710201 seconds)
  done (took 81.719763726 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164436094 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131749927 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14775756 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202449078 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176497169 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270866283 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210688536 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254513423 seconds)
  done (took 2.640010306 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094371392 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14707496 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157951972 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133368567 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091468918 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120585785 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345208981 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133591905 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117282164 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121457769 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17382494 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094014883 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.52517386 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117694134 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119669809 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08283131 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116026165 seconds)
  done (took 3.767434635 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.476828461 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.716624052 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.504184043 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098099533 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.12305321 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113336954 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.669183287 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196190974 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114852854 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.482686385 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775739569 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165818223 seconds)
  done (took 18.519712068 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099477825 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.12215258 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108555657 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137095605 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096201895 seconds)
  done (took 1.6545034 seconds)
done (took 129.634012559 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104573539 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40872989 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072436508 seconds)
  done (took 1.602168653 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107908467 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137929233 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109131285 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136870595 seconds)
  done (took 1.589008693 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098100867 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130358737 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10943839 seconds)
  done (took 1.428512764 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324379208 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191618388 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.145152338 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106273558 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130357075 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102502059 seconds)
  done (took 1.43038954 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097307835 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127968351 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098998526 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130285249 seconds)
  done (took 1.551074878 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095106149 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071427147 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102107121 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075032969 seconds)
  done (took 1.435550281 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114083217 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132435687 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10463241 seconds)
  done (took 1.446176544 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130322185 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140121936 seconds)
  done (took 1.365991467 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105684425 seconds)
  done (took 1.195317879 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118370727 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169844049 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.19082366 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165874635 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.228815858 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16759294 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142193967 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114424157 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132040313 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144617686 seconds)
  done (took 2.668393128 seconds)
done (took 17.57062888 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103841853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423120455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414137749 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117211071 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722478408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381004071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047800782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147188405 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166767429 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093871471 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140706156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673526636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038629012 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378444982 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.996567083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377971009 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706170995 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094048614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120578033 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09449028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.03280535 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093107184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122719795 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092798586 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70343341 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426098598 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094994152 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376088969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092662266 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128273729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.411455502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095777304 seconds)
  done (took 16.992305909 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096251442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175929283 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098799378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138566604 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123652216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094593929 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125194793 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094178894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180516519 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12384603 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140327415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093385145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127476812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095786059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142178009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093209376 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125936626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120924858 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093332499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12280429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112464669 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12171028 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095556901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121911484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094512296 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136030818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123749156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093089689 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121756203 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098792898 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128076525 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095232308 seconds)
  done (took 4.850495456 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141897 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184318213 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128943683 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128237899 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169350779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125086259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200706351 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147459537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154852422 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123683024 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140296808 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093928349 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157235 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124524928 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115094925 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122886641 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097485194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123827237 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093723104 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123721887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140760584 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094330121 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123077995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09352353 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123951752 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137194455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095790453 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121774585 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093653842 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128232586 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100349518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124766763 seconds)
  done (took 5.17863194 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097442635 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128741389 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109722439 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138589659 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096492114 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125831631 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098309518 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126132201 seconds)
  done (took 2.024747924 seconds)
done (took 30.140327631 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.104218623 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123465331 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099309405 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135452854 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098435731 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132136933 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092148353 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.129487101 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099884897 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.12729988 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130168491 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092590355 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124456959 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093668489 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129016439 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093266882 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133674325 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096154563 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133920197 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13320312 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09486706 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129580066 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099311797 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132715508 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10538053 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133745599 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134478348 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.0987011 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12351319 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095826986 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125679539 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104055218 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122664556 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104002601 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122834186 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093050928 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122098936 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092828829 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134558447 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.129741556 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.096690898 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129152627 seconds)
  done (took 5.921209805 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109009377 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141084485 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105194125 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081708302 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117362216 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081641965 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138777691 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080388819 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11165805 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109018418 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075276182 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106959532 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078846706 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102826329 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07711317 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076322256 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109506895 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076505016 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076811988 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107095186 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080020694 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074003202 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108767414 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079603988 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104378901 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081761382 seconds)
  done (took 3.598844268 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100586169 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136016197 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113183592 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184794002 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161412251 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099430059 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133528043 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141106536 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108601652 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120808512 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096424416 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150141222 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111142402 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129675919 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092562694 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137385731 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.144391079 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094695468 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12908104 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113526694 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141486183 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132957941 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114809417 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134366377 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092140452 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124250985 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09632562 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136622431 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098199053 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.1320532 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12736568 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096643874 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124987824 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105173363 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127898766 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095249765 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142353844 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132777278 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102294208 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123767716 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096306114 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124416452 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113602748 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16766966 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121658052 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.10019207 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129132549 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103405161 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122346767 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111119708 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132439279 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.122391709 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.096231352 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.121367985 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.092797781 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13634385 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094681272 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125339002 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102594634 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126419104 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10581505 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126321764 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139024031 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.093343126 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130305666 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092618555 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123950955 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092020635 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.1464347 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094333019 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165082411 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.128557812 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094390107 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132100205 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101693389 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130264598 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094152572 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138788175 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134545206 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097439355 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132831532 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09693008 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.125839337 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111221083 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125338455 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094524178 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124104851 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128634917 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096510576 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.124033453 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107332042 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122745124 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096650192 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140849822 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092810127 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124494882 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130052149 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09916164 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.122209073 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106964757 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128709518 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094605517 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133442545 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093516767 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125725965 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132600834 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098358648 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121477902 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.098436221 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130119027 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093634419 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124727207 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095888764 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125307497 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103291093 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129814332 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127159012 seconds)
  done (took 14.958970854 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229747759 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.220131748 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.125966323 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.211675145 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.104993472 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.135239249 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213935275 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156095741 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.092995164 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.124023875 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.094352155 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.162677223 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.157137147 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.16784083 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.104570053 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123099362 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112264768 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165301618 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215616004 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.207992058 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144038437 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131327255 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.09499033 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124802348 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.095456347 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13237402 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109249432 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134699262 seconds)
  done (took 5.210719428 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108632744 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157378329 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099283902 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145342742 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148770748 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093778822 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128019414 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095058797 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135083832 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137077422 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093161106 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129543755 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099872271 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132723913 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124188395 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102671534 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132685283 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095226514 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126853905 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097263923 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130416338 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132371561 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097354435 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122883665 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10287649 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121858258 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087208014 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143389452 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122830715 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115955702 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122668653 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099351235 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13429801 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093886906 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123367671 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095169731 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125507369 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095950496 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125461986 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121491408 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.092488546 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078399295 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123157839 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137235997 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099627733 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110142302 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099727363 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.1293407 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094651354 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121290727 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096366309 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126132414 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096861567 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131091298 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098641902 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124832232 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096857695 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116775821 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100175626 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126794645 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085894023 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122328227 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098782595 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119553875 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102208358 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128863597 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092504356 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12599083 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.128257555 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.099907022 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.125660508 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097339548 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121609109 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096846812 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126613132 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098396868 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127479152 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093381277 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124019093 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094078617 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106685011 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094119885 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.104341773 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097856636 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122019141 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092863649 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126086726 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.10090647 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139400354 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.125117269 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103303445 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124312638 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093250967 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.127252743 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08433958 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.127401037 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110307959 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143181424 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094838066 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122546085 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137473586 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097194377 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123334909 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077399773 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131455768 seconds)
  done (took 13.045458767 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.117743113 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150555712 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096275596 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139026005 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.150605326 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.11834365 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.132123636 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.100534604 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126561367 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111113827 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125337418 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10210883 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128395608 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133040666 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.118452938 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132267587 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096279822 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.134471817 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101709397 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.160404643 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137834559 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108954211 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.135265288 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094741866 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.1295159 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.10660928 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.151482067 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134969067 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103908919 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137971221 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.105905933 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.151813613 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.110292876 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129292083 seconds)
  done (took 5.348520339 seconds)
done (took 49.188890381 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.205732447 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.439656246 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198573483 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.09347179 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.203226276 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.204457755 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209168422 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200191469 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.839590384 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.198722124 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.437342583 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.829244469 seconds)
done (took 60.194035974 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.199508517 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340830896 seconds)
    (2/2) benchmarking "String"...
    done (took 1.468408344 seconds)
  done (took 3.940693683 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.592772285 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.148408382 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.463721329 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.204993828 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.205145156 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494010752 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.884475879 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.579729671 seconds)
  done (took 28.112688317 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.21328999 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.608638694 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.9176972 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.93042148 seconds)
  done (took 18.803341283 seconds)
done (took 60.778954684 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.22783425 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.246641521 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.217375565 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.19383252 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.31736302 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.234316511 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.583647075 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.289092666 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221791774 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.193622712 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.22745801 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.239941736 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.213849733 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.618726882 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.214515084 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.210628252 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.223964943 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.792676785 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.612291431 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.220811014 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.227838726 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.226751973 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.21463464 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.2303454 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.253419154 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.212522325 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.211253 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.224064328 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.806719458 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.216258321 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.225008517 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.789023373 seconds)
  done (took 191.270894252 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.206248238 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.31265288 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.404832014 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.232808172 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.675897694 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.409493259 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.332393574 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.749694128 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.230469927 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.238601661 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.442347948 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.212940752 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.517229633 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.184766336 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.215523324 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.31758601 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.421364227 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.522059884 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229507194 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.481807541 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.220282274 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.445903019 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.340711458 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.408738518 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.254117875 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.2903625 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.231720196 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223652604 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.404149174 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.354507239 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.216542207 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.264941119 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.844012393 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.07194481 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.234767161 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.244844742 seconds)
  done (took 150.523433836 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.485313087 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208870196 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.20846605 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209558405 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.242240705 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.2087361 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.792591851 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799018365 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.721235504 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.487547558 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.595526738 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.532698281 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.21430957 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305133662 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.222948205 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.210129306 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.226220051 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.25351652 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215085829 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211141672 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79546313 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.228060706 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.26484498 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.387429347 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226450829 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241949712 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.600644991 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.210263245 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21010265 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241845677 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.542619997 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.26125929 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211312926 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.628919138 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.578288612 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.215450855 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.210639279 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324335837 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212491346 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243661211 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.21124845 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.491587375 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.2104376 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.211895062 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.214196443 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.913361768 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.215976511 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.798236243 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21655091 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.207941168 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.216694184 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212333578 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.544950894 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.984311715 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.233107991 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.211871433 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.214708099 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.211640444 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.212483333 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.243922729 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.527183709 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.310083987 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.229509154 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.216268529 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245772976 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213881042 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.253625824 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211483411 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.766499932 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.291989755 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.333494625 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80123068 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218802939 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310156967 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334568193 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214642494 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.214270841 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21349181 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214417412 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.32458494 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.214697786 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212298915 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.64031857 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.391475793 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.232357453 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.645010621 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.316369548 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214911148 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629146361 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.218080143 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214333499 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.040649846 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317001203 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.214146254 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.214260341 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214473488 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.641678326 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803754908 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.50360995 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.219541855 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.480342995 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.221134877 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.659907481 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.77684462 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.92639487 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.220881272 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328436839 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.392247564 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.233904369 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.214856642 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.646789705 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.220395588 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.273884036 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216622037 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.613393699 seconds)
  done (took 367.792621596 seconds)
done (took 712.209002473 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.89244474 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.889151352 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.000816557 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.881958831 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.838604283 seconds)
  done (took 10.645114102 seconds)
done (took 11.788454818 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406123253 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.411665994 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282041763 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.411271775 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250429298 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429238766 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389993225 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.241335897 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.317879978 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.299306206 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322685629 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271469662 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248635022 seconds)
  done (took 18.425625445 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540769215 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.518502442 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280786133 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.540097045 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25683108 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559281464 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419442334 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424407462 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438099657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249753665 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23086848 seconds)
  done (took 16.602684111 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539092834 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.544855788 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284393159 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.569076822 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258868753 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538769441 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.423057792 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.43529671 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424829305 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250794517 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233110908 seconds)
  done (took 16.645836201 seconds)
done (took 52.819636634 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.227948457 seconds)
  done (took 2.372217078 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.261599552 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.425522924 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.247598258 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.232111977 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.227806461 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.226878793 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.231239549 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.228468635 seconds)
  done (took 11.227454541 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222576263 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.226389951 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.22487353 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.227654073 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.225871412 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.227155679 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.224330107 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.22653203 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.224837354 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.227588853 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227509523 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.225231524 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.225339686 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.226725965 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.22778943 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.226439637 seconds)
  done (took 20.763604471 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.227318012 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.225978922 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.225201746 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.226301413 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.22541787 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.226809767 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227167622 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.224950556 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.22563471 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.224857364 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226518363 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.226101811 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.226443517 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.225561 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.224785058 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.227486434 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.225984533 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.226439375 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.230270938 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.225449588 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.226931114 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.227265756 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227110801 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.228182672 seconds)
  done (took 30.582525756 seconds)
done (took 66.091492139 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.416366869 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.975651552 seconds)
  done (took 9.539626355 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.22834567 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.228977282 seconds)
  done (took 3.607496043 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.229765985 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.228977009 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.22862844 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.228319941 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.229031933 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.229511279 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.229063278 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.230224484 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.228685514 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.22980271 seconds)
  done (took 13.440610752 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.2292066 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.229258058 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.226865592 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.229487797 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.228787445 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.227324741 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.229133935 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.229607043 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.229360362 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.22750215 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.229892303 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.226954623 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.230295817 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.228504088 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.229318083 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.227615616 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.228206643 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.229369801 seconds)
  done (took 23.264829983 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.231375655 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.231491638 seconds)
  done (took 3.612077053 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.229022609 seconds)
    (2/7) benchmarking "second"...
    done (took 1.228825646 seconds)
    (3/7) benchmarking "month"...
    done (took 1.228244401 seconds)
    (4/7) benchmarking "year"...
    done (took 1.228204202 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.23015523 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.227553536 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.229524208 seconds)
  done (took 9.75015059 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233203547 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.403019131 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.486299117 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.845551851 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.232393379 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.235081813 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.092024888 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.234891645 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.238706644 seconds)
  done (took 14.152120238 seconds)
done (took 78.515876623 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.261909902 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.246494634 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.476975415 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.233490304 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.261455168 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.567836418 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.247108488 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.356886315 seconds)
done (took 37.804195412 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.248300509 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.991312483 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.995411868 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.226031659 seconds)
  done (took 11.362238029 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.212772127 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.184394868 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.223160399 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.269131039 seconds)
  done (took 18.040852795 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.303578168 seconds)
    (2/2) benchmarking "read"...
    done (took 1.566402327 seconds)
  done (took 5.02112048 seconds)
done (took 41.825763776 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234276215 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.233312655 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.233101591 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.230465698 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.231612044 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.233732266 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.230412155 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.231120593 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.233384039 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.234623419 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.233525623 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.233107155 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.234812147 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233306644 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231949259 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231822162 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23363155 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.232424183 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232427143 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23191838 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233908828 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.231744127 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.231494872 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.232187485 seconds)
  done (took 30.736642425 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.234649692 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.231900141 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235384138 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.235118285 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.231837865 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.23449944 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.235434294 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.233327625 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.23474568 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.236080914 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232694834 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.232281885 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.236051377 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.232771945 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235005505 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.233229549 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.235982155 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232667907 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235378107 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.233436891 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.235393772 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232983007 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.234241907 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234611773 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.233849374 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233173679 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.236084681 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.234892871 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235930496 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.233747907 seconds)
  done (took 38.181119331 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.240557875 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244227495 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.236789975 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.237406558 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.235970554 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.236280467 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.235282863 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.236384378 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.23655532 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.235879263 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.237317978 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.237213414 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.237389692 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.235293944 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.237622163 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.237267776 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.237955658 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.236404075 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.237644915 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.236912951 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.237898628 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.237511751 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.236345972 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.23780379 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.237716304 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.237732326 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.238770828 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.236277554 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.238704989 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.237460862 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239529216 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.239235797 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.237867178 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.238699215 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.238333333 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.239031639 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.244577215 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.246536664 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.239010368 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.238177896 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.237710036 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.239704674 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.239026081 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.238484727 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.237401897 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.238865895 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.24057857 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.240227294 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.240026092 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.239370001 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.239609311 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.239041783 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.239439903 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.240529768 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.240151024 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.240780998 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.239489399 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.240901473 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.240516303 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.240287896 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.24004504 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.238361639 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.24049081 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.240643014 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.240085927 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.240968363 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.240618539 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.240144264 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.240053332 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.242123367 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.242254568 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.241579887 seconds)
  done (took 90.361700361 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.24165457 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.238483146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237849714 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23974479 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239301449 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240520123 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.239565711 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241010607 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238069999 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.240790697 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240817155 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.238883701 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238980596 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241203375 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240763576 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23816377 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.242646808 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239818368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.242420932 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.241330561 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24163281 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24001124 seconds)
  done (took 28.443544151 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242822028 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.243853121 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240951608 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242180654 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246978052 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.24254041 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.242520883 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242704392 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243633494 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24059902 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238649706 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243561241 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240256824 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239923267 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240871058 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.241293197 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242997874 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241633917 seconds)
  done (took 23.517195551 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.242066999 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.240426953 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.243549242 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.241044981 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.242134456 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244189754 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24145453 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244308566 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.244450765 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.242327664 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.244083311 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244547201 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.243524303 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240936912 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243488355 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241514761 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.245010001 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241237153 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245311684 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241251637 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24216999 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244395222 seconds)
  done (took 28.505129635 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243333152 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245187748 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.242381203 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.241556041 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24297921 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.244504158 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.245007166 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.241889959 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.245624935 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.244694089 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242222845 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.245694236 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.242648744 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.242873237 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.242621474 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24303437 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245674172 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244384394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245286834 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.242002181 seconds)
  done (took 26.036430588 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245364028 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24698665 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247424774 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246409615 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247329151 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.247130827 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246737393 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.246428417 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246075126 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246771381 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247796672 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247747827 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245722417 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248038868 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247594943 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247422387 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248662425 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248413837 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247131887 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247360822 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247806489 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247244236 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24987247 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247433052 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248309366 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24857498 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247615702 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249099685 seconds)
  done (took 36.091980704 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247692709 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248324816 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.24634818 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.245360654 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.246956926 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.247508317 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.246156228 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.247095768 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.249135057 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.24721754 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.249401651 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.248754765 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249402821 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.24921503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248105201 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.249231982 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24783097 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.248013892 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245849358 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246187649 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.25034057 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248485434 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.249526274 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246504542 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24734192 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.248890363 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247233425 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247470994 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25011099 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246889292 seconds)
  done (took 38.603340104 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.268682046 seconds)
    (2/2) benchmarking "in"...
    done (took 1.268701283 seconds)
  done (took 3.704969269 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.246965472 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249652175 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.249295146 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.246971741 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24774553 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249963164 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250306093 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247543402 seconds)
  done (took 11.15601776 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.249303457 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.248962143 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.251819263 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.252621388 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.250880083 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.250492493 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257168119 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.270223232 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252065046 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.252866969 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.25611478 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.259243079 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.252892703 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251085188 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.250819808 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251407716 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251446191 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.251991182 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.251355028 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.252264445 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250582098 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254342597 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25347809 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.248640604 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251718393 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.261874116 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.274555417 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253458739 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251611617 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.255444364 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.250759302 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.25135764 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.251848371 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.252532911 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.253109844 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.252082531 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260604967 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273004155 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25969323 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272816498 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25359575 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.250637062 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254097017 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.254554444 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255904901 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.253258173 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.254052555 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.251935793 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.253087683 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.25715885 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.258454035 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253462446 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.250808103 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256680661 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.254411279 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260331757 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.272637096 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.257854594 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.262865882 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.263479881 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.28504353 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.279279846 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255429992 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.254077153 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264574489 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.278470179 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260960024 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.272333207 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.25277442 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.254709346 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.262117653 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28592849 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.279587841 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.255079273 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255461371 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.256113767 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256319701 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256492538 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263032063 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.276629611 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.255589893 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255833955 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267067332 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278036766 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.255875979 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.256585414 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.255461935 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25508424 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.257780687 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265000559 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.276060752 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.257220501 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.256320352 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.257441095 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.257723177 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.256992317 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.254560214 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256819052 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.254530055 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.257987892 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256959402 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260927814 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.2654272 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257172047 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257729077 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.263588818 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.277120997 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256981402 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264596933 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.257432825 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258005628 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.257434962 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.263946188 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.256954454 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261827284 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.266256282 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.25892201 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.260255461 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.258809326 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.25894812 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268655566 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.284129492 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.2588108 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.260718734 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.263657431 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.270776038 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259393472 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.261680824 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.260780122 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.25704673 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.25698693 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.260565068 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.261470323 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.259395763 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258812304 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260049583 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.256519585 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.260655126 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.260681503 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.260002712 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.259566115 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.260338038 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.260362964 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.260537704 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.260681875 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.261753787 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.266891174 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.278164171 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.261670325 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.260495246 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.2585305 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259214283 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.260985635 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.259027284 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.260778147 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260980614 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.258901763 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.261458647 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260369906 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.261191931 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263070539 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.262386731 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265447175 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.259462155 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.263852302 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.261265205 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.260114891 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263199348 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.262597621 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.26060332 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.262876188 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.259978304 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.265421549 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.268265512 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.260445336 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.262924743 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.264728096 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260799069 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261777658 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262243786 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.263477367 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.26983819 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.262548144 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.268501163 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.28176569 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261933704 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.263130483 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.262307758 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.262458767 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263224908 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.26656105 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.270840351 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274264584 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28815826 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.263586802 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.267954968 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.26391386 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.265964993 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.266669748 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.263370794 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.26280398 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264023239 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264528988 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264924731 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.264924016 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.263254032 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.263877635 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.266464427 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.26377273 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.263857185 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264850785 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.266424041 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265843243 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.261795604 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264398111 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264182107 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.261973162 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.262102423 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.262409231 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26421775 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.264794727 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.266055347 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.271062052 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.263513807 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266719262 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266574707 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.264516146 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.264231849 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.264271276 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267010463 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.264259963 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272676323 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.285012766 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.265114828 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27162751 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.284026724 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.265621003 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.268131562 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.265343467 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.26272384 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.268851081 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275313953 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.266268389 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.266210919 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.266252052 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266116268 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267649281 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.271644028 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.284281461 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.266714858 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.267550835 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.267286438 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.265956006 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.267837141 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.266807498 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.267688567 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269353625 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267320029 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.267103947 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267641553 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.266992054 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.267197273 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.267577326 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270684657 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.274021886 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.271696464 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.267144952 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.270213622 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.269976582 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.271917998 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.268623991 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268617366 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.26808622 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279136384 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.293639685 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274349584 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.28676733 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.267806496 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27386904 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.288467635 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273210495 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268019586 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269295437 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.267989179 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.269160657 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.268521498 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270039956 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.269474318 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271772049 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.270168135 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.273509068 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.27052487 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.269952434 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.270792355 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.269164158 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.270117669 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269149566 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271117752 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.271925237 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270978937 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.269269473 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.271548055 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275316019 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291468377 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.271685166 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.27028464 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.271188468 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.269506249 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.271850855 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.270881773 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.272962027 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.278031295 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.273514158 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.279697679 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.272365685 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279514844 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.270705784 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.273994009 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.278982393 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.268322003 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.27015468 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.272510033 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.270721504 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27846738 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.29206601 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.272087596 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.274666493 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272088294 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.272625977 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.270915157 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.272313467 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271791731 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.272598155 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.279771191 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.292201469 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.276695319 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274760526 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.269666008 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.272803264 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.274091317 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.271127669 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275301831 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.273397629 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.274211851 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.272575999 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.27382444 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.274377981 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.274280282 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.274234817 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.271673774 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273753166 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280368626 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.294510969 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277643454 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.275168046 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.280347553 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.293843299 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280994776 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294716335 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.275118381 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.274724477 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275431785 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.275319842 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.273828222 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.275541216 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.276483811 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.274781832 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.278817805 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.275809002 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.276321983 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.276188569 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.274624002 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.274563798 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284543314 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298996259 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.275645469 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279098778 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.272582679 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.276321991 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.279338765 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.273873613 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.275096496 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.278752112 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286383569 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284305098 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.276152799 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.277021418 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278135516 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277143829 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.27742891 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.277210016 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.274998845 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.278422084 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.275997126 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.276064674 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280153552 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.275982724 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.277095746 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277604608 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.277239444 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.285940456 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.296798137 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.27748191 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27639666 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.277735564 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.275761713 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.276986135 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.277103343 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2782551 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276774655 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.279211253 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284636158 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.283896161 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.279517642 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277494828 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.276342957 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.27761878 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.278398237 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278998442 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.278346985 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277560347 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.277435103 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.280140495 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.278350746 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.277333666 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.279326915 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.278863581 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279505967 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280203254 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.285499945 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27895634 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.277418504 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.280119492 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279152259 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278899098 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.280010509 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.284759358 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302410592 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.289378843 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.290125671 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.283795975 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.2787676 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282035782 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.286511772 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.279143194 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.279486337 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.279700212 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.279903798 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.28034426 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.28290662 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281068548 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.287740385 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.299958397 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.280336232 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286809247 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.299772689 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.28132575 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.28208741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.284229474 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.280738501 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.278756394 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.281606581 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.280456061 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288205724 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.301687095 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282312429 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282851256 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.279869611 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.282160528 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284562935 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282161226 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.283557365 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.279718904 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.281156091 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282217407 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282469451 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.280238913 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.280404147 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.280976239 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.286011111 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.288567837 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.280416913 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283553342 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.280618234 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.283241802 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283070067 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282165171 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.280333381 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.280270131 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.282326689 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283925401 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.282913412 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.285581922 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.282189077 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.282811088 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.285189396 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282978474 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285045468 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.292032037 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.290420735 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.280763111 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283117774 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.282629106 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.285835639 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282258267 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284391761 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28435721 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.284730064 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.283993119 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28424802 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28466289 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.288277187 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29937709 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.305967557 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284910693 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.284061899 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287658892 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.284875572 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.283014833 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.285223242 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.286407275 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.288431319 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.291813786 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.286606745 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291240533 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.304660003 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.286436125 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.289736448 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.288728099 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.29177853 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.287276181 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284475275 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.284936573 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.290013049 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.301641876 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285344236 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296354169 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313932687 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.305496244 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.286052605 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.287307225 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283664504 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.286528854 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.288667381 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.286673115 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.287785904 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286010321 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.287503557 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.288044416 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29145092 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.288502848 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.285393972 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.286564297 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.286509868 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.287604882 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.284106295 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.28805506 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.287602312 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.287014391 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.286554453 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.286457525 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.286923181 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299850665 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.314663914 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.287790361 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.288003565 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.285387981 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.290469174 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.290662531 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298632796 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.295512665 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.287776283 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.287636126 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.289434031 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287412476 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.286256734 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.287483698 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.288040035 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288230239 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.285690569 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.2992293 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.315503967 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.292566874 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.289126707 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287578583 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.288688154 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288931929 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288402956 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289473856 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.289178958 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.291204484 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292054785 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.290029009 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290858493 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.293421052 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.297858516 seconds)
  done (took 759.894092099 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288816853 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287902234 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286313285 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28799789 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285748894 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287937382 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288949102 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287452652 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288114684 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288128705 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287545293 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287059801 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28783184 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288144675 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288017043 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288740978 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287870853 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289580118 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287130113 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287759382 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290190908 seconds)
  done (took 28.25075483 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.290302636 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.288500242 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288007251 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.290890857 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287905484 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291087729 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.288564358 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290529976 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29215917 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289312292 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29070981 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292598935 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.290256146 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.290059675 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287867632 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292628833 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.292497359 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291169544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.292093006 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289801125 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29366791 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290231416 seconds)
  done (took 29.596442483 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.291391496 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.292213304 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.290977801 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.28967946 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.292766394 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.289943483 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.292977016 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.29398388 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.292716275 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.292504318 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.291493228 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.293882373 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.299015321 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.296681541 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.295386624 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.293803402 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.438093993 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.29330227 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.293980044 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.29148535 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.291406961 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.298313003 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.311181804 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.289868822 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.292473801 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.294116098 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.293556601 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.293987976 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.293136076 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.295492629 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.297918124 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.29432288 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.293623283 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.296272011 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.292324504 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.295978587 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.298852277 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.295734617 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.292268431 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.294072145 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.305441913 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.316673386 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.294813316 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.301958689 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.31779766 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.296240822 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.299090823 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.302200402 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.292620634 seconds)
  done (took 64.8461928 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296366951 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.296127047 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.29315549 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.296938575 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.296144886 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.295016556 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.295217292 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296599073 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.293000327 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.292385306 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.295516138 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.292639822 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294439438 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.296099871 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.296752267 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294886539 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294986898 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294634586 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.294346026 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294242957 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.293999292 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.296761924 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.297942783 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.29471261 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297172758 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.293694675 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294685514 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.297007238 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.294635284 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.294265953 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.296736505 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297923321 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298166888 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.296244222 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.294173836 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.296605246 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.298039771 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.294872431 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297703095 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.294962658 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.297482635 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29937263 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.298285079 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.298049672 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296166156 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.295366048 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296918878 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.295525225 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.29691765 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.299388414 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.300085767 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.296563959 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299230086 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.296490749 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.297964565 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.298959196 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.296465748 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297167893 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.299481965 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.296792498 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.295611564 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300183997 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.297719965 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.300071871 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.29904264 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.297110265 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.297786946 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.299966665 seconds)
  done (took 89.371473541 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299486648 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.299232421 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300560631 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299671814 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300236189 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.299679062 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300527678 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.298580945 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300056681 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300673456 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299934031 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.300599812 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.299287086 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30017689 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.299153057 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300633094 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30194216 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301415993 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300660769 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30076076 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.2998278 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301603807 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.300937554 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301046997 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.30122072 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.300845882 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300999019 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.300370436 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301555255 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.300047491 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.302285016 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.300303668 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.300470652 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301595313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.301454889 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.301718725 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300997829 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30142093 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.301038159 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.300549194 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.300882488 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301453773 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300813579 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.301246435 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301960531 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.30069781 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302849494 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.302477075 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301456802 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302751993 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.302232301 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302612943 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30236159 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.302379724 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302775317 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.303493695 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302775229 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302659928 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301248794 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301774013 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303062646 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.301932319 seconds)
  done (took 81.885945492 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304025409 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.303524816 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.300705216 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301153803 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.303146346 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.300483644 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303177985 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.303219251 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30435619 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.30409536 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304291952 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301969074 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302117558 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305742794 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30091611 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302054923 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302677578 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.301178124 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30274789 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.30183188 seconds)
  done (took 27.270065178 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.301165122 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.304155545 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.300718818 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302941409 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.30366141 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303249428 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.303977604 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304778569 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303762742 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305488558 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305509222 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306751374 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302544416 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303660246 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.305458759 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303485036 seconds)
  done (took 22.079229089 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.30286874 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.30554807 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.305444683 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.304718311 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.302954663 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303439199 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.305455243 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.302450807 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.303677032 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.307194064 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.304928283 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.306095316 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.304059095 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.304765607 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.302005735 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.306628066 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.303906812 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.302600568 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.305487487 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.30471338 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.304737387 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.303689853 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.306869042 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.304822004 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.30400337 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.302294492 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.301620519 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.302023182 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.303028405 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.304618121 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.303751504 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.303156029 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.30286121 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.302656415 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304221937 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.302183065 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.305270501 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.30552567 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.304774645 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.303828202 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.304076168 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.301779972 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.305686729 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.304651776 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.302411378 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.305301571 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.304116685 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.301899409 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.302304115 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.302503803 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.305303455 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.304607008 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.305856452 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.304966072 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.304774408 seconds)
  done (took 72.944568515 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303789772 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304403439 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.301776016 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304329758 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305771846 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.301947248 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.305058886 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302044159 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301516757 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.303204866 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303105027 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306144962 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303293029 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304935587 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30426718 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304120317 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.300187868 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301033394 seconds)
  done (took 24.680257492 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.301362628 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303128544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.304789643 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.303046182 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.302582988 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.304353424 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301462124 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.304498888 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303459472 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.301808929 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302279773 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.305351186 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304366543 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.305398362 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302520206 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302069412 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.305975071 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305892685 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.303744643 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303925287 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305632361 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305611899 seconds)
  done (took 29.901099517 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.303844789 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.303624533 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.302472748 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.320471499 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.323691827 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.32666854 seconds)
  done (took 9.098057116 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312921417 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305273567 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304267906 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307495468 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304903746 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302432647 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304734265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306077496 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306332396 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303600921 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304386401 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307530623 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306416174 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304436325 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307470421 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307504089 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304582651 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304744349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305888991 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308091447 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303323122 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305802723 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304767335 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303997142 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305032559 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305015866 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308676307 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30581503 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30354666 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306972763 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308334192 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304998906 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307632768 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306061792 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309258652 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307270246 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306070596 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308000415 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308475223 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305281986 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308837693 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308956167 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307445397 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305368188 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307625278 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305183461 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305990702 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306153733 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305520265 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308959385 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310316055 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307046854 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309181483 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307974095 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309971924 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309794082 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308568555 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308071978 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310178735 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306546637 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305821252 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308625393 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307066544 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30706252 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310592587 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307036959 seconds)
  done (took 87.490477124 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306346744 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305659299 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306452738 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307226613 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306171746 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307111004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307340559 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308034148 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308017717 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308661188 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311583032 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309166122 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306612988 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308240895 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307821625 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307937383 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308810232 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308103717 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309205178 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311059426 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309791476 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308639996 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309146818 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309410608 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309576675 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310802614 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307665782 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307886837 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309860745 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308664757 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308890161 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308364464 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309154206 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309219551 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309870033 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309428311 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309762469 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310436927 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308885443 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310151466 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308279477 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312247204 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309883681 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308523198 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310777536 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309634721 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308283009 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310470328 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309704382 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310892401 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311172688 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311375988 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310865194 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310171269 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311098545 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311203283 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310047565 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309717658 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310896057 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313465637 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310204418 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310323354 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314041473 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311291972 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310523114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311347612 seconds)
  done (took 87.646655916 seconds)
done (took 1771.448500514 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.370481064 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.356537152 seconds)
  done (took 13.953264914 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.475591364 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.428319722 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.311661226 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.343451723 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.3105266 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.33573681 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.333166747 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.312774307 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.310740794 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.30946777 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.31116062 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.501319651 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.307768379 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.310688409 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.310476677 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.40465922 seconds)
  done (took 42.845759507 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.340720605 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.319937243 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.431955138 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334600147 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.339671697 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504972157 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.376440161 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.322474447 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.494980545 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.363631147 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.920256485 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.339352395 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.314917704 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.456843521 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.331954227 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.506758195 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.570373476 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.922597205 seconds)
  done (took 30.418615914 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.787644474 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.347295365 seconds)
  done (took 9.359305263 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.334057458 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.329644316 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.34516098 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.359997996 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.333993098 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.38798507 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.343069737 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.342236611 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.331351863 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.382691411 seconds)
  done (took 64.717201089 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.335892836 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.314370825 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.315481849 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.314951013 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.306988718 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.324168569 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.313478129 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.307263066 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.103511943 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442138702 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.32316794 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.323009227 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.332711244 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.314638745 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.311861068 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.349972295 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.477887334 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.312183185 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.310757526 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.318063023 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.313613484 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.409123414 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.355085593 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.316625859 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.439993303 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.068044707 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.314727285 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.320563963 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.456157974 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.313194351 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.312850662 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.313555149 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.314067206 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.928549407 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.813639601 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.330661832 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.354862976 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.324604491 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.313400805 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.455130133 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.316287467 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.319176734 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.30542811 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.783902577 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.456606769 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.436155669 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.516178824 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.33198459 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316246865 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.376206392 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.315469905 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.31520545 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.343802754 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.072923263 seconds)
  done (took 110.653749323 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.363304876 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.69800766 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47243907 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.334066597 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.954927682 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.966266782 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321110583 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.593167177 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.349001316 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307414839 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.646361594 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.808230088 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.329860884 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.348169334 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.321025664 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.330572099 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306099848 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.091949062 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.324189491 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.312108871 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803248401 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315047507 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.306416128 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.49547604 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.343968138 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756541049 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.75416698 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.78913159 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.32622154 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.304261982 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.760968193 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.329336587 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.337834788 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.307442004 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.563236444 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.65337452 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.649117542 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.321718227 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.340694076 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.307280504 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.334877919 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.746122189 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.655241267 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.321776517 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.321736559 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.764020308 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.320683291 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.304513896 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.31080381 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511543067 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.197542847 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.31188276 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.698210042 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.30515088 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.677439923 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.349248463 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386312653 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.778564838 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320424674 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.400267066 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.348500459 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.307228564 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304909405 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310757555 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305890225 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.643074819 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.565191338 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.30455019 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.644494221 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.773316036 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.328752803 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.828799534 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.191053701 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.327238558 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.397510206 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.308177012 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.900517182 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796147458 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.32437125 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307057596 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629981459 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.324852258 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.6233893 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.321394568 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307022517 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830579781 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.320031541 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.342359612 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.307501329 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.324697461 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.970478528 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314234541 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.586256104 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.341072187 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.308039524 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.306501021 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.323594128 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306453043 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.306498184 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.30946046 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.821238694 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.337993855 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.274309606 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330384034 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314093057 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.315959625 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.309430673 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307536585 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53118437 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.764589521 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.334226243 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310471002 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.308378646 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.330804481 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.483857181 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.309839558 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.60487598 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.324698585 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308686022 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.308379294 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.00638064 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.371393814 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309225314 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.316910729 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.211829375 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.515862149 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32671746 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.324324432 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.311294874 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328462694 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.50777495 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328649691 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.3770391 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.313758655 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003793467 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.357875736 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.339532933 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.855575648 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323410105 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.145909141 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.333651728 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31167699 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.605149596 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.57842793 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.47760623 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310233269 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.32565019 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.984924144 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333990619 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456141653 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329366477 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.371882475 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506412441 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.685580665 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310595922 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.939475934 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.311345732 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530738423 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.318598341 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609848891 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.80053336 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.332581014 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.312319634 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.003686719 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.00973127 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.980057346 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.314719079 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.631396865 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.253958563 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.797115379 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.310084448 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311350082 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.789290045 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322442985 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.312374985 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.313401217 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.313225958 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.472855896 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48525556 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.664993417 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319061501 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761205904 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.38196802 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320436233 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320721873 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314818747 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.664184356 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.406835107 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.317766428 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.336785639 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.315533411 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.31347062 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787483232 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.250135882 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.321731868 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469354123 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929270697 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.337640372 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.316729675 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.977635512 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.625348276 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824252899 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.377536737 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.61845786 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.34564114 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.354705479 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938327344 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.371014496 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783053342 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.340417844 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.321531493 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901155928 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.337485211 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.660815758 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.314928975 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316070799 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.859579998 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.337719656 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.315784338 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.517359451 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335352653 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.575394854 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.323049906 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.363590036 seconds)
  done (took 1105.908900209 seconds)
done (took 1379.08392335 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.316413887 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.323246631 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.30431724 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.323528741 seconds)
  done (took 26.501170678 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.329013561 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.324614939 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.32357873 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.324423432 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.325274743 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.3220626 seconds)
  done (took 9.181828562 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.366192377 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.323382921 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.324105565 seconds)
  done (took 19.247090104 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.523384049 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.596055967 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.671513882 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.495625761 seconds)
  done (took 10.519641553 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.327443295 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.32453073 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.324791832 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.328169059 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.329529979 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.330601287 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.326305127 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.32635805 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332222582 seconds)
  done (took 13.181256725 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.181733091 seconds)
done (took 85.047145127 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.909308895 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.886802396 seconds)
    (3/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.91124355 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.674822753 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.415177026 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.331251949 seconds)
    (7/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.444493025 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.426047353 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.346039743 seconds)
    (10/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.375813695 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.56902004 seconds)
    (12/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.511112542 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.723997635 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.378154442 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.198605478 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.422569131 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.347314062 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.300354782 seconds)
    (19/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.391356049 seconds)
    (20/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.689309841 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.335289874 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.424409844 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.335766538 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.138642903 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.44331989 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.442583123 seconds)
    (27/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.499813183 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.667527414 seconds)
    (29/309) benchmarking ("sort", Float64, false)...
    done (took 5.651979301 seconds)
    (30/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.306186912 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.441012162 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.299524477 seconds)
    (33/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.444895317 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.430609218 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.307433144 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.14127465 seconds)
    (37/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.306152894 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.534064248 seconds)
    (39/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.302908047 seconds)
    (40/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.549055411 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.670538252 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.728691267 seconds)
    (43/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.544837074 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.299607966 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.336972233 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.395789735 seconds)
    (47/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.919542015 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.347490101 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.580007484 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.61129751 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.761493924 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.439752656 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.345142545 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.794190936 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.051290319 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.607816466 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.725993351 seconds)
    (58/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.315826997 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.406543192 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.67355625 seconds)
    (61/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.34267166 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.303710668 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.380287346 seconds)
    (64/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.696855954 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.231880352 seconds)
    (66/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.56387558 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.315763195 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.409422711 seconds)
    (69/309) benchmarking ("sort", Int8, false)...
    done (took 4.337124606 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.185919516 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.307564228 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.315876323 seconds)
    (73/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.386687387 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.323638633 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.300314591 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.228815692 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.862561878 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.529106436 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.336336061 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.925434257 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.512539867 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.307405305 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.32239132 seconds)
    (84/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.348605704 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.322909136 seconds)
    (86/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.407100581 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.774837875 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.387532304 seconds)
    (89/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.303172168 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.405966727 seconds)
    (91/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.441005967 seconds)
    (92/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.303942629 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.302953715 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.268673112 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.366890903 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.414208326 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.789795707 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.452716183 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.338109676 seconds)
    (100/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.677633773 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.141115866 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.303205607 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.108586486 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.979802138 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.966740405 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.222206429 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.421243688 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.350054178 seconds)
    (109/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.579280315 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.303232404 seconds)
    (111/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.698150522 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.53814554 seconds)
    (113/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.303738355 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.323338742 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.443509598 seconds)
    (116/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.834281017 seconds)
    (117/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.667766824 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.973237493 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.332198599 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.359128866 seconds)
    (121/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.984150947 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.333875789 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.89422476 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.324594231 seconds)
    (125/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.541341036 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.076118762 seconds)
    (127/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.882849074 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.104263841 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.37150912 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.810137902 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 1.840099856 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.36598086 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.411942588 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.842165705 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.605357086 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.36397303 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.066490549 seconds)
    (138/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.69355371 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.612929496 seconds)
    (140/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.731827489 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.351806494 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.331625441 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.430124172 seconds)
    (144/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.44598858 seconds)
    (145/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.337379895 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.306255122 seconds)
    (147/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.457690505 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.429320333 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351994343 seconds)
    (150/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335988129 seconds)
    (151/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.353362852 seconds)
    (152/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.431769927 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.678695983 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.099345543 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.351300657 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.389280489 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.802404225 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.336726162 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.103641801 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.579256098 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.191145718 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.390790465 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.325593925 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.394418589 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.363823095 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.61379469 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.307612517 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.351531559 seconds)
    (169/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.702259612 seconds)
    (170/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.033459059 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.28805761 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.369987364 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.307308453 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.341527586 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.32749499 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.70771893 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.328729095 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.33661762 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.308214036 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.378530806 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.077003763 seconds)
    (182/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.124035255 seconds)
    (183/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.407599255 seconds)
    (184/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.305252521 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.327860432 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.308706277 seconds)
    (187/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.383084898 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.352674509 seconds)
    (189/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.328108532 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.133338746 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.735323308 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.330060387 seconds)
    (193/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.353774519 seconds)
    (194/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.448813494 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.369185734 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.230419731 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.326135609 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.293324585 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.379497397 seconds)
    (200/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.377709482 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.757486267 seconds)
    (202/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.93572472 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.334380263 seconds)
    (204/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.744122159 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.492049039 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.328466354 seconds)
    (207/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.681342498 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.380281361 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.423922925 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.385178468 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.308058794 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.709204205 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.831834839 seconds)
    (214/309) benchmarking ("sort", Float32, false)...
    done (took 5.33703901 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.360634651 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.311372186 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.322980522 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.55497339 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.95525565 seconds)
    (220/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.413999643 seconds)
    (221/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.899989321 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.175710711 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.233913479 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.336239478 seconds)
    (225/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.368138001 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.410830658 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.329203248 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.082626764 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.76818966 seconds)
    (230/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.102942869 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.354790818 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.35235662 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.075186723 seconds)
    (234/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.318650921 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.33972851 seconds)
    (236/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.543805762 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.341118218 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.715635745 seconds)
    (239/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.317036126 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.767238098 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.393921486 seconds)
    (242/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.450034079 seconds)
    (243/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.312516694 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.986589944 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.917712835 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.137329879 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.35281631 seconds)
    (248/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.69373079 seconds)
    (249/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.154902367 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.554845884 seconds)
    (251/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.59791849 seconds)
    (252/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.370462058 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.341541923 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.745100406 seconds)
    (255/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.658855247 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.398925328 seconds)
    (257/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.31026894 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.369259559 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.513447483 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.318177373 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.565720473 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.434645227 seconds)
    (263/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.615884476 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.327632958 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.364398021 seconds)
    (266/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.315166259 seconds)
    (267/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.262286715 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.39058955 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.316323462 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.753766053 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.42092605 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.311412685 seconds)
    (273/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.390551019 seconds)
    (274/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.547661766 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.691109468 seconds)
    (276/309) benchmarking ("sort", BigInt, false)...
    done (took 6.354493803 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.82639537 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.115657452 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.166093225 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.319820104 seconds)
    (281/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.36325638 seconds)
    (282/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.333763875 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.366230765 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.414070033 seconds)
    (285/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.046168702 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.358142107 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.519155293 seconds)
    (288/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.360099928 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.460617883 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.318213842 seconds)
    (291/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.312890359 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.061987644 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.359722695 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.142622164 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.458624191 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.374627437 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.331883911 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.343570482 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.950256102 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.320837148 seconds)
    (301/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.330039009 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.314922749 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.321225101 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.369995218 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.365114508 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.33402094 seconds)
    (307/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.883861754 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.522143643 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.435527111 seconds)
  done (took 1032.919922217 seconds)
done (took 1034.157369049 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.37103651 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362575425 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.346760001 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.369607905 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.457275903 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.370067558 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.356924815 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.347863723 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.394517688 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.396894168 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.345859795 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.367020054 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.346204818 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.346388225 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.34489966 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3588673 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.35635836 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.346239535 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.362439155 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.355645699 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.362054514 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344268738 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.39566602 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.369819616 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.3503497 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350283822 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.349246024 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.366242627 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.458589859 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.349328298 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.350378517 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.356766521 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.358021112 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.345318909 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.341373369 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.365087793 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.356388357 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.356874956 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.35154723 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.378979662 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.75232333 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.364349625 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.348793596 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.348144441 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.348777678 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.35263768 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.347448662 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.353728305 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362273217 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363033826 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.741325056 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.379910667 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.353506404 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.351977012 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.359658665 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.349969049 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.354805667 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365745307 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.368300422 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364245823 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.346440502 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.354688266 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.35037914 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.364227949 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.356216014 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.77949761 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.36048594 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.355709464 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.751952057 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.371366586 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.77570536 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.373944515 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.349817445 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.363540762 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.381719846 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.357859093 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.345109852 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.349483715 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.358474449 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.348832677 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.360243847 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361976047 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.356083844 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.350557562 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363819313 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.374724307 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.360081585 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.351435478 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.359746159 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.368673881 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.358264106 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.362874496 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.354311345 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346929875 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.361583735 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.356911528 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.354123093 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.354507404 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.356483535 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.361861613 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.751956592 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3841433 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.348163791 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.348858271 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351220503 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.366242311 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.752836139 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.370114151 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.37377275 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.401564252 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.35335189 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.347538835 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.354938656 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368893972 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363034342 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.354889039 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349141997 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.375039216 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.753508136 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.384719924 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353801827 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.350732675 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368584015 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.353291379 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.349815872 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.367359722 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.353835555 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366173494 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.474443269 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.365560447 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.383716069 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.352776003 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.357817146 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.377652375 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368658031 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.388535422 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.357617492 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368054915 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.372108288 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.350490139 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.364373476 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.364344172 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.357146732 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361219102 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.349453791 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.376550921 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366821752 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366446303 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.375343238 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.4748718 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.352729719 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.352997916 seconds)
done (took 227.618342492 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.415115839 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.350087189 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.4459152 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350405234 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.449063115 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.449215249 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350054492 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.349303211 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.348429809 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.726695744 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.353351149 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.348137564 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.343572513 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.351230747 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.433057266 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.352385387 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.350028518 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.689393698 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352379136 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.422612111 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.351805834 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.35251397 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.351476729 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.734871168 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.349773723 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.349519622 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.424778957 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.352266139 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.699280221 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.347370983 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.350729126 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.699202818 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.440060471 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.368745257 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.363694997 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.36031651 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.451841522 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.372073717 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.433915576 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.431981124 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.445301126 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.392263776 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.348212645 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.349533393 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.356063424 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354177235 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.35363009 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.382421107 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.352231083 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.356262391 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.693797351 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.364476607 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.363626283 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.350875157 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.353374929 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.375088818 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352568681 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.356940856 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.444472818 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.355722315 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.418720078 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.739021941 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.733570717 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.359949021 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.35383552 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.355755285 seconds)
  done (took 149.739201988 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.424481804 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.435046342 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.465450067 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.37163828 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.40822389 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.471825327 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.374923685 seconds)
  done (took 11.21361701 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.364257756 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.35876779 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.405951307 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.405216314 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.358128755 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.503501738 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358025961 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36823039 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355705925 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.409355338 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360445057 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.361029714 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.364912845 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.351270706 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.416550506 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.36635965 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.469600931 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.357344992 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.35767609 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.513605712 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355852246 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.363511001 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.409207886 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.368596468 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.35851165 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.363878909 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923194842 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360039989 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359763898 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.357895384 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358700036 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.3949972 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.358228789 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.354804291 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35615208 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473751312 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.360392057 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357478105 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.360939224 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.3619069 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.362558126 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.361156111 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.361703533 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.360981505 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.360203841 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.383276898 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.361361743 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.361547366 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.361342593 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.363453942 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.413178739 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.363480107 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.359014317 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.36124282 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.415297329 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367991578 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36109798 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.359347338 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.361477832 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359833957 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.518764443 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.407839948 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.361652112 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411237669 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362479217 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.363963873 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.364000978 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.363855928 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416717187 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.363773197 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.410790978 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.362229546 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.515822545 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.386193292 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362740968 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.363845317 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364190865 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365087268 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.363241847 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369439153 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.358610864 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.362785821 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.367324414 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3584682 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35893906 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.464975337 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.47111158 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.359241862 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.375411983 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.368595231 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.361343102 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.414801926 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.363572631 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.360985922 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.416942761 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.479208488 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.418311691 seconds)
  done (took 155.84898423 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.370878253 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.372769294 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.3652064 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.382283827 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.369311567 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.364493895 seconds)
  done (took 9.493208991 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.366463316 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.367368556 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.364363738 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.365533632 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.367181558 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.365763292 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.363493264 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368569661 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.368894221 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.364487022 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.368550698 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.369519201 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.368689055 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.368844008 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.36737131 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.36577519 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.369223822 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366051185 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.36578426 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367276341 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.473298058 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.369185147 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368341099 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.367763233 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.369174109 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.370802672 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375202705 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.368080767 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.365935956 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374320594 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.384628926 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.36799283 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.368930957 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.373652738 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.370006306 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.369214225 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373605715 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.369995927 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363043307 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.367100609 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.366806353 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371174988 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.368454336 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.371147459 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.373583371 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.374779263 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.37659802 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377861597 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.371251215 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.369680042 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.37239249 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.371351202 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.369720643 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.372890791 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.372800336 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384292995 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.376665787 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372004807 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.370138926 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.372911804 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.370672601 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.368478082 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371091019 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.373645457 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.36395927 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.37488756 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.369650575 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373390876 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365679739 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.366971495 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.370626351 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.366149691 seconds)
  done (took 101.013045472 seconds)
done (took 428.568679701 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.713805403 seconds)
  done (took 7.98423172 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.570745861 seconds)
  done (took 7.850245416 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.120575963 seconds)
  done (took 22.403049619 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.450208195 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.425297821 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.383972784 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.367518913 seconds)
  done (took 26.895174256 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.808449857 seconds)
  done (took 8.076313668 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.370188779 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.372225581 seconds)
  done (took 14.013649197 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.378550341 seconds)
  done (took 7.652382246 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.987466982 seconds)
  done (took 8.27118076 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.370761174 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.391544567 seconds)
  done (took 14.30726525 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.358491751 seconds)
  done (took 7.629202744 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.202209557 seconds)
  done (took 8.476250169 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.366997667 seconds)
  done (took 7.644004875 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.37844714 seconds)
  done (took 7.650250072 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.845849236 seconds)
  done (took 10.119371713 seconds)
done (took 160.248318753 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.365309344 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.356392957 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.355516584 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.358402697 seconds)
  done (took 26.705571347 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.410458078 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.406511376 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.407009519 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.414060135 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.404118565 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.422020866 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.401037272 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.413802237 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.41213744 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.408720663 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.408679304 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.411515793 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.408873089 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.401966345 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41133355 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.407463703 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.419225112 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.405875419 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.399469295 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.40902555 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.374334934 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.416040456 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.406496669 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.374757921 seconds)
  done (took 35.023422514 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.895291823 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.442740221 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.52460671 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.429758382 seconds)
  done (took 7.562866128 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.42414827 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.429546405 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.438471605 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.477256616 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.505003737 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440905768 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.395696362 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.39424655 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.385067229 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.42894213 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.502317866 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.443995503 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.511320375 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372543914 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.565230974 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.373936182 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.374444579 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.425164887 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.476903666 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.49397866 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.37692273 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.432042869 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.437915842 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.443091995 seconds)
  done (took 35.822327761 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.375515103 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.39568108 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.371229386 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.373680281 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.383234009 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.37315193 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.373780378 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.378286369 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.374118006 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.384658994 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.374293371 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.391231981 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.372285801 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.3763104 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.382565415 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.375592834 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.381950376 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.374962593 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.377871248 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.383599701 seconds)
  done (took 28.847367089 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.370698915 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.22660993 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.724816654 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.625475742 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.371887869 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.375186382 seconds)
  done (took 27.966580891 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.446973247 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.598646259 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.37755274 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.730500357 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.82441076 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.396317372 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.381081314 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.619394863 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.93385577 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.921961354 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.433122184 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.446507014 seconds)
  done (took 20.384297989 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.374595699 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.373009377 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.382666237 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.389417386 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.435579716 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.399348625 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.385264102 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.37335963 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.432898585 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.45215004 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.394766696 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433752396 seconds)
  done (took 38.105151369 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461489611 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419174428 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.355296262 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.11405134 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092399578 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581493798 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.122999499 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.800188192 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.376060941 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645351479 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371694671 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464523349 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629447415 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3730106 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390780124 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.355675453 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6164666 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867845985 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377970511 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.293047599 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401404555 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380401767 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.395698128 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.402336446 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587618353 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.347703548 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.636805764 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.147048112 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65878407 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386172456 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386049448 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373645374 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64793964 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034157971 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481770583 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38083571 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.056570782 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.920703837 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.353380397 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.39328776 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.253147009 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385046393 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384538912 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373403475 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308666182 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378468949 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808349186 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.379809459 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.087865436 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376925976 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388028932 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471129987 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.3798394 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.36470547 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385390357 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.378975373 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.376963547 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385372946 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946300399 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.784398727 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385681075 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.31161206 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.739749171 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.300969011 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007401717 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.495150128 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.383094664 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378541432 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312986735 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.394001354 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399096971 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522908292 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.393289662 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027270981 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090662592 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392839179 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.310973797 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931310655 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397696396 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.316666704 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606193198 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150843964 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316067202 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.322418035 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314390544 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107785504 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389524555 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.788166881 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387461979 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802796906 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.384400097 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396122166 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403338196 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602643513 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.2616858 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3739503 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.271672307 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530477756 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393848908 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.80674371 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306218433 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.380450064 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63835626 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.592201268 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377343337 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.386777178 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591648675 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385857549 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.399614177 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380866081 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.393154146 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.95194929 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408420155 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.781974028 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397903806 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.154134306 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14452515 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395829688 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.480034248 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.391263675 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629622944 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.164052871 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.267039832 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452449917 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38591665 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382284822 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.39836995 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229798667 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.266065807 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.376389449 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396174483 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.393872707 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.383865442 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335275843 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.386071501 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381013825 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.161666373 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5992252 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395432227 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656836592 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316218775 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530372486 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387250682 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.602110423 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.584648435 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.395681156 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643745567 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384584132 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397364384 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394703866 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402903116 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481143696 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407719051 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.392483137 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63864605 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.388650553 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389541952 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.41904089 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.164319308 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389098461 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.39014477 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208514234 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960088779 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378705776 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380652195 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271862195 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.39387912 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453601224 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390265773 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.394920942 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.197851407 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.191337393 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.389792346 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.386788092 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611108128 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396254981 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.330610537 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464371365 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.577701909 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969180716 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418195371 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.318474336 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.0945836 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.077729223 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384552956 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.578907845 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386692816 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396904501 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400962255 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.884354075 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963743339 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40817851 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.34221318 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.393206755 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395210289 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.39335297 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387039917 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.173849356 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.838431643 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392754994 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.397485889 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526087801 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401545987 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320716225 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.903741595 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391714451 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386286368 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.167650676 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41476965 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.324316435 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862188434 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642995361 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.062562722 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398392992 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.510614726 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.420521243 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.388664379 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311147604 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412577705 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.39739884 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38898885 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.399121241 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.426687793 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.828679019 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952173606 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116134594 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955763364 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357927425 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.398402602 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277081919 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.820726378 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324636844 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045447167 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575404016 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.830689847 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330732677 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576386368 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.60312141 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172386928 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399586348 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615651923 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335207798 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.314661791 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423010038 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601423765 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427539256 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394207521 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320246824 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.660150078 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612732653 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301362513 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469544419 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809000472 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308742986 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.190669597 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.389798077 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.763504909 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576738563 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.933931799 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.773261122 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388987082 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393667103 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864116805 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389198333 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.917690336 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007705132 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39903982 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.590269935 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326147369 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.398495641 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.400422875 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.386704956 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.690487117 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.395668783 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.646042973 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40009506 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32539885 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388528903 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91998872 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.265341096 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.394474315 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392677762 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169449832 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393433281 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678406234 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.401713061 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.164995334 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414644593 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329251826 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327531596 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.0881219 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398814507 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370902146 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904491285 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.741395964 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.388611526 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419663535 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239375576 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645848608 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.404132941 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979311666 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631453852 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.16825942 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418796434 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.491848531 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361975214 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.392134881 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277790276 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63397595 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218678247 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.61110951 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.413573396 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.297689108 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392917249 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60797803 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.279300729 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397802959 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641032368 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.118149603 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.401552678 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105380329 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4347061 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398669968 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407411482 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.757530431 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404915363 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467774824 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405486346 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.406040852 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.40616822 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561662048 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39722368 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398021561 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.407725876 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489244577 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.842064701 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.179439248 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.171247441 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992907622 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155212965 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.994049998 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427246539 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396935764 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395586369 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332416395 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536896104 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922106908 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673361259 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526399486 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.865891449 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421210341 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380185571 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4274741 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607730222 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674292856 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267908128 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406670037 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055079977 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.295821787 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408532826 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.611215997 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91872663 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989211352 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525431219 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397393572 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.826918416 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669306263 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.489247452 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396660137 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99237932 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.401884399 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.779749914 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.424782241 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404615379 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549261741 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409849883 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061547159 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.417459363 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.557591623 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.172494925 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.465610021 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656294063 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.874123903 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.414301374 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995208543 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127425804 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664802111 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473873488 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413460955 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.509691275 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545254817 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.403290281 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.301391577 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399102724 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247836892 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.114405171 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.411842774 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986983327 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683521789 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.399238399 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.40590332 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42643817 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.413267511 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624773636 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135301457 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628629759 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412525606 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413377504 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.972657222 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985486737 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430821575 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338663406 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.395475849 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650389701 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643944845 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429164298 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.854605543 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.112859113 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969670612 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.374018237 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424556662 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416273688 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099013752 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98527818 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.20977665 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921850836 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.062890106 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412249506 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679815658 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.407505724 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412651904 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678987933 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.407777555 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.418912696 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414555206 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.998203378 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19225057 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.42020907 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.395535716 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.341695337 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.629368508 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02712291 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341656637 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398199551 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.580837687 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40650347 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535121795 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409662606 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.398709852 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417164163 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.150207136 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680059891 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.402157599 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.394391489 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.403327947 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415783873 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414585165 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638970535 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404617182 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.082230112 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.758673254 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663451894 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406856502 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.381346384 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.404331814 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40642234 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.127754086 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.370479142 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.91375561 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996796438 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.410461511 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.437204866 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409358397 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624896227 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614690857 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418527755 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419619108 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413767448 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421707274 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.306850257 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.175343613 seconds)
  done (took 1610.899297553 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.406632629 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.436422611 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.427586177 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.458634784 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.434438697 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.42150727 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.463563381 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.432946893 seconds)
  done (took 52.787855874 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.41513425 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.563548631 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.433021895 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.410944878 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.416470044 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.410858665 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.871574955 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.430435721 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.416959176 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.416566012 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.407218922 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.416663752 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.081132367 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.41725911 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.416062255 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.391155362 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.414756417 seconds)
  done (took 66.649085994 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.410716646 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.43317464 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.497225553 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.400829696 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.519546008 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.419904936 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.402344024 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.427231217 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.413954407 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.778183493 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.072236912 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.417981012 seconds)
  done (took 80.505554523 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.413209424 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.414846827 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.415837434 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.411340123 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.408635045 seconds)
  done (took 8.375410805 seconds)
done (took 2040.907270315 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.652795843 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.115256149 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.04545803 seconds)
  done (took 5.470067706 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.55703686 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.60644619 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.728121981 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.7333412 seconds)
  done (took 7.937539446 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.693528615 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.776384447 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.600742722 seconds)
  done (took 6.381379291 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.834889202 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.413683395 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.53998594 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.410716679 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.409463109 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.410797238 seconds)
  done (took 20.545636431 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.414881687 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.41933028 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.414684784 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.415900993 seconds)
  done (took 6.974654487 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.390399669 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.1097405 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.38407554 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398355735 seconds)
  done (took 18.592873859 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.162049186 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.175700626 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.158666614 seconds)
  done (took 7.810139804 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.41072736 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.245349435 seconds)
  done (took 9.968933466 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.72085029 seconds)
  done (took 3.034213006 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.548918514 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.743119453 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.443116983 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.398334027 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.474398904 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.243611564 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.040305672 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.628209981 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.367543538 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.585011556 seconds)
  done (took 28.787069632 seconds)
done (took 129.252800169 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.229925094 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410352001 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.619751531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.19387922 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.636806474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.616834507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.619921932 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.225815558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.803516485 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.704912911 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.18854214 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.637420327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.571889648 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.417814296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.570424841 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.419403584 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.639101324 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.432267641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.00913019 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.087175416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.618832194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.858114075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.210754017 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.960293672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.643722528 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.570757065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.425198544 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.409235425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.060354883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.531274426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.572342298 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.258445221 seconds)
  done (took 192.468497405 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.412155524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.406924017 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.40623653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.417827894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.407603262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.405703677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.405151579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.421387239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408468149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.415998445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.414717509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.407746813 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.409376201 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.407778449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.425297143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.406688312 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.432720457 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.414878827 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.41963756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.408301906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.426142554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.422832258 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.423341959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.431572558 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.420775358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.407944507 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.409715362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.423864303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.429488233 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.408219926 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.434155095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.420215335 seconds)
  done (took 206.628977305 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.433290498 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.424431456 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.417044326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.433338237 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.407640348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.419087677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.419700457 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.426603861 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.41633821 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424612418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.407013072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.429339822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.421438231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.42361282 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.409407303 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.426480251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.412181047 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.429421689 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.418051336 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.442271548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.41359668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.407739086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.411404825 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.410161153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.429413445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.408600271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.410786864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412941138 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.408282168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.421696221 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.436671637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.434726594 seconds)
  done (took 206.767089029 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.613926942 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.42720457 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.427482104 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.361020257 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426596511 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.426093955 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.421828591 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.625598193 seconds)
  done (took 15.048742998 seconds)
done (took 622.231232453 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.716725659 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.425318121 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.620623067 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.437743311 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.210219954 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.456341564 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.445691082 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.615175019 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.334508887 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.610694087 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.657840249 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.455031219 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.805497852 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44009678 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.693246507 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.533925277 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.299214741 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.410959235 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.747964568 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.955795885 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.699298865 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.880109178 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.62297848 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.325195631 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.819516938 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.912404465 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.128507298 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.30099913 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463431323 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.765032089 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.018481431 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.39026851 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.498255782 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.502849385 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.557998915 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.543383452 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.368426799 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.492497396 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.649863211 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.657597934 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.967740917 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.146280612 seconds)
  done (took 94.905793192 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.409485205 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.408289374 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.408682133 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.41406326 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.412798845 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.409572019 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.406805035 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.410724244 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.409163106 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.410113224 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.411529239 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.410648721 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.408237387 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.411926256 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.412727933 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.414353509 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.412568341 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.409014274 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.408988709 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.412043985 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.413249837 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.412118898 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.409632696 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.409740723 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.414345913 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.411333435 seconds)
  done (took 38.00648223 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.432351143 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.683307155 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.837035541 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.429569538 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.430017456 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436184838 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.50696137 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.432671537 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435047882 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.434233276 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.604367279 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.435618236 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.468350395 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.87246703 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.430827116 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.431361015 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.440736515 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.433256838 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.696100881 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440905277 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.526877153 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.433986714 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.509611108 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.446459215 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.448663497 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429831098 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.437721013 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.95774758 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.452090107 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.607798062 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.226754431 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.512112459 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.90326352 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.861323303 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.224179502 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.43732076 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.433115617 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.612026995 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.425795686 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.432820793 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.509336619 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.425928641 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.853062278 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.047856595 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.443153663 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432417729 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.974442939 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.6119082 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.668969807 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.432740559 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.871944223 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.429687462 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433940688 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434809667 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.679210825 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.444188654 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.428214673 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.961257651 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.449545875 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.515288704 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.432971293 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.433527735 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.700907192 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.427493216 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.682946195 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.430000971 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.44056244 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.445422087 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.854803419 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.429951599 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.08091796 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.444093485 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.438512663 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.604985399 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.685388921 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.010696748 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.447959469 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.706592266 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.910565167 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.52326282 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.438475217 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.947531014 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.524854175 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.439866696 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.438844236 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.439359221 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.436495553 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.488091045 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.516928826 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.009103519 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.083258376 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.996872734 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.535679978 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.449199989 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.43783697 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.975647649 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.44289957 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.438153303 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.855637897 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.099373405 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.454239558 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.447360851 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.096636047 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.457325526 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.516019296 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.443050951 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.868413074 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.436841194 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.487974826 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.438729743 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.446553225 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.449942327 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.511219551 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.434434012 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.440428399 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.049754048 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.625944709 seconds)
  done (took 187.737413812 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.444984749 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.422745264 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.437361018 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.422655182 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.431282605 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.437296208 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.429399539 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.430888637 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.43851884 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.430833376 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.430512644 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.433094254 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.437041931 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.434828322 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.432019353 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.43722318 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.042167146 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.433938505 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.442158526 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.421663222 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.225257639 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.435775429 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.434604147 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.440728924 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.430394845 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.432097486 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.439842935 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.422851838 seconds)
  done (took 154.860171925 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.442491698 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.003517008 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.449449679 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.571746094 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.456672195 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.4381484 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.570891666 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.490337892 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.458349805 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.438907715 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.436892275 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.740984019 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.4329242 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.968459013 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.633762873 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.588412615 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.94530235 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.449715215 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.44099033 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.436732294 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.576240974 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.435576269 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.74341536 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.994231302 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.450969322 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.014045415 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.424680634 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.440060445 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.441884669 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.019446176 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.456488442 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.754164617 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.518666469 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.492626618 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.033930115 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.982609391 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.973130866 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.582140451 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.434781217 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.442941237 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.441104095 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.424458586 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.021678777 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.461093523 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.443280887 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.005531966 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.461655076 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.443639927 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.448864983 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.442517711 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.503256165 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.51446633 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.769146068 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.026213745 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.539778055 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.445856467 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.575046573 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.821608917 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.437258114 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.954908846 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.419067079 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.020318938 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.455577989 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.428282352 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.444675223 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.451163865 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.594720253 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.567911835 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.952064855 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.453588295 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.957104009 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.603893025 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.433876091 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.445280732 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.446266644 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.025050157 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.979805981 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.604085671 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.571359571 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.632753143 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.420442301 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441068027 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.429886359 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.521425544 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.433935779 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.016365991 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.980141822 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.46514339 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.447204154 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.446629145 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.447089888 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.623911652 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.023291515 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.530419143 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.951734883 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.770109347 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.743806666 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.439565431 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.505663544 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.452828963 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.75652928 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.438472083 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.506162207 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.885187685 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.746065267 seconds)
  done (took 171.037333763 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.69278273 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.699473831 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.528428195 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.566527569 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.025271011 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.998532212 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.6946416 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.575177511 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.554783691 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.698324101 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.599576664 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.528365883 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.61767658 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.515579002 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.161271613 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.523468703 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.554081451 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.582094318 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.548200638 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.470511458 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.089791672 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.720586217 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.609329027 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.410746832 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.530555236 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.244197119 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.998356747 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.994645224 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.611720784 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.790812159 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.974559354 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.579317647 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.400548012 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.114019418 seconds)
  done (took 68.544456855 seconds)
done (took 716.4154031 seconds)
SAVING RESULT...
DONE!
