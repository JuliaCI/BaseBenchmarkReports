cset: moving following pidspec: 21586
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.371011436 seconds)
loading group "string"... done (took 0.569887565 seconds)
loading group "linalg"... done (took 7.335408469 seconds)
loading group "parallel"... done (took 0.172483645 seconds)
loading group "find"... done (took 1.142953735 seconds)
loading group "tuple"... done (took 1.814372531 seconds)
loading group "dates"... done (took 1.231458156 seconds)
loading group "micro"... done (took 0.228417964 seconds)
loading group "io"... done (took 1.12139561 seconds)
loading group "scalar"... done (took 41.473695696 seconds)
loading group "sparse"... done (took 13.56974602 seconds)
loading group "broadcast"... done (took 1.02303032 seconds)
loading group "union"... done (took 13.954563814 seconds)
loading group "simd"... done (took 4.723353725 seconds)
loading group "random"... done (took 9.656876058 seconds)
loading group "problem"... done (took 2.021105519 seconds)
loading group "array"... done (took 22.47890008 seconds)
loading group "misc"... done (took 2.095154973 seconds)
loading group "sort"... done (took 3.447949655 seconds)
loading group "collection"... done (took 19.637696248 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.570634236 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.160415281 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152175869 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151504049 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193618167 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156361763 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156842607 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096290538 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.011195554 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174099789 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15243026 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522932826 seconds)
done (took 5.330713815 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.37277709 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093346455 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10501707 seconds)
  done (took 0.985049749 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077940954 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145880674 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097941973 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078347044 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097055669 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077415435 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096904578 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077745311 seconds)
  done (took 1.451255904 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.084996784 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097422288 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080255623 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097506199 seconds)
  done (took 1.140361881 seconds)
done (took 4.814227243 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.722330169 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.281130598 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20203203 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46154242 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196352169 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214921922 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.727435179 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.365722908 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252842616 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100131714 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133995503 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391337522 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136553872 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.730143513 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091678721 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127665781 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.184581587 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.51084884 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081510038 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110515504 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117091921 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.1402998 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.1335865 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091925385 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188159627 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08087444 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194964505 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110855495 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080298052 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.282295842 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202655874 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.756411545 seconds)
  done (took 11.221321258 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.108575093 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13431664 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100745125 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138593908 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137387989 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101781454 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084396413 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098517769 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12486537 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178440564 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116542063 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138855583 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097916026 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083611141 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117531413 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246310928 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.102731953 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118429013 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102373205 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088951221 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140304589 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114696818 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094500475 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111803147 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169912076 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.212140837 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.128562768 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129675999 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099285176 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096850547 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.148117911 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160742487 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096547946 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082625071 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174665849 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124729394 seconds)
  done (took 5.301613466 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.108658273 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191320863 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12475373 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171844234 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081379545 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145669092 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.097411057 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117471416 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26518227 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.122071797 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.503107198 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140601265 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098893768 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098248686 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081747873 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097679064 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.474497569 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157119717 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133955064 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09518251 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104612888 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100204956 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.715276318 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079924611 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094925269 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080880434 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085229029 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161743513 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080723576 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.199569528 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099422379 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102670878 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134788489 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192585557 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124678521 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135131297 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079459919 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098570778 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17934789 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087678049 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100409544 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122796188 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135391846 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119582121 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101597468 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10012168 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.200829494 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079045775 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115526233 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.940940768 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181954748 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.158537389 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080278132 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317727889 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098209335 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101251655 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095857929 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.269751078 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.195979353 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10070277 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098078466 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08584066 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099802065 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.739360503 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080005637 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.706776617 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083701691 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10874216 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083810007 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100083716 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105666838 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088820254 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118320533 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08062124 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10175487 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079680766 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098855559 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081989838 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112119727 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.22014814 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100416022 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079999665 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098825377 seconds)
    (83/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09904271 seconds)
    (84/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13069397 seconds)
    (85/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103034302 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078759752 seconds)
    (87/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133749964 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097845335 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.104526663 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103192373 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100029799 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077874721 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137290416 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080980276 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112570235 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102526014 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144831161 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082369911 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095141074 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145889084 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080805133 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12755624 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101820558 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115550345 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115740671 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10167029 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.172107649 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078996281 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097744013 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080907906 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098717101 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081739952 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101989858 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093362225 seconds)
  done (took 23.647743921 seconds)
done (took 42.0577762 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.328442319 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108112549 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10761724 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110408989 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087610925 seconds)
  done (took 1.597642014 seconds)
done (took 2.425611723 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.166372705 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114875893 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097592914 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.132159858 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07861074 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.139178273 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.135367015 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097006217 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.137046615 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097920636 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112521547 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098216255 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077855473 seconds)
  done (took 2.341238292 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09501106 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116716121 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083529934 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114334123 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077533478 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116341219 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093852814 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121315741 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113947961 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086473419 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094883256 seconds)
  done (took 1.938307947 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094748488 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114195946 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082033593 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111208107 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076782021 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113095309 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09338747 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120004215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112506743 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086607906 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094162341 seconds)
  done (took 1.921892718 seconds)
done (took 7.022787134 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091343391 seconds)
  done (took 0.913399367 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.946294158 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.116564203 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.095958116 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150336809 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316899333 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.176468097 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.484309465 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128454545 seconds)
  done (took 11.447133174 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.115522215 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.11814262 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105014926 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086961703 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.106123112 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08656027 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10490576 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101471822 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088673601 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106291313 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084422925 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104107341 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086012592 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.104967327 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105231644 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086665617 seconds)
  done (took 2.476562039 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119621674 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119161139 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111806164 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112647924 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087982584 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.109867879 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110412412 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090133813 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.106408047 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107473038 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091524587 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110277612 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106718589 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081583522 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110259664 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111129608 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088193114 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110783137 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091131368 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11224719 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.11082794 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080040786 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108199143 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109874297 seconds)
  done (took 3.441426727 seconds)
done (took 19.103362291 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160670255 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112692598 seconds)
  done (took 1.103702961 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095264875 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116892109 seconds)
  done (took 1.044584513 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098274817 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098261594 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125355702 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11353456 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083508138 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100282344 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123353732 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082058532 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.101964555 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082642631 seconds)
  done (took 1.844475546 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082977213 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111852928 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104219336 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097836178 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110307545 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098293576 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090809499 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103201481 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113986272 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079189957 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106041093 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118734501 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088106934 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120640233 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108784044 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084576373 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106930313 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10285286 seconds)
  done (took 2.663352516 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080144452 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100842327 seconds)
  done (took 1.013814246 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082069128 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097492766 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082269633 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101932926 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096449408 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079005555 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09818268 seconds)
  done (took 1.469661085 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.446242226 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121350855 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.291000183 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086012142 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125529452 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.306372186 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.102370986 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08624633 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108809304 seconds)
  done (took 2.569435005 seconds)
done (took 12.542440602 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094951944 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119251273 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114407691 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.479680063 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10996716 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.103827153 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.150547742 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256345033 seconds)
done (took 2.270295412 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144591551 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.581363969 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.443180404 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.240815021 seconds)
  done (took 2.109219726 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.409829227 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.1017186 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087062449 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083801113 seconds)
  done (took 1.527128893 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081026438 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10342115 seconds)
  done (took 1.027679144 seconds)
done (took 5.654620212 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082275957 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.136743299 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080628067 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.101549653 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081225506 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.101977589 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079004989 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.100825675 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080539889 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.10177649 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.080933601 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.101577283 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081359261 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098896736 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078802676 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.101964081 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080894291 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.099289813 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078282351 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099833548 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101002532 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082915817 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097771011 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080501047 seconds)
  done (took 3.090999489 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100853175 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101273888 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10562885 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088888456 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.107372528 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087278088 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107585538 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101412289 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088451028 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103827403 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084932256 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10604422 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.103120979 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086871752 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104121875 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08590751 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.108410226 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100863059 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084718614 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106744758 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087472795 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102510655 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104973949 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087145196 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105932141 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103835157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085752092 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101851747 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087431268 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.105629753 seconds)
  done (took 3.782673844 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085794291 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097206391 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080528717 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106553013 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079724286 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101882046 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079125107 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09984766 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080189194 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099914701 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081466336 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099561275 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079825382 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.101447867 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080231156 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103366637 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117253245 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081247186 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099086144 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080655459 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102823217 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080369321 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099805663 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079985607 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098662086 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080016595 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099899883 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079969609 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099751784 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079626254 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103134374 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083009298 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.100050302 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085661827 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103691343 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078773128 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104006886 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079274222 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101493065 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079016377 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.099610679 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.079248782 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.099975033 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085609047 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099992019 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101686237 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081281664 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100959029 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081004628 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102970935 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079806642 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099174608 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081988659 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.101025969 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083354589 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099185779 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080636446 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.100205263 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080075965 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.099571744 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079113178 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.100208553 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081911725 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.101933797 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.115090693 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087999238 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0988971 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082453751 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100312317 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082930388 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101961744 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09495649 seconds)
  done (took 7.466290536 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.136613058 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129470175 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081821806 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102830022 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078965813 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100906633 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083022524 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10120698 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100028663 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08771478 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100571058 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081624794 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102299839 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09597646 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100963437 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082052861 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106649438 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097677235 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081521876 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103513306 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080903128 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104774272 seconds)
  done (took 2.997600331 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213398886 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107847099 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148198192 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110897207 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08497338 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110264618 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106118039 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087823211 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107311313 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085564664 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105798694 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105342364 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085796157 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10577297 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084981932 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105475188 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106361054 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085381934 seconds)
  done (took 2.803040328 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093501458 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102666413 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106700703 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104675068 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103055752 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.203150086 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108838429 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111257951 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085932096 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102541393 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092186083 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10597546 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103996996 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085007402 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105633036 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083012037 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105530379 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083033391 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113135784 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108499423 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089106619 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112800002 seconds)
  done (took 3.170219609 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097033137 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104697262 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121641747 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087895652 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099813618 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081684321 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109397352 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082550339 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110228386 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103450601 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084041229 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100746614 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08844434 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103772553 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.087679797 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105426424 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104007729 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084270402 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104277198 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079897423 seconds)
  done (took 2.800110749 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101939721 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104399718 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083751672 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114677267 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105405953 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084310689 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113872717 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104723957 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08464273 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130755283 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104901703 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084261813 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113312225 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110608229 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084594173 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114457875 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113434532 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112692982 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085477887 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104920762 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129299051 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085145449 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113377125 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103282463 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085030155 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103884243 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084276286 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110880451 seconds)
  done (took 3.736243578 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082472494 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10207929 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081100051 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099997369 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081876274 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100564119 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082055398 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099407876 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084174764 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100359259 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083799302 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103357964 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084255969 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102904065 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08376893 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102890659 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083683157 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100939256 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0815813 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100862555 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083631491 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103135548 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083446191 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101426422 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081609969 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103757702 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081343512 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100833513 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083476353 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100936523 seconds)
  done (took 3.630070452 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092002994 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110220529 seconds)
  done (took 1.067024886 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079819348 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117651023 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080988412 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108336695 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087322154 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.105482558 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112932291 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088126958 seconds)
  done (took 1.646031057 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097592209 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114735451 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085166507 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117849002 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.114386783 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099968409 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.178200236 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10652696 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089734966 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.104371715 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118382749 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084270574 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110775924 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084499811 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110407346 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089674995 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102694583 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.1093303 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087562743 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102387799 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084882188 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11395941 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086002527 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10578179 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085128732 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115278803 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.117637457 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084750285 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108453867 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110938332 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091034043 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.098233443 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08497297 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10523743 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082130434 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.115316449 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121676393 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087784666 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11490502 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085349856 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116807696 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098982694 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090325897 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111576394 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094189356 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105415964 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085908462 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100346923 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.1039744 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087994506 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099494253 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08564897 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.099121469 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092117187 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108501069 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095141553 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104752374 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105586698 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088589789 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108188664 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091606347 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107056203 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086438514 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.104742641 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093617806 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110383482 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11540922 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07876151 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.099397629 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081813362 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.115961283 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128949323 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091929433 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105798711 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085192235 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.103763795 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087579953 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107175206 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110571741 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091407088 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104984604 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091426862 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11340513 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105039004 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087695887 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113402798 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082989213 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107661421 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081116219 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122736677 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.104172735 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08246627 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.10294273 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094719867 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.109655602 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104006966 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083171376 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112555324 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079082764 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105941984 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085797844 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10601271 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116213747 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091374729 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111461655 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09284017 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.113487662 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10462916 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088972346 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101398352 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08565068 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104210285 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092056509 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.099664784 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087291995 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107387624 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08416094 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115523491 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.103282125 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085531124 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113811093 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.089956695 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103890419 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080179474 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109505802 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.105296301 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089524095 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114869136 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083120849 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100991536 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079088289 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110235095 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104737352 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089198694 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110492279 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087337142 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100030879 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081968817 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110644007 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.115303782 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085072174 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106526624 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090586785 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.107982344 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083712954 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113042706 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.107786844 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084200062 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111771895 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085539124 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.100905141 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087902117 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10888275 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103354345 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089941492 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108562433 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087402294 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.107418871 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083354205 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111981861 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106434994 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085152572 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104544327 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084414995 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.116967811 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086094517 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101481494 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081557077 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.114954889 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102827153 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084974284 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10476567 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087621338 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106776636 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082920238 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.106216442 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086490748 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118707731 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110541773 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085416091 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112777333 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.116145915 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085844169 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.108271008 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085272033 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106611571 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086033317 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.116154169 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090035187 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112994867 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108375474 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081231305 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112104186 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092028901 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10612508 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082207207 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105542385 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109025144 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091291244 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.109972562 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084890675 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104251697 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084098264 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110132651 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108350529 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085948321 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105148973 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08997652 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106369354 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112234931 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086739694 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116914357 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088965616 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.101433193 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087544247 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10620664 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111716757 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081550423 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103604726 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084704639 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10709562 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083837327 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109430812 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078705882 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113935765 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092648694 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.107382468 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104918661 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0866848 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112880387 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086694029 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110926148 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087805737 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113504206 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116898798 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08542533 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109981404 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096633749 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10704738 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078367355 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112435972 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104472507 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085211238 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104423162 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084026875 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109945548 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094218813 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.114091111 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099639972 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088459153 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104555403 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083969433 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101398789 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089571471 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109426416 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085745617 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114818065 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107851163 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087395581 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109911702 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085092 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107599114 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085907375 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110280219 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084932645 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.110511619 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105010734 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089081059 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10535099 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083040276 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108617533 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085764751 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10679169 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090631652 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.106220522 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105358391 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089316071 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107281169 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08661449 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107854557 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084491352 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110998949 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08518277 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108113067 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087742402 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102948966 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113474786 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08649754 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115078109 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085765493 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103951595 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09073824 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.110332775 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111512789 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086192038 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108435104 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086616585 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107439365 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088837607 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114592146 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.103125727 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098424808 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116697778 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085892771 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110835726 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084802474 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10929993 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105107465 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088259671 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106822274 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08624823 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106556794 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090830197 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110700847 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085513012 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110185022 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106214628 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087251789 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108318916 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081465657 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10625721 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085711897 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107315188 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096361043 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108946682 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105327962 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086063301 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108139628 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084868836 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10454778 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095215271 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117746229 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107625683 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09286061 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106943729 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087109702 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119415372 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099924918 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08549147 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104896071 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084235215 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114634391 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086387087 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.118322456 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085039231 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106949236 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082204102 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.108952555 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104999588 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081338368 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104230176 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099688465 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106456794 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084995825 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107451564 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08881306 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10959291 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118043691 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085580759 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107859674 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087074652 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104455574 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085007701 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10694166 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088509031 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109560073 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082554397 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105427324 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105941786 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087954439 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108127858 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086536082 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108507719 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095589329 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107521819 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087725284 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111197138 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.100665836 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.0901342 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106823509 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085968906 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106951894 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089372438 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110910146 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086086436 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.118067069 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.107540565 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086499521 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107962675 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082832039 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107506626 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084325313 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108888782 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084004857 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.110193634 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115948876 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084019538 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110515176 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085662124 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108123802 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092718163 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10923242 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109794304 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093964149 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108005556 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087150464 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.116843622 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11020699 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089903351 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10875247 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08762693 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114629358 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084129093 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115102365 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085291305 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109498072 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109213134 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084659528 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107852316 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086405084 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106909 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092464351 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10911383 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084542039 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107534109 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083000628 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108789483 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111322817 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094788978 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.11068563 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089019249 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104014935 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082803852 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110372097 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104714582 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088943509 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110740001 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092813681 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110514242 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086693635 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107462504 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095165901 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115909617 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112050596 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084437478 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112309222 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087610348 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111932052 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087017395 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108767706 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10858187 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092339764 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109604695 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086817028 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115772255 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089661234 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110417382 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087668952 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110466246 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107339691 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083278774 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108610033 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089109506 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114068832 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088434453 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109262317 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118953955 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086024088 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108001018 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09053375 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10816229 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090670882 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104600921 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087867944 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109953515 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108765263 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082821424 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107118359 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.086141532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110094516 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085664355 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104531835 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097678955 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.119019986 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111494622 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086764693 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106816416 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081947585 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103227965 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085459147 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110596984 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087331742 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120506223 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106315266 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086899313 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102908681 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087639391 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112184139 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089769715 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.106273825 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082186573 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.108471076 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089398921 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116155394 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106309428 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087710289 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112171777 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089823333 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106895295 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089564965 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.106427616 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089601632 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123297127 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.110203764 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087429394 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115888831 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093942455 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.110934725 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103483094 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088364005 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.112677306 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088188959 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.110136471 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08724893 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126139746 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112224382 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086520842 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107591107 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088905152 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108791376 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094923295 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110118005 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109264156 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09209532 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110984822 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09632046 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112006431 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11764187 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091250361 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.112229169 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086155216 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109815896 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083849836 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.1085313 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.08719496 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.11081341 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113859441 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096854945 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.109410539 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119853647 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097955041 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111367161 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083956561 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107958379 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086900412 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.105535005 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088467935 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107516805 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084109864 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.108788471 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084869192 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.110275693 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114780837 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088809288 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.110289105 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087813796 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.104123312 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089093574 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.112606641 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087088377 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.106863899 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086991806 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111167802 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112701649 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091628636 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106921222 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089352648 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111053128 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087079129 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.105542057 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093407755 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109801283 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088474299 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109378391 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109097478 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088375992 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113435427 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092348044 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111636399 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110576055 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097874957 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111864098 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084440978 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.107109136 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092789106 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108526845 seconds)
  done (took 60.449627719 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148773795 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08371638 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104954568 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082269208 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119543007 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104801985 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084170402 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105158819 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084061051 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107900178 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082397168 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104803043 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091542215 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130593386 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119262907 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11049889 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081659362 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106590225 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082277269 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10760197 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114056364 seconds)
  done (took 3.072239685 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104487944 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.124871173 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12170946 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123489192 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092996022 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.122043167 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121500337 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097493888 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124030221 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117355311 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124251478 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097190073 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.117939761 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117870171 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116458055 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097151965 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.124790496 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116026198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.099036127 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120614221 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12013054 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120708962 seconds)
  done (took 3.435444863 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086165329 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108342913 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08912455 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.104212283 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087828332 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.104477095 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091672004 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.107500287 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090191875 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.109676893 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085661686 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.109598815 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088590763 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.105617896 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.108155583 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085754686 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.160017279 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113795542 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086390151 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111390445 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.082124586 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.113167713 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.082038264 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.106454232 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107922156 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092296647 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110153663 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084677891 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.109725068 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086905723 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.109474923 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084192006 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.112027143 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087200534 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.108925385 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.085136225 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.110747674 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085894039 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.106053344 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.106202041 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089308707 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.104769923 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088315494 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110761572 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086068216 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.107260569 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089166236 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.110932469 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.081447943 seconds)
  done (took 5.789141874 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102991453 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168000362 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08985046 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150598173 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127295039 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11894068 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091478982 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148373346 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108563062 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088937937 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128413917 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127311528 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109471988 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093247724 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.117642228 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086514407 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111910382 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108302488 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092171775 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110175975 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114480568 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094856093 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126341874 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123723171 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090791671 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109353964 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109255461 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092552757 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.124805169 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115281051 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092112161 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116234969 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126754584 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088555755 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110325496 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111965697 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105556629 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111596858 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112257051 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085178587 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.112820068 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091134505 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.118518589 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127878262 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109293219 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094236786 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109906303 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.0837725 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12466376 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112895231 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095748979 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126985691 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114952752 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108967476 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093185602 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125485819 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109623904 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086227078 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11336689 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122799545 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085697508 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113889782 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124857892 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090454938 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117673793 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123950272 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092638025 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114672728 seconds)
  done (took 8.566448567 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0941226 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113903651 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126129062 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126576523 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094717431 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117457122 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116774718 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093159387 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117304052 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12294244 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11593347 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117866472 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.114168933 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120546747 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116167699 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096461754 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118127782 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116891425 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095191038 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117423805 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118255706 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125858558 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095510442 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127263592 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149056387 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111306789 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095953378 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117597362 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12695026 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093321625 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129603538 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.118049834 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117824629 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12588532 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.107582534 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.11731875 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109059615 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094413677 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117972999 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117630217 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089567686 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126676795 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117145123 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089233983 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11821915 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117642307 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126225325 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128650718 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099189462 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123339581 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117862759 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126237231 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09531383 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118352959 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126871725 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153767368 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12706697 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103698088 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118402783 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126623604 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127220992 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134478691 seconds)
  done (took 8.112053031 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105995219 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117828419 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.12466365 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082647753 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110699052 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114930638 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086410947 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.109002142 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097387347 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.121190203 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122513687 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114715307 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096028498 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122785715 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115780414 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117083231 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09327721 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116054943 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120399064 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092616524 seconds)
  done (took 3.116597835 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093930783 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127079707 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08809552 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119069014 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114908697 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094318268 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.114312548 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091141069 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113288293 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114277022 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099231759 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123052896 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111448744 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094746668 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.123172718 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11754265 seconds)
  done (took 2.677573273 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096949156 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119693627 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127756666 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087829385 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.111689941 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083778533 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112882487 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.107298489 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085786097 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.127861747 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089323044 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115828608 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111449221 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088205036 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108225576 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091935919 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108136605 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086311732 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112622723 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125947698 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100979345 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111441164 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089055876 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114759091 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.112416191 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095204761 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112963581 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.085806748 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.111599398 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111631683 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089783231 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.120841499 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08621802 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.11136282 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086448689 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.11105132 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.111437774 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089238288 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.115769271 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08814634 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.111571492 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087291672 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.113306997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112662075 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085785928 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.11266823 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084834546 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11982846 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085899193 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.11454033 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111590777 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091994073 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11349798 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098848102 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117011169 seconds)
  done (took 6.654485868 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099648819 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112199544 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083930445 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109981815 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091696954 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115087073 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090766216 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114699475 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113984877 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08732839 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114168453 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091392131 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114961782 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091318837 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114442207 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115239487 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085044563 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113736977 seconds)
  done (took 2.803260009 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091660211 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107913216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097223734 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112577347 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088369266 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115191639 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085101231 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.111583475 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086728283 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.11314362 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111374245 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091762014 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110383871 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090962999 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112996897 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089026975 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.115313315 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086469765 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112705016 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084324657 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115288423 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110201924 seconds)
  done (took 3.183575283 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.112904015 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123963029 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094055601 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.238364016 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104484242 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135598692 seconds)
  done (took 1.751381857 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110264968 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122347075 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111423297 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112545756 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12139562 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090620577 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115934047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115108447 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12351908 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106045658 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11487595 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124935787 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123110801 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099824902 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121932051 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120577282 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091154322 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115165844 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112320323 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133900295 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093004458 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124255059 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114040415 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091341331 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11519303 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123119937 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100840128 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129821365 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115256051 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12406348 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096852375 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114592299 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12397127 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129305251 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093565069 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124758116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114304492 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134405978 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098059153 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124315131 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116216665 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097164616 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124509811 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120339632 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123636577 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092265392 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120802893 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113598254 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092403548 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14089799 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121380084 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123296304 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096717394 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125007582 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124794449 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140657579 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129840449 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12460228 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098360657 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129466231 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124628661 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121661187 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123298636 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10600357 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122047114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127006258 seconds)
  done (took 8.601169158 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101891811 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129569451 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111671503 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104665873 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124870246 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115245924 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114421598 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092483108 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114970045 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090397746 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158547118 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116048704 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124185588 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124626454 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090910339 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115318141 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114722448 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099603422 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115943125 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142058125 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115143089 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123682595 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101623225 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124478599 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12944794 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120615866 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091266224 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115787784 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114220424 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091244122 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120858327 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115508711 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10080974 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11556554 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124936949 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114724129 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091895343 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121034403 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113914149 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098445582 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124857359 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135570974 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114666475 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091902102 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129188999 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115273535 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090547414 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115660782 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114844511 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091876245 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130398867 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130233562 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129808581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124575894 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092401798 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116289734 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114436626 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092792753 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116329437 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12050333 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101557412 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116276099 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142283643 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115462134 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092296018 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124356529 seconds)
  done (took 8.484810498 seconds)
done (took 163.72825629 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.29716537 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.299994181 seconds)
  done (took 1.545288038 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088408543 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.14040227 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101254977 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.207214546 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084972871 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.157735156 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148063774 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098361166 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108245638 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085659311 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.111025594 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091132962 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.218204282 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085505157 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.110078488 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091051525 seconds)
  done (took 2.886361855 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113316863 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.262669613 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130551194 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087332926 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.120208181 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.117706733 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088443955 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.119512871 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094203278 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.112621789 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092959013 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.114585537 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087971733 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.114599978 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.092840502 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.117630026 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.088141627 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.117327445 seconds)
  done (took 3.032381223 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113258031 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.163533998 seconds)
  done (took 1.232494681 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.247392434 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164427603 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.23923516 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.500014693 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.29616929 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.370426631 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.216519877 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.227078826 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167947013 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.201777934 seconds)
  done (took 3.585218212 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119943581 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189794078 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.330354631 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164212425 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.110844504 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.134397821 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165088586 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138827719 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.130797019 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105888633 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129588121 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.125982676 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145657848 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099930787 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.123144665 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100634186 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.150865158 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.122425619 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097660867 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.123612546 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146647444 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.08914984 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123904893 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.120489195 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.102068047 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12708999 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088869702 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114478059 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122795349 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098148045 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.12159923 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131348815 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102748108 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.184424014 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105917053 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.184528655 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102102729 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120518435 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097493183 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120270752 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126159466 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10187388 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133297151 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.125482879 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089352671 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126357009 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088462604 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115510024 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121960202 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102146155 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122973773 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120983912 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.161363686 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101030729 seconds)
  done (took 7.812267599 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.803656627 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164003426 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095235015 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.914649371 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118312696 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135267397 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.803235058 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117804982 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.263010438 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.776094719 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134270602 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102267364 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238262244 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.24275902 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.939398399 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311357066 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.660749465 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130010673 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132932331 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.184111203 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09975312 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145010973 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138804798 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437914998 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09780938 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119797485 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.124422437 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101338384 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190486323 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108068024 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12190334 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182802033 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.277555632 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182000306 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121092434 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093904864 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11961226 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.174989243 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27589812 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219045499 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186295481 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09195752 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119567907 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103533149 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139703216 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115140965 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168315976 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179688687 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.200299125 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098127703 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125769286 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101438584 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129088715 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168517998 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.127831656 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324401541 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321309582 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093132086 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128920313 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132116163 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265633952 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107021411 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233837062 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145948528 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194212803 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119233886 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78641709 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170775967 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119252198 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100424913 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127627907 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122030496 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104579216 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173589333 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.411286309 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131482942 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096666209 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119991744 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236150293 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108020476 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11889778 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169444579 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122452019 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103375852 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131462054 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129122779 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.176321168 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233841451 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130601982 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126481113 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097194131 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133608617 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122234485 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216610687 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228267431 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.169126032 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.217629053 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129635328 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.169626898 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172749761 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126696961 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17583498 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127043598 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131359352 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127347076 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201590505 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.151890192 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.131191967 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121834182 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.101391115 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155122207 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.134921267 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125240093 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.177111576 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460964252 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.199340129 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091005378 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.135063491 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126239316 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16895278 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098966574 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273285644 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124194961 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173191348 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126252776 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090569706 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128855609 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168458407 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128837582 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128474096 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103531752 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126215044 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238291073 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224863662 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129058258 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227344206 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189306111 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12582743 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178047116 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128911752 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173995019 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127966134 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105776625 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123385285 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780738772 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123383317 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101280875 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123672116 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194185622 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089578222 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.131530657 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.131099133 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091494504 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814841008 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.132416761 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102808238 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.132010658 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125118776 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102799148 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125253699 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122891336 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168440805 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238138545 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125383537 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103834745 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.13239434 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.166840897 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123529576 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107076949 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.133330578 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.133346784 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12914658 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098227173 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.132649521 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170411841 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167491315 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229489792 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.605130757 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094706321 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.132898368 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23835377 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119840997 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.276509347 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12809539 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233950193 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170356915 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.128968635 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327587487 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.172301533 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.19467313 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.134523233 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.180914003 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091380263 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127549582 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169837567 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120777285 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123583411 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171706344 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107160291 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130839767 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.974493259 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112879744 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231090259 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092435692 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.201809295 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100422928 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127971883 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29918434 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09642923 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137839994 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.170396761 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124022996 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.132945991 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.857276279 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127257848 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128439067 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10216038 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230824205 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.171033368 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129041695 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126788826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101710191 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.193144308 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.219267955 seconds)
  done (took 45.57138531 seconds)
done (took 66.620123337 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.293630401 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.22818328 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.282155951 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176253841 seconds)
  done (took 2.040234243 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174411924 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.15780712 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127027181 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11662667 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.160686018 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089579706 seconds)
  done (took 1.809678992 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36661925 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279322247 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245098972 seconds)
  done (took 1.879303758 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.294605372 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.258099313 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.495071887 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.340117877 seconds)
  done (took 2.500741931 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.218095891 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.142345862 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119782418 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109499422 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.208996145 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.258163033 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150584669 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.21320968 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.105093699 seconds)
  done (took 2.560588799 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.208221163 seconds)
done (took 11.986308981 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.171604216 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.273292226 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.160121312 seconds)
    (4/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.27448441 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.191758556 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.230727306 seconds)
    (7/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.21984602 seconds)
    (8/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.136092743 seconds)
    (9/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.140183914 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.135827993 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.135476302 seconds)
    (12/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.264629671 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.129582345 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.131114757 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.134722734 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.102307352 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.23278458 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.14622825 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.120648126 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.219505563 seconds)
    (21/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.164771452 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.234011529 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.15403985 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.15056551 seconds)
    (25/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.229000073 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.216387223 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090816212 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.130498905 seconds)
    (29/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.193748937 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.145605972 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.073173843 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.213632924 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.21168762 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09918106 seconds)
    (35/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.131301021 seconds)
    (36/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.122137208 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.251941326 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.123302951 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.21010331 seconds)
    (40/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.202201711 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.074863363 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.145399211 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102623867 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.128700471 seconds)
    (45/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097002834 seconds)
    (46/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.09777043 seconds)
    (47/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.099806301 seconds)
    (48/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.126802262 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.131560874 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108068994 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099805101 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.267640235 seconds)
    (53/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128222893 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126532645 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102529744 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171456575 seconds)
    (57/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.241791868 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.194624948 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.244040657 seconds)
    (60/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098096861 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.148888234 seconds)
    (62/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071659136 seconds)
    (63/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.18409405 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092527629 seconds)
    (65/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128022983 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.129671223 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072740558 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097070609 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.222792381 seconds)
    (70/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.202553485 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.149026942 seconds)
    (72/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.071341575 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.217647657 seconds)
    (74/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.227640945 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089376133 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.117733774 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.146555072 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.175279687 seconds)
    (79/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.141964377 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.154342452 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091156594 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184979983 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.101029191 seconds)
    (84/309) benchmarking ("sort", Int8, false)...
    done (took 0.224902162 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119873324 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.110374255 seconds)
    (87/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097088487 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.130522151 seconds)
    (89/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.071389581 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.149472879 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092647329 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.120868112 seconds)
    (93/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.250979277 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.17854564 seconds)
    (95/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072009362 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.128129718 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.094795136 seconds)
    (98/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.125993956 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.099687727 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.101902125 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12254607 seconds)
    (102/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.196649394 seconds)
    (103/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.13316332 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108810233 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.187333859 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.092411569 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.207283422 seconds)
    (108/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.0721351 seconds)
    (109/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.098324574 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.073591123 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125499426 seconds)
    (112/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.104476588 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124936044 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.102673882 seconds)
    (115/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.15867266 seconds)
    (116/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094865654 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.200621804 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.126144441 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098392458 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.231440102 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.190003882 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.217823237 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115713848 seconds)
    (124/309) benchmarking ("sort", Float32, false)...
    done (took 0.183913498 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.149432301 seconds)
    (126/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090812613 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.431255996 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.126066967 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.178811905 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.110913261 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091239553 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126961282 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.195858943 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094929334 seconds)
    (135/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072380331 seconds)
    (136/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.129685185 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.143738063 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122386057 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.200040632 seconds)
    (140/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.134171403 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091561425 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.099742696 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098869642 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.143755494 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.072203203 seconds)
    (146/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.135352647 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097703773 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.194751401 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.118039796 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099945294 seconds)
    (151/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.071636735 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11902529 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093008035 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.121722973 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116550846 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.169157393 seconds)
    (157/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.227120463 seconds)
    (158/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.159847014 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100855113 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.118906103 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.114507136 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.147831488 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118204024 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.119868714 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.160106744 seconds)
    (166/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.073056656 seconds)
    (167/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.123125703 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117020707 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.100157695 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.073379458 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071057782 seconds)
    (172/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.145324328 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.119342334 seconds)
    (174/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.073994194 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.140585578 seconds)
    (176/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.128359889 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.126575796 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093173787 seconds)
    (179/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.098657204 seconds)
    (180/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.165587014 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.143916916 seconds)
    (182/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099717725 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.12671797 seconds)
    (184/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.118990979 seconds)
    (185/309) benchmarking ("sort", Float64, false)...
    done (took 0.155153867 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.129169657 seconds)
    (187/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.073281365 seconds)
    (188/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107454766 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07362322 seconds)
    (190/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.106216118 seconds)
    (191/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100694684 seconds)
    (192/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092578601 seconds)
    (193/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.193163067 seconds)
    (194/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11899557 seconds)
    (195/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.121614841 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.101820788 seconds)
    (197/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074599124 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.116496862 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073811652 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10148402 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.153294148 seconds)
    (202/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.125318267 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.073988028 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.071988356 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.127602608 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.10435915 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.125121694 seconds)
    (208/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102871496 seconds)
    (209/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.126622965 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091404074 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.123133296 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07412301 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129193088 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100298341 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.165200104 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.172255947 seconds)
    (217/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112582958 seconds)
    (218/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.100485545 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097687423 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.15297193 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.19082537 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098260349 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.097837114 seconds)
    (224/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.118476703 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.142814231 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089202352 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121351374 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.185557763 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085438287 seconds)
    (230/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.148982269 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071296726 seconds)
    (232/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069111917 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.096411174 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090996276 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.19554023 seconds)
    (236/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11960367 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161037036 seconds)
    (238/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.093669636 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067039746 seconds)
    (240/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066822009 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.107776812 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135327779 seconds)
    (243/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113335163 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08508957 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.135768483 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08557151 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.215988417 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.100351772 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.106770026 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140404239 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.172021914 seconds)
    (252/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102033325 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.219700634 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.117730497 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092972183 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.09965782 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09424474 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120019404 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156254023 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.18994354 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.176055419 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097010685 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.117504013 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.157966325 seconds)
    (265/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09778375 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.124497445 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098778596 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114674453 seconds)
    (269/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.072318966 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.117910741 seconds)
    (271/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.131152174 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.117364802 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092277943 seconds)
    (274/309) benchmarking ("sort", BigInt, false)...
    done (took 0.253077712 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170893524 seconds)
    (276/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119908448 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126554527 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069917589 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135070645 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094063723 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115596563 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06851685 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110657998 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086414507 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.071878603 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.135902583 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.071909395 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.117807811 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093121217 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12890005 seconds)
    (291/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097228154 seconds)
    (292/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110268624 seconds)
    (293/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.073231596 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.071710935 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.126290619 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.092642203 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.075703576 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.07256789 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.118110853 seconds)
    (300/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.083196836 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.140392117 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.073641912 seconds)
    (303/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.125964759 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.099453208 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.148206608 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.235530655 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093304151 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.121757051 seconds)
    (309/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.074587627 seconds)
  done (took 42.251563032 seconds)
done (took 43.245027741 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100342373 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140876207 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101696027 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.14560199 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.132733369 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098560859 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.127944698 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103786329 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.133575669 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.133703743 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105000595 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075351008 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.130325679 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.129219382 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102247396 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145714609 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130546252 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101764155 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.124297867 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086204446 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.124228475 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092350244 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.120378969 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.076570685 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.130754477 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.100487198 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.123905047 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.100957421 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.116074922 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090275973 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.121071726 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098660834 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.120050998 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.105932088 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.127543967 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.127155466 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10358068 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.129939928 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.094643855 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119909193 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.100690977 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.120000449 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.099613765 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.128321026 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.098725296 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126547409 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100343628 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132126695 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145594224 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096043941 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.128328782 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102706156 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.130712847 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.098566467 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.124840517 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127198111 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098608941 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146783814 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.100864854 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124370125 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100786542 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.129516759 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.097704447 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.129527412 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12982677 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103938446 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.132780011 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097746603 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.132116214 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.09822339 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.120088713 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099943525 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.097801337 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.117287872 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.103878689 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.131170384 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092834878 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.125391422 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.10072776 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.125342753 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.092815121 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122679233 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094428417 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.125173986 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096007265 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.101301931 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.097151765 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.122177328 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092414987 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.128690102 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099645989 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.12655972 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.095099757 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.131156501 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.092679979 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.125315092 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092515811 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121043219 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093996531 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.124885883 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.091793109 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123979856 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101437851 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.123344888 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.098292919 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132706408 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.119028584 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.100920603 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.117340903 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.087407817 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128454426 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101622555 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.113905819 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095317929 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.116073524 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.095562546 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112939819 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087392992 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.113800089 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086094441 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120074769 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087303786 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116178773 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093383919 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126771093 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111097138 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.091853469 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114127122 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087431549 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.118188043 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088149742 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.111962501 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.08965322 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077203407 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115721267 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111467947 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095791961 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114239332 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09643669 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113423861 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095018102 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.117679466 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092963161 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118576235 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086443521 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.101194559 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089933896 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113968481 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088961414 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111355966 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088554477 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111624721 seconds)
done (took 17.872113826 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088575197 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18552506 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152776096 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.145974748 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10695421 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114609652 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123748463 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119441335 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115976082 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144286321 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110220469 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134248553 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148984225 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086761569 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11301698 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091745914 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113690031 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102165602 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147992278 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135093505 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164958515 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086474644 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148336836 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137330108 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095556339 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.132306669 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112380102 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092249093 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115676418 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112348651 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135331882 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090239282 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114001144 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134379129 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105436071 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120970801 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086549495 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120580861 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086723327 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113484658 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141483382 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109151577 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119541711 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.091813986 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118001519 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.089504228 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116151442 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121401397 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099495461 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117613109 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.101013242 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156951637 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118070508 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122517451 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087432605 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124313417 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.098460334 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115760756 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.090098228 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.117066287 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.086457336 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.117944556 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127018576 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116788245 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.118976114 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121434414 seconds)
  done (took 8.777324502 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104683985 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141373388 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104057633 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132966388 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113213598 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088455703 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113817437 seconds)
  done (took 1.854464049 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089204544 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134928745 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11190112 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137357129 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133193649 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127706699 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124596931 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087954176 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132863843 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.0883383 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136626255 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153357414 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090562729 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122548309 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137986994 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089055499 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138484259 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087797046 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117948641 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112080989 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118446477 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135226838 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090882514 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115095728 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10292341 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116319245 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165791358 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09390724 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115717151 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092384447 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112653425 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16589767 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102826318 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125996561 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088492219 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130873755 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128394094 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087644574 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130411865 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093537447 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12922845 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088628382 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116555319 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086704177 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120436763 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098007898 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117371461 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.088693004 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118420017 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133593992 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089843038 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128750275 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089613181 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119126584 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089992411 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12131623 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097708517 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116998309 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10713277 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116954618 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131116116 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105618074 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129323985 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.104678962 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119371909 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129902329 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103577867 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117373509 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090391673 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118505065 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105393802 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113224522 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091205199 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126089968 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.088675389 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.140081579 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138473424 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090094223 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126520994 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088236331 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11720112 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089365582 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138776574 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091929229 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116268723 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118239828 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093697369 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113274263 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088595874 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118309431 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0878871 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115861758 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092806875 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115949484 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091342709 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132672052 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.09144912 seconds)
  done (took 11.975470411 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091456315 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.1149574 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092185849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116734198 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090199757 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.1163261 seconds)
  done (took 1.694548759 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113401124 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119436922 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10284567 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122640255 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156535345 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103122719 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131544054 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124154791 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106461496 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130872821 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129455058 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104766384 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138240057 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121502257 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104286369 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122145776 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102976585 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127768884 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127478907 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096360773 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139459971 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121671617 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097726803 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132711812 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.092543303 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.123004203 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126185532 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102647492 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128682361 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096374124 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123642784 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118384396 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096072011 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124324505 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129860867 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097334434 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122123693 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09302065 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127210262 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117967226 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105145453 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123398325 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.100202717 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121074264 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123663525 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095648741 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120964496 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126312089 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104704471 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120800991 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.093485408 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123595358 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.092202941 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121693456 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121932364 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098259904 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121398395 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129939901 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096500774 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122957915 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.092645396 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12038113 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123120795 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094010072 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.130994979 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.092676867 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122791662 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123626225 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096351801 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122913107 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095582341 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119813129 seconds)
  done (took 9.366241299 seconds)
done (took 34.717162079 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.70225864 seconds)
  done (took 1.769993425 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.744255727 seconds)
  done (took 1.812599071 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.161332478 seconds)
  done (took 19.233911211 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.516694442 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.605779389 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.820059501 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.183149089 seconds)
  done (took 3.194786712 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.988858352 seconds)
  done (took 2.075419778 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.246860809 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232541813 seconds)
  done (took 1.551179741 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.90104057 seconds)
  done (took 1.981597655 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.37023289 seconds)
  done (took 2.446507874 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333738306 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187153565 seconds)
  done (took 1.605758524 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557868053 seconds)
  done (took 1.641449956 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.142021406 seconds)
  done (took 8.231640256 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259476623 seconds)
  done (took 1.353879721 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301481652 seconds)
  done (took 1.386614831 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.790894812 seconds)
  done (took 4.877521175 seconds)
done (took 54.238029101 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09970905 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12773893 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10170219 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126094436 seconds)
  done (took 1.534912678 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100404883 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122294525 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099946075 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123454534 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.099143633 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.123029122 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124592163 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100221041 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123236075 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095554631 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122894336 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094428971 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126043087 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124068601 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094000346 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125291506 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098538824 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123030264 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124116006 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097138401 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119753486 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098594088 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126504661 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09379222 seconds)
  done (took 3.768278162 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101020734 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119942854 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096269053 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119706358 seconds)
  done (took 1.531468726 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100962373 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143460477 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139809114 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100207912 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144717572 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136679509 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093305509 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118368369 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094848755 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126373217 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091079802 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150341034 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138945116 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09880038 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129914432 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.08826655 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119492159 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137659771 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100666791 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127510445 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093702319 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127374547 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090319138 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.1413452 seconds)
  done (took 3.922861036 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.15812404 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.153717304 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140245134 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094677704 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158211528 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141801928 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091003589 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143407624 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087277494 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133519437 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118925719 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134068198 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130166771 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088003204 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116292817 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08656749 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130038902 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129011742 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091467284 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.146291712 seconds)
  done (took 3.565047538 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09863275 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118652544 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088502853 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11701881 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100633592 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122794202 seconds)
  done (took 1.7419714 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091173736 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115374092 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091976881 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114839809 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094335459 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11670902 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089375856 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115554195 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090107257 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116564704 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090185716 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115084162 seconds)
  done (took 2.336989867 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.460600542 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092682167 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12208298 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116190985 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096849489 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116810814 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103079476 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120837951 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113710465 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.11713902 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.088154449 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.120306547 seconds)
  done (took 2.763027827 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235640011 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127407401 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29289866 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19099751 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159543967 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172277673 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153465515 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166316381 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198039151 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157195574 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234691627 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195589485 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152056675 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19081383 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140381169 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146123837 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197838604 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247796452 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156309797 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205620058 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228731649 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166424323 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17945236 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124789584 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140194687 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169717543 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123566551 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131076158 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208605948 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205473412 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191252155 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165867726 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148269346 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239581981 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224310381 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22600114 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189032782 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137704752 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14422065 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168612367 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271625084 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140641604 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208249495 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159874178 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134530131 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19420609 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168218048 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20237007 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150687012 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11335948 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22813762 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211980556 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.223026093 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138425252 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134969169 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161828927 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167202845 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154230419 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253111323 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227239892 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182049054 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094146406 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149557709 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190548977 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210476736 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16903079 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182265034 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147143612 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193101906 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187999837 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165994744 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221246275 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185520276 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14125205 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171010343 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175221301 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169402713 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257414039 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178080605 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123593728 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168094519 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150866595 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104385767 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196671231 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126993131 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214380426 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151154013 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136388602 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162768008 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160058781 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133766093 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226973508 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190915229 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148650489 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112158071 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127155662 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157453929 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215090654 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112794365 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160756008 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160395382 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131846147 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17696636 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125350936 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177250023 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090266237 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204507011 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184167511 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099095703 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159903547 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153873867 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152973091 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176849199 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226338856 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114105604 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135236336 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206738948 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202860749 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.122340752 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206591756 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202742587 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143078749 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121101177 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228560537 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244939749 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114552877 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231681336 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15537325 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107183574 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134657823 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179222436 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15610135 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162933848 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13278199 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180413131 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235301273 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099171181 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139542546 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187291265 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134843745 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104197567 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160539875 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148654317 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140259622 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146382433 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151543805 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181930379 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178951317 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154710679 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167045374 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1519887 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25294802 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140539301 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149141157 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120670626 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122682217 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192375862 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224922835 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104065784 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230835432 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173429097 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156029122 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17141502 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10742994 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176669823 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132498257 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091860581 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222631393 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166297454 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162284264 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194115551 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156481073 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180437721 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.20945585 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173251363 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174197061 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165064431 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160980466 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110804278 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159478363 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164702905 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125272493 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144088862 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133451175 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129654133 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143572616 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135528776 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196513244 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196538886 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120043539 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159984271 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150203528 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180922574 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129794111 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177343673 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177275226 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147749121 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197306005 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221241419 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187520597 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143706258 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204957905 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122847115 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097269892 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143728918 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170192689 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136917098 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136308352 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166738239 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181208395 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183683874 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175416648 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164608703 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175253261 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18833682 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124313284 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169795403 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184657519 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174775045 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189433726 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144372195 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.122671123 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176478876 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156721997 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256552897 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167422008 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175890316 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238331951 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150414783 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103529317 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153278714 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213670006 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153599985 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176765474 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118295094 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145032715 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160420544 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135298779 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159613244 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181188532 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163714899 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219518392 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151006164 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187849079 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126923318 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167709898 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15855295 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164319104 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082958488 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174104307 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229707539 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147313034 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169908374 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192464015 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131373053 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.148633798 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241046582 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192520146 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139642715 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158399355 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161383624 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164525386 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173271639 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178984194 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159465853 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188543757 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158497724 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137972869 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139981436 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120068249 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15223819 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134399242 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14888936 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174108248 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14051954 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18741166 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160659203 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158510496 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170855622 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151773926 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.115331104 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150945036 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245347106 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175412999 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239214062 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.121758547 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207215429 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20625362 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126174406 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105062908 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134414313 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17905086 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136556634 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190195581 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.147855624 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127717703 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210126877 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19352506 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140515101 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092146517 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157811041 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172751849 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16469869 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153604053 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.15885872 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231504369 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11413954 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13399511 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172689959 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156763822 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11962035 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22532211 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080327736 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150833315 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099429929 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134785108 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165403527 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233426809 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108064142 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187578674 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174922897 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169012088 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166419649 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151640008 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150053475 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165131302 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201130128 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182168094 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134872421 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157972243 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175830491 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194250621 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188640442 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112737273 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231755611 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193848882 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197791483 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143675176 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167781662 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167021832 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157157913 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185313548 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137068839 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203261284 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137118412 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226376429 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153664335 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142370927 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174182837 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.120095117 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14223842 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214813121 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17444936 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107037996 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135136474 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167115779 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176479012 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156045286 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129603801 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180513052 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126539431 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190199712 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260223261 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105298994 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154756968 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148212913 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1366208 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157262616 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159690175 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139935535 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140517047 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23488214 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.106691739 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218383915 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202011344 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16778863 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202807402 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115553717 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69300609 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132126785 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193151782 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155559754 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233522777 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12049498 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200834018 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132285883 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168563253 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225710218 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158964319 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232961934 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191169421 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.204760218 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10498485 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158996272 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161361979 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145378404 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153907427 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167921874 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159955326 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153106935 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177498979 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169324678 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134945215 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11216488 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22828133 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153884921 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187891846 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180202568 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138957074 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171856939 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187490842 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134552671 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180261631 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234421558 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113336435 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153005086 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134636844 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155228555 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259385454 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097536197 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228388691 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175587572 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158038253 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168157908 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147385491 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191291688 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158829138 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177172063 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147928031 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159162546 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156699429 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138620352 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101608807 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15514925 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16616202 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149732692 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159475345 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141802567 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219353113 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09541063 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146961103 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157053363 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186821455 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243362179 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107660843 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136920001 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163146724 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152925897 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174745731 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176395977 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136979623 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136204836 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.10859232 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.161358004 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112318226 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15681399 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158722371 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165742917 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232921511 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109335403 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280752516 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141377099 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154803979 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089991996 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13348748 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149933351 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117995582 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158394905 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151783236 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262484308 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146642337 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105864996 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149241143 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127433036 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10838463 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166595637 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164315138 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175942686 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146929319 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111765559 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159880901 seconds)
  done (took 80.936340362 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213750844 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.222738822 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171203239 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.231084936 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199460112 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.297067407 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.238431825 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.276509863 seconds)
  done (took 3.02471781 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094344936 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.149403076 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.154420051 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135357934 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09195393 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119964312 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.335893647 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133448669 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092054937 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.142711327 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.146972487 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.121496828 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.51533552 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09360294 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.122675146 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.112367436 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.122140863 seconds)
  done (took 3.859126102 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.464839681 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.764081485 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.48020025 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.127901885 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.336299029 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.138054364 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.230469201 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.222638403 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094672672 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.512918611 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.777281574 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.164973008 seconds)
  done (took 19.48912826 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099810809 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121280848 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108406768 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137524754 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095970046 seconds)
  done (took 1.747943579 seconds)
done (took 131.301879266 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104376974 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401481574 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072707365 seconds)
  done (took 1.689940396 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10781166 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138962422 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108238545 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137751359 seconds)
  done (took 1.682448533 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098333904 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127634315 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109173639 seconds)
  done (took 1.519920981 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325948998 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.194424951 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.145320248 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106842564 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130532092 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104012986 seconds)
  done (took 1.525404542 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098000506 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127488661 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097539356 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131263403 seconds)
  done (took 1.643155911 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095647819 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072904997 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103085388 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07625957 seconds)
  done (took 1.531012841 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11560759 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133072841 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103187381 seconds)
  done (took 1.541120378 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129029142 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139758945 seconds)
  done (took 1.458212101 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105460381 seconds)
  done (took 1.290760306 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118380452 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171366598 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190289932 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166520829 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.230896474 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166434466 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.110873656 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.144129714 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132791068 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145186085 seconds)
  done (took 2.766426909 seconds)
done (took 18.605143408 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103582944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424071224 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383369926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147546218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725717892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380504208 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.075797501 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147810212 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167627161 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096814872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140799074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672315485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.031594315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374157064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.9908879 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467638201 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675643374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124110202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091395358 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123781326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.062247039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092462888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123150267 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092262585 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703389157 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.396846736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125626683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.471679256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092816706 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127734896 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383433831 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124836121 seconds)
  done (took 17.320356895 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096008204 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175341883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097654887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139820149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124771216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094816116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12535676 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093441945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180246636 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124388195 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111252474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12425305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126931415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095666148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142795085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092613241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126359138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093623921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12367413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093575945 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143013531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121508583 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095361581 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122536728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094998026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136905522 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093782679 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12294243 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092112341 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129472549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128156825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095571457 seconds)
  done (took 4.948685518 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14115598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184402868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130046531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127218892 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177216658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125684296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199880904 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118534809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185015169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.132753147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140669672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093104917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158268181 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100275655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145866711 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.129928056 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097609018 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123028018 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092514882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125334804 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111186826 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123453879 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123759631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094219504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12412531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108272662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126174896 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092373848 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123950644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128209434 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100044551 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125146997 seconds)
  done (took 5.307504166 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097703575 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129219529 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109536144 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14014631 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095566437 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127232012 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096871867 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126587221 seconds)
  done (took 2.118205547 seconds)
done (took 30.881363526 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.103754563 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123507547 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099378818 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135874522 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097979796 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133184493 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090931602 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.130714245 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099590197 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.129188945 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.099567796 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.123657369 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124081733 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093299842 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128529254 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093359732 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133274155 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097319907 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134690813 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.102652528 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.126119758 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.09944785 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129521144 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132870888 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104339034 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133399564 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103979363 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.129713681 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.092946718 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.126160124 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.095463845 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.137335728 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098397984 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.134844608 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.091691512 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123295181 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.120863456 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094123023 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133743374 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100167343 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.125457101 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099009408 seconds)
  done (took 5.996362519 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107882092 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140433725 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105144129 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080469726 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119129178 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080809015 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139183013 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.085624256 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111823478 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10845682 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077178944 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.109032143 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078400255 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071889969 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.108257087 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075356452 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109279146 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076519503 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076477205 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106794066 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080772449 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072694982 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110306724 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079102874 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074843781 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112317935 seconds)
  done (took 3.705586378 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100729496 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136094667 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112235015 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185101875 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.170793647 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09909035 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134719623 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140909282 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109027681 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121288221 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096347776 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15094264 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110042029 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130579122 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089976365 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138801475 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136474669 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094159647 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128891814 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113015852 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.14050286 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101266309 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144541067 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133039844 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092624419 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123839974 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096798348 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136228857 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097462611 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132853126 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095953254 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126401517 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123447683 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105896817 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126977354 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094049016 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142996524 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101037816 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.133083093 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091679387 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127922907 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.092637354 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144897562 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168774807 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092479723 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130898122 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09983145 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133744995 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.090954201 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142053595 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13172543 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092488851 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126428028 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09243186 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122516992 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107704635 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.131004479 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09446265 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133027007 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095352658 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137204 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.095153287 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139616034 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.125966314 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101062802 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121925645 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093234792 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122428431 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115557261 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12813933 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164438094 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099037941 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124180095 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10244833 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131433343 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098419171 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12514532 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107248766 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134202161 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125579642 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102865014 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126813779 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097148078 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142001521 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09536951 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125073578 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094045586 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129664851 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.094286065 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125003954 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105022112 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.124634554 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.094976672 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142053714 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124767394 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094902252 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130438791 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09720942 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.123008564 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105641297 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.13008525 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122841995 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103813559 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123830833 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097330537 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134604138 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098044309 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.123249118 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.097283947 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130673057 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.092052579 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.126247664 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094827834 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125328014 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.101276407 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130636121 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127993218 seconds)
  done (took 15.027262769 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228453535 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218585757 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.094875687 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.240425316 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.106254528 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.135831473 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.2135456 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.123323107 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125984428 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.124421646 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.095952203 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.162936515 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156025726 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.136752028 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.136255577 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.091134393 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144116802 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166560925 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215882223 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.207433954 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144988489 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101122201 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.127051935 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.094019332 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.127018569 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101800575 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142923107 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136894173 seconds)
  done (took 5.314161024 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107885466 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15743282 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098883973 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146597531 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149313455 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091866343 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129725557 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093850775 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137710255 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135895163 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092642348 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130129222 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099873011 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134383425 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.093025299 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.134528652 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133552816 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095187768 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12598655 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0973619 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131417516 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100963549 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129149518 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091622381 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132096877 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.090500176 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.117385002 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143449298 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.09241305 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.147140645 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.089941474 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131458477 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133688052 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094572706 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123025249 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096564705 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126048393 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096387849 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125512979 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091598167 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123048124 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078797969 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122688696 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106914749 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130856946 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08025797 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131133714 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.09791251 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130576167 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.091118708 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.128307366 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.094336168 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128710641 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.100274368 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.130647225 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.098191851 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.129025382 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.085481176 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.132106776 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.094597185 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116914359 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091291641 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.13057815 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.087558744 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133190792 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.097721208 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124471811 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.094548947 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130032646 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129762219 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096453678 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126748089 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092177742 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126999879 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099743561 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129334497 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097298064 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123036417 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093053327 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124655951 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076720395 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124102261 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076744599 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096324264 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123810136 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.090697592 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.127578084 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130033913 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108961011 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126587027 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.098766879 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.126206046 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091228853 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.129028839 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.082993039 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.128211893 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.106807659 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141977933 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125314439 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.091057323 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138496841 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098559942 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125072172 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076811289 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.132060123 seconds)
  done (took 13.128292142 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.117175038 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150017111 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094793157 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139197396 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.14914268 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.118357071 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.132595038 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.099806524 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127343552 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.110140274 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126527001 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10125723 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129559578 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.101373953 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.149128896 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132446722 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095934334 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.133478083 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101129768 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.160516801 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.106065175 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140060957 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.135833976 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094806794 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129128982 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106718421 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.151369981 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103344395 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13507649 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.10689362 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.137628998 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.149911474 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109909241 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.12928425 seconds)
  done (took 5.435973316 seconds)
done (took 49.803643378 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.307251707 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.564282898 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.297099826 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.368579026 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.305070066 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.319363115 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.307126013 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.296664059 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.599367892 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.298488571 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.54196272 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.119324429 seconds)
done (took 60.548754252 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.418452165 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.434269391 seconds)
    (2/2) benchmarking "String"...
    done (took 1.56587319 seconds)
  done (took 4.241623417 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.697310177 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.40004628 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.587902416 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.297046723 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.297148758 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.732216622 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.149922449 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.741273284 seconds)
  done (took 29.428838788 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.311264984 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.737160175 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.476734926 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.470715987 seconds)
  done (took 20.221194511 seconds)
done (took 64.229029921 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.303651248 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.333770073 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.298915482 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.278395279 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.453024815 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.334572343 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.936049821 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.348252613 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.329487069 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.286919121 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.327485897 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.301990113 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.301593163 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.451016801 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.314377937 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.298838676 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.307703222 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.841110892 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.74697784 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.311982004 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.335303793 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.358433612 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.31476477 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.30086494 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.299346511 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.306893852 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.298727964 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.324237972 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.326959388 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.305537049 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.3310763 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.634068714 seconds)
  done (took 194.467276041 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.30005495 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.373017532 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.543689889 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.352020599 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.848224253 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.502698892 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.441649083 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.924867795 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.330097959 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.319877804 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.495298455 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.305638814 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.578702825 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.294682664 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.308033734 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.351316052 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.618118315 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.627311487 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.329071217 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.552579973 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.319177519 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.405795231 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.339202048 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.492045226 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.331075382 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.3957335 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.320192674 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.339738685 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.495254684 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.53402806 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.351813367 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.37126738 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.001378644 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.160119618 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.304703488 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.322478624 seconds)
  done (took 154.106809113 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.64204277 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.302468125 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.301950286 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.302906684 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.33677864 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.304816931 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.952110711 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.957442724 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.828790623 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.428311655 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.369701968 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.674889301 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.307783496 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.400362599 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.314991132 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.302827268 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.318256955 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.349057575 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.30721278 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.303593302 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.954056594 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.321278533 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.800474552 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.308965778 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.305592076 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339784158 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.701342415 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.302810789 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340272397 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.641498629 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.361375462 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304189379 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.720823133 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.455819015 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.417477699 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.307098553 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.341484342 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.304150584 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.583247471 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.305266684 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.304966004 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.308480504 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.013081909 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.309790749 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.955237893 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.310071737 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.301151057 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.304493287 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.305319888 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.769421386 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.982586002 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.332764638 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.305500808 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.309401832 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.304887017 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.304445454 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.340987375 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.762902288 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.411832967 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.325898355 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.309903957 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342061773 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.307206545 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.441234929 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.335059698 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.397640702 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.367008857 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.418688675 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.929967897 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.30771577 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.404939118 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.429973483 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.307804211 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.307306228 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.308314948 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.308011649 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.418414108 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.308124401 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.767318752 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.313835841 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.308426861 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.36996511 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.405866988 seconds)
    (83/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.307637319 seconds)
    (84/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.736412204 seconds)
    (85/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.312541246 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.306502722 seconds)
    (87/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.111915761 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.307840453 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.308027468 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.404806705 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.308123502 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.308039724 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.307845179 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.307436372 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.769967155 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.96056867 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.625875191 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.313326021 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.307071312 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.805891817 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.313370738 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.787766846 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.931180368 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.040467598 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.31478323 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.419732827 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.312712282 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.31029714 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.307933764 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.336604987 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.329656884 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.363147067 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.313100484 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.710879558 seconds)
  done (took 359.696139882 seconds)
done (took 711.13523466 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.015584285 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.960267372 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.112375065 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.97928812 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.959131968 seconds)
  done (took 11.260260281 seconds)
done (took 12.492632913 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519984535 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52014183 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.378841208 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522902068 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.341752295 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542166583 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.5046102 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.335150074 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422497837 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.405014269 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425872424 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.371402498 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.346927607 seconds)
  done (took 19.873440691 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.64805999 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.637681283 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371651533 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.658476592 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.347323739 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.655289423 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.515714809 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.540502101 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.536280103 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346684824 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.324221739 seconds)
  done (took 17.819128735 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.668603932 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.637310757 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.375977196 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.658541814 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.351124478 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.652563421 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.528584445 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.543489115 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.535722102 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.347842744 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.324576224 seconds)
  done (took 17.860370539 seconds)
done (took 56.785696083 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.319657317 seconds)
  done (took 2.556519918 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.356475933 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.531816884 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.339089604 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.321847398 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.320564995 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.319270872 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.323970364 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.320353981 seconds)
  done (took 12.071160495 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.317623296 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.323991184 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.319340139 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.321529335 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.318763925 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.322850656 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.320246105 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.320652909 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.322604185 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.324230358 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.320681429 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.319571412 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.322836467 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.320598073 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.32395067 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.32236186 seconds)
  done (took 22.379157261 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.318838795 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.318931284 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.316994464 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.317074965 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.318318297 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.317058196 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.319002711 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.316719639 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.318488657 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.319719218 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.320973725 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.3205925 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.321618438 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.32010447 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.320532903 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.321519095 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.321013471 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.319670759 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.325593244 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.320272991 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.320887976 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.320908775 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.321661487 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.321186821 seconds)
  done (took 32.919829579 seconds)
done (took 71.160471705 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.635731313 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.180937053 seconds)
  done (took 10.056404827 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.325489146 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.323186321 seconds)
  done (took 3.888785602 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.323240334 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.324841007 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.32444259 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.325050256 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.324303337 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.324289607 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.326989879 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.324652599 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.32422236 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.324658727 seconds)
  done (took 14.485714339 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.32336471 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.323695505 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.321945236 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.324372788 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.325534515 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.323085141 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.324536256 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.32424609 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.325559532 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.321785965 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.324866379 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.323565942 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.324840881 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.323738236 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.324995976 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.323141523 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.324386473 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.323144393 seconds)
  done (took 25.071596411 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.326173935 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.325555173 seconds)
  done (took 3.892785849 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.32446867 seconds)
    (2/7) benchmarking "second"...
    done (took 1.324012155 seconds)
    (3/7) benchmarking "month"...
    done (took 1.32423938 seconds)
    (4/7) benchmarking "year"...
    done (took 1.323998768 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.324440687 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.324340433 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.324497017 seconds)
  done (took 10.511298746 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.328430254 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.504311694 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.58772013 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.930784882 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.327872361 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.329029625 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.205485795 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.331672008 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.333592274 seconds)
  done (took 15.121254559 seconds)
done (took 84.264712625 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.401238322 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.345771062 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.612100117 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.326129382 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.334616091 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.619015026 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.375129004 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.450129024 seconds)
done (took 38.704402917 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.321090584 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.127494274 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.132205462 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.328556331 seconds)
  done (took 11.832455507 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.312761102 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.339877238 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.322377842 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.437676772 seconds)
  done (took 18.656242857 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.453835487 seconds)
    (2/2) benchmarking "read"...
    done (took 1.65849201 seconds)
  done (took 5.356551118 seconds)
done (took 43.408068698 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.325976173 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.323908065 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.326906104 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.323398097 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.324724128 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.322886472 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.322281956 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.3231164 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.325465722 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.326218129 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.326001623 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.327040974 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326167098 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326061338 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324112319 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.326984254 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326791779 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.324017269 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324410577 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.324199514 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.327018938 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325858742 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.324563031 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.324573485 seconds)
  done (took 33.047088717 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.327152675 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.324806509 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.326805354 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.327901908 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.325747829 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.326548131 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.328442688 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.325150084 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.329232218 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.328742442 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324499486 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.325803924 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.329150256 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.325468434 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330494514 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.32589684 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.3291515 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326680236 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327669046 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.32681973 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.327750239 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326053213 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.325539804 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328528689 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.325606453 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.326579144 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.329626988 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.327297718 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.328627329 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.326587599 seconds)
  done (took 41.060068983 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.333518531 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.336891963 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.330237254 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.328240795 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.328201269 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.329060485 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.328665401 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.329232168 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.329809561 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.329037278 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.328529354 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.327829923 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.329134172 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.329638004 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.329645645 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.329254104 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.329531329 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.329340635 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.328117115 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.328672294 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.329537169 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.329036921 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.330030818 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.330413554 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.330389317 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.330940681 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.330208714 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.330283923 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.330389368 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.329660196 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.329992046 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.331378643 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.331084299 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.329507049 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.329822581 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.331793362 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.336086556 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.338661635 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.331215216 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.331619801 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.330628725 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.331095593 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.331099944 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.330436443 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.330256451 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.33025623 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.331296648 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.331743017 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.331827017 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.332313186 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.331938522 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.330481733 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.331865626 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.331058793 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.33148348 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.331062309 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.330144174 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.331875769 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.331761061 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.332544291 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.332838103 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.332631995 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.33222708 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.332578256 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.332905537 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.333126285 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.332804343 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.332954367 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.332865965 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.333040327 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.332815677 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.332951506 seconds)
  done (took 97.082639604 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.332682572 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.329912261 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.330223113 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.330716957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.331498655 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.333738128 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.33017651 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332729019 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330722832 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.333903315 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332265397 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.330994838 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330361893 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.33411729 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333283828 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.330006323 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.334655862 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.331724708 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.333596457 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.333917557 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.334337044 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.331847673 seconds)
  done (took 30.559668526 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337390922 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.33318621 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.331442949 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.335050086 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.339108554 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.334683576 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.333651492 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.335463104 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334644059 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332065066 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335366886 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336220599 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.334623016 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332132976 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332218007 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.33297856 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335278832 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.332572218 seconds)
  done (took 25.27015907 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.334000313 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.332819479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.334952789 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.333565785 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.332845698 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.335201448 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332555593 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.336233998 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.33547308 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.333379679 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.336235271 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334986232 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.335983553 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332947717 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335854689 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.333724534 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.335891783 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332980205 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337217615 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.334606013 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.334392833 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.336356075 seconds)
  done (took 30.615513371 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336130015 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.33701311 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.333503188 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.3328805 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.333953678 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.337415196 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.338082628 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.334795541 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.336972761 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.337358942 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334095645 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.338141193 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.335510628 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.335951697 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.335572846 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.335454195 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.338013635 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336157622 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338164058 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.334865142 seconds)
  done (took 27.975289902 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336600008 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337523132 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.339509127 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336563243 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.338068594 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.338796658 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337922139 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.338489793 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.337927456 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.339416094 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.340053376 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.338915546 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.338693344 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.338590801 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.338091098 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339673256 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339178279 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34095986 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340313601 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340067461 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.339575014 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.340019285 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.340038515 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339676021 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.3397604 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.338821149 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339744537 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.338917554 seconds)
  done (took 38.748424768 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339782694 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.33992054 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.338393964 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.33824275 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.337374144 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.338381149 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.338567946 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.338149353 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.340465252 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.336994623 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.340089253 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.340111974 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.341258432 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.341017939 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.341220361 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.340197609 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340843308 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.339296889 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.338157913 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338374416 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.341426034 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342105702 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.342134927 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.338066459 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339274666 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.341420845 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338727412 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.337738997 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342203391 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.340159544 seconds)
  done (took 41.449151351 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.360497985 seconds)
    (2/2) benchmarking "in"...
    done (took 1.361464859 seconds)
  done (took 3.981536353 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.338705502 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34241197 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.342251218 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.340102019 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.34050147 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.34219918 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.341964896 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340060605 seconds)
  done (took 11.987566016 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.34329743 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.343162308 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.343484377 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.343438993 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.342708558 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.344119688 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.350713142 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.366486737 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.344767286 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.344941103 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.353120004 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.353173318 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.34782505 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.345328845 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.345477608 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.346446118 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.343883418 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.344303918 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.344510455 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.34604652 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.345554759 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348811064 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.347388343 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.341856409 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.347200823 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.357503927 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.371509917 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.346011393 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.344615645 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.347992761 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.345623428 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.341711956 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.344246401 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.344783726 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.344991675 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.343913119 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.35402743 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.368413528 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.352124259 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.366496177 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.346883413 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.342456074 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.347012516 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.347712221 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346554105 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.345423895 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.3474831 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.345102642 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.346962239 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.350217407 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.352317697 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.346636523 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.343278668 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.351088961 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.348684149 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.352326597 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.368228837 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.349861146 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.357660526 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.357928794 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.383460362 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.374831818 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.349232463 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.347780581 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.358456519 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.377422964 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.357288418 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.368323342 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.34437589 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.346706352 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.354757643 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.382002437 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.375442362 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.347840463 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.345976563 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.34855925 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348067107 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.346906424 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.354416711 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.375342521 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.347317645 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348036034 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.360512363 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.374440518 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.348918016 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.348003442 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.348704738 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.34758793 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.351437733 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361406798 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.371320414 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.350222838 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.349942401 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.350893801 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.350975405 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.349017644 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.350806138 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.351030352 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.347699033 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.350183842 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349599129 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.353852062 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.359877978 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349686122 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349645191 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.35722808 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.371943146 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.351145936 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.358029943 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.350060032 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349141593 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.352605949 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.35763997 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.348248528 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356014758 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.360871063 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.350133346 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.3526071 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.349717966 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.352443088 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.361553828 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.378913238 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.350180445 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.351048235 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.357017551 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.363061423 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.352344736 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.35522258 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.351054689 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.349341018 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.348775474 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.352697465 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.351615116 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.352348432 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.350409082 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.353702009 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.348881925 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.351712158 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.350720608 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.353465842 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.353843267 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.352870021 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.354274847 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.35594017 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.352995469 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.354249176 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.35913094 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.374322452 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.353895533 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.353795502 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.349655439 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352477747 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.353320004 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.351747506 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.353491011 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.353076203 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.353210113 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.352879134 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.354654814 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.353049812 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.352418448 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.354571638 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.35879165 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.352850246 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.356306778 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.3539343 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.350837256 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.353321935 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.353462488 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.354641425 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.355081762 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.354166576 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.357834975 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.361825135 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.355266201 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.353960918 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.357752359 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354043578 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.354024385 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353076529 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.359350674 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.364808404 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.356197748 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.362358197 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.376235669 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.354626233 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.355765725 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.3554444 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.355213443 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353789963 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.35900387 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.36404632 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.369018967 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386613183 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.357676991 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.360452071 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.35752842 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.360257971 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.361151172 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.354907979 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.356162921 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.354578756 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.356541653 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.355455712 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.358842384 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.355788831 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.355649188 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.357480928 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.357704393 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.354971828 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.356904229 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.357923385 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358083545 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.354598479 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.357074204 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.357354193 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.356873717 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.354229627 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.358957341 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.358586219 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.357658726 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.357495211 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.364090703 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.354657765 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.359008039 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.359065331 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.35856741 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.356662792 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.358279353 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359666473 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.356834326 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.364639664 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.383504406 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.35933426 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.365134698 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.383491535 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.358455944 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.361065459 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.35865023 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.355243198 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.361686943 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.367027041 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.358920035 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.357766629 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.359807009 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.359569121 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.360117212 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.366199679 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.378305412 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.358947936 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.358874869 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.360797182 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.35713662 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.360630477 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.359617966 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.361232849 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.362172599 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.359805301 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.36003756 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.361951679 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.358385154 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.358739512 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.358280442 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362691514 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.367553082 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.366051032 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.359811676 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.362888341 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.362053035 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.363861905 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.361560136 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.358373695 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.360366136 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.372593967 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.390359066 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368539581 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.38630745 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.361219037 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.367487354 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.386051445 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.365913309 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.363201652 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.363353792 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.363654239 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.362643308 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.359912041 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.363065148 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.361020208 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.362733173 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.365427378 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.36598538 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.361705897 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.362015238 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.360800782 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.362599909 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.362031725 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.36189837 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.361420474 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.364385116 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.364123937 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.362184243 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.363852606 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367822561 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.387677948 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.363476112 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.362213095 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.36231504 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.362444792 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.364797129 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.362486213 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.367396227 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.369951372 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.366604339 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.37344007 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.366365845 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.373184697 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.36280719 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.368662974 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.372331201 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.360868432 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.363399824 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.364227837 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.36307694 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.37071983 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.387870407 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.365408783 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.368663507 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.36323904 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.363873806 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.36516469 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.363552565 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.364419446 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.363483007 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.372414333 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.388073669 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.369134569 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366310558 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.36177825 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.363355891 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.366189108 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.364546501 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.369387455 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.363672895 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.367393142 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.365047226 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.366792823 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.365482799 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.36573562 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.365198418 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.363014588 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.365889032 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372305262 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.392704761 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369475239 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.366084808 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.375237571 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.387317652 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.373959853 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.390000061 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.366927349 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.365311451 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.364377092 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.367285647 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.366768337 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.367553441 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.364657542 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.367961754 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.369579215 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.365302895 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.370031069 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.367057634 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.366126023 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.367541423 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.37883129 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.391699837 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.369230887 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.371465779 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.36377076 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.370252807 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.372909471 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.366021539 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.366798454 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.370581195 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.378728263 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.375122472 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.368143996 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.367450299 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368107621 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366250435 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.367816381 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.367136563 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.367374171 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.368140457 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.369447639 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.367113321 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.371963202 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.366887147 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.368117161 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369734417 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.369565247 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.380740464 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.389520705 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.370061984 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.367018614 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.368792692 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.369132298 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.369187933 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.368327205 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370280847 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.367111223 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.370785012 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377542197 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.376776705 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.370796893 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.369672481 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.367110886 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.369593106 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.370901441 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.368132687 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.368779132 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369530208 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.370558023 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.36852528 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.371189508 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.369467424 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.368622755 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.370589596 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.369696152 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.373213761 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.378493114 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.371265955 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.366062388 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.370851319 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.369758847 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.369312658 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.371190925 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.378919839 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.395834532 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.383348545 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.381588821 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.374598099 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.371828018 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.374393288 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.380135002 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.369493621 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.372580756 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.370889967 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.371633939 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.37380713 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.375824847 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.370679354 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.378648234 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.393340673 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.370858631 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.379716109 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.395537543 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.370583802 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.373596924 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.377475345 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.372471753 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.370078779 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.372983098 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.37274102 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.379685006 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.398164682 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.371749445 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374168448 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.371791129 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.375383582 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.377735963 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372695611 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.374290173 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.370970084 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.374255141 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.371981553 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.373829902 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.369646247 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.373182139 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.373226496 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.37708859 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.381704897 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.369785425 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374905901 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.374098847 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.376156195 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.37349145 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.374668758 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.3704055 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.37169694 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.374973073 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.37392617 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.375459745 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.375851949 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.373039776 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.375836402 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.375965693 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.374645641 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.380109555 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.387167226 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.384193093 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.371685811 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.373856102 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.375489845 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.377812702 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.373640132 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.374125894 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.376188442 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.37691299 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.376127103 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.374382858 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.375036993 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.37916315 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.392519151 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.39751827 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.377183761 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.375737429 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.378893094 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.374592248 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.373239959 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.375555479 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.378038006 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.380214624 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.383588577 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.374536939 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.38248232 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.399210765 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.37710466 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.380545907 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.380610811 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.386097382 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.377984124 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375358587 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.37628446 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.381383859 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.394817951 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.375179993 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388417256 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.409209424 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.401606204 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.378373206 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.375753461 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.377689663 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.3754713 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.378700506 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.376395433 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.377058915 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.377741115 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.37623597 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.38000176 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.384743598 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.37871296 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.377566382 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.37787653 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.377802236 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.380736416 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.375315463 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.376538617 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.378666313 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.377717148 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.378710774 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.377650673 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.3783602 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.391671582 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.408961729 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.378059042 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.377189388 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.377054856 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.382885503 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.382916988 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.391837465 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.38763869 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.378812055 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.379077778 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.381518541 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.377843636 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.375695173 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.380400415 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.378405357 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.380214774 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.37536585 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.393830991 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.407657639 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.387112225 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.384669093 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.385453648 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.386187562 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.387748348 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.385424795 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.381390528 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.383798045 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.381980752 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.384398823 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.380447831 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.380402965 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.384648702 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.389433044 seconds)
  done (took 815.159436563 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.378297552 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.378382821 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.377961628 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.377871192 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.377246338 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.37962025 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.377976023 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.377829109 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.378825664 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.378285427 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.378882322 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.378699827 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.378862005 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.379898065 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379344938 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.379050095 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.380163612 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.379400534 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.379482433 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380512097 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.379331581 seconds)
  done (took 30.251422726 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.3825729 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.378612879 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.379107333 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.382608165 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.379605227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.382243874 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.379423135 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382967007 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.381857001 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379157645 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.382492562 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382759789 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.379715646 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.380413583 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380554874 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38289222 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.382485922 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.380816199 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.38351536 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.379675998 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.381549058 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.380197687 seconds)
  done (took 31.683655409 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.382038988 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.382818788 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.384003108 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.381224647 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.383169916 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.380080648 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.381720076 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.384002185 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.38307137 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.384295616 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.382297678 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.385184514 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.392809633 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.388769345 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.385295466 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.384293236 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.527321944 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.382858902 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.383742506 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.383710639 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.381437417 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.388640854 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.405225182 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.380784788 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.38440546 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.384238738 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.385116292 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.384432633 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.383400819 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.386344968 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.389450085 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.38555659 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.383970191 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.386273186 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.384805536 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.387108238 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.390649938 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.385686254 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.381979402 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.385954185 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.395272359 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.407815901 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.384430762 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.391584234 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.406962007 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.385898428 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.391604308 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.393773947 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.384619376 seconds)
  done (took 69.389594579 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.386574723 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.386169935 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.384315849 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.386912469 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.386318667 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.385878392 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.38669438 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.386694352 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.384710877 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.384780625 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.386960865 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.385181233 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.383248392 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.385828094 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.386835527 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.383389098 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.383372436 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.383592751 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.383640618 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.383873908 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.384658304 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.3869514 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.388361 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.384509087 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.386839341 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.385133709 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.385335367 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.386982149 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.386361383 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.38574788 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.388593236 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.388154773 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.387815388 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.387926996 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.385438721 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.389054552 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.387938343 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.385829159 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.388537078 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.385549098 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.388512905 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.389131883 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.387818337 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.389757233 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.386455981 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.38749371 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.386229122 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.386663669 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.387925791 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.387447298 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.389151101 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.388011119 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.390179625 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.387543272 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.389660036 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.389905132 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.387234002 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.38693142 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.390447336 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.388328745 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.386646004 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.390695581 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.38730927 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.3904794 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.391002885 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.388179404 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.387306009 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.389901051 seconds)
  done (took 95.621015814 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.390599519 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.390731995 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.390792739 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391986969 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.38936253 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.390622286 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.390459804 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.389876596 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.389532326 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.391005236 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.38911504 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.392262074 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.390949438 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.392041198 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.391164314 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.390644469 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.389684499 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.391501828 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.390564672 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391814154 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.389958927 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.390950051 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.390773026 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.390304267 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.391908543 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.391385983 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.391964192 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.392281737 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.39022839 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.390759699 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.391617426 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.390230074 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.392662731 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.392490511 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.393711235 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.391939203 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.390881833 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390438443 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.391292836 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.39178065 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.391683711 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.391796222 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.392194391 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.392202073 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.392430213 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.392270156 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.392975247 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.392105487 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.393709134 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.391665405 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.392080977 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.393388465 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3929656 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.392579446 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.392067575 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.394067817 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.3922775 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.39261093 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.392495463 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.39313012 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.393239414 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.394398092 seconds)
  done (took 87.587565129 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.394742803 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.39534799 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.392042324 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.391854157 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.395975205 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.39156865 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.393751044 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.394811911 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.39379072 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.395400306 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395141364 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.393144397 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39183743 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39485223 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.393089342 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392065065 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.393750904 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.392093801 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3946503 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.392618862 seconds)
  done (took 29.181443745 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.393409744 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.395741794 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.392919949 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.39328527 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.395683639 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.392633904 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.394985716 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395683191 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.392163637 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395374879 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.395730798 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.39560661 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393192625 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394600098 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.396408597 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.393420317 seconds)
  done (took 23.620212278 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.394303705 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.39668711 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.395371945 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.395830573 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.39388618 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.393914384 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.397234419 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.393048726 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.394366103 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.396815906 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.395994881 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.397992182 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.39734206 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.396233902 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.393823359 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.397121655 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.393966289 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.394606387 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.398409625 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.396483274 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.395473189 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.394623324 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.3982419 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.397906209 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.394900597 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.396030418 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.394721261 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.396051995 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.395975078 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.399120367 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.395796964 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.396114366 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.396331949 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.395916459 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.397340702 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.395938352 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.398477301 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.398697925 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.399243453 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.398546879 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.398786807 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.396189262 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.398551536 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.397916115 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.395567674 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.399022546 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.395557154 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.396333186 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.396430853 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.395699768 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.398319473 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.397755012 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.400451223 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.400150287 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.398737047 seconds)
  done (took 78.126510274 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397534339 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.398399201 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.396421067 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.399004249 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.399747462 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.398144305 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.400773459 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.396776316 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39786647 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.400462475 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.397918512 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.400080824 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.397971108 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.399768408 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.398466473 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.400467997 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.397340007 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.397517224 seconds)
  done (took 26.489682433 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.398650465 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.399261578 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.400861857 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.397876487 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.398224925 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.400466524 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.397493308 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.401046522 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.402260717 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.399039828 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399018647 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.40126135 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400945645 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.401728275 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.398800921 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.399344241 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.402236078 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.402092233 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.398783896 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.399397113 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.402693932 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.402478724 seconds)
  done (took 32.117569876 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.401555119 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.400389751 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.40162219 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.419262992 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.424360398 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.426030512 seconds)
  done (took 9.788579074 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411037473 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403698484 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.40113103 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404557268 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403768973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40011424 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400923713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401153652 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404713834 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401777864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401308539 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403635537 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403261973 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402569805 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403736665 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404094483 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401010831 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402377089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403566321 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404308361 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402695897 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405672718 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401466641 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401285728 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402030555 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40257455 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403796991 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402178046 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402617384 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404352249 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405843491 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402572347 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405082902 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403391141 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405660453 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40496696 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401887077 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404154012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404750067 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403133792 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.405609253 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405609483 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405650138 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40284769 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404748541 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40309274 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402207141 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402724349 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404126855 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40573018 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406385625 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40353673 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405588745 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405223198 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406090348 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40604243 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404007668 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403975216 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407141343 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403331768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405184371 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406285809 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40443437 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405136934 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406295504 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404214839 seconds)
  done (took 94.001323294 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405597433 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.40381669 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404714403 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405819978 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40536984 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404678812 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404271398 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403675176 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404571329 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405013182 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406423003 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406064884 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405103992 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406679497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405827185 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405126656 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403720371 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405334845 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406103069 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409161861 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406059718 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404267679 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405983343 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406376664 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406158365 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408020539 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405137963 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406417367 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405530639 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407259935 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40540338 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405955143 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405707018 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.40642492 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404349439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406813194 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406900446 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406942744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405112074 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409240508 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407576956 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409770777 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405432477 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404988615 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40794314 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406537286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407329465 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407513986 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405839528 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40635193 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407126974 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407176469 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407004581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407534824 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408138238 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408177869 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408959908 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408216241 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408896162 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410218192 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408922763 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408073692 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411691681 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409043507 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408644629 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408802475 seconds)
  done (took 94.159390001 seconds)
done (took 1900.195944555 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.441417082 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.531846197 seconds)
  done (took 14.297475679 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.57638135 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.525017075 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.410503155 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.424432318 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.410960625 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.413390825 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.437509328 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.410752782 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.410723249 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.409406055 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.411367607 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.60300466 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.451040673 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.412170585 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.411089301 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.501327123 seconds)
  done (took 44.552234124 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.441921847 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.417398861 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.550773191 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.444968172 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.441716812 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.639745572 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.484484196 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.41734347 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.632195478 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.471402593 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.258636519 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.442622892 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.414747432 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.821514735 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.446266824 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.639765361 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.707097863 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.26271832 seconds)
  done (took 33.260803261 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.978017224 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.435091322 seconds)
  done (took 9.739033204 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.451400134 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.449424613 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.411863889 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.450637369 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.437951272 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.412376456 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.44728049 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.492403201 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.456480788 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.484379618 seconds)
  done (took 65.829713471 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.440786213 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.417394917 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.416922107 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.417256418 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.426395121 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.40984563 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.413506608 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.412593071 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.829210137 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.567545935 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.439885111 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.421138723 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.437509106 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.417912041 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.41426247 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.45719954 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.560132632 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.435060626 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.41408028 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.42268146 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.417077314 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.516461177 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.466863456 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.413786842 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.567940738 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.956582106 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.427200573 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.424707219 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.538069865 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.435770417 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.41706815 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.416872367 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.419708085 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.040613757 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.978766185 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.430273259 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.466216706 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.426123449 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.413003133 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.537018648 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.440207347 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.423246741 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.414146735 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.956167366 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.60080901 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.55261235 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.914763197 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.419929049 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.419806254 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.484633319 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.419063619 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.419624206 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.451551075 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.244384485 seconds)
  done (took 118.372163964 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.464554172 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.904367637 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.585802889 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.439467801 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.272017637 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.164620643 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.432486836 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.75799951 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.450838553 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.41238837 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.719473452 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.98125804 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.436379241 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.421662337 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.091872578 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.503112295 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.412687574 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.283738249 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.434253216 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.413133834 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856334302 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.434854966 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.433115767 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.583044575 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.456202324 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.935308411 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.196938473 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.781579162 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.437185015 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.414183475 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.937386946 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.436211458 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.453874607 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.414246063 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.715414719 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.834102209 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.829203776 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.435139687 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.441276741 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.417087225 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.43791809 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.93282847 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.837793799 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.434181281 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.415655792 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.940451089 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.435785126 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.419857463 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.41503653 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.628738433 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.391784569 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.415809664 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.182022893 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.416131206 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.771499559 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.454107318 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.419419645 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.965301033 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.436319874 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.478680087 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.465599651 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.416283568 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.419885592 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.420615619 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.420939921 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.8246149 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.551402287 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.415688842 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.845419584 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.978668215 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.44439032 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035815421 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.323957012 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.426692763 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.4897088 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.416791273 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.09526065 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.985492534 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.462698902 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.416479567 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822314333 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.444140368 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.724568389 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.436739375 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.418765977 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865962944 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.442695904 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.463103142 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.41691283 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.43784427 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.079113938 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.420771569 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.713745699 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.456774031 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.41799239 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.417706885 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.450452253 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.417926971 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.4171119 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.418593358 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016394175 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.444936809 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.591937237 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.451619516 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.417423681 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.4186022 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.419829303 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.418278552 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.645418812 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.95823453 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.422631109 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.418971595 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.418956636 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.445319415 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.572695347 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.421492159 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.783565956 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.442602366 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.428478208 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.419485788 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.221398839 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.457955997 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.419707155 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.423328064 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.293991197 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.65545975 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.442573126 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.421310267 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.42244635 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.44167699 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.044973265 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.421770031 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.457347702 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.420458249 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.182740843 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.452365013 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.427759027 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.047522232 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.419222994 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.420484086 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.451063533 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.42136652 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746704449 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.723104229 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.48337383 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.420992848 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.447028267 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.177782145 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.443320925 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.573569723 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.44644277 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.464622255 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.624105857 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.586603249 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.421549349 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.005902279 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.423436043 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.642546601 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.421843655 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.778828253 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967236181 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.441528045 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.427374153 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.179601436 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.113123314 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.083180502 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.423820521 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.729867943 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.427256357 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.875455555 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.423133263 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.423122236 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.882102324 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.424344261 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.427095959 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.423495579 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.421810841 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.570716133 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.60320639 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.216082852 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.429725317 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942595129 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.462148352 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.432572608 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.435971127 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.434342849 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.775278725 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.429707135 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.429088954 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.456327604 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.424271461 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.425244008 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.956270712 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.427989208 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.425791297 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.582857168 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118243282 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.444825878 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.427134504 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.070400202 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.655243788 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.991827047 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.461597579 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.792198291 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.44796656 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.469489275 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.216145044 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.47105563 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.955950305 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.445791859 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.426396578 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.096174609 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.445992128 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.776198532 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.424464301 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.427753004 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.031204522 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.446497633 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.423889357 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.035172146 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.427035733 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.681095127 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.426828246 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.473709048 seconds)
  done (took 1135.95308475 seconds)
done (took 1423.324518293 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.427769815 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.4261451 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.418572274 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.435032925 seconds)
  done (took 27.051082644 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.434570645 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.432896222 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.432388204 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.432100926 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.43313817 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.433271968 seconds)
  done (took 9.94319282 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.047624306 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.426763063 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.436696818 seconds)
  done (took 20.255232033 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.696486508 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.929872205 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.889151909 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 4.076667985 seconds)
  done (took 11.936980517 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.433927819 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.432732429 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.43377883 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.43303105 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.435055905 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.436273001 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.433169313 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.435473779 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.435396429 seconds)
  done (took 14.252349377 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.005313513 seconds)
done (took 90.785548906 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.321860787 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.132253368 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.86958286 seconds)
    (4/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.46526772 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.429519487 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.554584651 seconds)
    (7/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.142442594 seconds)
    (8/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.551084502 seconds)
    (9/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.192112494 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.444122125 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.714185454 seconds)
    (12/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.655374545 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.934551334 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.490728423 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.382764042 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.454270537 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.962963317 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 5.029879579 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.301879972 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.849938248 seconds)
    (21/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.413930377 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.527739256 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.433417522 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.472344624 seconds)
    (25/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.419313836 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.9610486 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.438788618 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.540047157 seconds)
    (29/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.487650965 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.873550529 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.434441815 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.168658556 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.441407333 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.534981271 seconds)
    (35/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.556504952 seconds)
    (36/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.185765572 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.1343174 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.513459975 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.603724041 seconds)
    (40/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.338153291 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.418238779 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.48597501 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.430965472 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.466172125 seconds)
    (45/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.519022453 seconds)
    (46/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.40594968 seconds)
    (47/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.432885099 seconds)
    (48/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.465384154 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.98383559 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.971152885 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.541649028 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.430961895 seconds)
    (53/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.538064693 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.691153982 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.431176426 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.58002716 seconds)
    (57/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.626168847 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.434895447 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.111483827 seconds)
    (60/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.458216132 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.290288561 seconds)
    (62/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.966633654 seconds)
    (63/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.65594335 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.510110825 seconds)
    (65/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.443365667 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.548003295 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.685624423 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.695587455 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.451920601 seconds)
    (70/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.098331029 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.40907274 seconds)
    (72/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.147509358 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.224754323 seconds)
    (74/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.432615868 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.457139279 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.747817615 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.514588732 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.413970878 seconds)
    (79/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.481969776 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.839338441 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.498598701 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.420358473 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.568309901 seconds)
    (84/309) benchmarking ("sort", Int8, false)...
    done (took 4.53675758 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.151335099 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.484632093 seconds)
    (87/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.578532248 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.433186845 seconds)
    (89/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.859040516 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.12414551 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.434455789 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.746904129 seconds)
    (93/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.048556003 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.451546997 seconds)
    (95/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.007301801 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.460709303 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.739032831 seconds)
    (98/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.481543557 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.538129931 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.444035905 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.40885237 seconds)
    (102/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.984568511 seconds)
    (103/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.886580199 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.128436428 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.477890163 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.165410625 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.769806005 seconds)
    (108/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.44707755 seconds)
    (109/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.836404606 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.795321278 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.669362391 seconds)
    (112/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.441244893 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.313927681 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.458568009 seconds)
    (115/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.114324976 seconds)
    (116/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.522055622 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.43403429 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.559723475 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.101608795 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.89050314 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.43618841 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.936348638 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.948429855 seconds)
    (124/309) benchmarking ("sort", Float32, false)...
    done (took 5.536491819 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.482284188 seconds)
    (126/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.286676213 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.96995387 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.480385491 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.436440319 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.436612453 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.367971724 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.694163518 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.796479627 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.335057269 seconds)
    (135/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.271808702 seconds)
    (136/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.447345375 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.699294487 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.365616828 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.437105365 seconds)
    (140/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.523868669 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.505145262 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.070429477 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.53714584 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.477851926 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.441861147 seconds)
    (146/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.204156485 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.382235462 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.53138729 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.356845022 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.463454807 seconds)
    (151/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.194000356 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.116803623 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.496381954 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.518762354 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.335520627 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.421828755 seconds)
    (157/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.439341295 seconds)
    (158/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.00656854 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.460512614 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.366601291 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.887277792 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.330260051 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.448338193 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.337431035 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.440687718 seconds)
    (166/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.450566493 seconds)
    (167/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.504528514 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.483911919 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.080832388 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.827525146 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.731446005 seconds)
    (172/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.489853268 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.438987756 seconds)
    (174/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.698732657 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.26581673 seconds)
    (176/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.90143965 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.491681449 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.884072505 seconds)
    (179/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.26618349 seconds)
    (180/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.824647415 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.474550907 seconds)
    (182/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.465431986 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.464527147 seconds)
    (184/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.523024103 seconds)
    (185/309) benchmarking ("sort", Float64, false)...
    done (took 5.875042296 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.482092955 seconds)
    (187/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.21247746 seconds)
    (188/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.881049798 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.828344384 seconds)
    (190/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.616859344 seconds)
    (191/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.198772285 seconds)
    (192/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.452851303 seconds)
    (193/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.487233437 seconds)
    (194/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.448823179 seconds)
    (195/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.640341332 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.150535327 seconds)
    (197/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.451897932 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.4982416 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.789825922 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.889736847 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.530216493 seconds)
    (202/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.450586442 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.070936862 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.42944438 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.468361148 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.484997748 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.725957732 seconds)
    (208/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.471888144 seconds)
    (209/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.467252705 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.881372353 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.478868607 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.423123568 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.099252704 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.659921271 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.509453628 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.539590237 seconds)
    (217/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.270938008 seconds)
    (218/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.81234968 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.032391539 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.450525213 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.032596385 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.465554309 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.432477588 seconds)
    (224/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.527493883 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.349317033 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.547665153 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.442819367 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.206848598 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.492257082 seconds)
    (230/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.844454652 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.901425106 seconds)
    (232/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.024285253 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.593326497 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.546889585 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.443023572 seconds)
    (236/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.57376109 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.461538255 seconds)
    (238/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.643294848 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.01428208 seconds)
    (240/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.386262841 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.446144989 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.53644646 seconds)
    (243/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.443270983 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.336651153 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.354351357 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.359410383 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.564262855 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.771683181 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.232158251 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.481928945 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.444417371 seconds)
    (252/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.136894759 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.445570331 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.46438069 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.692268012 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.1987121 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.455800603 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.132616648 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.537631188 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.445727208 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.437718611 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.47298034 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.458922827 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.427445278 seconds)
    (265/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.480078876 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.459801729 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.824955342 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.829412806 seconds)
    (269/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.668085456 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.574790939 seconds)
    (271/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.387971591 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.530163116 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.574330505 seconds)
    (274/309) benchmarking ("sort", BigInt, false)...
    done (took 6.445369062 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.446121071 seconds)
    (276/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.471748927 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.254790295 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.426502857 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.495464422 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.531231392 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.510059012 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.428128074 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.831484369 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.54991364 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.016204815 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.027383145 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.367632315 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.566293856 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.464187914 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.313749194 seconds)
    (291/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.535012428 seconds)
    (292/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.371166617 seconds)
    (293/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.900875382 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.822372194 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.499388618 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.497522702 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.1194525 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.641746142 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.022687753 seconds)
    (300/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.861778032 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.38793186 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.440914835 seconds)
    (303/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.456767586 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.468904111 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.429531719 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.49432981 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.409943481 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.557234374 seconds)
    (309/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.312380262 seconds)
  done (took 984.582299946 seconds)
done (took 985.925963734 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.48134411 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.474618938 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.459581005 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.479821349 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.57206392 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.485604716 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.470112415 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.462058173 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.507504383 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.509656661 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.458746604 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.484547015 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.461318759 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.459047667 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.459215862 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.47326192 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.677929686 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.460385353 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.476721159 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.470537816 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.476933071 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.459401201 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.511267464 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.482745334 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.464044364 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.463565176 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.463089799 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.479759001 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.571136228 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.463975041 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.463387453 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.472705984 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.67638979 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.459460648 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.455819734 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.479212976 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.472916636 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.472092841 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.463621677 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.493047845 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.160997836 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.482995689 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.461803556 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.462208273 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.461289485 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.464752157 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.463010441 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.468391722 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.474519803 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.475395502 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.151532297 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.497530981 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.465110181 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.461357428 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.47279298 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.461581686 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.466753667 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.480244627 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.482154898 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.478746016 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.667677328 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.468470333 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.464288098 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.478254459 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.471377743 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.192221669 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.478682094 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.467226994 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.16746066 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.489032254 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.193201536 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.49334634 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.466037745 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.478039233 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.494761706 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.684639116 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.458448416 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.46391154 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.472696467 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.463617418 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.473661824 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.476663355 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.469251735 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.46618858 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477378664 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.489865349 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.474568121 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.464869164 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.475891782 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.4844825 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.473059135 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.476919178 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.468698446 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.460641233 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.47589602 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.4697467 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.468033437 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.468589982 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.470471187 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.476990447 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.168894847 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.503391756 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.462060601 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.462145803 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.465022522 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.478947697 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.169402902 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.487997487 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.487589109 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.513245947 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.467676402 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.678321279 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.470958987 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.482084287 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.475782233 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.471654799 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.462838338 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.675610557 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.221771744 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.512103098 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.468734017 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.465763165 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.483396626 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.469008334 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.464711745 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.759608448 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.477879711 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.479325719 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.588398628 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.478889555 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.499480112 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.466168065 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.471412049 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.491868984 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.482585594 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.498457383 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.471146831 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.482854416 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.484514837 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.465569101 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.47965949 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.47902681 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.470657211 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.474919683 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.462682316 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.497549236 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.481217748 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.480823574 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.490730009 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.589362909 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.466027468 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.74604769 seconds)
done (took 249.352030049 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.530254456 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.4569216 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.55036489 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.464810125 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.568716411 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.56942092 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.46234045 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.46072342 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.461994785 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.843251084 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.46291928 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.46223425 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.465523799 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.462837541 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.547501284 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.464973581 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.461869119 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.806391175 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.465371062 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.536963023 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.463584688 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.462119695 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.466611981 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.853142929 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.466333569 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.46059165 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.538073778 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.464956123 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.817996558 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.459419246 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.46462771 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.817110659 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.55520623 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.483061452 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.476069142 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.473987714 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.573214742 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.490576887 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.549026264 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.54828413 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.554177166 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.504852501 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.46061901 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.465414477 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.468281123 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.465414292 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.465216541 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.493613549 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.465484456 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.46566617 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.808607778 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.476844814 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.465032049 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.464824822 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.465412603 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.497091239 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.466021589 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.467693215 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.559105588 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.467694133 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.533541937 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.855103389 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.876329126 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.467375788 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.467079803 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.466219837 seconds)
  done (took 157.377097216 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.536737737 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.542724687 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.592662422 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.490657491 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.519491006 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.597110621 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.491660825 seconds)
  done (took 12.148227303 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.474994016 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.470206314 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.5191615 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.521027412 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.469106458 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.617276965 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.470263396 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.48214376 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.466903849 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.521864186 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.469969169 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.471040503 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.47590511 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.462825901 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.520016373 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.482279378 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.584821051 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.472774194 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.470767622 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.622385572 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.469340834 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.476885355 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.522937197 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.482922455 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.471830252 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.477528754 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.038152806 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471262456 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.469256401 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.471283665 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.468901844 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.510069919 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.470230021 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.470866922 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.468289494 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.587844368 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.471946985 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.469479476 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.472066512 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.467057793 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.471684191 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.472510087 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.472543944 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.469505085 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.472468322 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.494745864 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.47072556 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.47235201 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.473299352 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.47226437 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.522768194 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.472352615 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.469827817 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.470186915 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.527178192 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.479826403 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472611727 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.470044696 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.473315313 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.470478608 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.623573222 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.523039871 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.473491476 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.520849137 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473756743 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.47508204 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.472730427 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.472363237 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.528652194 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.473794656 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.521736462 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.472092235 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.629104341 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.496516098 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.474335909 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.476558565 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.476973362 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.472768402 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.466962364 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.479916933 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.471705031 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.475942712 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.481423145 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.472290064 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.472358 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.576337513 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.583493038 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.470931674 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.487653299 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.482513838 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.472136914 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.527134249 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.474650278 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.474003067 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.528533349 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.589067284 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.529351645 seconds)
  done (took 166.779432607 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.480084957 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.484377786 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.476378835 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.49208053 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.475540233 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.475886586 seconds)
  done (took 10.267600298 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.478694142 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.477592551 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.475494924 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.476209861 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.474849788 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.475397025 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.475880671 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.479719243 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.478651364 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.47607159 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.474824644 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.476940728 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.476150531 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.476813888 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.476166292 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.476580644 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.476032678 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.475584883 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.476337292 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.475878689 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.572664935 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.475485057 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.477119251 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.479324661 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.481348922 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.477350758 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.484948774 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.479000296 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.478971289 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.487304846 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.500833131 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.477272811 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.481669821 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.485833513 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.482779095 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.480168389 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.483127663 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.477614596 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.476299453 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.47674185 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.478465972 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.47884674 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.478312725 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.478379467 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.482176587 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.487515731 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.483242118 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.488222013 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.478945711 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.480147618 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.478122698 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.478329166 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.478645152 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.479060551 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.482346401 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.508081927 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.482817013 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.479376695 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.4785408 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.482436013 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.48077721 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.478723554 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.483672029 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.48460178 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.486888535 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.479995197 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.481131729 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.483645912 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.479507881 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.478921811 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.479829081 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.47778011 seconds)
  done (took 109.04938346 seconds)
done (took 456.992727831 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.667440152 seconds)
  done (took 8.054725138 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.642655543 seconds)
  done (took 8.031408195 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.09483153 seconds)
  done (took 27.7626789 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.588713962 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.561277405 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.523699768 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.476598242 seconds)
  done (took 27.54036975 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.062495669 seconds)
  done (took 8.450572316 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.473781399 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.501418197 seconds)
  done (took 14.366633721 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.177225844 seconds)
  done (took 8.566007532 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.612411002 seconds)
  done (took 8.00752848 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.490015684 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.513020499 seconds)
  done (took 14.403266691 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.455985234 seconds)
  done (took 7.84620119 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.098926363 seconds)
  done (took 9.489247874 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.481306332 seconds)
  done (took 7.871929638 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.516994475 seconds)
  done (took 7.906172329 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 10.268585578 seconds)
  done (took 11.657470504 seconds)
done (took 171.339403998 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.474937944 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.484218395 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.4870153 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.484653195 seconds)
  done (took 27.319501995 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.011416334 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.516039423 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.517278891 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.526804263 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.519261363 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.515743857 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.507946214 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.507423711 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.52741517 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.518613993 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.517528569 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.517839251 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.515415445 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.507907755 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.517388582 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.51736695 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.526376218 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.518931888 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.50850993 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.519323364 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.483528295 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.528354264 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.519150615 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.483933499 seconds)
  done (took 38.240752215 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.009299799 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.556764972 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.638918279 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.53783305 seconds)
  done (took 8.132998339 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.537259224 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.53714385 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.551845799 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.590150314 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.614040682 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.546149181 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.511647723 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.506944238 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.492894568 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.538033747 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.613733914 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.554017749 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.624764425 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.484825181 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.671458269 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.483657362 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.483204517 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.537253758 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.587184048 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.614920596 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.485075571 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.537492003 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.542815338 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.553405021 seconds)
  done (took 38.592724476 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.498478445 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.492340725 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.483266734 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.483890028 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.505066656 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.483878597 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.486322357 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.48620676 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.484881254 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.489812884 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.483295179 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.497899416 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.483675078 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.485338783 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.490951411 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.48670205 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.491926469 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.484712516 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.485063808 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.488931423 seconds)
  done (took 31.165120213 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.48095682 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.334258402 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.832049645 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.73661248 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.479705636 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.480369239 seconds)
  done (took 28.737669542 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.577084543 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.765496437 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.494650179 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.932442563 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.028666478 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.510733216 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.488765853 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.775905133 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.178603037 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.185845636 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.559800657 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.571064565 seconds)
  done (took 22.463880789 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.483995338 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.482598384 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.50385509 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.497538144 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.555424283 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.512967149 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.4950549 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.480991415 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.566448728 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.581503403 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.514370141 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.557412314 seconds)
  done (took 39.628217826 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568756092 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.53103749 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.666698203 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428631638 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240480768 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.694847049 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.424880511 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972835198 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.487334072 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755826627 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.494413133 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582160745 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.741242047 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.498285157 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.494303238 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.691277832 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741279623 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074111124 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484304158 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.279983124 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51864681 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.497891672 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.486989095 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.527706888 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.696404616 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.468366067 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.744083057 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.261404427 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845200154 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.504679339 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493706835 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483795933 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758632671 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216733168 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602773489 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495592327 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.456152655 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.031897936 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.485052687 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.363925126 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.501631738 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.496828573 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495882303 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484356407 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.420038083 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.486325758 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992552903 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.490381433 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.195480441 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.486266464 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49669655 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58354903 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.490373665 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.058401996 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799833866 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.500880719 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.484173283 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493027924 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052389654 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.993147655 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.517021479 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.429635197 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.071065929 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.282985757 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250033361 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.611497476 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.490915479 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.491259024 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.431762422 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.333048694 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513125662 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636592213 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.523235772 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182311653 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393578065 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.516221454 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.43980034 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135473467 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.48660969 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.453330329 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716562832 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.263739642 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427442387 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.433812822 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.421874355 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371583534 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503597047 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.076797384 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50352677 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.977555732 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.499436438 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507362453 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511526077 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.71207039 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.371232552 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489519355 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.498219885 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.625019375 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51949749 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.979259081 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435959659 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.492797814 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.746851926 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.700850562 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.50233932 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.708510515 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77351825 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.507989574 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.502903124 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.488935058 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.50950728 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.213631032 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533450011 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.674251559 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511074301 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.266161845 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39875009 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51571544 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.600032035 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.505854435 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78574578 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.438082454 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382440593 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559139773 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.494950297 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.491270384 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.377076124 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352454342 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.373325063 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.488510069 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.491633484 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533926665 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.491088472 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488375029 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.488788375 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.521814262 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.302781617 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.716563725 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.495466775 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775921369 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425826549 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641826397 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.551234351 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.72597032 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.960137339 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.521779847 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.753806597 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491069962 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.514368981 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513311664 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509884172 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588475252 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514280472 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.507148825 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.758633137 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.496306069 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.498173941 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.634993147 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.283004176 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493452395 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.499155712 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.530141393 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199387128 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506143733 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.506060425 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385697833 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.506810669 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56037311 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.497361217 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.503914237 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.774356647 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563151088 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.498089129 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.505023289 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727897132 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504253095 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.321488774 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580550259 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.739382501 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229572476 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538851296 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.428168338 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.20642329 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.188332094 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.494972093 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.694516967 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.494719956 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503864378 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.507513927 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.243492827 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.203664245 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.518631618 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.346174731 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.512914337 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.506873551 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.500550907 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.496562853 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.753399518 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.037277863 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.509893525 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.51621693 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640091088 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.508916054 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.430312948 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.012477006 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502411021 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.496114598 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.274606812 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531032155 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.325850346 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046181721 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.759152548 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.48362009 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517255158 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.544252153 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.544934999 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.502797401 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.497271846 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.537572672 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.513362156 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516037168 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.506637326 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.422306021 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992394272 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074548317 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409656916 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205541649 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.698742579 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.510257178 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.406686749 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.994234626 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433338186 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.156689569 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.734158841 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023756425 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492490045 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.748586779 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.974990937 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.461681473 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519639903 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728206697 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660982984 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.53169852 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520226598 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.710678748 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533285583 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.517738455 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.449875939 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.781941969 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811823467 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.502740077 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587307084 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99777573 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.50785607 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.288532751 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.498694095 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.061102401 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740916254 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.136082675 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.927768592 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.514525931 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.530587272 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04738863 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.504394189 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.029111962 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245642551 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.524626347 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.779237098 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440362425 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.51234954 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.51084132 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.498194275 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.191737381 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.509222822 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.757987462 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512538413 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435488164 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.504886645 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189274224 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.389627883 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.506991311 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500642734 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.436522421 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.519879356 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867553986 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.5128703 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.687122696 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506551622 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.43740101 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436772824 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.194859262 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.511364231 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488404946 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11625105 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.027965769 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757465115 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.55098714 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362981468 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.760788266 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.515538354 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.238659586 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.761211017 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.557053282 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533449728 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.602971184 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.505118372 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.4946618 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.397089231 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.73920166 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538635029 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.728134306 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.708081234 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.411541782 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.502712807 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.715720137 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.400731171 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.50741454 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804072474 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.23748789 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.520652312 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423157608 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552572476 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.524220236 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.565487349 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.09567463 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510832535 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574386128 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514658567 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.514950773 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.516233359 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709485506 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.504138305 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.516872279 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.517605571 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598525855 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.748084648 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.68772431 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.27758363 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24887023 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455394299 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.279505736 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548968561 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.504912724 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505620609 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451402334 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655337154 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.034379928 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778418779 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636441192 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.18190015 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527125036 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.515048724 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.531313212 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729242933 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781243875 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.382137239 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506947542 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.191817028 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.387942189 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517941969 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.718344783 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114018943 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176135841 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634985563 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.507112414 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.010294579 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780023332 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.599565113 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.506919376 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.100665087 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.528983793 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.08266993 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.544036164 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.516160027 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665516713 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517123365 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254940132 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549690598 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.662841583 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.280956712 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.389576094 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.77668725 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.189997462 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.527803252 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263933879 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400244404 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773836527 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57867552 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519975419 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.619255417 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653725567 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.511949939 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.391283025 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.508937355 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354860799 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.219174653 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.519406726 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256985762 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806095401 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.505685927 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.51466994 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532622924 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.518458764 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.73354611 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.39451217 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.742944779 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517614201 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.519808482 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.082691096 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266373413 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555370034 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.453125916 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.514242602 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797949402 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.768421192 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533882789 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.962462872 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.221293958 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164855978 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.484955883 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531640695 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.509410897 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40376106 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263493422 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.735595276 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124852846 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.179521898 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.5284442 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79482178 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.515678445 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.510316407 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.796485499 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.515071428 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.522288527 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532964386 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.265021457 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.469646618 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.512726893 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.397155741 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.458463514 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.739934281 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30854786 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460732209 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.513434153 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.730085162 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.513261634 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64306002 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534824194 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.512364457 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.512991526 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.278796139 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.839858255 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.528027177 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.51676928 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.512855429 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.522944766 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552109334 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826644034 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.516808115 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.194471882 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.866022147 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.771035143 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.524681009 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.503681768 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.517057232 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.513999914 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269674482 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.524516563 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.264846396 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190387414 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.530759559 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.53455361 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.518263924 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.731613702 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727720664 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.514791764 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53632194 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.532551501 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538697824 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.415702599 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.318594508 seconds)
  done (took 1698.529549876 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.52973212 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.573671074 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.568479664 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.566968576 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.565680636 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.577668935 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.566208445 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.601827508 seconds)
  done (took 53.978508068 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.523076723 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.681797041 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.554012737 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.516199627 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.53419278 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.524259911 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.08965457 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.535127746 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.526616482 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.528136655 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.518728068 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.533956283 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.320644695 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.535811374 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.524361559 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.506821838 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.527832348 seconds)
  done (took 68.916487328 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.516066391 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.80090992 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.575567813 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.516188404 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.773215208 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.552948464 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.703313154 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.613999028 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.520365773 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.853654959 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.176694784 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.557661627 seconds)
  done (took 84.58917895 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.52614278 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.525196809 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.52582139 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.525829482 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.525773412 seconds)
  done (took 9.057447701 seconds)
done (took 2150.739387691 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.763075131 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.403388259 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.301173395 seconds)
  done (took 6.133330599 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.66662894 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.719001452 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.872151609 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.877781866 seconds)
  done (took 8.565524839 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.801716463 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.898203074 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.717634364 seconds)
  done (took 6.848729039 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.301088102 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.545524025 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.662797206 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.519760997 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.529562609 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.527271821 seconds)
  done (took 21.008925377 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.524449421 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.526743545 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.522603313 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.526152367 seconds)
  done (took 7.531773171 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.50207523 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.239831582 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.500865801 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.526208701 seconds)
  done (took 19.199472192 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.267230973 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.283668772 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.26570735 seconds)
  done (took 8.246717943 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.519657612 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.387794103 seconds)
  done (took 10.337811249 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.832646333 seconds)
  done (took 3.26330505 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.654965365 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.853592467 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.826873949 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.701873083 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.83971037 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.319324734 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.665394251 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.058432875 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.715979429 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.381088452 seconds)
  done (took 33.4482726 seconds)
done (took 139.283330575 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.093938005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.545153507 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.72502841 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.104048919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.752322549 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.725954461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.077111589 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.072320988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.570019006 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.558993797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.064966768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.752690236 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.81066731 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.545860036 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.811322507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.925980648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.755073838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.143198564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.534429562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.533540255 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.074154677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.703045661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.890552702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.075663776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.759758414 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.674337279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.301250421 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.923610216 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.521844303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.52621332 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.684370375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.538536579 seconds)
  done (took 208.20954424 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.526810304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.52315561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.522799963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.522494431 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.522520786 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.523614901 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.523481753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.524937749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.545810305 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.532980634 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.524536599 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.544928141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.525237594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.524435799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.547746006 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.524478342 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.525101357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.524326732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.524981544 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.545337677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.52465181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.524015385 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.524628123 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.531614753 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.533643691 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.52472355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.524080252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.546544093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.546470881 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.52532482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.52584831 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.53126951 seconds)
  done (took 210.37766365 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.524936919 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.533278017 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.524982668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.545254638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.543937826 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.54143917 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.54010744 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.525878781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.55049396 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.525288387 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.52547657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.556916234 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.528245806 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.541314264 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.527828841 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.528237265 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.525992306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.525058501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.545410167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.525985302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.528143706 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.545548278 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.54824206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.526537209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.52662505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.534828756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.527265368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.527025887 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.527475881 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.551618989 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.536093069 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.527770235 seconds)
  done (took 210.529171932 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.731372939 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.532490113 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.533957588 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.490576422 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.534968867 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.532867985 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.532255926 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.725069457 seconds)
  done (took 16.051477295 seconds)
done (took 646.597482913 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.02681482 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.722918026 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.749107802 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.55424241 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.476271334 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.577831126 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.553842584 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.756370065 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.540757328 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.763994039 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 3.001983696 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.583610533 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.180241545 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.561693337 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.844197619 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.665430706 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.508516234 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.671177902 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.94028327 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.256877268 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.84390385 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.251064899 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.783618297 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.555063644 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.128525349 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.248650946 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.501611682 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.496932831 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.57882228 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.937228932 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.466531479 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.727103745 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.646056407 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.636025845 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.695109927 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.66772845 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.724798092 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.640553634 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.777914484 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.918088412 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.244134474 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.345433118 seconds)
  done (took 104.190458267 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.521292024 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.52163016 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.519286528 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.520365016 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.521963753 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.520948831 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.5225707 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.520739666 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.521898172 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.522534815 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.521896568 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.52235378 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.522099686 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.523731379 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.522970662 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.521136449 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.52220631 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.523590904 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.522387534 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.521689723 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.521539269 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.522102248 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.522137452 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.521343409 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.522352417 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.522820353 seconds)
  done (took 41.011962178 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.538480151 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.819562752 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.00971653 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.54743605 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.549549198 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.546262921 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.636564324 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.541194745 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.544740228 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.544326246 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.72905532 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.541761626 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.578722732 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.039717123 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.544951486 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.541122861 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.540178491 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.540363801 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.826743404 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.551560063 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.662566953 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.543361476 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.637875834 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.552755263 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.56735026 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.541729976 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.54642401 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.086428632 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.565743175 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.729350379 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.578757151 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.642938932 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.034654711 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.039323679 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.575089632 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.551712987 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.542287702 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.73403602 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.545570172 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.541376272 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.637035394 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.544147541 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.018378886 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.206578499 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.567442829 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.543020548 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.101593551 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.755736313 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.849635354 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.551878047 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046974538 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.546416929 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.544168692 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.544789782 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.849992334 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.550715231 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.543326168 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.124572911 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.572718567 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.640070669 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.544894847 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.54537727 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.836349736 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.544260979 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.822190831 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.547124561 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.553388942 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.567964031 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.020441435 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.547890358 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.231461429 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.57147637 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.54676255 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.732360895 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.825838746 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.143133299 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.571934854 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.842884823 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.052644457 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.661172473 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.550695476 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.068465286 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.665845865 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.550371633 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.547366506 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.546177244 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.54521233 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.595597109 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.639449135 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.157381666 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.241688066 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.147263045 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.667047879 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.561961041 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.545973063 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.124110057 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.571616436 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.546770996 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.01903451 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.232222448 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.570516729 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.553663126 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.239527425 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.573109872 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.642934367 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.554334672 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.028543099 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.549033232 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.626909123 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.545911321 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.554862914 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.574015209 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.642850616 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.551709124 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.546708805 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.205611934 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.76587764 seconds)
  done (took 203.078311182 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.542581389 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.541194217 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.541431132 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.542061872 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.540824473 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.546546616 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.541426872 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.54161118 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.546961381 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.540388186 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.541840797 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.541087602 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.543785011 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.546406021 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.550994122 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.548233015 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.155225371 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.543682071 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.559981417 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.542291941 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.394715941 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.543638885 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.557832538 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.543206622 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.542367332 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.541659596 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.552612679 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.569095958 seconds)
  done (took 158.194854312 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.549124082 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.247275476 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.572276579 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.711588934 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.574789005 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.547258997 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.709832251 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.62159435 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.572801806 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.546889917 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.547740128 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.922833067 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.550324188 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.231180421 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.801848271 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.734266218 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.186158399 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.574148533 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.548023631 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.546761426 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.713888148 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.559348665 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.950433045 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.271964901 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.575124843 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.293044688 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.546427613 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.551751248 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.550820319 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.293735265 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.5819875 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.925485792 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.648125307 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.624984251 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.307212706 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.215048004 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.212301165 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.735429296 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.553348393 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.551030308 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.549978741 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.536048502 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.300650124 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.585078797 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.55309473 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.242107329 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.576934707 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.55425084 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.561146646 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.55037113 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.624942321 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.648498505 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.953261568 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.295311792 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.678638801 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.573931197 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.720523505 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.977171302 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.552492072 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.189315334 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.537908348 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.312088865 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.584645175 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.538310711 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.553035117 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.557797397 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.73817217 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.72552964 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.200010858 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.575887372 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.191046058 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.760780415 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.55227844 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.551226547 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.555364613 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.313540279 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.224234328 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.760793218 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.720423605 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.799887451 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.540724768 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.553036289 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.537984908 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.649218929 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.552749211 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.314591392 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.227317466 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.577675241 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.555897841 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.55512824 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.556112022 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.776561096 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.338435116 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.68243188 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.183693924 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.987304911 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.972391425 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.5659 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.627328608 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.574716035 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.964866671 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.564987761 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.625176676 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.043374659 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.966247188 seconds)
  done (took 187.885993797 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.846697808 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.908423847 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.657543843 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.707885827 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.261986355 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.204276968 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.998076299 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.725189625 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.683085387 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.848138145 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.99092022 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.652809205 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.760762242 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.664375697 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.367617778 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.66114786 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.684444711 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.717383097 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.691347521 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.678446978 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.3079341 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.889145084 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.756151094 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.780491278 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.671970273 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.450984432 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.180585161 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.119119943 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.752033622 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.132195977 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.151490702 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.837761507 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.734970001 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.415606285 seconds)
  done (took 75.349753158 seconds)
done (took 771.14586335 seconds)
SAVING RESULT...
DONE!
