cset: moving following pidspec: 381
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.328407207 seconds)
loading group "string"... done (took 0.587472153 seconds)
loading group "linalg"... done (took 7.361960195 seconds)
loading group "parallel"... done (took 0.173627657 seconds)
loading group "find"... done (took 1.170775985 seconds)
loading group "tuple"... done (took 1.789337069 seconds)
loading group "dates"... done (took 1.234521793 seconds)
loading group "micro"... done (took 0.23262845 seconds)
loading group "io"... done (took 1.045718748 seconds)
loading group "scalar"... done (took 40.044678724 seconds)
loading group "sparse"... done (took 13.241848831 seconds)
loading group "broadcast"... done (took 1.016964528 seconds)
loading group "union"... done (took 13.89365722 seconds)
loading group "simd"... done (took 4.713202869 seconds)
loading group "random"... done (took 9.510760268 seconds)
loading group "problem"... done (took 2.011891218 seconds)
loading group "array"... done (took 22.590247422 seconds)
loading group "misc"... done (took 2.046813123 seconds)
loading group "sort"... done (took 3.439428876 seconds)
loading group "collection"... done (took 19.397139949 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.562876041 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145783883 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120275354 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143594322 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191486623 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135729325 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146271376 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086959934 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.017664258 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.166065797 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143432809 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520499543 seconds)
done (took 5.220186443 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200579365 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088895051 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099714945 seconds)
  done (took 0.975879229 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066415136 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130201115 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082824356 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068957648 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067064311 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083162663 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06768017 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065935349 seconds)
  done (took 1.359398704 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075112869 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069695224 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087118134 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068768415 seconds)
  done (took 1.094419792 seconds)
done (took 4.493826436 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.944881073 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.259138117 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19522542 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.468461666 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153904257 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191194744 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666014478 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346749697 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.218784964 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10358643 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106395953 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395706488 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107954567 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669871285 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07885307 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110577181 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163949381 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.461235441 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084880961 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08333495 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106195295 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143815113 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105799057 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078984746 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170288096 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070429182 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154573297 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097884975 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069226767 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.251209387 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191117227 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695966093 seconds)
  done (took 10.780395121 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101013968 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122568665 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070633438 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143515047 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125275822 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072758126 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072748157 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085854052 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093884347 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163515609 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.122120655 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125627176 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067467893 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070894281 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.105017309 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23237756 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.094136372 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10319175 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072967486 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076414346 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126832273 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100781062 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082699258 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097175116 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153922296 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198042913 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101122639 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115632908 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071098363 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100365597 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13127351 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135566837 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068602883 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085724729 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.159952818 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097590824 seconds)
  done (took 4.750651194 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.115495499 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.177780851 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09375626 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157424799 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087991999 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132339263 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066668686 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10264108 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256214446 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.095149626 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.49781807 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131247067 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088687718 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068896518 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089539196 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068698898 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.628203575 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146831158 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10488724 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104418794 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075539106 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089764001 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360276961 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069681031 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067183503 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086679023 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060186517 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149273323 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069810076 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.27051251 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110210942 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069620149 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121646035 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.181748568 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.116596226 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096305468 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129023337 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067353367 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086435057 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175459146 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075247216 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084874374 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090563052 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122134546 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122903632 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070822485 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085376338 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183292934 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068278473 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084445106 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.951898455 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169877492 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081824987 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067576111 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298586744 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103750295 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069059409 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064420573 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275399082 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.162918561 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065181884 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086423249 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068299177 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083247898 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071077337 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377123455 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071916181 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.740318034 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087685367 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078073545 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086833797 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068234382 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092162359 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075351889 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103667376 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068561509 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068677155 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085659794 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067218959 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08613599 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088287095 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208607885 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086820753 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071994142 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082334045 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089009848 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11394469 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072556115 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06668232 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11828393 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070827822 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086368409 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104339612 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086926619 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10348974 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071416308 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130941784 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070925107 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.171281613 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069891271 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09499663 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083217564 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115345703 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073894105 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117607805 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10423538 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069607136 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15850406 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065187751 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083565997 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068422131 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066047636 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087078283 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069440923 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099865062 seconds)
  done (took 21.598291346 seconds)
done (took 39.035015878 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.317561097 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097038151 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096462969 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077256206 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.097155989 seconds)
  done (took 1.555187066 seconds)
done (took 2.390582038 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152338026 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10399098 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083548936 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099042164 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083110884 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104003606 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119816783 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083209939 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121373503 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064750377 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11730312 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06600318 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081912657 seconds)
  done (took 2.151812711 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083670711 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085798881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08901638 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082750952 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081723408 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083702062 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079846174 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10775939 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080436087 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090116498 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065992444 seconds)
  done (took 1.764973977 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082543989 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084323485 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088034991 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080991081 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08098541 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082173667 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080328906 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105008854 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080451007 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091481779 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06604404 seconds)
  done (took 1.756983241 seconds)
done (took 6.503823008 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080985239 seconds)
  done (took 0.906336936 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.758872652 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.925999565 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086222791 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137174276 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223779263 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.160878588 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.459249617 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113930087 seconds)
  done (took 10.903981858 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103197981 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089672743 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071388032 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103427575 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073816252 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088528835 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074583268 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072160614 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087958521 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070863315 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090919189 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072728154 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088508452 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073398883 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086936381 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074415194 seconds)
  done (took 2.214971525 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10537873 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.106364959 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094719362 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077843068 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093169994 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074449943 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095249835 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076484549 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090426751 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074946117 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09485122 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077112283 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09224832 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067085836 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09408692 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078972285 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090824244 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076433719 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095177419 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077730484 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09514765 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066867675 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091903886 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077188581 seconds)
  done (took 3.016656499 seconds)
done (took 17.867718566 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.137334785 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079418476 seconds)
  done (took 1.054774232 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085738347 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102101362 seconds)
  done (took 1.032144364 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085974512 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084033992 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092319325 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098633162 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084523223 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068519749 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106576667 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068280076 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084570238 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069535068 seconds)
  done (took 1.687151579 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071443193 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096562771 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073440392 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100337878 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075727917 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083846332 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075678208 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087764547 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08057292 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082682773 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073490723 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102278099 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072200073 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104691434 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.091696283 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071747066 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089741121 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070367968 seconds)
  done (took 2.350291356 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068739164 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068831083 seconds)
  done (took 0.983009373 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070478983 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064469058 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086436713 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068098782 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082859419 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064316154 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082165803 seconds)
  done (took 1.364864221 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.418281395 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109843876 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26983836 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073676114 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10891478 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300979518 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068268851 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071854609 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091731686 seconds)
  done (took 2.399080765 seconds)
done (took 11.712026723 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082449372 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086300824 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115755197 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.448103654 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110718172 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067149203 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149041973 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.218593751 seconds)
done (took 2.120862649 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129646995 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637994055 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.419526902 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218694811 seconds)
  done (took 2.12746445 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.392106696 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093446835 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076983186 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069038258 seconds)
  done (took 1.485090443 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068416333 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070804958 seconds)
  done (took 0.992384239 seconds)
done (took 5.581850203 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06853368 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.118573383 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068702695 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06530455 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087484557 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067896252 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.06452692 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.085761485 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067785793 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085797008 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.06854023 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067663483 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085109817 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066598996 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06528433 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085191371 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066680744 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064499429 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083257328 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065940508 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083742143 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06601545 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065409766 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083033352 seconds)
  done (took 2.6873654 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088445078 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085739812 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073960441 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090283427 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073264494 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090388872 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077579319 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068400663 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.092077455 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069806072 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089580925 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072078405 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087897801 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073157122 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088203833 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073581653 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09069022 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069533454 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069493155 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091852586 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072644287 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088030478 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072418986 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091331432 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071655069 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090168832 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069941869 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086497552 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074270105 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089601174 seconds)
  done (took 3.276044105 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073027472 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065395926 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08367137 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072996041 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064898278 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084913249 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064857045 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082831881 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068128683 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06479652 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084842251 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066010685 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064948074 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084124929 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065837524 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085891437 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082781624 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064563583 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083687401 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066495605 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085928039 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066089215 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065504333 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083430363 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065736056 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064471037 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083695253 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065308487 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083114112 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065947537 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067726118 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086850538 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066159463 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070824489 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087397362 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065995227 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068190651 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083860287 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066526353 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082258528 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065844846 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06441984 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082973735 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07295933 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.0644328 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08596624 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066922257 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084789924 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067002318 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067110871 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083611754 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065850738 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08431176 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067314969 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068293745 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083159768 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066855588 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064114543 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084372024 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065489408 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082022623 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065605258 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067728746 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084267851 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08149352 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088594373 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066760657 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066232204 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084903687 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068838296 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066819099 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098705429 seconds)
  done (took 6.183847042 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122055588 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095080024 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085925323 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067562962 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082083073 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067409164 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068840536 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084123949 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067883169 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08962026 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066594061 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084055938 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068375456 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081275397 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084604444 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068138016 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08958584 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064828871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064883751 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087627926 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066059882 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086830901 seconds)
  done (took 2.602471152 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.195083372 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090905735 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113068851 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094676913 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087208869 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077354317 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088942833 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07341677 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071378286 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089108481 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070222436 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091132072 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069121424 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088783221 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06975303 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088438327 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072218935 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088847455 seconds)
  done (took 2.479604927 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081790635 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06775806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110579019 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06781784 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088313531 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071177324 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093324121 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077603328 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089323415 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069473845 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095325129 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179995669 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08801716 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069309955 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070092249 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087717599 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070742166 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087008096 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076717543 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091981632 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073771969 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096093836 seconds)
  done (took 2.765014987 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085528212 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069150745 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106128602 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088569328 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066211684 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066770452 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093553373 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069171188 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092920883 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070650134 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084968548 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069184253 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073405386 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087021233 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07359377 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086746609 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070739201 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08640017 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071764491 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064813318 seconds)
  done (took 2.438774062 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090173735 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088217329 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070587048 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096095894 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070548587 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087072289 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079052369 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087783839 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070276962 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112437828 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07068199 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087765599 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079140245 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093829705 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070153927 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096052719 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07753489 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097346025 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087385115 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071328858 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113599761 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070532851 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095761958 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070404943 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087845062 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070471603 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086642843 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077068129 seconds)
  done (took 3.222033271 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069696742 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068066379 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084052023 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066900248 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066220485 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084561162 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066207763 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065740161 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087419731 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066679643 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085095765 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069383623 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067472964 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086285198 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0692657 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067702706 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086597158 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066438901 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065173298 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084968178 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067878172 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085716289 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069034456 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065556089 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083490929 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068375444 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065377871 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08449769 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068396109 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064649234 seconds)
  done (took 3.064305617 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079514413 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093964969 seconds)
  done (took 1.042589435 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066669365 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082392235 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085064567 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072388746 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091702678 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069714065 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095263095 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073675086 seconds)
  done (took 1.502950703 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085402452 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078941237 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089120628 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097584998 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08122647 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085357213 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162466586 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088742914 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075218285 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085586795 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084420572 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066822009 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094572964 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068798741 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093521966 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075271345 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084045516 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07526068 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07075614 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085338879 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069785706 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099037469 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071041291 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083582159 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071183891 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077269474 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099765649 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069243211 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09132428 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07593317 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092692316 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063002334 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067413806 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088074353 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065830215 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098137816 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084663959 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090766745 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077512749 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088133295 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078786134 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082456086 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074212799 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092106654 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079903875 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068147728 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087854604 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063789682 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084209654 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072573377 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063430982 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087724771 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063870004 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093330456 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073333668 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078810846 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086160959 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070332736 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089564504 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072652301 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092898049 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071530964 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070469395 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087056377 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075612328 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09089154 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079145027 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080999943 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063777659 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065831518 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097614921 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091505375 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09363544 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069177759 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087608728 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066397257 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07120928 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088536299 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074377834 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093878442 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068420773 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092581764 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076083506 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086315181 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071772362 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07545234 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086184514 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070037663 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084707206 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085689503 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086104628 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066750972 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06575605 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.098314852 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070985801 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.086630324 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066748192 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093659763 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064114684 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06879724 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088197726 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069674045 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099477318 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075041639 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0923764 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077633115 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095228051 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069770015 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071373547 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.084949067 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06992597 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086474336 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076127781 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062237803 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090347367 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068900299 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088353525 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078154438 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08484142 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069417827 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07515331 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094177113 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066500788 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083818974 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072242028 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067117223 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091692361 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07560074 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.0860091 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063885799 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082217418 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073293316 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06797787 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091779188 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073754345 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09115976 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063671511 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084447504 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074504772 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09621327 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069844957 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069233007 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094217474 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06999264 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086571603 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07650599 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070363462 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087108585 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07427891 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08903154 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064583527 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089310177 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072245402 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066579939 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091173617 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07212017 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090100845 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070536737 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067047171 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093801072 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069145428 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087079898 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06850945 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085740328 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080839268 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070463134 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083702991 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065954757 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095183939 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06666102 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068155743 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087358354 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071445042 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088062203 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06653845 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085145196 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072482418 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079160894 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092948271 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068950854 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093314164 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079771514 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086834956 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071298739 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086451705 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070639792 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069119723 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097249647 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073289755 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092329727 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071562245 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083762077 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07541598 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075120107 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087246767 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066799167 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086245878 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074203839 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092028403 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073248333 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068445115 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085798545 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069717436 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090494207 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07210799 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067400082 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086870214 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073370235 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086906262 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075655276 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088787849 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079439925 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090271225 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065326307 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070917559 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08684969 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074708737 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08327679 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067099596 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06770436 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089212857 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067489198 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090107748 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063820594 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075956275 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095945129 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068623901 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087282359 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069185822 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093588098 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07078046 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072446772 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091215337 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074895418 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09847678 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067784666 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090254145 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080471904 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067649232 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082506713 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073845939 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086272008 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068796072 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067639655 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085652675 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071413011 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096189181 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075436867 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.082186486 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072141737 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066795983 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086442404 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064460043 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091608074 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072319439 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068396229 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09540942 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069870377 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088739807 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07279656 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086748369 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070280739 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068941194 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091775019 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069605092 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090849693 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068463458 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08984588 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068802663 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066536364 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090359311 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069602035 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067911162 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094329266 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067510348 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088173513 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072376759 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087971032 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070510842 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069191664 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087414459 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072653624 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08855072 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070264304 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070572011 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083453875 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076815407 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087593599 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077427291 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068344702 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085463253 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073633896 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090456309 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074425932 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088487659 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06966671 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069727357 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087692117 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071090191 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095085493 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067053813 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098682905 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077337404 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087546659 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072720283 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068571561 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08996839 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068952895 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068169049 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08988398 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069189567 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087797676 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073769083 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089764088 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070259543 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070125424 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088769947 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069115843 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088391332 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06406925 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068144353 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087462271 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069147387 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098095628 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06941931 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086781264 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069261928 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070098269 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08722848 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065329843 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095424496 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078686614 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088217686 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077376562 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067002238 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090363517 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079390808 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.085266147 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066653106 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084790362 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067821677 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07577185 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089372357 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078963948 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088014455 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069188492 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065369652 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08851542 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067857513 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082019359 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067664535 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07184505 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086776812 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068675366 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08686381 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07343731 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068542304 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099069917 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067171228 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088833663 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069633659 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084450018 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069217076 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067379835 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091735323 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070054555 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065557806 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085999454 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068327477 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088651317 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070697406 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068138914 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090306095 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075219891 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088309561 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072124158 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090290897 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063992749 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071171104 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088933926 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068126701 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086554824 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073309284 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071310563 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089747396 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077266136 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088083214 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069574952 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087844347 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067145341 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067274804 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088124742 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069312259 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085986632 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071412648 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076674169 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08744005 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071199218 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087514966 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070175941 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094901819 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070811541 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071843039 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096123079 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067974024 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089466169 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077104274 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091639905 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072728838 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068524693 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090361253 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075106649 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087845011 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075583703 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087644212 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070317938 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070614524 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08683394 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069222586 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086827083 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069316149 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07436325 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.0901536 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067761594 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087202973 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067652776 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068590681 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092131019 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076148853 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090860912 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07216311 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083315188 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067607007 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070485884 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085845772 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070807867 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089772911 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07603614 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070774141 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089151808 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067859512 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097762144 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075534695 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090910885 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067490835 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072056618 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089721236 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072373715 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088322323 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069626487 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069824203 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092838698 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070630301 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086769987 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076862391 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071328111 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090275257 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069974473 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089315377 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06990684 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064308689 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08994548 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07076804 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093810852 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071361323 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088287554 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080653232 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06557335 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089227224 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071524692 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087939656 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073968888 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082603236 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071209105 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068664524 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090493492 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064576794 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087026176 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06774142 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070579354 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088278624 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064644936 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098075783 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078764177 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090429675 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069118988 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066627983 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08387036 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064656135 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067382201 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090679355 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070061218 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099112487 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067934273 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087153341 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065540787 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067793668 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092225063 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071777082 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084997156 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065106377 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067259011 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091851734 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074958429 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086486406 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069894923 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071137504 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09114097 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066670068 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092605288 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066636143 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072463676 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103434666 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068595638 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090063044 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075587477 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096932701 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070071251 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083315608 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070634514 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071309629 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089614299 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068894837 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090633052 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08527245 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091913176 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0684979 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066341592 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092892639 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068006771 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097457226 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070160335 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089285768 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074007192 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069564307 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097496016 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070561627 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096796332 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071654769 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092735151 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067320966 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088128929 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069019201 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06756827 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.08978715 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070165811 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092419626 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077010222 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087002109 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081453637 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097206682 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071842911 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064978788 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088143401 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069142352 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063001046 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089586739 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067158725 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086592725 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068017855 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066930915 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090084476 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074804405 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088873886 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070921689 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06858201 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083434828 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071257964 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091963692 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070616531 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065591882 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089988528 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069850717 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091995368 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074045028 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066169107 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092186671 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069797648 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090026722 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064917185 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074062938 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088370656 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071278249 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087737875 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070159989 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069203617 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093057602 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073565683 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090438262 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070966759 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097522815 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071417914 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085353578 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067900611 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072904942 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.087394476 seconds)
  done (took 47.956297586 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110188131 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086029336 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064033095 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083464471 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07730502 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085434289 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064464701 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064233053 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085685989 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067861588 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084160123 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064754 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092756784 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089022133 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097709172 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088613825 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065332878 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064965686 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084738056 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065243108 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094170528 seconds)
  done (took 2.59059514 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089818747 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105491769 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079237035 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104398542 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093128942 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080838165 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099692497 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07923185 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.1035648 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094850097 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083935936 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100092637 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076075555 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096641716 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075431789 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098054107 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101638339 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07520034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100482235 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080091112 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098239641 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079491008 seconds)
  done (took 2.904962799 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069943246 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067692243 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089920766 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06504003 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06793125 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084188826 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072339351 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085997119 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072791934 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066333119 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.088628977 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067611685 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097151824 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067235917 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066911401 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086003763 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.136351508 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071832447 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087427438 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069847268 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063064316 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091697364 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063991298 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083716002 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068371663 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070639404 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08932071 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066214796 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086955467 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068317313 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067843075 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086190686 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069983015 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068023726 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087617313 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067915669 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08757613 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069057881 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063831395 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087006569 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068484891 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083072221 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070355258 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069909709 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086595051 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066531448 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068881813 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088108035 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.0635658 seconds)
  done (took 4.668885568 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087810024 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.145110866 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091437676 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126141594 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084358697 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097630789 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072410299 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127669177 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086343594 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067856321 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.106158343 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083153243 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090917194 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073235642 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095842527 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069155441 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089464616 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06764475 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092579439 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068333479 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092129998 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075104558 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103521711 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081925101 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09311404 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067513758 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08874026 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072797462 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102456707 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092519191 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073701758 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093974287 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085194207 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094401879 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067637407 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090044551 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085064839 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089274055 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071346605 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086103607 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071724178 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09288106 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075686862 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106095069 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06938575 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094330771 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068627198 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085519912 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082751495 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090599038 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07705495 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105568141 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090771585 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070082429 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071913102 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.105312999 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088033356 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067866403 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070736022 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.102077627 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085227405 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074282307 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102797626 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070653755 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09594692 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083491924 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094526805 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072051908 seconds)
  done (took 6.941879541 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078858979 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094931643 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083526982 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105448018 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094257687 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076973213 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095450324 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075497508 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094410803 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078899934 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095086517 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117400325 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06967713 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09791266 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074085731 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096232158 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074399669 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095826575 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093819464 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077090325 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095286109 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084098646 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09596205 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102748798 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105669467 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091344626 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074475798 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095717772 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103554141 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076267169 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107997915 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074525471 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095623671 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10388008 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087388197 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095951908 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067829137 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096102935 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07422472 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095596457 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069169835 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104627435 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094870089 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070659802 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094787159 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075041538 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103743252 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106493107 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07936706 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10040526 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073947896 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104292505 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094291063 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075439661 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104424033 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129748022 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083680883 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104211579 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094408522 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083899955 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104447605 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.111566579 seconds)
  done (took 6.58061765 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090019531 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098717042 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100149205 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064740871 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06601829 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094604976 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067095103 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086531211 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077861109 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096839536 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079688676 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093650182 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075024195 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101316725 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092424585 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076863232 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093403606 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072197019 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097904816 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072318718 seconds)
  done (took 2.618604848 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078909201 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105622069 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070394403 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095152196 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073611477 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074491254 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093060272 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071204406 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090316194 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072050716 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100479709 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079027104 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090360811 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074932308 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100802937 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074771779 seconds)
  done (took 2.271376274 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.0821795 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.101328352 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085170845 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091089766 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066953773 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.087048529 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068664896 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063942049 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087402107 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083219408 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091162649 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069892588 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090291559 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067109339 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.085117428 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072896745 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.0639713 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087734089 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068546986 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.105247073 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079327414 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088538158 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070070541 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091469047 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069245156 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094744139 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06960253 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066328561 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08864378 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068488551 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090130422 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075971707 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086119015 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067512544 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086740143 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066996543 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067749399 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089931235 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071354406 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089816331 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067385092 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087463069 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070199764 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069297149 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086268628 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068603227 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085018877 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075977997 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065756384 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090699268 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068001745 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091239854 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069640253 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099803589 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072148211 seconds)
  done (took 5.293546542 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083615012 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07109918 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085718005 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066124717 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091807704 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071558908 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071235931 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092840816 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069913073 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08721862 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070720557 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091555695 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071321997 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071293931 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09183996 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071936981 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08535353 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070881884 seconds)
  done (took 2.347016499 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075434845 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067369789 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096748209 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06862236 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088677721 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072290511 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064609807 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088849697 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066688134 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088562087 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069382671 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070289605 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088682702 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071185784 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088572449 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068935682 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070083871 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089141063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068668174 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084929969 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072019276 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067035655 seconds)
  done (took 2.619304411 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075511111 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095667454 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.168333862 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111806033 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084328385 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.1035421 seconds)
  done (took 1.572070267 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093724386 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103698845 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069216241 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109449454 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078970967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090623497 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071715589 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090361324 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080203293 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104988914 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069776973 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10153415 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100359574 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082654293 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097244594 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075453111 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091411727 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069518519 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089982917 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10914857 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0717792 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099888581 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071018161 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091163932 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07051526 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100196883 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099225539 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085366028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091604406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07940963 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098945959 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070335158 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101019228 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105294145 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072468718 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100432108 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070761219 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109973171 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096647102 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079872595 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092693563 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076706816 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100494343 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075692569 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101330125 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090282102 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077246518 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09118 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071858682 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11717539 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097245938 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079681395 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0984125 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079864577 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101228389 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117525265 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103857306 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079822869 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09780426 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104935374 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079929984 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098757535 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077898581 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105759358 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097262281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079493324 seconds)
  done (took 6.873202886 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086153692 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108986904 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070819479 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106259357 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099562619 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071761983 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091027197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07180509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090848229 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071302214 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133735013 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070027794 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100997656 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099409357 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070571106 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091600388 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070368702 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099770568 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069909172 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117558909 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091670318 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079028962 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099972917 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100056873 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084788166 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098162466 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070496848 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091662506 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069522559 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091452344 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096297511 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072155125 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100512088 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070106755 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099516666 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07039339 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091804782 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07563861 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092883878 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075434667 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100502074 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109645917 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070043278 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092235352 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10444534 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07065927 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09140538 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071065644 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09002247 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07142515 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105562931 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083930401 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105757301 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10053729 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070615042 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09262469 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070581511 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091310382 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07092421 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09770559 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098999759 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071437663 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116418582 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069321381 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09278231 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099333194 seconds)
  done (took 6.761846945 seconds)
done (took 134.115558759 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210470387 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.189103626 seconds)
  done (took 1.330856239 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071260517 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097991208 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102338072 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129953389 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090845878 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10289616 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121316282 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082637052 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068294477 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090601958 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069067181 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090915123 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134348211 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06842017 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090548969 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071082219 seconds)
  done (took 2.420070997 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106065636 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202196381 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114067778 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06728765 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103571779 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08073701 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089272976 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079672506 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095424555 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067912231 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100827328 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078383819 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066313468 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100118264 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093773685 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081440931 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066474005 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102255974 seconds)
  done (took 2.637392218 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109850226 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150495469 seconds)
  done (took 1.199355429 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206199913 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127915761 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.212588812 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.43902642 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.218664761 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.300205121 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.180798369 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.182170875 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163902364 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174824219 seconds)
  done (took 3.141017201 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103048655 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176399687 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323840238 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.14294283 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090090733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119838303 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.144481192 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113627225 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085901139 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106216391 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104351651 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079641596 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122238691 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078513416 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098476729 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079966196 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125716415 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075915796 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101131889 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077322859 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122353815 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068119676 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099620458 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075580888 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10308593 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080778736 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.090250852 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068191504 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098880679 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077659136 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102666466 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117459137 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082595325 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135004116 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106877899 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136664657 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078531049 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096676539 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076686526 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096859602 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07959291 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101601503 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106857001 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080402544 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067674302 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100821555 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067680293 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089567693 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082594068 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101146778 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08180706 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10299916 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.136096041 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102035156 seconds)
  done (took 6.503651374 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.769748311 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138626802 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074544733 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.832502679 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118641548 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085512567 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.755036628 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096070841 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239928194 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76621352 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116678046 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079716544 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210392771 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219119823 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.907629146 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287749429 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.651014269 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109490246 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110971439 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13708632 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165745557 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16075937 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151685639 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.412125531 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099721312 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074288273 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141135789 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101938415 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144560618 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107644045 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076953862 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159939616 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.230731613 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184938355 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076164922 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094704095 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072668734 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.151704475 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247024277 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195460019 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162279739 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070713714 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071855151 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1669831 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135091778 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070806837 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146257451 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155927336 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175186593 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075956179 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09997355 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146999012 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145117532 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148421095 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104949728 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291153442 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.2760579 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094087701 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125397037 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087145453 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242227364 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083660234 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206133706 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142892681 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194270899 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072090112 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760914956 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152140202 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071441896 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100292417 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123626854 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077095008 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.162869665 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.128039056 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388379119 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.146657548 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097640699 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071273325 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208183667 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086173519 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094661254 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145601916 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077207087 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125853589 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171205862 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.151570211 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152254347 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209616804 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.170549034 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144564662 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075931846 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128355132 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098727492 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.196086032 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198865554 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.146308328 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.192145368 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144717437 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.146524028 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.14997793 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101712936 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153902156 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123221353 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106375923 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144761458 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19714376 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125364969 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08558618 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096277856 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.145232758 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129364546 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088283459 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.165137811 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.154954822 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.436486051 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149634719 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090554858 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089888742 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14378977 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.166002282 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079400454 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241671701 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126869468 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.152494962 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126137431 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070640823 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12486108 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.145518676 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104692465 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126348728 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144828288 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079623563 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.239930752 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.1768498 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103647868 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200291343 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165523975 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100211227 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155999856 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124831325 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15049158 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079579853 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164760078 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078638204 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753114763 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.147633381 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125914525 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074903895 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168743475 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093899226 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084597273 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107481122 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069605566 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771186922 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087104138 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104300538 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106076373 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078982034 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125467899 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140153462 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097950939 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144642373 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209896209 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.080004909 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123280636 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106264633 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.144231492 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077094312 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108262008 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105284584 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087188965 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127735444 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096537911 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086221174 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151696141 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144004785 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.200204258 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576634065 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072617336 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107100252 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.186845145 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094843358 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266920351 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142075259 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.182984248 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167497307 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08428391 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301806941 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.149455018 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.169342631 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086965871 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177361862 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070089096 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140552359 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.14611156 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094605608 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078180027 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166270368 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.152334682 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14866742 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913217804 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072406965 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208206906 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091782106 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154030036 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077236975 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102845667 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.26775254 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073350005 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151544102 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168304745 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075496518 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107556396 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.827005713 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107126215 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143591213 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077486734 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201295159 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.145946572 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139344997 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164530093 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080177567 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144225923 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.191003112 seconds)
  done (took 41.631904679 seconds)
done (took 59.795765652 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287767139 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19649998 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262113769 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151314676 seconds)
  done (took 1.936747059 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.151892682 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108929866 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123086515 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089224364 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108188684 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090246653 seconds)
  done (took 1.635972129 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.439563238 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280977104 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243653291 seconds)
  done (took 1.931383981 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.306271747 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236694938 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463071185 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.309126645 seconds)
  done (took 2.388083787 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.197523581 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118879665 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091633794 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087815872 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165988246 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.270229844 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.132765361 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.196992441 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079822264 seconds)
  done (took 2.351636352 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.207337932 seconds)
done (took 11.4107321 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111853191 seconds)
    (2/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.312787685 seconds)
    (3/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.278874187 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.14772194 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099731704 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09987839 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.279339131 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123463338 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080865752 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.181079993 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.141612956 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.125618308 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.259654508 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086128066 seconds)
    (15/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.279093557 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.254540533 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103619861 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.210537999 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079040972 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.302571839 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.101293684 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.105728425 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.267355631 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.300054664 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118623655 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.161229466 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.224462196 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.254220654 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.230054364 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.272779945 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.121340826 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076189616 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.25514147 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.124473444 seconds)
    (35/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.242870009 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121234052 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.273439883 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.126121316 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076537223 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078293827 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.257673256 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098742439 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093952848 seconds)
    (44/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098555784 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077266237 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11852645 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.200289303 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.099662866 seconds)
    (49/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.100048918 seconds)
    (50/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069143758 seconds)
    (51/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.137528087 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15052608 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096662116 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070291706 seconds)
    (55/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.211780587 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.283469463 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.137279601 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 0.130102568 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.130733113 seconds)
    (60/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.138888532 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078645517 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.121805063 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09923705 seconds)
    (64/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094809977 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077456052 seconds)
    (66/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053822623 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091617196 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082504691 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089781997 seconds)
    (70/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055029175 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082940155 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.075948534 seconds)
    (73/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.116626669 seconds)
    (74/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077195382 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.092316109 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091003574 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.141469697 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070443592 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076690552 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079848897 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092302579 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092113672 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082014629 seconds)
    (84/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.133711078 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.278247932 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054208326 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120874313 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090505912 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098321167 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102375374 seconds)
    (91/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078221749 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090528881 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.120357631 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104549748 seconds)
    (95/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.100924746 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112343641 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054395631 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097976118 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073870208 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.09156842 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097053409 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107199763 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069197958 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094388489 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.085094244 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074295517 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.160282673 seconds)
    (108/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116385829 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148857168 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.103389414 seconds)
    (111/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056521923 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053059077 seconds)
    (113/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.163448619 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.251115271 seconds)
    (115/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07738463 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092241019 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.102011694 seconds)
    (118/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100901333 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.072751083 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.163056377 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07715676 seconds)
    (122/309) benchmarking ("sort", Float64, false)...
    done (took 0.152358167 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.14227365 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076490684 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079290138 seconds)
    (126/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.13931279 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.180431694 seconds)
    (128/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.133350066 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09701648 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.224026737 seconds)
    (131/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.078906072 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076259827 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069431921 seconds)
    (134/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.166965113 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076714581 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.220825914 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112264498 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075996076 seconds)
    (139/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099075037 seconds)
    (140/309) benchmarking ("sort", Int8, false)...
    done (took 0.169781524 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069859712 seconds)
    (142/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078428484 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093572215 seconds)
    (144/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.434921734 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.257141797 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092314531 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077498748 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068674721 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.16968295 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115660943 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070018664 seconds)
    (152/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053906304 seconds)
    (153/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.145523078 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076165541 seconds)
    (155/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.131433595 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.265811162 seconds)
    (157/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.109441637 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.140916315 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069821213 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.173073498 seconds)
    (161/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16671369 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069004038 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196279148 seconds)
    (164/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074637682 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205720909 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074304307 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.243728586 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.168189766 seconds)
    (169/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095655996 seconds)
    (170/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077789554 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054880524 seconds)
    (172/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110164513 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.077014232 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068025282 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.123391336 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055504011 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194538866 seconds)
    (178/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.0716875 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054081572 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197586776 seconds)
    (181/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.13335494 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075957087 seconds)
    (183/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067497001 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.077093111 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077867083 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202659571 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076893523 seconds)
    (188/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052508805 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088441562 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068336124 seconds)
    (191/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106247662 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05447874 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.194591499 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053892431 seconds)
    (195/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075336756 seconds)
    (196/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.099901035 seconds)
    (197/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067212941 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089374272 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07479277 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077801391 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.099503782 seconds)
    (202/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092276534 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076752185 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05549848 seconds)
    (205/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081977337 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090979561 seconds)
    (207/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079653231 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09615029 seconds)
    (209/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055659225 seconds)
    (210/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076177495 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098873049 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076308108 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053460409 seconds)
    (214/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.076011829 seconds)
    (215/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055537945 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062983544 seconds)
    (217/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053452543 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097397715 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069174857 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.096720372 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173966707 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092756186 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055531053 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066328467 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.09182569 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077201937 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053154577 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091604922 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141246019 seconds)
    (230/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078003418 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077046684 seconds)
    (232/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.090903739 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079317105 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158489837 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068931889 seconds)
    (236/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053646079 seconds)
    (237/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.076515465 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089487486 seconds)
    (239/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063702603 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.106762394 seconds)
    (241/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.244416295 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05473848 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055912323 seconds)
    (244/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.070682151 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.094348294 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069918066 seconds)
    (247/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077646115 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072032837 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053268191 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10396253 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070093709 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074365399 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.091265244 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068487656 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054461138 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.076440717 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06876387 seconds)
    (258/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072054778 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098071413 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.150592877 seconds)
    (261/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.126100398 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074489086 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.10013471 seconds)
    (264/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063593538 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.174824 seconds)
    (266/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055395188 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139549924 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073589445 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054660627 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.07756313 seconds)
    (271/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065611121 seconds)
    (272/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087350159 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077335639 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126134868 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160310392 seconds)
    (276/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063499685 seconds)
    (277/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09703469 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069590588 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053819735 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099059726 seconds)
    (281/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070528913 seconds)
    (282/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062647387 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077710759 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068301041 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068879299 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.096805584 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06782277 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073634775 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.076768151 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071757348 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075153437 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107622809 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066762693 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076064512 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054762535 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.105179637 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097676874 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092169064 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091781416 seconds)
    (300/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069794764 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053248393 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.076619719 seconds)
    (303/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215631555 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068294222 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095895908 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096269665 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114421716 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056678925 seconds)
    (309/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054518329 seconds)
  done (took 36.058427907 seconds)
done (took 37.025002356 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086334101 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118596296 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079065853 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119514747 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084717708 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104417802 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076154598 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104849053 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084665222 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107333433 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08377894 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056293971 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102192224 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078293309 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101560188 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096856136 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105171931 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07622579 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099314632 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068877966 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076514957 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091852946 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069864101 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056268421 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104828277 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075602076 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099604906 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079163887 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068192355 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092835478 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072116897 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098989316 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069341961 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080814555 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098712471 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077461006 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102051184 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080694347 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069707242 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093219973 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076361839 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091462129 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076837462 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075395745 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.098192425 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074493436 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097775241 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084941441 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120175283 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071332756 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076415841 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.104110417 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079953676 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099229825 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073142115 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099321531 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075564416 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094971015 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.101707772 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070633548 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100406079 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078262443 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073248583 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.101436081 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076464021 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102068942 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079504929 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096338656 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079715802 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073258706 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092190657 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076640023 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094283475 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069984934 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078914389 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.103212871 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067703023 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073695929 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098940823 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074885865 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.090434307 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071637472 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069366184 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097578412 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071062561 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056423979 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096245816 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074998996 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067033551 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101215666 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074114853 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.098827577 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070312426 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079362507 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.09236814 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073310915 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091098276 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070964835 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069713368 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095676635 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069178316 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070410503 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.100710252 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070492575 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073182584 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106925899 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067928008 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098117633 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067780803 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06641915 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10934312 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077543265 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.092083314 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070234829 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090287252 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076670349 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067100483 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091434187 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068566746 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067967321 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09815651 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06867153 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069686334 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.099220607 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08216507 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093967631 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072964719 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070154436 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.092777848 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074520196 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067490051 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.092932645 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070565348 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089084602 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071820787 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068404312 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.099636447 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071288672 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076324051 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.094051078 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0777583 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096097448 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074900058 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073046418 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091140482 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06124223 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069842014 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094575126 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071172829 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067716671 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.09453923 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068014156 seconds)
done (took 13.717739032 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069732311 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.177633498 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.130878735 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099964099 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116803156 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068373815 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104607608 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133789008 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071240439 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13261748 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09128789 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113354602 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143775599 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069636189 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068369614 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095694428 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07071859 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.116523631 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106970061 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114229293 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146598282 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067925664 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126844347 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093353669 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117199094 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.122408673 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069882542 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094549593 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073523584 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129768849 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09073542 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071270242 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.092959006 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104683469 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122989932 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113117123 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068617871 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112092096 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069175591 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068736042 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120971815 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128751954 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08533252 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110734502 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072747179 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.095595582 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070619083 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113798179 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093827449 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.108402546 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115897208 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140634107 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073037652 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109770214 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068339345 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114592909 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086021526 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09441738 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070506078 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.0702254 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.092431477 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072938613 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117119235 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096917782 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.096483097 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085453848 seconds)
  done (took 7.554864778 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089671496 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11943172 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088661718 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111046343 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069398318 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068713108 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.093696103 seconds)
  done (took 1.656254267 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071356517 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091650437 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117633506 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091900927 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113898021 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090358811 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104078868 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069803623 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110216304 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070769334 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114800977 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1100007 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094254669 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077592398 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118071089 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070481644 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093616413 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094011439 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072324837 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117646241 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072671868 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114508627 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07253921 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068922146 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110593953 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070307044 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143723446 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073588139 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095394266 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073792973 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067962442 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.145526602 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109085638 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080142271 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09283587 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086753119 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107706077 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069193792 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086598537 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099764106 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084439112 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.0936384 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071939513 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067693806 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.098577503 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081980352 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093653176 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071700897 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072628035 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115384487 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070925463 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.10738651 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071862888 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072787177 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095826444 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076445072 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102407993 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072545515 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090137219 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096113362 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087826301 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111543934 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084787838 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111120978 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072464474 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107554322 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085843541 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072389131 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096251694 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073025817 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110911394 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068424022 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070436524 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105794295 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071301239 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117754823 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095321698 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095224963 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081456487 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069293441 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094662043 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07019327 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.117966586 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074030203 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069078756 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098142267 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072904718 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091174732 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069989433 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072852674 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091707506 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.0724884 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0724614 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095050082 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072504699 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111050722 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071034497 seconds)
  done (took 9.667721046 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072988118 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070575483 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096657285 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07163714 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06975794 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095639528 seconds)
  done (took 1.506490878 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102983743 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096475237 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084926299 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098475531 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111634961 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109890557 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086329459 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111382357 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08872269 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.108059086 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086546148 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111087274 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.114254777 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078847292 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084926201 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101124293 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085682819 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105496254 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081533374 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102056185 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091207635 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101347102 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076912925 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111746458 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073281833 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100472099 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081609758 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106464027 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083422889 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110200279 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076630946 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097481974 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076506495 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109839905 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087267577 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098833562 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076972133 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073811717 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104880579 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073176314 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111193662 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076455662 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.106581968 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074334131 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11102732 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074546289 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099983694 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07995309 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109997611 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074467245 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098490662 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076257138 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097430709 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075688396 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074481583 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110817644 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097175302 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087470674 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075715426 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100840217 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072687499 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098814374 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085083287 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098581235 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08388627 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098852871 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075275606 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10123046 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077220003 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099633381 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075385475 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072124217 seconds)
  done (took 7.646938446 seconds)
done (took 29.0403396 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.665173306 seconds)
  done (took 1.687967744 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.863156821 seconds)
  done (took 1.886393069 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.044073222 seconds)
  done (took 17.078670205 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.656049393 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.837458119 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.82665247 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162299299 seconds)
  done (took 3.506398235 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.902263412 seconds)
  done (took 1.950176418 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.247791835 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255505494 seconds)
  done (took 1.537229325 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766269087 seconds)
  done (took 1.803377003 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.324441415 seconds)
  done (took 2.360201835 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.345564488 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187638042 seconds)
  done (took 1.575795033 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.535707304 seconds)
  done (took 1.576767474 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.762387826 seconds)
  done (took 7.809222596 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237199693 seconds)
  done (took 1.294209715 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.276186636 seconds)
  done (took 1.321966337 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.312005956 seconds)
  done (took 4.356980991 seconds)
done (took 50.776760813 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083083715 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083410662 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10886214 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080901167 seconds)
  done (took 1.395711594 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082862908 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075687898 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105506894 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074766105 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10625871 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076069953 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10194537 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080933216 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098357277 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078781621 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07586372 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101027422 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078889809 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102132254 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074495742 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077787573 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104880536 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075443674 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104316876 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075785797 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097763726 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078888981 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077991024 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.100641327 seconds)
  done (took 3.161003306 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083062839 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075591076 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102477712 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074812461 seconds)
  done (took 1.389248054 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082055618 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119471029 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094827111 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104188671 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097888716 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115086335 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072870222 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07163707 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100175349 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080176549 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095473202 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10389858 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116583918 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080057959 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106432124 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069555906 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.094227501 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092585414 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079069854 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105830715 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073042563 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103824166 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071475626 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118433387 seconds)
  done (took 3.304215753 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081619719 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129086437 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084290342 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116581965 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09715208 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067535112 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103906623 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093585982 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154964983 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.091966944 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074101953 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068086344 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09983842 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069416648 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078358306 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.138423608 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140533153 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072129694 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125070113 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06933501 seconds)
  done (took 3.009504475 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.08009171 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072575571 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093198567 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072437321 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078594795 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101440649 seconds)
  done (took 1.557218472 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072866568 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069701877 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094306328 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070208325 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073847621 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095917564 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069698606 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069119879 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095207016 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070458682 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09206443 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069988046 seconds)
  done (took 2.000482402 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.462279367 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072195387 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095240675 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070153738 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073584221 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094584776 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083807826 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.0705304 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.120771776 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069046295 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094636583 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07244563 seconds)
  done (took 2.440577488 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273402669 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080322774 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.338476173 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174960647 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142757694 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161274025 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106365978 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144347982 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205020333 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143309464 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233918919 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204020616 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13938767 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171983961 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118557265 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.136902408 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190935991 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228665446 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134138576 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23289148 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189915012 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160759185 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21225569 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106797306 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140269434 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149589159 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.100929705 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082889795 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237938029 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192765973 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183639784 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143386831 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124824279 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240497637 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227039628 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177162971 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167395669 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113981863 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159691488 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172200938 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270129231 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115708303 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203598492 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138392805 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109352656 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180844941 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151137421 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152473523 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141337682 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118096502 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181300226 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248291923 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17190049 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117449895 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140485334 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143232766 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147018107 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106133258 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279373484 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200727041 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188692919 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075188282 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125687609 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195589736 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164644485 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145989618 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184028789 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09688174 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201727723 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194127077 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148801521 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206249248 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166436193 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118243714 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15166459 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176455137 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159360309 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236912153 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159198772 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100789626 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15712921 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131355371 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085946334 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174231742 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079206959 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243484694 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128658369 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.144243516 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141596297 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115313782 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140914728 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227795311 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209995321 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10819563 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095162382 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132578804 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155229722 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182272811 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117360508 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140123494 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1535813 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081508749 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198960582 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079786329 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156808733 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.106330558 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157344757 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167220117 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078408885 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183199521 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107418039 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132266692 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167703659 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228354508 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119558531 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086563939 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234425604 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159881128 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136555571 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182069011 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223588971 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130970071 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131050386 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184849579 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253794559 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119058594 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204493459 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135542456 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113340327 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091944487 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185287582 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145264208 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153648218 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087366451 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158127593 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236189458 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102562226 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100911749 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171020442 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110967625 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109555755 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144478901 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104292018 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124893014 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131540136 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138039422 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175095961 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158814452 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139595787 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159035722 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130532716 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229196114 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119198538 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109202272 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1349808 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09792161 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172397168 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225282331 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085087485 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235095882 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1609991 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135496365 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153360007 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086072734 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202481137 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08349 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072556078 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205457653 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142475095 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141668254 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1922901 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135149138 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161423331 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155681601 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193564517 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168807675 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168157595 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138287878 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09086218 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145275309 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186686218 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076956704 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125130361 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085112528 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135491619 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124727176 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11173347 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18034477 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160787761 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128048487 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145257931 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126689352 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189198237 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104401544 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167390897 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153555016 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124240111 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194573812 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228983821 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171331844 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131280749 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181702991 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100000454 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078332993 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118845514 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163741289 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112453795 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088309844 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149781119 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214654718 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164629418 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171492301 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142849854 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155299698 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222359891 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075550799 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146174283 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187910921 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159293016 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162576706 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120814527 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104941368 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210207134 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110314 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283538867 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148397459 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158898675 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190830565 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135092127 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112863257 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108247876 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200116574 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136209958 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189033126 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130809872 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118886628 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142608275 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.085210573 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134784361 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188211075 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152834568 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172624409 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150262445 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168019078 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107302119 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14839091 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157423825 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156395556 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067171182 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176817656 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204700384 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126578533 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15084944 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221874697 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082764452 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156892276 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247695966 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208198082 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089068842 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141202422 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154736126 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164331079 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176198917 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17943279 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143054885 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170113129 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142220377 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088849845 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118734509 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129434627 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112595074 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.126562031 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145320986 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149108598 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125904925 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166573913 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145401596 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143543596 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152876913 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12981158 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094414561 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12904532 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245001698 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155238392 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243563252 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131386173 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188352375 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23519032 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103222731 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083541954 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109754044 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178779537 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087099652 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194904631 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100573592 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136801098 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160351006 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207602295 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100689731 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098590927 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142423439 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171585283 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14302598 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129468612 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.112209587 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231350943 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136237032 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083332781 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159466766 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136170205 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134742591 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244489024 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064474918 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128319429 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07892162 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111413605 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165994814 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223049013 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08693381 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160824412 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156180677 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155842159 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164920582 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132357425 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127855856 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143795808 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186314835 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163540823 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121343476 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147409876 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164969054 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223981058 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140401658 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099260712 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238387559 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223398432 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.231228527 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092786398 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149108876 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147880148 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144524113 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208640679 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086811779 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2357922 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112735512 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17280725 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136422508 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12504024 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162625618 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127142844 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093544438 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215183601 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152783008 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111406607 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102409365 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147417987 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155982014 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134900104 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104084251 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1783417 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075136214 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201110369 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207952949 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113177883 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138702977 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126818937 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08721102 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139201451 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135586196 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116982759 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.125474675 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243861996 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123120228 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213830041 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180281766 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147786164 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201456458 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106509493 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668072809 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109410003 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194350843 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152019334 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275648527 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105018274 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154699639 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144695456 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156672466 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206260135 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138473503 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180493588 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195331543 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155753363 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083000684 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136474319 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143572362 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.121677935 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140093678 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148875998 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148768651 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132066209 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155319006 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163662411 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111795164 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100308199 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226381013 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153077039 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180245784 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205824688 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089638277 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153991526 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207235632 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083246687 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.184157241 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196434842 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141128092 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132272075 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.112196816 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138541228 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212934354 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103417157 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227870527 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160757983 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143387439 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149137292 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.156805023 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169075108 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138872722 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159861612 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127735681 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146732496 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150100755 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115826396 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08146304 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138556395 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145530004 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130737769 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134006718 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.125644259 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221144815 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.0746467 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126660695 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133735081 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183211505 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248941875 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.12064293 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087910991 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150829487 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146257478 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149489677 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184224342 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087209158 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112065967 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08689899 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.142863928 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144062466 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149314696 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109339497 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14512138 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236396757 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114518092 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231423111 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127481638 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142960719 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072644334 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110730031 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126921363 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102189473 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136203717 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129828418 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241811993 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102243177 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122258997 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123965491 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077810432 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113567473 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166898718 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144358296 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156788987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128624324 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067404607 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140436614 seconds)
  done (took 74.07881035 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157438724 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.113200618 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.126515323 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.180693867 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154298225 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246854162 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.187712668 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.230609661 seconds)
  done (took 2.52540886 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073618907 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.124208663 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105895754 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.120225142 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094685681 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072310907 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.310223813 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113839371 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069312516 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121408627 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123592946 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.097660605 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.48977215 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068118683 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09794451 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.091099615 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071749746 seconds)
  done (took 3.365253481 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.45317854 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.64945302 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.456461255 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.102919121 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.925223948 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113610593 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.346229239 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168923336 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097474203 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.431193236 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72973227 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158054218 seconds)
  done (took 17.762042833 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078481858 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071429975 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113150029 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087169587 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101078274 seconds)
  done (took 1.577258028 seconds)
done (took 118.601882189 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084013001 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384890674 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055578486 seconds)
  done (took 1.602709917 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089423206 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08714115 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116491838 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087284863 seconds)
  done (took 1.517542336 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079561528 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078569229 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115232386 seconds)
  done (took 1.406991664 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.299357135 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171023281 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092999086 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087741706 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080376292 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10794102 seconds)
  done (took 1.412487903 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077418242 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077900814 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103074034 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079596479 seconds)
  done (took 1.465120518 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081377753 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05491011 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056903305 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084937455 seconds)
  done (took 1.413296998 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09575581 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108435036 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08455955 seconds)
  done (took 1.419929073 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113387044 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11656425 seconds)
  done (took 1.36718438 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086793384 seconds)
  done (took 1.215736289 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098231968 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147129976 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.16444273 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.141993468 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.174310025 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.145328219 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.117206952 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091452148 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107869648 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120017619 seconds)
  done (took 2.444620547 seconds)
done (took 17.0309937 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083046935 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.397419586 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364799008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121667004 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672412567 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384622499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.009679198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125023718 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111542301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097339899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08800092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677843224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.998088784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327565615 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.011692572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32579874 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681116189 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071391095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095749334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071912471 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.988263012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097948514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070929653 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096769831 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653865039 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375038103 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098069632 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32610694 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096819992 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074088871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357566708 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09811858 seconds)
  done (took 16.17392873 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07546625 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14736516 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078199193 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085890894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101774023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072413744 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101648461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073091652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15168549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070912703 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114837333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070699581 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10082657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073138609 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090147562 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099205121 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071803908 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097223663 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072694868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071453336 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117605944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071033452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097229142 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072804688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070676122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110612936 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072020457 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097099401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072177998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072245838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10154542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072143105 seconds)
  done (took 3.980449772 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120927842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157221124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078350341 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133065392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.142319191 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074189209 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.173599237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097207913 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15566352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070687484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115852894 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07133003 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132201748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071235861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117842272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072195264 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097683351 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072429754 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07108264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098169466 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089931756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096791617 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072248664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071331913 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098117943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08440716 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098882168 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074595387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070844477 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100585522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074802621 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09854216 seconds)
  done (took 4.295231588 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077272968 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078072128 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112556665 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086690128 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098371428 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075978739 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07471088 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099342331 seconds)
  done (took 1.839385936 seconds)
done (took 27.413495801 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083701023 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071769482 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103113593 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083613021 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102069225 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08301734 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069095191 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105053683 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078346172 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075227844 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10625929 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06991075 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101300423 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07078672 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076653649 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098206706 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083364216 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101715074 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083745351 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109272088 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073892365 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077982945 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105029204 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083299907 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109571083 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084014703 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109028436 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077641062 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071603376 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101290432 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079949188 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11494341 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072379401 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081975605 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099831413 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070120608 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096657371 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071905217 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082102489 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105218889 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073601884 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104618813 seconds)
  done (took 4.832649858 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094094618 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095911007 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118323841 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064865647 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09867789 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065586762 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.119240292 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064955293 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064948826 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.119570362 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059466265 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060133806 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089358144 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057841474 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0605475 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058558416 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090793646 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059757476 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060012877 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087642736 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063942393 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056726638 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089312434 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063235211 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058497248 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064163868 seconds)
  done (took 3.129659478 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080231449 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083860497 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118951582 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131046284 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136610045 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077883363 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109567031 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08874829 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114991342 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070823575 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07359368 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.127494708 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088812741 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105905132 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070041271 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113053225 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086060059 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071657814 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105386253 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090789348 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115351846 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.0811273 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119901613 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083516566 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069372189 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101782273 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074778745 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11250161 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076327615 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079109591 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103904024 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073571699 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099508642 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082760915 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101456625 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073984437 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089341943 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107680682 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079084243 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098248514 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075647064 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071075802 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.119082343 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114798924 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098551287 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078120735 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104766684 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081306872 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069556616 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116760073 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079515104 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097025601 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075111628 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069649968 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09728428 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085027857 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097718734 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074926987 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079239338 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101974313 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08286267 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072689924 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114324175 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069543199 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105169331 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06971039 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070051601 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.097893147 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09205758 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099835657 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110819934 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099277747 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072070083 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106338078 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079567204 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075739783 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099097119 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0868085 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107177543 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075651769 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079352495 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102183448 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074233449 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116139903 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075231759 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.077990833 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098593541 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077780532 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072394478 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100129308 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084142439 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09866183 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074815025 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113318272 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071472647 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072112111 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104711444 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075190519 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.106274347 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083993268 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101614874 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073427957 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079782771 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0987681 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074215713 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079775888 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.102983997 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068835131 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.102413614 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077768468 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070043002 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099839772 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072826389 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098627711 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081021629 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075896363 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104241716 seconds)
  done (took 11.719766162 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.201987163 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191578082 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073313837 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.183717315 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080443222 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111376731 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185560504 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100762129 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099618288 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071143791 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098686418 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110758828 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132260739 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.146266623 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084563369 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07056896 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119022716 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13947678 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160376984 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.180997314 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119580557 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078244261 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101532815 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072847435 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071608032 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.109387764 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087157428 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.109760319 seconds)
  done (took 4.447766507 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086663744 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130262424 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077389791 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.117335269 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096543923 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097078594 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077485491 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072043387 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111031763 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083300113 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098645105 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07692909 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077282238 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107474884 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07196578 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107965661 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081038453 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099508924 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075758429 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075017094 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105291163 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083729224 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102641352 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07071912 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076694354 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097853183 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067569871 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116782329 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069901801 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120074109 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068346719 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104947205 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081769621 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070631049 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098653001 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072667855 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071875741 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101142685 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071428194 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096122252 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070798831 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06002273 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097474461 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084365166 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103318321 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062864136 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076233051 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103930093 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075643886 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067817699 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102196238 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073331527 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.100982152 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07886052 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075136944 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104225043 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074590065 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096363791 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079105527 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07285786 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.094832375 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071772636 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075264941 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.098447421 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079097251 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102314228 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071550424 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072855929 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.103266319 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077084277 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071890809 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101317772 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06814842 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100125796 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077022981 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074168573 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.102379572 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069664916 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069958225 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099759526 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058221853 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069481194 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.08477412 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073387502 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095644597 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072038639 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072169298 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.106288236 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084324024 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.099686395 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077102502 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.0707819 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.097683984 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.0742304 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.092604892 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07528987 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084090899 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116518758 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070042713 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.097053593 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084303798 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103104474 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071110035 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059289406 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105381023 seconds)
  done (took 10.173410975 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097210755 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.121860468 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075400004 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084196192 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125738529 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096389843 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106764411 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077834118 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072094978 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117119615 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07120109 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10675059 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075952988 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078834127 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123907897 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078678535 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.10106643 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080646447 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078184819 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136938039 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083350117 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.114493919 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080902953 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099692846 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076292407 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082489807 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12836625 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080994849 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110285393 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085688106 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109140379 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099712291 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.084878222 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.10426454 seconds)
  done (took 4.41222057 seconds)
done (took 39.8463309 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.226655533 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.432798692 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.20842954 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.117871555 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.240449031 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.216421766 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.224118187 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.220705876 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.796193086 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.210709101 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.463082072 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.844657588 seconds)
done (took 60.357596105 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.291172495 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.356656498 seconds)
    (2/2) benchmarking "String"...
    done (took 1.484824436 seconds)
  done (took 3.993329106 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.592104658 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.369724037 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.501402797 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.213016418 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.211937419 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.660281445 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.810600147 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.026564789 seconds)
  done (took 27.947112012 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.219212621 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.571153232 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.412432892 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.406900369 seconds)
  done (took 17.763010222 seconds)
done (took 59.736922699 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.21279743 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.247959948 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.226510739 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.195882689 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.318149507 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235196879 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.554624708 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.464141983 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.223194989 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.204625747 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.213618416 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.217152235 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.235425815 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.49540754 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.222831235 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.221416247 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.223560003 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.686157787 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.580612073 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.212200542 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.215324428 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.257292231 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.224956215 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.226723848 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.277207189 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.212561238 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.236990947 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.229554375 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.171811168 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.216103925 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.28456244 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.673108363 seconds)
  done (took 191.572130097 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.208880242 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.133853788 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.254375926 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.233630346 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.577244535 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.405750841 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342177238 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.670507303 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.225971679 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.228239602 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.368395702 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.210856182 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.43432098 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.233897805 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.219012826 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.210591093 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.42596579 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.482733694 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.224413341 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.470124414 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.209352473 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.328250663 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.24125613 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.347118157 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.234647573 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.309694431 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.239575741 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.222911963 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.399123337 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.355314037 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.21775042 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.222896343 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.731984013 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.065308717 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.233877511 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.227162454 seconds)
  done (took 149.295857671 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.475430736 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.209070204 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.208211784 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208320732 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.234791461 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.208571634 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.675670079 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.678667456 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.702450462 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.44508819 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267897731 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.374713816 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.210092328 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297297191 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.219468859 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.209309078 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.224700728 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.233880206 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21159118 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208699264 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.679515935 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223191599 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.419030237 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21590599 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.209720362 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235032511 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.598296539 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209438863 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234877159 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.513320136 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.250338698 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208518874 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.453674807 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.394724781 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.210462059 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313902339 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21077363 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236511088 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.210162004 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.469224274 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210784458 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21093268 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.212393486 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.739613972 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.212986337 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.678244508 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213378801 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.049090847 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.213004902 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20959833 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.449215698 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.563085928 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.210466105 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209376037 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.211959913 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.209522787 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209982258 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.235800268 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.439095529 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304768619 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.209856244 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.210385183 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.21485404 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2367697 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210491714 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.389671338 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208815482 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.221919511 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266506782 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.317353474 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.682317283 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209440868 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298032406 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322915559 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.211220443 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.208763088 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210879858 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209806647 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.312788373 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209767031 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.563859508 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217007258 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21220103 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.267709594 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.301089693 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.211166993 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.44391732 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.213715806 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209931735 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.867670688 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301743975 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.210909865 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.212329647 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211816993 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.564499088 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.682848894 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.327970728 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.213739068 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.458888766 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.211657464 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211553037 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.210753826 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.577118611 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.669379883 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.747761527 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215082909 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314702731 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21446232 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.212686851 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.210655157 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.240636063 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.210370206 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.270133336 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21108084 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60424492 seconds)
  done (took 344.060871006 seconds)
done (took 687.559995115 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.903096612 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.852238346 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.982031655 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.869227592 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.847224844 seconds)
  done (took 10.605994989 seconds)
done (took 11.759079794 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.38686409 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.387295058 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266105811 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.387361809 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239037686 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.404141156 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.36609759 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234227392 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310743891 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282370361 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.308933743 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258232743 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238777973 seconds)
  done (took 18.222387335 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.5262283 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.518645121 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276249445 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.52769642 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250535824 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53751203 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40731302 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420281466 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.410853915 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227072835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225621864 seconds)
  done (took 16.482572849 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528757568 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.535502767 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278307734 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.531397119 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253135621 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.525027654 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414258565 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421364851 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.405571439 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226942138 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224839023 seconds)
  done (took 16.498484085 seconds)
done (took 52.356845993 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.222170378 seconds)
  done (took 2.374396528 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.252385462 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.412820281 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.235606601 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225352891 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222089432 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222398531 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.225931685 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223012082 seconds)
  done (took 11.17393651 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21845883 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218391545 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.218467114 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.220770553 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.220817287 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219005831 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22122914 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220536454 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219688977 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.218437462 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.221889608 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.221650023 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.218122183 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.222335174 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219532775 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.221679185 seconds)
  done (took 20.675270554 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.221374464 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.219321048 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219022874 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219922357 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.220300008 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.219907209 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220058084 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219607702 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220257353 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.219442937 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220581238 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21856258 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219521504 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.219728459 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220120094 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221032111 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.219513397 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.219725956 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.224397959 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.21978056 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219945561 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220022284 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.220427071 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.22026394 seconds)
  done (took 30.439620395 seconds)
done (took 65.817986747 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.09264157 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.680869591 seconds)
  done (took 8.929953237 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.223296772 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222041513 seconds)
  done (took 3.601630818 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.222456092 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222477832 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223715841 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223891122 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217702518 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217544806 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.216846562 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217362337 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217674693 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.217096308 seconds)
  done (took 13.353013623 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217682261 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.215948859 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210335888 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214469391 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.215269573 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211843643 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214170323 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.215360533 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.214857971 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.213179602 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211614929 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.210538017 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212326209 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.20979864 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213768593 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210066156 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209980682 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211600019 seconds)
  done (took 22.984942092 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211776304 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.211376247 seconds)
  done (took 3.569049156 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.210311057 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209995255 seconds)
    (3/7) benchmarking "month"...
    done (took 1.210963682 seconds)
    (4/7) benchmarking "year"...
    done (took 1.208945116 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.210181482 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.210112943 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.21060733 seconds)
  done (took 9.616776147 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213665341 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.387603086 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.466967934 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.799746789 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216112521 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218416117 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.077000638 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218054617 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221624233 seconds)
  done (took 13.966287593 seconds)
done (took 77.179595233 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.183851344 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.208726558 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.026589063 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.221603349 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.22530784 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.552886455 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.218448607 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.327673691 seconds)
done (took 37.11570964 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.228132592 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.899505938 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.899665177 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.21058963 seconds)
  done (took 11.161706613 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.195835997 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.087571389 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.204551722 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.171559732 seconds)
  done (took 17.812695984 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.776257095 seconds)
    (2/2) benchmarking "read"...
    done (took 1.543458783 seconds)
  done (took 4.472343287 seconds)
done (took 40.827656696 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219414974 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.218076566 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.220182141 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.217293613 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.219517286 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.219307134 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.217403008 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.215887382 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220481308 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.220828223 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.219987824 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.220737048 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219726183 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217406358 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216577597 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220874189 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217793665 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217937809 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21766082 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217597614 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220664115 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.218540904 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.218370468 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219096995 seconds)
  done (took 30.404096691 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.221780405 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.218196851 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.220938469 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.221170562 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.217477923 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.220751094 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.221564732 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218000854 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.221059592 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.221504132 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2183278 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.218833645 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.220886083 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.218698169 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222307201 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.219920147 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.222089617 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218336459 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221708067 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.218568744 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.222070799 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218093345 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.218586947 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222266709 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.21911778 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218148524 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.221882528 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.219683637 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221205964 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.220013806 seconds)
  done (took 37.758470167 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.225292543 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.227912859 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.22266348 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.221941181 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.221326014 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.221604216 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222238081 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.222255001 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.222595746 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.222060694 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.222254856 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.221135906 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.22242636 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.222596209 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.222359214 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.222580409 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.222080936 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22223509 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.222346405 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.221776282 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.222008533 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.222984298 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.222842482 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.223268189 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223283809 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.221821984 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221676233 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.223054568 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.222183322 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.22258407 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223278089 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.222846535 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222930216 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223724998 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.223053603 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22302973 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.226930606 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.228168818 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.222881655 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22261795 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222926717 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.224295671 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224169008 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222821115 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223238781 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.224158155 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225548142 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.224710028 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223978693 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.223591833 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.223884413 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.224081455 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225041787 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.224965827 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.223829918 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.225107732 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225019695 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223786989 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.224591826 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.225438916 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224545736 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224462121 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224673282 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.224068205 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.224672492 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.225469412 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.224965984 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.226601108 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.224645711 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.224273505 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.224795117 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224774139 seconds)
  done (took 89.256091992 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.225047496 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222867836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222736872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221912211 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223763558 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.225204531 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222698933 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225374702 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222582209 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224703291 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225954098 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224334891 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223284239 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225327071 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224767309 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223512967 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225024184 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222493598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.226263076 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.226573088 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225661344 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223114687 seconds)
  done (took 28.09235369 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22721592 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226738113 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.223887256 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225859169 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223367724 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226499513 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2253159 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225948842 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226942577 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225235509 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22492243 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226042596 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224069827 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225584372 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223793976 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222959136 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226772119 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223807533 seconds)
  done (took 23.215692953 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.225085942 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22508117 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226200222 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22517119 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224984642 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227781294 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22420451 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226703919 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.227696861 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224453383 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.227005437 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22753864 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228170943 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225139446 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228488467 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225577456 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228590303 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224852875 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228393868 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226574317 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22678889 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228807109 seconds)
  done (took 28.14402145 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227892678 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22799202 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226738513 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.224607385 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.225480554 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228869108 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22961069 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225548767 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.2289318 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229122613 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225709445 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.230125144 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.226659547 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.226397908 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.226129594 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225689262 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227796001 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227680485 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228638439 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.226467615 seconds)
  done (took 25.708139216 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229627309 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229695837 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229383538 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229727923 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228998948 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229683977 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229682886 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230822993 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229973325 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2299252 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229894192 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230619985 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229336101 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2295286 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230161057 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229984573 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230998927 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230185281 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.229881496 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230088975 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230787932 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230047257 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230874443 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.230105013 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230986434 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231621276 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230018868 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231333737 seconds)
  done (took 35.606695167 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231484137 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228719748 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.227694629 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.227625223 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.228354865 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22896442 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.228724469 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.227867098 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229847299 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228665122 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.230761685 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229353599 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230190992 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.230640234 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230711433 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231385162 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230503546 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229246255 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228926911 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228764778 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.232286738 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231371614 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.231245206 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228698315 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229256454 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.230383704 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229383215 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229857537 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230821579 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229037421 seconds)
  done (took 38.055308286 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.25149639 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250812371 seconds)
  done (took 3.666520475 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229506578 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23279066 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.231991853 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229651951 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229846864 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231408108 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232229445 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230490757 seconds)
  done (took 11.013227669 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.231932436 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.231549147 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.232913975 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.233554989 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.232712367 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.233459765 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240970815 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.249738614 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233545022 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.234228254 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.238419449 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.241006854 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.235171485 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232645411 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.233765503 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23437456 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232202757 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.233699142 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.232620153 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.232637257 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229749584 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235363355 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234001138 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.230980565 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.233422608 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.2404224 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.233054679 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227954648 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229233653 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.23245755 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.22674942 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.227036859 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.229163356 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.229056966 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.229416601 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.225118276 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232395441 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240478489 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.23262148 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.224534912 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229649862 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224152594 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.223581894 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.227246273 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227894307 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.224701218 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.226504685 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.221374264 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.225393215 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.227114326 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.225522515 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222443851 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.221298378 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227896602 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224398901 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229561237 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.238941354 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.229010851 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.230524874 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.231583246 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.232175483 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.22966333 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.222104903 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.22100748 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229506684 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.244830478 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224614911 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.228393375 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.212028622 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.217927872 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.226672542 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229727721 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.226120759 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.217282884 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.217685398 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.218182631 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.217647233 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.214116355 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224217031 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.233088282 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.215902098 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.214422695 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225252544 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235165227 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.213660945 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.213440458 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.214920505 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.214687539 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.214130448 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.223809517 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.230975919 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.210322559 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.212452052 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.211163457 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.213706965 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.211836961 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.211178884 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211522182 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.210904606 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.208116266 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.20950819 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213282574 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.218550129 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210715956 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.210088999 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.21813014 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.212287222 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.208858889 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.214155186 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.20762635 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.207311029 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.208959567 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.213542274 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.206938618 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.21194287 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.216711615 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.20768865 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.208143585 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.206402007 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.206967617 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.216521243 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.230023774 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.208633771 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.209122122 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.210806993 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.216713922 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.205642863 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.208253159 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.205941473 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.204494862 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.203892874 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.210070312 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.204648293 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.205324683 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.204832453 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.207278615 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.202146849 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.204597953 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.205462366 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.205271116 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.205736258 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.204099818 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.204916776 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.205747293 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.2042637 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.206766448 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.209653173 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.203905311 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.20576775 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.203403112 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.201090041 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.201788246 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.204119895 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.203464931 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.203935004 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.203622637 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.203222372 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.202050488 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.202932131 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.201807198 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.201704068 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.202974774 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.204949883 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.201427723 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.20629298 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.199982092 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.198352386 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.200225166 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.199762652 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.199727693 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.200992308 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.199544643 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.203268919 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.207847814 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.198070357 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.198993208 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.200821587 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.198745277 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.199666607 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.199136098 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.200821344 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.209451714 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.199061714 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.205236157 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.198267267 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.199966761 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.199951285 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.199940072 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.198575191 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.202786703 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.199914369 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.205589563 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.20865019 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206873761 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.198872102 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.200959149 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.199506824 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.200596886 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.203483609 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.198381543 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.197468636 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19739524 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.198428777 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198553421 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.198586596 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.198837809 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.198566267 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.198317564 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.19750946 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.19835663 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.199711626 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.199643306 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.199469269 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.195053907 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.198738012 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199702416 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.198980651 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.196054374 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.197455055 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.199096423 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.198822285 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.200608275 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.205824587 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.197258792 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.201130229 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.201360193 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.199343391 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.198124111 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.199390256 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.201745749 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.198905318 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.207772107 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.214954227 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.199618989 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.207446754 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.212860919 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.19986497 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.202444924 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.200291831 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.197175052 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.202592742 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.208655282 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.198436461 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.200934404 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.20019208 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20000421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200996666 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.205664434 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.197875823 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.199995482 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.201803852 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.20167659 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.198487278 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.201900478 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.201290979 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.202382844 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.203438906 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.201157624 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.201800267 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202048574 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.200877914 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.201527729 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.201648751 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.203748576 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.20856911 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.205633345 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.199739798 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.204331145 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.202252648 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.206129054 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.202906347 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.203142769 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.200727151 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.212139174 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.210779355 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.208241527 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.202374588 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.201884802 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209836362 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.203501424 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.204444118 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.201494314 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.202706501 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.201051586 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.201361223 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.19943935 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202592801 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.20120235 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201443259 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.203101242 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.206301152 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.200719584 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.200983364 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.203347558 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.202130677 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.20254393 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.202506704 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.202782643 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.20543817 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.203005101 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.200978576 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.203562432 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.209707981 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.218235858 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.204906441 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.20243235 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.20365928 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.202460674 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.203729296 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.203149616 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.207135358 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.211970642 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.205719916 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.210506502 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.205351191 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212745383 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.203015247 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.206298705 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.21133996 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.202263734 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.202857899 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.204343273 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.205259962 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.210959182 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.219829015 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.205807019 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.208137167 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.203297269 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.205489308 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.204584999 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.205279057 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.204599146 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.204627723 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212612123 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.220824563 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.207067839 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.205033542 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.201613008 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.20368905 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.204883788 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.203707833 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.207858027 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.203713008 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.206378883 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.203949891 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.205838217 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.20524855 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.20377703 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.204923151 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.201541175 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.205678475 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.209335854 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.220271913 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20858666 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.20454516 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.2130582 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.205209646 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.210529946 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.219256106 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.205428701 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.205035079 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.204885136 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.2061396 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.205464606 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.207180064 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.205437445 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.206900568 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.208371449 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.205144561 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.20797833 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.205977373 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.207530673 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.206123329 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.214075242 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.228074413 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.207790304 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2091049 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.203883113 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.206768206 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.210354291 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.206056279 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.205161251 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.207902712 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.215180435 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.21416168 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.207438578 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.20606917 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.206023478 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.20602153 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.205635172 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.205648124 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.206784424 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.207367158 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.207210762 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.207039629 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.210020209 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.207461342 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.206649732 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.207111554 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.20812186 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.215455376 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.207242946 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.207920091 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.20766532 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.207324399 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.207052233 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.208621523 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.206665613 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.208669983 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.208338763 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.209932503 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.214082577 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.213219173 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.209643722 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.209531968 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.209126326 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.208508619 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.209903803 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.207719962 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.207569963 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.208578396 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.209090953 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.208449681 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.209184711 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.205792442 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.207891714 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.208687091 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.207627393 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20997881 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.216562653 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20955536 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.205815394 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.208922105 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.20791707 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.207606154 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.208503676 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.215474952 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.21224539 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.219332027 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.217317635 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.212646559 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.209689495 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.211533676 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.216532097 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.207975432 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.209554985 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.208670754 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.210459819 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.208079855 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.212515305 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210385882 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.215326532 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.209333047 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.209174979 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.219102287 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.225394582 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.211884656 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.211234929 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.213961719 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.210022018 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.208126024 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.21025794 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.210606305 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.21652411 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.22510071 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.210120307 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.21164705 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.209448327 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.212018798 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.213724526 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210494734 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.211437452 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.208634683 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.210834777 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211626217 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.209817779 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.207657841 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.210078489 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.210989893 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.213207609 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.217285973 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.207096121 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.212405194 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.210620204 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.212788568 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.211094705 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210179346 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.208213348 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.209558464 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.211970435 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211932748 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.211571935 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.213639094 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.21078664 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.212859978 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.211428413 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.213590886 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.213389432 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.221811898 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.218149859 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.20925863 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.21105413 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.212767673 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.214576532 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2104903 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.211311442 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.211890056 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.213901129 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.211308814 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.212031305 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.213495571 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.213205601 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.227506801 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.228423937 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.213447367 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.212305985 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.215190572 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.211902082 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.210353134 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.21386278 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.214655307 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.214753801 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.218787602 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.212817672 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.218868829 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227425475 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.213714852 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.215839201 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.215847096 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.219584676 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.215418392 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.213974354 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.214346287 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.217327217 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.228620522 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.214189272 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.222535931 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240430835 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.227563762 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.21435671 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.214670374 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.213479373 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.213202262 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.215495033 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.214608561 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.213827428 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.214320279 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.214009501 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.214775845 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219296283 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.215849705 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.214068072 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.21508548 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.214097377 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.216879932 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.212329459 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.215023111 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.214845324 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.214644169 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.215017066 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.214234849 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.214651363 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.224056002 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.223287769 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.214265416 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.21503204 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.212589143 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.219040547 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.218219658 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225615202 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.221696764 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.213812772 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.21617226 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.215616125 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.215474088 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.211784074 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.215853767 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.215484504 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214568849 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.213376984 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.226492075 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.222258372 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.21918469 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.215684522 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217013592 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.215530836 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.216817744 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.217247 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.217800814 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.217961655 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.217516731 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.21958082 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.216030983 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.215777043 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.21819407 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.223468247 seconds)
  done (took 723.200146774 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214012316 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214808802 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213457833 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.213350648 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213961484 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.214753327 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214089324 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.212868431 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.213953332 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.214656328 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.213533037 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214314181 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.213521937 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.215213445 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214207979 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.214800537 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215023036 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.213409516 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.214579968 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21447048 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214653115 seconds)
  done (took 26.64624054 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.217189262 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.213763866 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214700768 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217448484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21571354 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216847064 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213174771 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215827895 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216947661 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215171399 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216257919 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217650698 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.214500176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.214839753 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21407374 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218007331 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.21768357 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214623991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.216617535 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216612691 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217769488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.214836893 seconds)
  done (took 27.900552228 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.217760804 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.217533691 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.216927338 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.21489818 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.218466932 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.215859729 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.219619382 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.219046382 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.218855803 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.219375503 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.219258849 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.220692155 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.224328235 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.224633802 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.220489998 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.219930775 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.363260018 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.219753844 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.219210124 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.219131864 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.216015829 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.224324568 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.216486433 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.215779707 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.219317689 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.219721494 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.219226108 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.220050177 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.22027805 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.220266994 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.223131792 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.220821274 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.219613216 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.221811648 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.21876535 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.22055323 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.22358602 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.220770083 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.217335848 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.220409833 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.227657931 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.239418078 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.220332669 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.226310483 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.222052221 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.222838853 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.223845314 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.22733848 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.217833338 seconds)
  done (took 61.107854321 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.220597169 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.220036859 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.217971963 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.220075016 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.220870996 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.219961544 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.220763868 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.220487316 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.219205192 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.218078223 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.219803545 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.21896951 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.2174275 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.221354674 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.22082888 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.218306268 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.219080792 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.218148809 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.218249538 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.218363135 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.219287192 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.221599498 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.221484656 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.219235751 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.221517002 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.218711169 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.218428521 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.220743556 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.218128489 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.21883069 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.222773355 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.222353962 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.222465403 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.219305285 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.219005326 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.221432206 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.222059248 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.219804241 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.221791115 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.220105548 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.222232988 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.222569441 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.221974362 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.222590868 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.220273752 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.218918026 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.219994974 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.220630413 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.220970513 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.222933892 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.223597558 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.219499702 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.223967772 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.220619252 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.223056478 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.222262428 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.220603008 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.21905716 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.221926087 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.221505328 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.219643946 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.223372763 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.220255932 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.223759585 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.222479713 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.22063046 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.220553268 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.223702481 seconds)
  done (took 84.158063486 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.222817693 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.223638366 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223541338 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222846767 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223731044 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.224559784 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223726989 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.223454915 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.223202947 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223757231 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223202332 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.222502778 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.222968862 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.223795126 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.222326782 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223398445 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.224768383 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223516726 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223760232 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223316493 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.224461406 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.224316809 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223690266 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.223734482 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226496915 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.22463334 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22454317 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.225643455 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22466691 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.224167076 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226185668 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.22458416 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.224278053 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.226302967 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.225745601 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.225331802 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.225672136 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225953381 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.226074479 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224532993 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.225391488 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225455203 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226277798 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.226051324 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225755106 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.226012447 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.227165592 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.225932636 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.224266113 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225915963 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.227152913 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226075749 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225274946 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225548618 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.225623889 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.225775191 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227187469 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226817819 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226737717 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.227241148 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227542037 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.225893988 seconds)
  done (took 77.103593423 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226288514 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226319345 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.2229308 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.223925724 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226460012 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222246353 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226450535 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.228278715 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226522444 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.227817965 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227845482 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223889698 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224183846 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22637427 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224328561 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223981314 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225279703 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225214777 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226131102 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224289793 seconds)
  done (took 25.667285605 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.224627122 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.227501944 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.222926871 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224744507 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.226855036 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.225057073 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.22710136 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227368388 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223664325 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228154398 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228459121 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227915263 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225076145 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.225108601 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.227790604 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.227481974 seconds)
  done (took 20.78020295 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.225294511 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.229074681 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.229391803 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.226840766 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.226632016 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.225651579 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.228562753 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.225819 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.226468071 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.229668059 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.22887093 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.229576119 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.228545026 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.227875895 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.226344491 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.229699855 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.226027499 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.226737198 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.228270626 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.229633939 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.227587122 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.226760219 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.229113532 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.228691912 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.226998886 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.227260379 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.227073154 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.225774433 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.227082002 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.229352932 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.226918968 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.226575998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.227078432 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.22726179 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.228397416 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.22751696 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.229239995 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.229730572 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.229396091 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.229310738 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.229435405 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.22792498 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.229328612 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.229801429 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.226632378 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.229527043 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.225918989 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.229063801 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.227400686 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.227602683 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.231351366 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.229838747 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.231582297 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.2295211 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.230963874 seconds)
  done (took 68.710420485 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230546847 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231062271 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.2283203 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23220297 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.23021055 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.227932001 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230973969 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.226923072 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227863669 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.229577744 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.229709039 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.231692585 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229222438 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23017927 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230684606 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230329825 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228070748 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.229763179 seconds)
  done (took 23.298734578 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230710258 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.228662087 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.233361322 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229082362 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.229352066 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231888493 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228041055 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.231900726 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231024329 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228601617 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229415832 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.230508679 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231523151 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.232528405 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228416529 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228719772 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.2317176 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231498244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23046929 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229371506 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232817042 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231716523 seconds)
  done (took 28.236804964 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.230227633 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.230812957 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.245086026 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.268990945 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.258948794 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.231914792 seconds)
  done (took 8.62985388 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231154637 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233367303 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.229498195 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233268071 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230953811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22986106 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229477911 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229837459 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233267001 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230812684 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230507523 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233096697 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232743872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231241169 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232092964 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231991388 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231086826 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231174266 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229511742 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232519198 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231501016 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233466761 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231307984 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2301905 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230234167 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230600555 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233428047 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231484523 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231043803 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233494336 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234064724 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230628039 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234581324 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231820226 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233906283 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233214924 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231953833 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233790367 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235004129 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230751736 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.234711151 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23364279 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233595145 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230603796 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233181963 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231482902 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231332818 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231657244 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232426502 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23364489 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235148436 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231022871 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234110442 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234335311 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234348352 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234824887 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234014595 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231855087 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23403546 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232218883 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232179638 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235666177 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231537737 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232306209 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233940892 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232214574 seconds)
  done (took 82.501509556 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232256774 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.23284948 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230899245 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233897308 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230706928 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232440612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233441203 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232432254 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233766041 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233626074 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234551193 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232247123 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232602801 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232361701 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233726684 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232655146 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234061538 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232805697 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233000635 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237231647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234001575 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232839081 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234738795 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233418604 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233904659 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236994131 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234098053 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234591173 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23294457 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233523541 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234256612 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234379858 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234647135 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.233194197 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235652932 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234567565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232538699 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234353799 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234576524 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237215654 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233675266 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237520621 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23493511 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232809498 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2363991 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234738782 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234323537 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234711345 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236034098 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23576272 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234348732 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23605046 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234415178 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235241502 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234489258 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23370618 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234854004 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234752016 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2353763 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238229083 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235001325 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234759011 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238158568 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235292808 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234937691 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235016799 seconds)
  done (took 82.63382114 seconds)
done (took 1692.649028078 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.301473049 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.319632385 seconds)
  done (took 13.79086184 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.400136564 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.3542889 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.23571072 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.264969709 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.235069273 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.232526302 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.247485493 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.233637916 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.235273193 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.232505971 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.236268041 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.422357243 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.228409595 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.231612931 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.231918332 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.325757556 seconds)
  done (took 41.520678574 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.256161966 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.23732684 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.338973157 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.250729451 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.25984088 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.407965438 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.28727402 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.237302121 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.391739032 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.269108312 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.643361933 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.257786473 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.235737285 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.237100992 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.252106523 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.40988959 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.46066625 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.64271504 seconds)
  done (took 28.241262315 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.638304063 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.256556363 seconds)
  done (took 9.060654453 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.25676188 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.237905378 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.251049189 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.237089022 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.246835397 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.231847507 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.236475914 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.238962243 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.267485296 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.283909392 seconds)
  done (took 63.654876217 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.252300765 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.233688741 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.235060127 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.231203503 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.225235914 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.223474308 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.232328443 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.231134962 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.495568039 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.346189098 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.247125178 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.238780537 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.233117316 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.236276777 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.232156583 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.270461542 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.358968649 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.231202768 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.230878964 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.237360135 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.232225609 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.315171751 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.270755136 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.232315089 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.347638855 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.511901643 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.236592004 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.240361587 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.342885373 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.232190628 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.233249689 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.235896072 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.235467115 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.78024021 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.660546579 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.23988098 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.257071113 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.242810374 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.231144233 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.362648479 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.236193921 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.241109022 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.231352645 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.636057589 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.385256033 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.340641972 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.379215962 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.234357085 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.235337297 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.290675861 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.234112667 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.240089267 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.264387902 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.960682628 seconds)
  done (took 104.741041595 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.272426353 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.724009146 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.396255519 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.245487176 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.991007723 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.820879192 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.227864145 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.485295575 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.276381072 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.227858702 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.557181815 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.695312897 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.233978342 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.249074973 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.898174784 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.232933557 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.226037203 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.981902905 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.227633571 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.23199357 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628850704 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.238974011 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.222564347 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.394138259 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.259581105 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.655811885 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.49506688 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.490391222 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.2223372 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.21916087 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.654347735 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.221147342 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.27333052 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.222119853 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.480280128 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.542743743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.526263735 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.221790125 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.254379632 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.22176286 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.258229703 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.651133267 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.533980375 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.222526648 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.234515686 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.655116616 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.221125325 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.228617645 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.226200213 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.419434572 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.189867553 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.221769419 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.510523919 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.221329018 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.56974415 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.253616881 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.299915294 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.684306232 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.221216119 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.166095427 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.246284422 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.222272025 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.228020852 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.222541323 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.224135048 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.540884867 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.348201274 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.229118144 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.541037632 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.646711886 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.222709244 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.716093423 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.141714462 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.223895486 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.316542751 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.231229609 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.783141235 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.681461452 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.230704879 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.221566594 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.526919185 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.22691694 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.528633488 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.233837793 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.223145317 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.633941436 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.237817327 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.27356153 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.223086439 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.226779211 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.846180814 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.225025139 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.491331338 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.273555454 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.223837099 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.222841938 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.261473262 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.222816462 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.235505299 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.227723304 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.71997228 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.227442485 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.512565231 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.239934278 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.235416275 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.224941542 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.228248892 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.227938498 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.437858983 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.715996719 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.227375843 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.225370844 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.223782016 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.234613922 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.366815296 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.227727598 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.500633547 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.227088868 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224244995 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.226415443 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.840463829 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.244901493 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224283509 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.240118497 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.071417042 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.434241014 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.242049246 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.224832388 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.225090435 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236467203 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.45271106 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.223294241 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.266124997 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.231357455 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.904137694 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227889688 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.252285713 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.835114388 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.22531695 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.11364239 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.247563949 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.225867142 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.522576404 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.48888304 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.27174166 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.225674881 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.226062543 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884475508 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.263655917 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.373957913 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.244143195 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.241323136 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.425015948 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.666329518 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.226252816 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.803192761 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.227581832 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.433412856 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.226559283 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.536508341 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.682271993 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.225246188 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.228137714 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894193343 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.897807114 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.876169836 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.230556777 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.545504081 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.192900169 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.669535893 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.226700009 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.226244304 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.655411339 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.22834582 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.228574688 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.22794388 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.227947662 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.379205623 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.400989173 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.899399697 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.229231374 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.658315527 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.246987361 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.227933584 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.23202932 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.229435228 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.583082067 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.322460025 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.232136118 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.260021113 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.227456162 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.22836445 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.672603621 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.167214301 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.229714525 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.38111275 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.827866372 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.227443799 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.229330149 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.886255491 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.486421352 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.706921089 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.296218042 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.510301165 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.234804476 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.26702747 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.92645485 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.254535694 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.672642977 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.231341331 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.229260175 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.79475013 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.228268442 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.584876153 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.229327152 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.229888405 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.722892904 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.229340913 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.234286007 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.4632111 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.229905216 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473961559 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.23066164 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.244441694 seconds)
  done (took 1085.679929962 seconds)
done (took 1347.860567537 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.231996023 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.232564037 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.217413597 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.231641753 seconds)
  done (took 26.083022488 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.240623548 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.238898938 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.237367005 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.235504173 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.24042595 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.236674618 seconds)
  done (took 8.59746559 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.27336981 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.230803392 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.231312268 seconds)
  done (took 18.903143827 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.436192099 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.424191271 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.575033958 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.251897029 seconds)
  done (took 9.855173067 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.237405928 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.239639008 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.237702168 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.23882291 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.2402071 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.240903826 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.23799729 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.239491279 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.240299684 seconds)
  done (took 12.320185664 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.855000134 seconds)
done (took 81.784131358 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.315427626 seconds)
    (2/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.505752211 seconds)
    (3/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.238583602 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.273689712 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.295793385 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.276349814 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.833442045 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.280371885 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.230724098 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.094491807 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.059410033 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.258795435 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.228505633 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.466679673 seconds)
    (15/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.597157555 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.799790738 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.28202891 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.522213039 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.258311812 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.642424402 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.314638481 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.989635748 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.216636532 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.938515948 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.507585675 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.330840776 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.222862225 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.612124274 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.407774358 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.006756565 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.243214115 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.336543307 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.808435005 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.779072952 seconds)
    (35/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.767839216 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.217659197 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.027094441 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.008078634 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.2473242 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.233903514 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.528202202 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.345122599 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.242446163 seconds)
    (44/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.353264771 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.260853676 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.491062864 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.233818746 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.086024146 seconds)
    (49/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.356387295 seconds)
    (50/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.286905783 seconds)
    (51/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.550477042 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.246542837 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.295351467 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.290307182 seconds)
    (55/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.773274736 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.216889608 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.219478056 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 5.21164455 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.070249925 seconds)
    (60/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.948153429 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.257669381 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.630428689 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.281724731 seconds)
    (64/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.31617202 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.259564712 seconds)
    (66/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.483551959 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.096337346 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.284449617 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.704887508 seconds)
    (70/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.370992904 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.354293083 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.240127906 seconds)
    (73/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.939256329 seconds)
    (74/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.291859497 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.357344995 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.994295414 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.306236382 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.380791593 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.221537902 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.635416242 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.247888195 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.047538353 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.245735772 seconds)
    (84/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.572018838 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.430832905 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.65257033 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.589496189 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.607763132 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.273756621 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.25625835 seconds)
    (91/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.22419399 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.603294401 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.424115058 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.24718871 seconds)
    (95/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.284019714 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.937775045 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.817063284 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.261101447 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.653542826 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.244757186 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.450418765 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.455136955 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.624487586 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.308829164 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.342739504 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.518608099 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.331337352 seconds)
    (108/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.251776117 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.238044615 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.342789051 seconds)
    (111/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.249654502 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.654508938 seconds)
    (113/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.834461687 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.221516039 seconds)
    (115/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.571074979 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.248218252 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.458402698 seconds)
    (118/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.321508441 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.575993742 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 1.757043705 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.256828952 seconds)
    (122/309) benchmarking ("sort", Float64, false)...
    done (took 5.466934367 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.231894367 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.514098084 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.262147944 seconds)
    (126/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.225425658 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.423380585 seconds)
    (128/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.443399452 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.931212997 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.237504679 seconds)
    (131/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.815044013 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.513294524 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.342628577 seconds)
    (134/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.067693782 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.814568793 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.556852607 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.517699366 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.364554868 seconds)
    (139/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.245951103 seconds)
    (140/309) benchmarking ("sort", Int8, false)...
    done (took 4.288009899 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.101457974 seconds)
    (142/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.375870009 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.225456867 seconds)
    (144/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.561917872 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.552203144 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.938091014 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.264447903 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.238595054 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.083123733 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.5427196 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.238295578 seconds)
    (152/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.003678065 seconds)
    (153/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.236718409 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.260244823 seconds)
    (155/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.224400224 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.494073266 seconds)
    (157/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.573380548 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.487840021 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.333938796 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.262434724 seconds)
    (161/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.989725017 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.702581699 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.239251347 seconds)
    (164/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.323612492 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.238844228 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.000679985 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.428348044 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.34385484 seconds)
    (169/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.321502269 seconds)
    (170/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.297211086 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.713905945 seconds)
    (172/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.41130976 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.950349072 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.039191755 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.008540971 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.224900673 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.361196514 seconds)
    (178/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.723224458 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.837230503 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.248389087 seconds)
    (181/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.421833462 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.268169834 seconds)
    (183/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.52750134 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.492944916 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.261963531 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.240676288 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.282318671 seconds)
    (188/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.526293911 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.224631379 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.925612333 seconds)
    (191/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.307557095 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.832881297 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.252895007 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.536021029 seconds)
    (195/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.263958357 seconds)
    (196/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.322014867 seconds)
    (197/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.360531676 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.29752921 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.438948905 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.253669139 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.240140547 seconds)
    (202/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.320369441 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.374653061 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.519682935 seconds)
    (205/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.901442185 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.637402562 seconds)
    (207/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.266861947 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.327466983 seconds)
    (209/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.730473462 seconds)
    (210/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.265602426 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.866637458 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.449150682 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.649611219 seconds)
    (214/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.820209891 seconds)
    (215/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.422943602 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.572439105 seconds)
    (217/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.60669535 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.263359838 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.243096332 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.012087881 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.240742556 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.782179565 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.26177316 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.28530923 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.957280473 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.266958007 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.029233657 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.632106856 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.25374633 seconds)
    (230/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.764106621 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.241261133 seconds)
    (232/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.247200745 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.256730275 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.243028026 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.241246561 seconds)
    (236/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.593662208 seconds)
    (237/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.276419593 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.580774296 seconds)
    (239/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.93460955 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.931975385 seconds)
    (241/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.414573026 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.777403321 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.255457851 seconds)
    (244/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.753257444 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.349380265 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.24271352 seconds)
    (247/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.770280928 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.32847454 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.402473157 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.794648563 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.257593291 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.272872876 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.366570746 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.443203592 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.543418295 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.775228139 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.483855449 seconds)
    (258/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.337114606 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.269369056 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.349489266 seconds)
    (261/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.825931211 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.269382034 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.624265544 seconds)
    (264/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.581652095 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.243036099 seconds)
    (266/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.436904647 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.320089815 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.26035123 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.248038558 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.25784571 seconds)
    (271/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.437499758 seconds)
    (272/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.513622553 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.418755907 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.26779527 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.245747682 seconds)
    (276/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.416449966 seconds)
    (277/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.268765503 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.847647502 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.861537158 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.325937628 seconds)
    (281/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.378913399 seconds)
    (282/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.605610828 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.234523464 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.32468631 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.37128984 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.944669617 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.35414322 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.270437639 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.49622386 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.305836888 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.957699566 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.530496189 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.964463391 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.442112311 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.714242305 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.317963568 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.285570489 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.570317581 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.802525077 seconds)
    (300/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.249694848 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.026450995 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.549402936 seconds)
    (303/309) benchmarking ("sort", BigInt, false)...
    done (took 6.244801699 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.859482984 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.2659563 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.440268662 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.2592434 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.234908156 seconds)
    (309/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.803608761 seconds)
  done (took 881.793571751 seconds)
done (took 882.965856064 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.275935506 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.272153546 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.255185779 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.277202737 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.36752239 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.284108526 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.2674474 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.25753515 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.303612971 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.305311629 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.25640349 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.283654314 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.257946289 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.256295292 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.257209853 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.271277958 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.222353089 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.256381551 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.271982735 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.266418849 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.274246015 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.25597778 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.305924513 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.283499852 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.259836391 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.259145784 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.260363192 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.276588645 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.367129095 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.260085599 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.260554652 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.268476822 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.220579597 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.252975685 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.251055702 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.276816089 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.271275135 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.267968548 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.260723649 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.289938521 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.605098986 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.255814538 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.260195417 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.257373742 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.258481492 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.263228865 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.2588811 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.264273418 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.27146009 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.272695831 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.608817657 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.273578731 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.26059196 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.257606793 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.271608625 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.259217969 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.261931107 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27365949 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.279807067 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.275420439 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.21427065 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.262395887 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.260700732 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.276446504 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.267743642 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.622394212 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.254722678 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.264615069 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.600557636 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.262757393 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.656471891 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.26751065 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.261512833 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.272570071 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.292652142 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.226749614 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.252070103 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.260427619 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.266996886 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.257024252 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.269409785 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27256648 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.263512155 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.2619328 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.272603594 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.285878478 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.269486156 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.259995607 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.268110028 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.277880881 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.267014676 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.272071896 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.261359303 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.256146103 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.269983663 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.264627805 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.263978842 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.264078745 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.265498565 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.272549463 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.610446807 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276281822 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.256289585 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.25577116 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.260193357 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.274197532 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.614445096 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.26048932 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.279717104 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.309731771 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.262369272 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.214396442 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.26391558 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277552828 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.27265161 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.2635709 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.257170215 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.216825789 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.618996268 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.273995476 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.263699753 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.259272528 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.277584808 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.262383796 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.259376747 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.232235155 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.261273211 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275775994 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.383035618 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.27152158 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.295356892 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.260966069 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.266310249 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.292283671 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.279819061 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.294248052 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.264782126 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.277821736 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.280083181 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.259207455 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.275250151 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.274187037 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.264596556 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.268995012 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.25729487 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.291856413 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.27654889 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.275766959 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.284527352 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.384765163 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.262003946 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.215631003 seconds)
done (took 212.896843467 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.320525926 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.256793505 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.351935009 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.259045993 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.359651687 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.36882084 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.256325986 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.257597509 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.256310633 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.636369299 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.257321945 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.257787112 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.254980274 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.259459211 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.340327922 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.260370139 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.25740096 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.625982749 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.260498103 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.329077852 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.258110402 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.257671846 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.261222094 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.670006081 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.261365951 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.25665721 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.345484038 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.260117866 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.6058393 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.256764119 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.255682173 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.630348742 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.368354307 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.276882036 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.268817346 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.268810682 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.369375467 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.274668336 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.354824843 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.340934497 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.36158599 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.299174525 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.254031418 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.26034651 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.263617533 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.262183497 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.2587184 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.287152968 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.260494418 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.258949182 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.600290237 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.27184858 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.260504546 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.259039234 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.259882176 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.290296175 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.259490525 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.262084073 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.351393185 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.261292642 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.341186181 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.641297773 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.669171916 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.261647249 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.262340988 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.260602746 seconds)
  done (took 143.736569311 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.329534073 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.333632891 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.369942058 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.262999827 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.312093396 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.373298997 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.263555112 seconds)
  done (took 10.435729956 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.269329125 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.264215238 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.312477427 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.312869827 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.264584332 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.411882075 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.261542408 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.274926645 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.259437077 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.314928803 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.263561589 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.262609881 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.268456175 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.263197222 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.312143252 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.275273678 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.378401931 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.264058346 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.262077635 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.415738207 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.261956514 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.268632408 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.313937147 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.273491211 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.262914905 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.268937716 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.833273707 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.262164961 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.26025502 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.263404204 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.261005895 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.301400892 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.263564019 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.260714206 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.261716941 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378536086 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.262333782 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.260643254 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.262675713 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.26123405 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.265637127 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.263038365 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.264552402 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.261127276 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.262414455 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.287987735 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.261216563 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.265853486 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.264835408 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.264114251 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.314385899 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.265701391 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.262311421 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.262469908 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.320779985 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.269284348 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.265000533 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.262587333 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.265644394 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.262178694 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.416912533 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.314684778 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.264321844 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.313547947 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.263884086 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.264673672 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.263997929 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.265417252 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.322665268 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.26451998 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.312201703 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.261480022 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.420622882 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.289097097 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.266831909 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.269252758 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.267336523 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.265391345 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.263730038 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.271358124 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.262134004 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.266396295 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.270624102 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.262290449 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.26543292 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367675865 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373565461 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.262733439 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.278450289 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.273143323 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.263096492 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.319794459 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.267570775 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.264100121 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.318993103 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.380370974 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.31920153 seconds)
  done (took 146.417873309 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.269995527 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.274611579 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.26669473 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.281749185 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.26745179 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.264714938 seconds)
  done (took 8.820511603 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.269086813 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.267108176 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.265723397 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.266359357 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.268837832 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.266339302 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.267389911 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.267988828 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.270312403 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.267280616 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.268520832 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.26833548 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.267461956 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.268373969 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.266477943 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.267453626 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.269717435 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.267060439 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.267275304 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.267194528 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.361493624 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.26840481 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.268512921 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.269687478 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.271681673 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.267746136 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.275919109 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.26700372 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.268641544 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.273938238 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.271765174 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.269404951 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.270399827 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.274424353 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.271675956 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.269716393 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.271043036 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.269539089 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.266677118 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.269487674 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.268971735 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.267271391 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.269477646 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.269489608 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.269408073 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.27234428 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.271320647 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.276613225 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.270602868 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.2714257 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.269499773 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.267348677 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.269659183 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.271155321 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.272361535 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.273803979 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.272870432 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.270972137 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.270936849 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.269888749 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.270079962 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.270998056 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.272315208 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.272773028 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.276334995 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.271423485 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.270937462 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.273206078 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.270505746 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.268508711 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.269562704 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.266014901 seconds)
  done (took 93.716268367 seconds)
done (took 404.317187296 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.481632036 seconds)
  done (took 7.679252986 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.268649208 seconds)
  done (took 7.467963579 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.557594325 seconds)
  done (took 20.765983014 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.314094454 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.298866573 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.292243593 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.270977661 seconds)
  done (took 26.378662698 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.450795982 seconds)
  done (took 7.65217941 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.263613351 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.283715668 seconds)
  done (took 13.748909337 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.647204038 seconds)
  done (took 7.84668893 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.394972505 seconds)
  done (took 7.60499172 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.290342792 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.271796695 seconds)
  done (took 13.999984624 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.24805183 seconds)
  done (took 7.448435805 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.323459838 seconds)
  done (took 8.524370924 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.275888859 seconds)
  done (took 7.475852905 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.281154709 seconds)
  done (took 7.48361851 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.884154762 seconds)
  done (took 9.085163517 seconds)
done (took 154.362957013 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.264542794 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.264717473 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.261788115 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.262068389 seconds)
  done (took 26.251802758 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.30570093 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.306857418 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.306972086 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.315480805 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.308133376 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.303933043 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.296169794 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.297060343 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.315936791 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.306615365 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.305931924 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.306165902 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.302615518 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.296148071 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.306437469 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.30563963 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.315616358 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.307221199 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.297669636 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.309104289 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.271987163 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.31637212 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.308131295 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.27188507 seconds)
  done (took 32.484552241 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.468815951 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.343649585 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.424664845 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.323056646 seconds)
  done (took 6.760662662 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.324517372 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.326870914 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.335178364 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.375568378 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.401743181 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.333430756 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.298738865 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.294987293 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.279002894 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.325525231 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.400873296 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.339991509 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.407616154 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.272545494 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.459380519 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.273783302 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.272983745 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.325554755 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.377131692 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.396118397 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.273236838 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.325949154 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.328474812 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.343375572 seconds)
  done (took 33.294902279 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.270488678 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.279676186 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.278195811 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.270518848 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.272519754 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.272422735 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.277254851 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.273569403 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.294021621 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.273650622 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.270879557 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.272191603 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.272626488 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.273253163 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.274095895 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.284848506 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.286697762 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.273634538 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.274859644 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.279562211 seconds)
  done (took 26.72741118 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.267205447 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.118775628 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.617174165 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.520716544 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.265773119 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.269346328 seconds)
  done (took 27.262976858 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.339201801 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.464384639 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.271501245 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.604279831 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.676105148 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.273627039 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.273252837 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.501069288 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.780032762 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.776485853 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.324281343 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.335146722 seconds)
  done (took 18.824164982 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.27254972 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.269366304 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.276607641 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.285375132 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.325686766 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.27877195 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.281244505 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.267573656 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.327263412 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.329845124 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.277181667 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.327788457 seconds)
  done (took 36.727057485 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358203203 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32011405 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.098810738 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062702459 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413587173 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.479282776 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.032468832 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.72610241 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.274692921 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543014705 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.227382661 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37056074 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.526056485 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285458751 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271641366 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.212957993 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496037966 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744575826 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271491605 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.096187123 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296202468 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270960596 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.190821361 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.297255474 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483579928 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.248221649 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.532664097 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.044890593 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539960541 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.282289459 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281831691 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271863383 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544395681 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898188891 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366182202 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282774346 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.035536492 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.897489174 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.258051544 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.09341547 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.022948008 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.273447937 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279637389 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269700639 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.206388568 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.277411256 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733333803 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.277812401 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.984039081 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273412149 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281280971 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366710186 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.277268983 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.26327471 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388291495 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275280595 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.27039799 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278874021 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840287371 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.592080132 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28324829 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.20509495 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.714990949 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.103339633 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887578463 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.37396873 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.276291496 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.278038721 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206736716 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.157984804 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290414446 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420151297 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.298178045 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92367822 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963418266 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.281150687 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203595607 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808391121 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273415202 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.206508506 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500569524 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048361395 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211717398 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.226709244 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.207860799 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93890841 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282583294 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.584523426 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.28138988 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.73103475 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.285862203 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288993681 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298242924 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.498121842 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.158323187 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274262826 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.00947711 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413390602 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295500678 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.733586239 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208798814 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.276084898 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529133688 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.484086031 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28021584 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.214730499 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485814431 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282805333 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.288323254 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.287486992 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.283675789 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.848455195 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285810457 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.587272525 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291227328 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.049304252 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976382653 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27550563 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.374938211 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.265976656 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523135649 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.001181796 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174802817 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343547597 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28052751 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.274517908 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.206582236 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1239215 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.181385894 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.277532245 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283070293 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.285137208 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.275210202 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225158547 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.270625594 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291845352 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.053770214 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.499599068 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.274795424 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55141066 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212345311 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424309918 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284125672 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.496857877 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.424462585 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.273796414 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534139474 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276203309 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278757192 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288193421 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295857042 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374506579 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297794594 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.276854514 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.533350242 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.279731522 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.280211896 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.202256662 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.05745159 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277448156 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.281656646 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.179758682 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851825943 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256362767 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.279362677 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165717709 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.289656007 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345201513 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.284979807 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.287145136 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.979417839 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.159760521 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.282600352 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.275399921 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500306782 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288431943 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.204039957 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359840011 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.483014049 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.858929146 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290377354 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.212329076 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.987282542 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.972234458 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279291693 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.46674629 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.278891084 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286549046 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289919446 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.848514545 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.857177842 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280915234 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.11571483 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.28544524 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289201102 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.285916524 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279129361 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.956148257 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.614399231 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296087821 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.289801593 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422492928 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.29343155 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.214331524 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.794907638 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283792844 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.279661457 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.056429246 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313606886 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.123086498 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.765775641 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537398799 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.032786034 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.291697451 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.296610121 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.307489986 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.282746208 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.099979453 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29531604 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.297343499 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285887844 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.290564591 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.18273917 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.719582116 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844914064 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992236095 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802967905 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166011102 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.284588692 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.173228012 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.743597083 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213836714 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.934989392 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.458786547 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.743359233 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224278967 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487138324 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.425068577 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999463997 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290387637 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508874468 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163923856 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.107923301 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302611078 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493981735 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315466864 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.287561752 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208759156 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.56601096 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546339993 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.053356058 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362376701 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742201122 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.050395374 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.068087182 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.280775406 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557910891 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446634064 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.827044252 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.668552623 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.281791867 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.288419334 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763248309 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.283823012 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.807158318 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904170082 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.284416604 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.489420849 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218219251 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.291418348 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.291298651 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.282862961 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.469715093 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.280192409 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.537611751 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.2933175 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217210641 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.282041323 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810962286 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.141718913 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.28883304 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283521582 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987302126 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.283400923 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552690744 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.297289654 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.943329053 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288294573 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.214893418 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216961437 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.977354556 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.282907704 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259966886 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759771902 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.703480698 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.380039207 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314216078 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128662572 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.539376097 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.297344998 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.865040015 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506641221 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.137589124 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305210238 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.384555989 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.161298435 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.281256613 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.18233043 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.518049021 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186783662 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.505964735 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.128653316 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.189985921 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.281936416 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.494572871 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.186581139 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.295312335 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517230617 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.99413793 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.289351493 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980729756 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307656897 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.291922509 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.29437457 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.725197945 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.290857539 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354292629 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294463928 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.295045283 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.293333321 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450874022 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295911295 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285609164 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.298837634 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379417043 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.64207781 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.96820519 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.057984966 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872389819 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008488491 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.870031788 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296809688 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.284332845 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286553654 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219831172 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432522267 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.811006248 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559862743 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415453711 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.787042854 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306987165 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.160812757 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30788201 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496267785 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559137873 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.154208653 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286711329 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.944703839 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.167912395 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296391009 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.498184216 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767553664 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827070952 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405982184 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.287552181 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.745432308 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562019292 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.377582152 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287291528 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.878750968 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.299740869 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.569471627 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.29253918 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291379387 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432453921 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297412031 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918936865 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.294860221 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.441967381 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.061383993 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.156761494 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.542727936 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.719089953 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.296630404 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875521255 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.988408567 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54863863 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356494667 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298731902 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.38991685 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43382508 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.284240514 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.16777857 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288359895 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131970518 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.997345805 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.297516985 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879267302 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553105854 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.286393315 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.289179593 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310078473 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.297622368 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.5125117 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96360072 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513064708 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.297280903 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.289363755 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.858531971 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886373963 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301436208 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224297833 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.289436435 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521608029 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.524408362 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313412256 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.739789365 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.999978224 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830366982 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.259044238 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309793067 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29080132 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.992389231 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87534359 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.979078115 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765528222 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.945444073 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290748631 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563088036 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.293157469 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295006213 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564720126 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.293766433 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.299621497 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301686617 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.875134944 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.021233713 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.302677246 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.175026303 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.228325554 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.515275421 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992107002 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224471392 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289422404 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.472961665 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.290463009 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420327371 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301959631 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.2907265 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299234177 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.024499742 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56971731 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.295372555 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.278199801 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.210901224 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.3012614 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298949477 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560114106 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293583706 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.963276615 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.639141746 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549150729 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.304254211 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.278732614 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.295076835 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292041418 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009000761 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.260967769 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.87687457 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832536033 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.300803363 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.302612011 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295913397 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.509074102 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50265604 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.293166587 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315873821 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306612109 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.307736372 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.198765597 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.060648482 seconds)
  done (took 1554.441639099 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.305785923 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.310812341 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.307705444 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.331962398 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.335746576 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.32662186 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.384801255 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.321293293 seconds)
  done (took 51.851522489 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.299280489 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.441436407 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.319787934 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.292365513 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.30063388 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.29851915 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.73221978 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.305176367 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.300781017 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.301925868 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.303190271 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.292146962 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.933911725 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.30231028 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.306822235 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.284097907 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.30200531 seconds)
  done (took 64.550312262 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.303031676 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.623138223 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.382054391 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.295285586 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.015841893 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.292867817 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.669309102 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.326393516 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.291176676 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.365570052 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.939923995 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.338073533 seconds)
  done (took 83.070267922 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.301458721 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.302216969 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.30215529 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.302596057 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.302583729 seconds)
  done (took 7.739889833 seconds)
done (took 1971.190429036 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.63484068 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.959124086 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.901709825 seconds)
  done (took 5.090161414 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.441625745 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.490498449 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.612223073 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.616439804 seconds)
  done (took 7.389206983 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.582012387 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.663457126 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.483447466 seconds)
  done (took 5.958303578 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.62260482 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.320176352 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.414222856 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.292951577 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.291960817 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.296393775 seconds)
  done (took 20.110859248 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.301435994 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.30468686 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.30041398 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.303926699 seconds)
  done (took 6.441175261 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.28319693 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.0017484 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.283035344 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.294444441 seconds)
  done (took 18.093924294 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.045562913 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.056838106 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.042538977 seconds)
  done (took 7.37510125 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.295188962 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.136647197 seconds)
  done (took 9.661444369 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.580904525 seconds)
  done (took 2.810356762 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.430603228 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.622450568 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.363092157 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.234857934 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.391651332 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.91046419 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.819188185 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.443314953 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.218999341 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.310962642 seconds)
  done (took 26.977900665 seconds)
done (took 123.129654722 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.92272305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.292841124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.501568999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.894613243 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.527640994 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.500007866 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.513914511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.863119378 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.403681046 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.393669092 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.900735706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.528936662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.461785135 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.54472531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.463744175 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.538617848 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.539960051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.967542821 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.586609529 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.781686288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.516178385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.533778362 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.728331973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.5535391 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.531509017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.452261034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.112735559 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.539502839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.757447684 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.135971097 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.479819049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.955559604 seconds)
  done (took 188.657996765 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.298753838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.297346388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.29582835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.311098706 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.30136695 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.30852948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.297902057 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.313061579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.299388848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.301174915 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.305933047 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.29823691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.300042226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.300701833 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.310090461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.309401063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.296398662 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.309004676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.298097679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.297612469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.30041658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.30919513 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.316987185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.29742249 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.29851254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.309931549 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.308791155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.298685063 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.297010618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.299841366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.298053479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.310956029 seconds)
  done (took 202.930718584 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.297320952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.320520212 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.298125931 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.305596284 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.298594291 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.299945877 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.29928281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.297380551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.305699188 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.298678462 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.296827278 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.299955988 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.301095268 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.310712932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.301128224 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.298591145 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.314469723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.310725339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.298191786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.311647499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.302990391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.298879662 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.298784515 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.304878902 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.299712509 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.299954999 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.304992566 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.299480784 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.309955168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.314065002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.300022424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.3005199 seconds)
  done (took 202.934866882 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.503228676 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.308449033 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.308396994 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.265808377 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.309389906 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.307322176 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.301543654 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.49593303 seconds)
  done (took 14.034560519 seconds)
done (took 609.788978942 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.549009223 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.248793334 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.504139998 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.327299975 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.048306613 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.33033184 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.328288174 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.488971788 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.225430043 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.490660771 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.529262973 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.325483187 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.664488081 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.325165417 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.565550151 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.422113012 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.172721708 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.281093574 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.627513545 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.793926174 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.576163377 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.724481382 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.489495073 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.246504706 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.664419019 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.725704705 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.970744785 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.169163316 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.326729787 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.633262508 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.902582402 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.223174346 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.379488371 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.365447035 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.419058749 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.402797798 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.192376251 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.362348653 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.507687883 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.489122749 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.803351668 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.041904415 seconds)
  done (took 89.100013918 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.296290948 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.296782904 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.297023044 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.298566487 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.300074052 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.29685767 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.297900582 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.296700055 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.297371439 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.298883812 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.297844067 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.299899357 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.29783223 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.300415439 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.299080573 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.299957363 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.29874746 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.299816631 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.298906723 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.297899675 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.299882597 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.29780665 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.297725494 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.298804025 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.2992314 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.298562006 seconds)
  done (took 34.999516868 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.3129201 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.552089721 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.712695909 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.315714224 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.311311846 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.315687056 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.384529705 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.312798316 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.315790471 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.314556438 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.462075196 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.312739246 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.343957935 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.733551836 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.31237815 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.311733465 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.311542043 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.31086288 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.558578272 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.320382833 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.398431107 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.313832915 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.385290443 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.320915773 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.328465504 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.313100834 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.317857083 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.827729528 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.315948164 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.463837078 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.043761562 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.382208355 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.779328068 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.724426455 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.044808015 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.315817965 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.313909602 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.468706945 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.312538084 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.313474779 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.384493912 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.312112113 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.724748228 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.927318207 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.326311719 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.311648996 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.846967406 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.465004185 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.541998947 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.322640148 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.741180328 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.317287914 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.316287292 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.314049276 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.541091831 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.321302876 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.313291063 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.836312391 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.329757433 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.385532074 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.313532709 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.316032204 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.568656561 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.315258145 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.556229469 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.315182667 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.321543855 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.316276983 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.724877953 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.316032963 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.951156273 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.328894447 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.316660935 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.464697956 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.555092428 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.875852601 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.318017557 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.573364941 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.790420708 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.384611983 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.319176478 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.815743572 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.389591569 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.319195774 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.316679184 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.31758642 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.317260549 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.362807015 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.38573199 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.868409827 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.941776611 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.847226979 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.400826896 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.327704837 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.315254077 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.836609493 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.329809753 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.317042938 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.722892188 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.947155225 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.327687738 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.324111044 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.936095155 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.326885666 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.388936485 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.320067779 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.730445366 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.316000087 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.363327463 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.316112347 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.321686069 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.318051253 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.389287266 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.321166569 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.317440096 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.920483733 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.481757136 seconds)
  done (took 172.772844991 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.310527345 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.323964437 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.311036705 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.309411436 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.311761664 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.317276322 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.310821659 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.309910737 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.317129171 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.310357804 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.309828278 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.311800088 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.311279177 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.324685471 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.318038971 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.316401658 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.965728585 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.310191543 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.309337845 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.32101402 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.0949604 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.314124596 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.31112134 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.309812933 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.313706529 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.31434884 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.316483364 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.327538057 seconds)
  done (took 151.477527336 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.317141555 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.848388383 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.31723211 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.441345268 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.333432147 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.31428689 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.437810157 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.370900198 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.317897454 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.314668695 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.315265767 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.601010611 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.319599056 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.79794255 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.490819869 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.441512318 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.796747751 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.318985593 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.315685592 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.315264583 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.441702722 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.322263404 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.60263645 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.850470396 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.318419486 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.84765228 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.305801667 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.318411996 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.317953458 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.850327157 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.3175921 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.602216419 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.390068021 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.375278275 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.849157748 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.799773095 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.80120724 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.452368607 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.318188722 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.31795122 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.317716758 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.306812961 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.856791024 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.320042256 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.319532271 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.851945753 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.333900962 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.321486271 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.328417171 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.318756286 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.373539672 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.375150721 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.608141998 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.861357646 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.391587867 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.340442487 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.443298089 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.698701431 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.32247759 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.800844047 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.306131149 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.85919849 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.324703257 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.307943797 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.321483912 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.323715616 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.459617744 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.441994382 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.803138218 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.321048172 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.801709959 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.4586473 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.317285817 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.318857168 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.322170453 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.859145449 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.805813366 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.458891832 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.445888092 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.499492403 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.309291249 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.321610002 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.308953814 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.391097095 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.317657638 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.85589615 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.802877774 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.321238411 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.322342451 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.323163157 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.324205971 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.48568818 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.858720483 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.393842352 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.797664833 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.618043403 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.608004725 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.32085053 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.375969015 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.320733194 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.611677218 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.321230435 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.374413245 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.763326086 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.61129052 seconds)
  done (took 156.684809339 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.55873062 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.42872187 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.410447215 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.429079654 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.893741815 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.866497254 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.542690796 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.448451848 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.421482712 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.553674846 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.421750827 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.410391543 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.488044014 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.393257921 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.010440375 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.384303534 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.408523319 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.444876893 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.411521079 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.302482931 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.918664191 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.597834717 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.482893094 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.160636471 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.412492732 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.042065007 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.850014959 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.888611031 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.483562834 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.553211402 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.864810296 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.391379575 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.222451538 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.966442618 seconds)
  done (took 63.315690091 seconds)
done (took 669.587593059 seconds)
SAVING RESULT...
DONE!
