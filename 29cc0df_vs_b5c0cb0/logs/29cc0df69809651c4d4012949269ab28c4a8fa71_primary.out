cset: moving following pidspec: 12081
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.676200718 seconds)
loading group "string"... done (took 0.583223172 seconds)
loading group "linalg"... done (took 9.793973586 seconds)
loading group "parallel"... done (took 0.185658188 seconds)
loading group "find"... done (took 1.666657627 seconds)
loading group "tuple"... done (took 2.214991976 seconds)
loading group "dates"... done (took 1.522603314 seconds)
loading group "micro"... done (took 0.221099777 seconds)
loading group "io"... done (took 0.631028233 seconds)
loading group "scalar"... done (took 48.696334648 seconds)
loading group "sparse"... done (took 14.684009946 seconds)
loading group "broadcast"... done (took 1.287106541 seconds)
loading group "union"... done (took 11.814711964 seconds)
loading group "simd"... done (took 2.827886825 seconds)
loading group "random"... done (took 11.066949136 seconds)
loading group "problem"... done (took 1832.952208589 seconds)
loading group "array"... done (took 26.148099847 seconds)
loading group "misc"... done (took 1.209148012 seconds)
loading group "sort"... done (took 4.057616929 seconds)
loading group "collection"... done (took 20.781558283 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.782905537 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.154425646 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.263152665 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.368975152 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.254368127 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154681961 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.172007666 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.667229797 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.077373743 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.235074852 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151897171 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.604136237 seconds)
done (took 6.580539472 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262750706 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.340728774 seconds)
    (2/2) benchmarking "String"...
    done (took 0.176308903 seconds)
  done (took 1.148529855 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.091448115 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.186718886 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111017578 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097737492 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112358719 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112310203 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.11225143 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111702214 seconds)
  done (took 1.478645439 seconds)
done (took 3.623134433 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.54855847 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.897039166 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.549093954 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.163314523 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.324076696 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.434955569 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.347331391 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.20647268 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.1084378 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.107294375 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179203038 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.427298128 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.476129535 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.048804732 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104058688 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094732916 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.13163891 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.792163947 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077882388 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.132504729 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.585165264 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.221125413 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11048912 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.116392731 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.197478545 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.117297786 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179012445 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103074459 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.658837603 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130316283 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.20372018 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097006546 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160141857 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.247927532 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.229648528 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107518561 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679889172 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201499324 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100067929 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10194424 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679853271 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.129801403 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.166141188 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104644567 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090928547 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.190554744 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116710006 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093095072 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.114730574 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088306539 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16739762 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.468539516 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.089863615 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171784825 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.088670679 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69581191 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099861245 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.287765391 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.13466107 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103995374 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.072540518 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.102879704 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157158962 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.107065567 seconds)
  done (took 20.902667289 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.16268618 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168797976 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092083981 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142359407 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144263738 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094623428 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081228061 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092491174 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128471097 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240217716 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141204344 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.172607076 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087914617 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084257322 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146695281 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253669293 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122436947 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105720276 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101168142 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10459147 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125596 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112397229 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109141347 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094086924 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.186831773 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204887076 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109078155 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122181555 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099235592 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115566964 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138625692 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149424119 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090866484 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081758164 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187948152 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119798775 seconds)
  done (took 5.368730802 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.231319759 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125170015 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.242261383 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.181250257 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149872499 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168585725 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.160479085 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.308849258 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.264068753 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175673022 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112570547 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112261204 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092069158 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08488553 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093826684 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.694625904 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.139571576 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.182217181 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.170209242 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103224713 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.0882524 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385951092 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100146877 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079871789 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102727421 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.074412609 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.226974918 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102797316 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.250264621 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.080664785 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107267355 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128523166 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19699946 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.211900991 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136605378 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128674782 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104421485 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096864152 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223858915 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11071311 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077782603 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.134063218 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131914028 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137037453 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096799861 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095398538 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.242587001 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081960194 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121750445 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.154954813 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.21020503 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.119639438 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098641969 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.340119041 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114759125 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087108915 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098313349 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.312442761 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131195313 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079844249 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095167486 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08469584 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09373443 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430917709 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109457524 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.836595815 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096549957 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16901365 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099668215 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106315179 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083187668 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101053477 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117092947 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080553579 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096510353 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075452281 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096783059 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075724133 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101400959 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118867982 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085092508 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095976102 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155939946 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09523696 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115287444 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122905461 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084446364 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095606417 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124964021 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080202057 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099300246 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.175040488 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104193028 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103427075 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100984382 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142843195 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098547595 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.217132329 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079384288 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12546637 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099568118 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112231091 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11534833 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096140177 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081961787 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.0984714 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096490514 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077073603 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095314962 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145768406 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094451731 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080012576 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100314013 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110613294 seconds)
  done (took 24.185822321 seconds)
done (took 51.088697682 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.584336814 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.125568411 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.123081208 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.122561875 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104749109 seconds)
  done (took 1.778890538 seconds)
done (took 2.465950586 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.396852332 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193115594 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.128733376 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192306376 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.105531552 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197667972 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.20026348 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101934775 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.229278332 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098931917 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189937443 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099201734 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08940666 seconds)
  done (took 2.944552427 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098419167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.132983164 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097862036 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115114757 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075084715 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113628617 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110255652 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113704913 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112430136 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088608719 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095687372 seconds)
  done (took 1.839581374 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096010323 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.123834445 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085129172 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110616749 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07697047 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111326573 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09267712 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.126639625 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110720422 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090641944 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093961897 seconds)
  done (took 1.804291659 seconds)
done (took 7.269464459 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.220978296 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.003889747 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146808614 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.200036552 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.376847054 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.24978944 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.642622073 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.16386675 seconds)
  done (took 12.904764504 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.18151342 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082504835 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102472455 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101096219 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086545263 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101169812 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084243063 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098785105 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085088545 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100920254 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083826763 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099907976 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084770465 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098559914 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098160675 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084629984 seconds)
  done (took 2.332973099 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.125119194 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124229939 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108853329 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11167011 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088148284 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107525961 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107278467 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091811388 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103432931 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088001369 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111573437 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107946489 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.092289472 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.102932178 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107106075 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.096334534 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.103180811 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092937727 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109549595 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108532128 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094796638 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105334619 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108597972 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096188666 seconds)
  done (took 3.297975867 seconds)
done (took 19.222873541 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.179873898 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099302051 seconds)
  done (took 0.973403208 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.152092842 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153443712 seconds)
  done (took 1.005060743 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113598435 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09773397 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142048986 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117288143 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082898557 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097088164 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.136018457 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08336747 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097969377 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08234228 seconds)
  done (took 1.75237216 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088553104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10334557 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.096066575 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.149678658 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113337256 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104656268 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088435615 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103271186 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.090158401 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.101065978 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.109186215 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123173028 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088665541 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123064076 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100837512 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091604453 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109980732 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106423335 seconds)
  done (took 2.595432187 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083337531 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101385018 seconds)
  done (took 0.887758094 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088765606 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100200582 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089594351 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103735064 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08276396 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.099213108 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099450604 seconds)
  done (took 1.366541158 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.586532884 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.28023395 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.387591624 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.123076725 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144497727 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.405634693 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142590648 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.114699835 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097333175 seconds)
  done (took 3.026664777 seconds)
done (took 12.308218865 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091066633 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.227654037 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.703029519 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.106214829 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.100321106 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.141431792 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.327686054 seconds)
done (took 2.40804445 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355630076 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.160452425 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090796252 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097516876 seconds)
  done (took 1.407859094 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077978541 seconds)
    (2/2) benchmarking "read"...
    done (took 0.1085589 seconds)
  done (took 0.894156323 seconds)
done (took 3.019671798 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080876395 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.13572029 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079850548 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098336737 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080598169 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099088893 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.080333871 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098168855 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080715216 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096570862 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079948669 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.095615857 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08158351 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.0963067 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081225357 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095242796 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081039087 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09574378 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080340694 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097077445 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079829163 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095694904 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081342613 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095340482 seconds)
  done (took 2.915239743 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107083848 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101508855 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103403025 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087391529 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106197798 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08830916 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103689158 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09964351 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088060757 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099838948 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088852379 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103474662 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101491689 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089803318 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099185409 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088299054 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104006311 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100304534 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083187719 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104689115 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086817491 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100101931 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103896364 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088426146 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103810694 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105586346 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084108033 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099556692 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086952836 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.10424803 seconds)
  done (took 3.621992458 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090881387 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093413667 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080476377 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104165772 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07812349 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098426178 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077657832 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095187564 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083637107 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096957912 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084543103 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097509855 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078827963 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099225735 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.084138548 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102286465 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092949836 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.09514257 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078536526 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099894074 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083748203 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094917891 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081721045 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.098284871 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080661367 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094616234 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081316179 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.097290179 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083682398 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097310446 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083393265 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.101781062 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083215947 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.108576191 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085163595 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097677945 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08609029 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094531864 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.083538509 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09459054 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077737084 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097885726 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077903857 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106090851 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082909947 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098476853 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080058172 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.102176118 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082113053 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102339373 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093297594 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079958918 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100982125 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084040998 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100967241 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079212766 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098506586 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0788765 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099209604 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082094781 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09468762 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078534412 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101982686 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083744458 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.116148692 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089788449 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09528402 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08501023 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100761892 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088318558 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101522152 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111266923 seconds)
  done (took 7.291798914 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09667974 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111012907 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08395477 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100409298 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083176933 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099101254 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090916747 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100148469 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09904401 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092805788 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098569843 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084158557 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10099095 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083840351 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099846157 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084077669 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108843696 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099597869 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083286315 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100867438 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083070299 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10710606 seconds)
  done (took 2.811202537 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.264483977 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090041151 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154481532 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117793919 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.122023395 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100407919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104121135 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105186333 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088665321 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110939984 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111113962 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08863664 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.124877656 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110879954 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09536035 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112435462 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104700253 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095660084 seconds)
  done (took 2.820244507 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101736325 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102766196 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109957556 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103017213 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103115095 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086649746 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110952986 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117295795 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08552231 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10174512 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095739691 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102618695 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086037898 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103466219 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101660757 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086367647 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.1026116 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.207857769 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114889164 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114136663 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095073447 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114360779 seconds)
  done (took 3.070334708 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102002757 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103207458 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.137021961 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088655205 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099227618 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081790387 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106433361 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082908104 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108821448 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098054707 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083406971 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098648236 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.092297665 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100304149 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10675724 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085221184 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099240066 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085190696 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10127131 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083560367 seconds)
  done (took 2.666443572 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182153185 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10100524 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118327956 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133135478 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099759353 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115459686 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127627552 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098070056 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11337375 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131286197 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097442537 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113889574 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129842297 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122099675 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099263042 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128822102 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128910568 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127618189 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097252433 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113789348 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1307198 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099298581 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127835295 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114475597 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099770352 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114345675 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098016388 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122974144 seconds)
  done (took 4.012934319 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082422218 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081983144 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.100725703 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.082574876 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.098555841 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081656697 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09639172 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079084851 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096163999 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079448766 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.096474453 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080155997 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098139299 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.080430689 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097105064 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.082832827 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09966365 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082206113 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099502055 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083437974 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099293698 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082478971 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0995247 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083508574 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099035318 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082901001 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100262753 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084022629 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098991852 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082079035 seconds)
  done (took 3.418172605 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096580601 seconds)
    (2/2) benchmarking "in"...
    done (took 0.126604414 seconds)
  done (took 0.953476145 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.092593614 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120961997 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082413935 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097907765 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091342021 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098548778 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108857024 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09096079 seconds)
  done (took 1.512387083 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.153844599 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.153255229 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091984774 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115699663 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.15488647 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.147644857 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.148590179 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091577151 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10497468 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078541236 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.14798031 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098119364 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088469817 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103507141 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08834651 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11181312 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101682732 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.095515855 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.109646267 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087323727 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108383972 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096607195 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110675516 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112676019 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080507079 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109667086 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094217071 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.113860024 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102563278 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092108995 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.105029262 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084910673 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.10696542 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090319987 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102747594 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.154219502 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114984093 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085734878 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106835553 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091406941 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113133896 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.085536932 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109938105 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103186061 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092969107 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.109316508 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091393741 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.103251664 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08110066 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.098760822 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.085145524 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102384804 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085241985 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10798166 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107834177 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097903292 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104536279 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.082242962 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102831638 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085937867 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105855541 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083639356 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108350818 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.104357014 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086178621 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107880008 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090891736 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.103661312 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088642823 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.103386646 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090427869 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125884309 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109948334 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091401377 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107188149 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086176129 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105693343 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109258756 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088568124 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110996417 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091346676 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111760481 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087351853 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102237448 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103221002 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09429702 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.105922436 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087982298 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096455823 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099995788 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.10573731 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085604583 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099994175 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087887991 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103842825 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10625872 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082514705 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107233379 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.084028037 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10939755 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091597233 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101400938 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091127953 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109627111 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1102207 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089547861 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.148876515 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105480935 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085814356 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.106651466 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091328293 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099475123 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088076906 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.100096087 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083385639 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103402587 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.091237236 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108812344 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.10421112 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.091170973 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105880302 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092690614 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.106023972 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083852452 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102771999 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090776856 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112968445 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110755406 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.088487274 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.104308588 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087468701 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.1077592 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089885171 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108091619 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0961053 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105955389 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.08465851 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.105702067 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.109246899 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092356042 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103623677 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088565304 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110260065 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.108528645 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.088876771 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109864979 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085587514 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100586775 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092088016 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103731225 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.086037254 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114375484 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104873716 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.088846396 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104077752 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096665771 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10525239 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.091082073 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106458257 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090460837 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109929819 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080709458 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107157081 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.107098833 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093736486 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105109787 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086702654 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.103300101 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093376932 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101303044 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089997835 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099884284 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.083172504 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.109893909 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.086693912 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.106596886 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103493432 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10439653 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117150451 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092754569 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.11008261 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108123711 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.090083341 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107940813 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090257269 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11130476 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.092053873 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105625691 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088023458 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111506164 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101416251 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091083076 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107202863 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090428863 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098998746 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.087152741 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098604823 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092453851 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112327941 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090517575 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110977122 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088226483 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107402373 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115658331 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087520057 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.108607864 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082366025 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11062954 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.096327733 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110114564 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093736247 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111727521 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106628775 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.087197731 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11518453 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097496802 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109192391 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08677957 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102029177 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082826677 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.110928779 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.108204613 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086258775 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.102861454 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093284074 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112075816 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087859011 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100135621 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090970729 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115037581 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104448242 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092632251 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.101525305 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090583165 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11816424 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082583105 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103818912 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113197345 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091748315 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.104242094 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088157748 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10831683 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102125497 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10776466 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089146469 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10712344 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094961754 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105993206 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.084604142 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106001593 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10664192 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084288322 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.107392936 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092327931 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105974356 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086899216 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116230797 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09419435 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.111065422 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107266577 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090900472 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.111968175 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.094661153 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104165572 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.094216663 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102363161 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083147779 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10601812 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080555529 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.108143777 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105060156 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.092899659 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.107240285 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090357591 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.106152744 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092454487 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106262523 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.111525152 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103912503 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102538007 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084076226 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108477606 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109558155 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088058127 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104857671 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.089310676 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110515143 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.092166218 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112893524 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08394169 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.104838501 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092319023 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103539036 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.093823989 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.112240304 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.112003273 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083240224 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107386834 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086921581 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112928585 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08426694 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109373547 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109322384 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090510359 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106311366 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08863646 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106810976 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083172387 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105488455 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.09335735 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104938046 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109602538 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089742665 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103797824 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082681855 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10220068 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.092990565 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100409078 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.092757376 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.103646411 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082239422 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100056341 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.092069904 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108064965 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.112431734 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087012002 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.109380176 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095307266 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.108969856 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.086847881 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.116045825 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09634422 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.113011505 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116688209 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082089335 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10816519 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097899864 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.103365952 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.089673478 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105074525 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083379135 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110734126 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.092659996 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108626537 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108327197 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085337252 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.106703734 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.094095459 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106719959 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090393887 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.106258067 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09298444 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.1041737 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091615561 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.111007008 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088353018 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110097371 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108406462 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.088582099 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101498626 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088527572 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101692589 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083148355 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102649847 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088873545 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.113069812 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082509321 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.111191131 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.092095867 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107806444 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.11037303 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.091949033 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106501823 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090012959 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109767515 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086252747 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115655731 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0852457 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104339969 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090408022 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.108176051 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082669547 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106351459 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103759408 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095119895 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108464341 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093160657 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111267611 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090765484 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105541865 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.091450475 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10824817 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107794821 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080672203 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109372934 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092942629 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.105406916 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089216016 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108982327 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085094866 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109443304 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.094466492 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.11077026 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115371829 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.092638545 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106439938 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088605384 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.113569225 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090297395 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11469649 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084615938 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112438138 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103068133 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096219995 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.108299347 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.094935342 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104949236 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085734173 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112175625 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091251313 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10815206 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112866471 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.09453025 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099950516 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084643296 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.109778061 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088800335 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118761181 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089279959 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110335474 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107101117 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.090091556 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.104005745 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095508643 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104850374 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08836632 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.111890359 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091863242 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106593206 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085391079 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.110562093 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090963849 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109908606 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111398381 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086837285 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111209511 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.095756704 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109789753 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084323705 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108239109 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094930225 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110542779 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108030703 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084699676 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119040461 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094334977 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115420348 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086415028 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.113674552 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107476721 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.089862648 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.113246629 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089307584 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11080345 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089610558 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113050847 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117083561 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084327888 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102144717 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100191964 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108452152 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089920651 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.10709665 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088959398 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111840666 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09557977 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.107238037 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099239558 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081549344 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.100834033 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080637047 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.105452933 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094201356 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.107551463 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084709784 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107451288 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088479498 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.10639213 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.086421485 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101592733 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109918713 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084551119 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109356634 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08192828 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099393127 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086098945 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107641149 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082220074 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.102663534 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084783042 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.105514732 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081404356 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106938434 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092452599 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110311029 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108274902 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086704749 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105062931 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085268145 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114506125 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083401427 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104742502 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118298735 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.09058967 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107602389 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086823765 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111330615 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.09084417 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104805403 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091674549 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10291396 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101564822 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.090709784 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.112174916 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098276354 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107825785 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.079650637 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.108609554 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082205294 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102823412 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111311686 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090469769 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109858225 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087315202 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105163515 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096142064 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107125623 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107018614 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085365448 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105612283 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089807048 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106583267 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.088616963 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105158034 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095609781 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113801784 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092619018 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113758807 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08101052 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118353156 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115399194 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.097237398 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105225013 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085356924 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103703141 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.091084607 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.117869598 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.095444581 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.112551443 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.089843021 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.108608238 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090024645 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106851714 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104944725 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.092133197 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108087692 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.086006361 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109873362 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.082507464 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102646073 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083214032 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.11025483 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.091421848 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109701017 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114090332 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.090007577 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.1043623 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084919291 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108675904 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.086247985 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.106570708 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087174842 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.103687846 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081343243 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10843944 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111190542 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088374769 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109601028 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093068927 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105506894 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09083145 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112831961 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.108367146 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086858428 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109985552 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085982563 seconds)
  done (took 60.429309241 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.169145348 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09898902 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110820504 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087214911 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134936531 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107563651 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086337897 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107539295 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087692532 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119287297 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105035678 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085651643 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128911804 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137989483 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133530603 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120645873 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086191446 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106514072 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085904404 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107936983 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106690552 seconds)
  done (took 3.097090207 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115964183 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.126673618 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122650741 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12651481 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095292631 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12190536 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.124210266 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121902704 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105704305 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117088318 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125944881 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121806511 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097815909 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117407637 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117639209 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119098007 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10709299 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11650207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.123409695 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.122018602 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098074867 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.123457759 seconds)
  done (took 3.348559081 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.101061557 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.113304153 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090476543 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.105022951 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088549424 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.103979663 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.094900464 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.105455694 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.095612846 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.10561105 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.082741462 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.105087314 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086194503 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.104646288 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.083251734 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.105095595 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112803339 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089066517 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109194168 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.085507299 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121544324 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.085618726 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.105393028 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.083478251 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122411242 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110597849 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.085862406 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108273366 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.0802242 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108932308 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.085450611 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106307334 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088415592 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101981244 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.080700073 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108378907 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08833618 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.105013495 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085569373 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.103865532 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.08738719 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109784075 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.112438875 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.086996947 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104073086 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084537527 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109934722 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.08636998 seconds)
  done (took 5.496539449 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132231462 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166845372 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091132458 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.152371638 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127236905 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121999622 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089558346 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129977155 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109376304 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110797119 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111003357 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.130224437 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.113247746 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116238452 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093552785 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112712746 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094652281 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.111012955 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119624789 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09113914 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.119275124 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113265897 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126842421 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.107898283 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114169603 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.111332219 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092268882 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11670265 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.128411463 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.100621715 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.117003614 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117390061 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127508397 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091100309 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110794667 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.093084031 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130082542 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.114922945 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09220776 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.109904158 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.11087438 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096859916 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11471286 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130560411 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09359331 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115845347 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112387968 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.088760225 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126590572 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112156823 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.101449161 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.13008387 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114959592 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.094364193 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.117279177 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127113257 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.11446373 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.09153794 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.114383204 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.126399933 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.088525555 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114971228 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.129110508 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091657975 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.121914877 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133570061 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.098461409 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.117950786 seconds)
  done (took 8.651347032 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129249063 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.122794403 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135612322 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13534195 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102707448 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.119097455 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119100276 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.097497737 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117168552 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125433404 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096941157 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.222814037 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.093039165 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123552184 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118457524 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096691168 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117016031 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117647533 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098658233 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117508839 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118426715 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109958716 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117080619 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130421297 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133641108 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092372271 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11903356 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117432411 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109274117 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116724564 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132514511 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117009347 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097152187 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129751482 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131847977 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.117932845 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090160377 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120502082 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.118499324 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098393311 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112876961 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131850629 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096403893 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.112104693 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096554656 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118415361 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131844726 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.132861544 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124661452 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105841208 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117869718 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130906708 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097030833 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116219043 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.130771799 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13877638 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130432969 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130716892 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097184049 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130824561 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130979083 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.14111414 seconds)
  done (took 8.17106021 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093025192 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09231391 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115897053 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085440889 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106709508 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085904039 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106048175 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084940381 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105820356 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085922781 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106714989 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086023808 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106036171 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08610954 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108043752 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086021979 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107697439 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087424264 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106811775 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087736751 seconds)
  done (took 2.722815562 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.105287565 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.133774071 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090995244 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119933307 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110199759 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099060374 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108699048 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089711006 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110695529 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110810209 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102486895 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123432517 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110711928 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099448399 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122883598 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118584138 seconds)
  done (took 2.55330783 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121657531 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.132174068 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.169536855 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.114166619 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.091668069 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.121349969 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090440551 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.11370949 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10810976 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.097450515 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.114735739 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.094374351 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111859282 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.09059103 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.112141414 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.11356667 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.089571051 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.115751484 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089606947 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.168058847 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.116827884 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.09418502 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111048079 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.115034506 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.092722886 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.117063643 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.098069685 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.11249387 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.112666225 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.090763429 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.115082794 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.100601529 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.11190643 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.116616355 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.091290692 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.112222598 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090097547 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111883087 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.09502796 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.112602024 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.093637907 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.114601994 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.109913184 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.094082125 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.10792586 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.090939741 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.108372696 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097988648 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.113216306 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.112975188 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09094147 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.116545242 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.095638557 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120326036 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.120204696 seconds)
  done (took 6.763239076 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109738115 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112827711 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.106461835 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107699169 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091216932 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112814306 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111025086 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093641541 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112598911 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087267377 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114540583 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092961843 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11510738 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113281589 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093049644 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112703887 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086810792 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111877742 seconds)
  done (took 2.68381159 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102467618 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115555351 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096612527 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.1096115 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090030289 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111803169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087627803 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107694586 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087860533 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.110959649 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090731948 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.109713043 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087277571 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.111263183 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109467984 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089553101 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109364964 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087695753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110353722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089424705 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111789824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088046234 seconds)
  done (took 3.01557581 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111448395 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.174616656 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121787069 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.179179807 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111648944 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.087737826 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.122915802 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110576678 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.11080337 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107867952 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.087350027 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109539668 seconds)
  done (took 2.240543517 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126005261 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151617915 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112963686 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09081608 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124303892 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09794472 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118368716 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117825789 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129031136 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114145849 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117335968 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127922131 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128520831 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131656852 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103541889 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124314161 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117423161 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096923219 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111295559 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142667444 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096461454 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129534528 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117292805 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118114558 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097835432 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129833594 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129153343 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135609116 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096003194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129805882 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124464495 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11768231 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108363285 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13340117 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110948358 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128589764 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097330681 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140066247 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123859434 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13184217 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090723115 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123189954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128832641 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126471333 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109111382 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118165426 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126913513 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097041473 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11753255 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148814663 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124694607 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131086644 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103184159 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1295496 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129694826 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148946058 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134715515 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131882032 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123402803 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113967385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133118032 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124017448 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131233835 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135540674 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101938136 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132487408 seconds)
  done (took 8.806232794 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143586567 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113983905 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118199905 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135000924 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11152324 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118741225 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117854496 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096843119 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118521869 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112759943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168441572 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098050165 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130968534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13189154 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118050612 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09923852 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12031837 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131147787 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093435117 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148594244 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118829399 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131458908 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132720432 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13040122 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114767809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125646363 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118421233 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097773598 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11848406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118250777 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105747084 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120151856 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131198918 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09197357 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131242551 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119185441 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118326569 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105444746 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119766841 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123819446 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13188074 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140626301 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098156122 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117803048 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135632699 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098043246 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118880828 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113716502 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098031888 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113146443 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136641572 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134140282 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114394996 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131562135 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118756058 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119035957 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0981563 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11762324 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119229396 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103135279 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132569803 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118710188 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150315946 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097263542 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120909299 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13255313 seconds)
  done (took 8.724847983 seconds)
done (took 162.508255829 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.162109047 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.175757924 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.150617538 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.150332208 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104824093 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120077933 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138877069 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.150279596 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084273483 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104632984 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.084919341 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109359632 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.150717434 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.104788582 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084795047 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108610336 seconds)
  done (took 2.791031268 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.214480259 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.320699697 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128503602 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.115568032 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093721804 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108410197 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.094491815 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117178384 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109810944 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.099338884 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108072204 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087776645 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120873524 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.110109294 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089985909 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108753788 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.119964339 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087976991 seconds)
  done (took 3.050266819 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120088217 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151286717 seconds)
  done (took 1.09029271 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132144316 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192621076 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.327082486 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158627574 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.136904801 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111870381 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161463466 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127425781 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202474563 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131040019 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.130614912 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.091375116 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139971052 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11970543 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.125615786 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092487725 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142439662 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.122628714 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.102566704 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114249534 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139161199 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.093826267 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119604404 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.102138862 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.213369176 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.111076848 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.115106766 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.1136396 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094962089 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.122088522 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094612714 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132771745 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.131251073 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.202012079 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098661988 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.197166472 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100381035 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114487094 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.121726457 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093171465 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118814551 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118831457 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108028824 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.113413614 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11374577 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100953479 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114551929 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.093590618 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117744139 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123600469 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116798433 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095541195 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.196883915 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102246142 seconds)
  done (took 7.823521658 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.914565665 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155325754 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09081073 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.046551342 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140905034 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129148721 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.895407936 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135416101 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.277524163 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.912196542 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106243292 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125445161 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260269695 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.293200373 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.192150496 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.370723037 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.771482805 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12552673 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.120538484 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163272737 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122482758 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13986074 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135600808 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438864104 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092324105 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112233352 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122092786 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102470325 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.198909854 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089932205 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118160772 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.220573993 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.285110825 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229573938 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112724344 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089627842 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109819276 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189488425 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.300052068 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.248893208 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183183551 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107716361 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088711497 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12108716 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135154954 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087152728 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205328842 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190713836 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.216544137 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094524126 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125798892 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124725789 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120037281 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181109408 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.107679004 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375571131 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.375747852 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109993265 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103041899 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1276812 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.296134842 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109875885 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260185137 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139871108 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.241199701 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090247989 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817083677 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.207943176 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090294286 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117462488 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099632404 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118930617 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119674908 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177374125 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394515121 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12379547 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097217392 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110608712 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.266277856 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090781481 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109594162 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1839936 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113733386 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101007597 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127506436 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123764055 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190329092 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.290130017 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104068081 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123639125 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117444745 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104410789 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.113860277 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.22968077 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.272341044 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179480953 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.251096311 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10147342 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.204917436 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185919646 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120796811 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188813018 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121625249 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128512632 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099954618 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.26846355 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153371003 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091401053 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118200324 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100749548 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.178304231 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094686582 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121556656 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187858754 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500260493 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184335121 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108124388 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093603881 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125623082 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180354169 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12173517 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.29221169 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124033203 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187945053 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122611662 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.085179449 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123369281 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.205235718 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101627112 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124104182 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120509755 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101981855 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.294472795 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.251076207 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124194149 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.267623099 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189113787 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098386281 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.216277524 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100915544 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.211388057 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122261851 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099654986 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113841331 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809755011 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127138537 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10145059 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119818866 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202533159 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111037573 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091874202 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109881403 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087656758 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835902829 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113760725 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08830718 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.111727484 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098337213 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1226922 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12298193 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097062763 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.20318973 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.267592337 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125291792 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099738006 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.111657575 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178589285 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11493725 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089497929 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.112854933 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090583962 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124699519 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118594776 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091827062 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.214467274 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178178344 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.253824027 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577027729 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1122058 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.089490273 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.285076201 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091614767 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.341781673 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124433696 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.259364696 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.20773881 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088867653 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.373084845 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.21129952 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204398988 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097323733 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.213737545 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0865853 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123237871 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.201056773 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090791297 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121310786 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178696098 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128059278 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12564669 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.201737051 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0903313 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.272239272 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08723289 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.211931069 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092883031 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121012961 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.341008563 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113403151 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129647616 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181361331 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116734997 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.092451704 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722495658 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.091228771 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127526155 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119449468 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.25814626 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186282654 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124422206 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124000407 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125153569 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.186225198 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.251270263 seconds)
  done (took 47.298317057 seconds)
done (took 62.866703872 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.331283249 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281870382 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.339695132 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233837556 seconds)
  done (took 2.110689608 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.235074246 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161133422 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.192475307 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110738366 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.201624383 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111404862 seconds)
  done (took 1.853471602 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.544298257 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.415980336 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.376602963 seconds)
  done (took 2.181276909 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.285677697 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.275143526 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.366297186 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.502954339 seconds)
  done (took 2.416109364 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.260666413 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135275003 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129265373 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.185379909 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.221957275 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.222659338 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.153391472 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.168223514 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.113918177 seconds)
  done (took 2.491802178 seconds)
done (took 11.897374498 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.408342054 seconds)
    (2/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.28538034 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.274077687 seconds)
    (4/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.167559334 seconds)
    (5/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.12924424 seconds)
    (6/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.305529967 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095813675 seconds)
    (8/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.375802357 seconds)
    (9/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.223650476 seconds)
    (10/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.305234801 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121212402 seconds)
    (12/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.344835689 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.120375288 seconds)
    (14/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.175014651 seconds)
    (15/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.098562661 seconds)
    (16/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.184406418 seconds)
    (17/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11966563 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.206445584 seconds)
    (19/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099889432 seconds)
    (20/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.284951614 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096254452 seconds)
    (22/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.288760265 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.341969201 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.22015329 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.152030514 seconds)
    (26/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081545275 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128663432 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09644046 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.223746129 seconds)
    (30/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.115671689 seconds)
    (31/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.275883926 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.202747844 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.138601814 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.252075441 seconds)
    (35/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095135255 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.104412501 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.221543646 seconds)
    (38/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.154451884 seconds)
    (39/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120862064 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09878615 seconds)
    (41/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.220165473 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.11933444 seconds)
    (43/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.158570274 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.267582232 seconds)
    (45/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.109983326 seconds)
    (46/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.103842774 seconds)
    (47/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.215522826 seconds)
    (48/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.25795188 seconds)
    (49/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.318402094 seconds)
    (50/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.166708142 seconds)
    (51/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194680775 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.225644677 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097458302 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.120476872 seconds)
    (55/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.186430033 seconds)
    (56/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108372262 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103365294 seconds)
    (58/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.195155515 seconds)
    (59/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.119371312 seconds)
    (60/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095836036 seconds)
    (61/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.22117165 seconds)
    (62/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.122485251 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.096440409 seconds)
    (64/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.111980757 seconds)
    (65/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.096704412 seconds)
    (66/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.123137874 seconds)
    (67/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.200544905 seconds)
    (68/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.081314773 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.119747087 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089544394 seconds)
    (71/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.121995677 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.114842512 seconds)
    (73/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.10327703 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082380698 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.152099845 seconds)
    (76/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.122348599 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096468061 seconds)
    (78/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121048769 seconds)
    (79/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.159498707 seconds)
    (80/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.185941897 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135686596 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.097290107 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118548517 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.158520322 seconds)
    (85/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.20101652 seconds)
    (86/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.121870721 seconds)
    (87/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115378815 seconds)
    (88/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.232634592 seconds)
    (89/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.196453298 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113383283 seconds)
    (91/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115849892 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099544512 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131264405 seconds)
    (94/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.153197447 seconds)
    (95/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.184783246 seconds)
    (96/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120709626 seconds)
    (97/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.150636341 seconds)
    (98/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11999603 seconds)
    (99/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.097650157 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121455953 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129155088 seconds)
    (102/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080456074 seconds)
    (103/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.19872225 seconds)
    (104/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.161487278 seconds)
    (105/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.103855169 seconds)
    (106/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.09551278 seconds)
    (107/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.181018388 seconds)
    (108/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.104197024 seconds)
    (109/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089178924 seconds)
    (110/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080763847 seconds)
    (111/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.106273234 seconds)
    (112/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.177169309 seconds)
    (113/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.179631386 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112737489 seconds)
    (115/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.080411617 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121154008 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098729662 seconds)
    (118/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.199441848 seconds)
    (119/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.217620841 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.1210007 seconds)
    (121/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092514791 seconds)
    (122/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080446563 seconds)
    (123/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121761045 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.1986621 seconds)
    (125/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.153273522 seconds)
    (126/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199099998 seconds)
    (127/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.204477425 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.159732774 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11492797 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.105218935 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090402929 seconds)
    (132/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.103739255 seconds)
    (133/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083075213 seconds)
    (134/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133566199 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110449983 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122011948 seconds)
    (137/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.082252658 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120810789 seconds)
    (139/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.086408328 seconds)
    (140/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.104924781 seconds)
    (141/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08904074 seconds)
    (142/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102673595 seconds)
    (143/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.082126085 seconds)
    (144/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.081383629 seconds)
    (145/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.104384328 seconds)
    (146/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090105388 seconds)
    (147/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.105077141 seconds)
    (148/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082258174 seconds)
    (149/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121845024 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081978993 seconds)
    (151/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.104420575 seconds)
    (152/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.08080375 seconds)
    (153/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.081412331 seconds)
    (154/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.105261917 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09853277 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120091505 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092614114 seconds)
    (158/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110798677 seconds)
    (159/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099275661 seconds)
    (160/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.104824047 seconds)
    (161/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.08817804 seconds)
    (162/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.104847269 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.099433479 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.138890379 seconds)
    (165/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082789984 seconds)
    (166/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.199008114 seconds)
    (167/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082002029 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.121128527 seconds)
    (169/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080872501 seconds)
    (170/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.104924083 seconds)
    (171/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090152112 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120686466 seconds)
    (173/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.106301263 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113221552 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.120086102 seconds)
    (176/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.080918591 seconds)
    (177/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080972602 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120046995 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082534251 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.138075854 seconds)
    (181/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.081273695 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.104560716 seconds)
    (183/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082721943 seconds)
    (184/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.103951494 seconds)
    (185/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082229354 seconds)
    (186/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.081790847 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120968707 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081634704 seconds)
    (189/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.122280576 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.082344091 seconds)
    (191/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.110733023 seconds)
    (192/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081803708 seconds)
  done (took 27.881384105 seconds)
done (took 28.738787334 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.239525108 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105779426 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125507469 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125126207 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.184887329 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103456535 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.1346559 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.128219407 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.106979258 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.120666759 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091146059 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.131201673 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101496463 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206510999 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.106355302 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.354241466 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093002797 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129762644 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.134701859 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.1121654 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.184693446 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117326283 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.107281894 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.116757244 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18399744 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094890297 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.125687105 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.125207128 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.108049178 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.121604579 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101493681 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.115923625 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.133815275 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111210254 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114886123 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098058597 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113650699 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089854399 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.122494143 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.09966144 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.131078004 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.123145435 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103740387 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116803541 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099796785 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.121137006 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091695483 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128277654 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113896931 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100905042 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117860386 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.111349909 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.121389776 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091098894 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.114900615 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11569479 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.106592281 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114318234 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.109436623 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114621167 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09440424 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113472651 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100337575 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11474091 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096990491 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.116354177 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121450237 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.101605181 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.119985175 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093779386 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11365779 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097248703 seconds)
done (took 9.653435617 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102784273 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178020011 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.183623047 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.190505696 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.148013042 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.134366282 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.136911913 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.122688886 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.133710331 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139957622 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.130892452 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.145489138 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.194400884 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.130219536 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133451382 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100016639 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.129945079 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.124447618 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.193110384 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.11880974 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151779562 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.129736319 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.152245661 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.113069234 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121856696 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.145912011 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.102682803 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.123146123 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122475476 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117326927 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.14184238 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.100087292 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.124862621 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137993016 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.110049962 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.127859529 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.134657659 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.100496023 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.120888189 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.09695797 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136464272 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.1336709 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097301416 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.13549076 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123606939 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.109047965 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.129571134 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.107280781 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124741787 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123943927 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.102278765 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.152513691 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12877649 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110834793 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.129942757 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.128722877 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106803068 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129767064 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.101681548 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128872564 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.121980649 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.100117087 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125613178 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.147748882 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101287503 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.129661043 seconds)
  done (took 9.401902118 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127238431 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158821326 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133688265 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108355349 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128972641 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.111680406 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089170933 seconds)
  done (took 1.760089381 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.097572323 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186129798 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184793874 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184288029 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.183115806 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217386235 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113794425 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.114899678 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.151305551 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.102471688 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185195772 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.241754505 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.098746617 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.132824671 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.190695462 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090273174 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.213900214 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092369574 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.127225477 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.187904497 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.107320995 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.144854019 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.130301676 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091296528 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.178514751 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116732864 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.241415465 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132834038 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096918473 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125548572 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127727856 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.20191226 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.180463277 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.130020208 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09595573 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182995313 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.179589836 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127839598 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.196448532 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119532724 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.180057231 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.103510512 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128910634 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.104299496 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.126732559 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16697889 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.133126786 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.106155163 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.125247316 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189101008 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.104003132 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205871484 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.100677205 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.126513496 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.10367715 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129094319 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110736139 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.12950936 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.187115127 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130961393 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.181841984 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.182056202 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.182193625 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.182429637 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139154599 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.183205856 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.180508619 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.102220542 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124770393 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.128305647 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183229494 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.10243954 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.128976341 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.169995347 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106471024 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18217584 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.209010274 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101416679 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.128765594 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096363018 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.125059196 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091563348 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.177534017 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126193424 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.101209998 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136158264 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130014025 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.104981415 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.12063419 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142242261 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.104146336 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129815176 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.131421675 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.102805546 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134387016 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.185863015 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128949321 seconds)
  done (took 14.775078676 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09879458 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116714937 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099686808 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11872738 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096585989 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11891266 seconds)
  done (took 1.566518377 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.130038325 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.129556534 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.139565615 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.105738885 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187502978 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.189002649 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.191458432 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125940326 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.147484837 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.11615364 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.190452615 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.218222323 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.188764038 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.10832858 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.193609828 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.132679373 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.192131425 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127549831 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.114470427 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127726288 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135464745 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.107554376 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125986037 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.18175732 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.131592004 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.107340718 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13062136 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13788285 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.113714638 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125765245 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.108731962 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.130915949 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122606187 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101986188 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.19055867 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.122844247 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126503107 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.110619917 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133821532 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.131923564 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.196237621 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101615065 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.138421836 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.135269762 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102751131 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122773134 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.134754746 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103812927 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.191065905 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.152863099 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.135744897 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.107165806 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.133033161 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.135755507 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.099984574 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127067983 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.111280896 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.21660792 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.109873179 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123813546 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.10704969 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.133543781 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12591506 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.111533238 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133071659 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.134786755 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.099813827 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132185825 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102054479 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.131031386 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.135648097 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.10637917 seconds)
  done (took 10.687869791 seconds)
done (took 39.09110483 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.118311394 seconds)
  done (took 2.031793323 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.928435265 seconds)
  done (took 1.846527404 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.200790173 seconds)
  done (took 18.154230871 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.582547033 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.648376687 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.006620773 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172189547 seconds)
  done (took 3.32757252 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.007656443 seconds)
  done (took 1.945348085 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.359781329 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.284331073 seconds)
  done (took 1.568873408 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.718167969 seconds)
  done (took 1.645848368 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.284025216 seconds)
  done (took 3.205757851 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.386415592 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.197573306 seconds)
  done (took 1.527045099 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.699185929 seconds)
  done (took 1.632953996 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.658815029 seconds)
  done (took 30.590848179 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249980394 seconds)
  done (took 1.198607842 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.322234905 seconds)
  done (took 1.26218074 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.62814572 seconds)
  done (took 4.568412683 seconds)
done (took 75.435485918 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.1107763 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132429506 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107634175 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131155496 seconds)
  done (took 1.412441284 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.11952981 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.131152516 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10964445 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129628313 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.139473614 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.106562636 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.129574588 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.11295445 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.129948947 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132913068 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.105907905 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.130360485 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.106734223 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.130182164 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.129611267 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.108134155 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.135875457 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.105835829 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.132171321 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.131366651 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.10596794 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.132066847 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.13401845 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.108030574 seconds)
  done (took 3.880678098 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111822903 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122668038 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099276748 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122626873 seconds)
  done (took 1.403963284 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.118531013 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.146573625 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.145681631 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.112198448 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.147251915 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.145638583 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.103468939 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.125378817 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102743444 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.138708008 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.154344529 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.124126525 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.146418516 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.1318911 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.115365267 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.122351189 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.107161357 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.147885773 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.136703146 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.11443953 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.130184101 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13743558 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.103220249 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.143037371 seconds)
  done (took 4.046315273 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.22343487 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.118254675 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.155181073 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.184024675 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.162930231 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.102500426 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.156470388 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134852951 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.111602896 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.141049424 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.132171478 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.19132679 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108064191 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.130566658 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.105776872 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.137983682 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.146165687 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.135167744 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.177003156 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.110034376 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.133321424 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.143612715 seconds)
  done (took 4.088466058 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.110267808 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122639077 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092350166 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.121428035 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104987981 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125865518 seconds)
  done (took 1.622198886 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10573181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11674142 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09638456 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11880275 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096437265 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115719561 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090577771 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116429471 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091497227 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115214141 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092656163 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089053416 seconds)
  done (took 2.19300049 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.320134297 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097244407 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12617958 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.120510336 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104869355 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.121727856 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.14069945 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095479823 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265769655 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.092275586 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.140816564 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.204771416 seconds)
  done (took 2.783133467 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235512183 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106072198 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327939172 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396677021 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171614515 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179790321 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289498758 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181205429 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207092427 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15214282 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240246252 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144693249 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168929548 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197118786 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154919687 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.223853547 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192512042 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218853826 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162568207 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251373399 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179449121 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182148982 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198371671 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165334835 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122445711 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175581885 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.133438578 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113564394 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215831198 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186197244 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193940891 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162063893 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152452284 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222862559 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254875852 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198441464 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.316637697 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144564103 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.207054148 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.1992579 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289996418 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126359832 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243021785 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167895427 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11568897 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1959755 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169647177 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.222856553 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.118491932 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152851569 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203982232 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191585927 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.22762649 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122196111 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.336445701 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159158646 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159845997 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189880696 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205459711 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20837073 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181560403 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129322301 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197673433 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197611668 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195640458 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.158289873 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185244849 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136648118 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188392821 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213370299 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200338546 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178058205 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.230179513 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145122342 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176313094 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185793657 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166028944 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191979035 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145869674 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.129375801 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164479097 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149265522 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109740533 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.20381532 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131169809 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224237984 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146776158 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.401358392 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222823517 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172661781 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176651761 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178508783 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179355403 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158960616 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13357093 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131435761 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177908154 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17093035 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14354003 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170711528 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153634543 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.112489156 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163970238 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.132792637 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172057897 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135987179 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209196758 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175189217 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.116451192 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177585264 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161823819 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.170284541 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188288408 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20155269 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142929412 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141348856 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209686231 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169866873 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.119783088 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192256599 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235079106 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181165057 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121932937 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181406352 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237318351 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127298424 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231461709 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131464809 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144569714 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169962291 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171511583 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172248429 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165246726 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112039231 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.166855863 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238280697 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.111255633 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149118592 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190477044 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112256584 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137487471 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152501624 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147288036 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.126992549 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159861499 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149889328 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169331826 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171480245 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165234384 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176504676 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15396684 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213511356 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141172828 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.147078962 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158364238 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.129149667 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200208367 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202155658 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139852244 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214177238 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186453991 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237771028 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177722209 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112897747 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192523991 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141108734 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.130518616 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178472763 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176343816 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178300759 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.201986764 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209208452 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187042713 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.168958264 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162983842 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183377085 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.189483887 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174813438 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.157993167 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175725222 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18555083 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.130495607 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.109697192 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.140191725 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151009304 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114664294 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142646712 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200537302 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178582526 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227880137 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174984695 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124258189 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197582956 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.137415758 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180146185 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.18958423 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150449751 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204873317 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197123554 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181367086 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156993341 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18450375 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.131289708 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108021259 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147366473 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185617967 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142898205 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118198654 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157361845 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198333074 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218236744 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1349508 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248374984 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186525814 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20995798 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.133379684 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.17655414 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188625709 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170050617 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.172769625 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144032674 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.176496289 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195170653 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158610262 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208662061 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174701862 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18172968 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247597919 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.14196144 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141953984 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162019333 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180465926 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15323593 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180753453 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157977605 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118726321 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167921986 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.149635214 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137491338 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202047461 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155080991 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200422539 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.171868127 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191592569 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135752501 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156892879 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172265047 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131117664 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.131007498 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187423278 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207285026 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160363357 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173751412 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192481912 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144650559 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.338097207 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208952934 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229823528 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121899311 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156594419 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17585465 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175584328 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180183154 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19551903 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156789105 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195537854 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171518094 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.15529642 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118090784 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160088786 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163964123 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169353101 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147666534 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.166648599 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.127092669 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231322856 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125124095 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172801021 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17875612 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.159923006 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.168953744 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124517516 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246657597 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17006769 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197226132 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.168138073 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184297527 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219301408 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106305622 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138858992 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.140830418 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198220687 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114370634 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171916065 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.220731993 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212815002 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172823006 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182623129 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150367868 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.108833902 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174018785 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163784327 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239708301 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128501319 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.150897878 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209345967 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.168134364 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141798451 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178682813 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294172343 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157076058 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192047955 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104054395 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287089698 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133116418 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142741958 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176368739 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187930812 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134529778 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.196086003 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176995866 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15713522 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175030579 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148698467 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204567782 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223651515 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184906095 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219348755 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.128706723 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173207743 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179792889 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221350256 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128580837 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.160518646 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176590361 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199353746 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204524255 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147563619 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17570969 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176594756 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173242801 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195567106 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144629659 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217842241 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141480665 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179958362 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151157854 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109156206 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172133068 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196361614 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144601509 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192485775 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171032111 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141620203 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111350764 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166018485 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172074986 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156905953 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.140927687 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200130675 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.109854651 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176720667 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19653215 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142124835 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166854307 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157646661 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116863462 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156841014 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156814371 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145973999 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.15440448 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200068857 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.145727931 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195296612 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185572671 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179981892 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174918941 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157899777 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.675989837 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.112572974 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227204553 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131879605 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232695255 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133959001 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180398234 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175293174 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162492403 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180949608 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164466045 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236890724 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179435768 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179302671 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114227154 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158960348 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156585322 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145734316 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165739191 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177256199 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124039484 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151405937 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.173844105 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155880387 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.15819482 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122787253 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200106332 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162261961 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201560033 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1973366 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151660694 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180721113 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195865904 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140587733 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180014525 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190152739 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153814434 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167646938 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.117611287 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149739486 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195862519 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.133395116 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175330926 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172835506 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146696852 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17583711 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150543235 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174118227 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156096465 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173395417 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110263006 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.170309381 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171585384 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146165471 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.139639838 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140302104 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174845327 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.17150378 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140461946 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.157999337 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222091136 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.106276769 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145172552 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291410348 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173542567 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209863189 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.170710952 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145795118 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126714668 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171888647 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.16870262 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172720362 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.140929246 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114730028 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146053856 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.197527664 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173862403 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169746007 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196567468 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177852934 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220028612 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.157353746 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281731218 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123936113 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167996691 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.143399948 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.115598842 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153294787 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147264885 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158775313 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204884063 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194644549 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165376603 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.155951651 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112874636 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.136214173 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114024728 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179573166 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168015043 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170967864 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159793477 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.13110494 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130816246 seconds)
  done (took 84.329348157 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156149415 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.144954011 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154943828 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203615825 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17284387 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265250548 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211940038 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235463955 seconds)
  done (took 2.588124908 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.113161632 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144287724 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.150366572 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130697282 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131026228 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.411482045 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143815437 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.130716346 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.19272302 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.142560039 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.126180064 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.612301554 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.128554073 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.104085504 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12507212 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130033061 seconds)
  done (took 3.943997172 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.481332081 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551207792 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.989417484 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.259046139 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.243582196 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.189339881 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.752916681 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.179820488 seconds)
  done (took 12.683664304 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.140688528 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150128767 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.358576508 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.224543187 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.16921808 seconds)
  done (took 2.08898776 seconds)
done (took 127.998441478 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.113137362 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.149250856 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108025933 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152946192 seconds)
  done (took 1.550808644 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.161835371 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.119307075 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093146215 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.11739418 seconds)
  done (took 1.533410784 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.541618182 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08949794 seconds)
  done (took 1.703763944 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.137716268 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.155634423 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.156466466 seconds)
  done (took 1.502307757 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.120667783 seconds)
  done (took 1.159768802 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.119961233 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130303911 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.199846441 seconds)
  done (took 1.495755915 seconds)
done (took 9.989504022 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112680747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.432684393 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.422409117 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116180017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.735547944 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382589026 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.081580937 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165213513 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.215717273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124419722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11707792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.70634749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033483837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343445986 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015839941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.348891375 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705486597 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095906009 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132583627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124665531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.03100679 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124159136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097659361 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123202692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677206885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.444516586 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095179905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.384418035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123380334 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104452327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.40986527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096933712 seconds)
  done (took 17.156525706 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110171831 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192528257 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135225127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098715015 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133000956 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097829295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135051673 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.111394321 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.234674498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09591648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146981445 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095197755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131583648 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096489562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148860144 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095388941 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125104534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123078584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106136405 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127430742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117469803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123723506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098432599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12537898 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095868928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157267806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125591241 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110757457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125028611 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104448307 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127209599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097184351 seconds)
  done (took 5.001460889 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152482399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.203633832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138689805 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130709907 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185525777 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127132036 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.216796923 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166422053 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207616727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124697266 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119983685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124116776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.139846474 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126197916 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149039493 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0976286 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124561071 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097175968 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133282803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098784814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14595164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123363928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09960876 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125214484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096439363 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157491765 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095715639 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140224681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123952243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105309932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128184911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097946311 seconds)
  done (took 5.358929511 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.115103855 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.138835464 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.122835516 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.151893362 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103261342 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136834327 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.13858217 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.105456512 seconds)
  done (took 2.07024964 seconds)
done (took 30.631507066 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127816262 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.144705862 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115598722 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.139108475 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.203495217 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.101004471 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.14329206 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099411277 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.139819778 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.118768425 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.124791511 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102099227 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.146752168 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105711079 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.184971438 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.141638878 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.194034638 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189363111 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.10208144 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.140326271 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101725424 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.193422529 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.13897265 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.131977844 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.168538284 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130774202 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.182281852 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.104918846 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.135635754 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.132876729 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.157659783 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.138462954 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.130716194 seconds)
  done (took 5.658330316 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212408973 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.214972225 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.102522394 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.130587436 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.206669681 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102831153 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.206398099 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.130911239 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.102093873 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.130762919 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.101995457 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.2068715 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.219882616 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.229472359 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.244970408 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.216855711 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.205150787 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.212726219 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.202717962 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.221419036 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.204079941 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.13055581 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.221108769 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.217762913 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.101052953 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.131743206 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.241630039 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.216869123 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.24113445 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.201064207 seconds)
  done (took 6.566704602 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.117044606 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147287041 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123577576 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201139397 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164803878 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.106563088 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144639313 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.149657608 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.125075766 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12484858 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.114026119 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.163992028 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115444699 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.110016948 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.1310204 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.117764333 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.152683846 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098514385 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134556004 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118770481 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.147960732 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.145971708 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113450384 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.138466898 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097190954 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1349391 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.101933684 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.140520902 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.134916716 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112398024 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132660373 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102734485 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.130983671 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106893167 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.13406866 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.13700867 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.126440429 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138021971 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.109457207 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.158034196 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.107658544 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134885535 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.152004567 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.15214975 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.129221579 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.110112611 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.140909837 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139933386 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09952829 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146624024 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114681349 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.128436638 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.119785795 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12810231 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098183825 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138330647 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126958194 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.102808611 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.140062438 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103807501 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.155480435 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.104958738 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138673879 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.099859348 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134520713 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099097401 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.128095873 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.13031509 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125458067 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133827394 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.133555545 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.128906953 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.109816106 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.137251769 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105106065 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13699071 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.127803042 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107461026 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135558099 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.105143965 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140323964 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102389372 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.13178057 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117566492 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.147771725 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.138545251 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109132709 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139342074 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101395773 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.130834386 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140770454 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102471382 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.131895581 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11311131 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128205259 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.102084845 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.139959682 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.108359009 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127574005 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118762818 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134416092 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098417521 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.147944408 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12847036 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.103184791 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.137730301 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.112573576 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.127863724 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.108374207 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.139807222 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097833623 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.132823912 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102057661 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.128445468 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.145397296 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.109704852 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.132453416 seconds)
  done (took 15.858557189 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.315361681 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.316672859 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209177086 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.377152853 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156026453 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.207328417 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.312849926 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.329508936 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.1063312 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175824902 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190751628 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.285727494 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099723758 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.163075142 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.314088939 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.383511809 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.16154169 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174914466 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.144538728 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.154304561 seconds)
  done (took 5.652001347 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.129096397 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174399848 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160806464 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.161718782 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.105963553 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.143103688 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099490992 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.155299568 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.135590136 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.107115307 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.126752536 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.12608912 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.139616071 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.109231183 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.148565365 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.177938171 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104603083 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.137195492 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.153789521 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.106491755 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.139896568 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.159486783 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.110830855 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.15809813 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.145596505 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.116243076 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.128586 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.10798149 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.132877646 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.104987783 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.136704543 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.150930499 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106295618 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.13452144 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.109600291 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.141965108 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.101785469 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.131329056 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.100728629 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.132614007 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.145337715 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.111133687 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.132118134 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098152881 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.140546246 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.102022755 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.111253414 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.140614189 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.140666828 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.114015224 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139005693 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.11236579 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.135916077 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.148539127 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.103062145 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.146431111 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.112768291 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.14253286 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.13613198 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098633834 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126931797 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104925404 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.133752996 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.112479833 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13831292 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.15226057 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.116619977 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129203928 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.10602757 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.133412918 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103750657 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.147946428 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.15430881 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.104028178 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.133604343 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11638633 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.133749701 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092695012 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.139008235 seconds)
  done (took 11.23972279 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136130287 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.134264895 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121225629 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.167507435 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.141988195 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107107871 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.133830163 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.120412627 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.143633655 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112106286 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.143094863 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.141754311 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126166104 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.142626671 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103996688 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146167378 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.108851025 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.174882985 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150906596 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.16462303 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.113518871 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135502147 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.113875336 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.14397983 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.166091662 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.112809474 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163198991 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.138704502 seconds)
  done (took 4.900947603 seconds)
done (took 50.937645172 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.212262586 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.375788864 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.163640391 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.162337507 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.204143752 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.187735637 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.156550597 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.353450653 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.910096115 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.153076932 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.166038482 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.158673025 seconds)
done (took 27.282309316 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.461283142 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.665037497 seconds)
    (2/2) benchmarking "String"...
    done (took 1.454513015 seconds)
  done (took 4.199106052 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.152834444 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.156630636 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.399930152 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.156895109 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.172880557 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.171097135 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.156601801 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.152911593 seconds)
  done (took 15.447679501 seconds)
done (took 25.341273181 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.196770404 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.340373606 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.4086521 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.168015155 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.177917821 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.170924798 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.171605149 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.176641164 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.157439932 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.163192318 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.561557827 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.433754333 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.169632574 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.550661875 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.15218858 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.205465932 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.153639957 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.389318615 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.156927708 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.20344918 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.143508926 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.148922102 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.166800928 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.172333243 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.163318897 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.159102162 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.194076326 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.158138305 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.346558705 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.194517695 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.20929271 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.160981992 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.199418548 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.157588951 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.160062133 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.172734923 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.343159658 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.168128316 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.152972573 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.165473719 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.349050644 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.169948608 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.15733097 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.163215682 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.16808483 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.194892691 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.148290196 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.263984632 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.177651409 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.160497176 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.235359462 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.534676542 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.164575456 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.16381127 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.184792375 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.379269481 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.172901273 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.21251944 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.186105198 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.164818744 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.171607261 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.161092673 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.213004723 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.155773249 seconds)
  done (took 140.97705547 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.16106546 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.161631327 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.163088137 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.179814946 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.158727342 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.160586604 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.161505321 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.160946316 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.160290808 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.166058084 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.161204737 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.154136838 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.160118793 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.174054038 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.167100253 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.183101599 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.162051717 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.17313627 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.177311324 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.160189467 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.1656732 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.16128013 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.17359447 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.154787214 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.203610707 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.257797599 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.203829667 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.18994412 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.166477794 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.161249664 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.201581704 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.18169483 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.754741828 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.025210379 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.17795964 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.173238314 seconds)
  done (took 78.743113438 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.163088297 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.162456519 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.16380097 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.191086072 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.161397873 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.724736023 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.726392299 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.884653246 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.250283646 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.47131546 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.420773062 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.15763013 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.255502905 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.168388417 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.156213932 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.177380831 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.201550719 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.158687472 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.159367423 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.716807907 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.17501017 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.382808605 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.329513594 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.169084682 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.192358129 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.561708843 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.153178216 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.191074925 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.488341037 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.201496934 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.155899718 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.519443215 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.724143627 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.154270119 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.274206942 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.161284303 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.191453176 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.159834774 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.442932259 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.157906061 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.159316873 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.165739538 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.807561194 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.161522015 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.70859438 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.160582423 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.099118079 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.159041166 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.163428509 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.406300926 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.79801454 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.173923654 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.160890125 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.161644638 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.15732666 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.159603369 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.191194141 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.460528037 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.270512043 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.17529172 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.164224574 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.191023434 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.160047871 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.286097423 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.154824401 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.088344794 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.230194037 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.2732692 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.71046655 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.158569096 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25757868 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.278967561 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.154955481 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.160078619 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.164748863 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.162039066 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.161330901 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.27525984 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.158241393 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.567031032 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.329291026 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.174613919 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.44468238 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.26130898 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.159809255 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.513540673 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.162087988 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.162545854 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878617874 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.255771362 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.159942558 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.163880677 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.161915203 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.567355689 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.708934339 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.396493647 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.166672794 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.937561731 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.155665414 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.569754509 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.686050278 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.808815418 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.163446195 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.275810933 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.328823308 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.171303443 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.164163322 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.163172151 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.160120134 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.428635987 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.163953565 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.21899938 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.160907062 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.561021391 seconds)
  done (took 361.588111484 seconds)
done (took 582.38703876 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.905453166 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.853745029 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.988149468 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.874548085 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.847253482 seconds)
  done (took 10.549770899 seconds)
done (took 11.631736381 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.34821365 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.347402625 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.215921086 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.345429072 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.190077923 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.36123047 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.325697549 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.177117248 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.263699284 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.238866724 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.262879836 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213194721 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.191704435 seconds)
  done (took 17.564393792 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.438944895 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.162997866 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.244478071 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.406398901 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.197262644 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432083409 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.456275703 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.163861499 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.311049011 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.180369272 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.17730257 seconds)
  done (took 17.25392654 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.427210618 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.162796561 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.248534987 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405150521 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.204335182 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.434473788 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.464844084 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.163002419 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.305428251 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.181473533 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.177206157 seconds)
  done (took 17.254996399 seconds)
done (took 53.156218394 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.199826899 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.324162915 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.191481454 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.183303535 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.173624892 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.175211538 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.183025942 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.173872937 seconds)
  done (took 10.687286274 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.172378068 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.17333975 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.175870068 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.174479437 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.176736645 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.172963108 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.172668185 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.173740701 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.174444439 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.173555317 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.172121337 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.173814782 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.172782457 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.171447486 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.174975438 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.174991944 seconds)
  done (took 19.864602766 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.17351919 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.171063467 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.171304678 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.170770258 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.173912976 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.171609173 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.173095996 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.17544554 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.172153034 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.170130666 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.173917858 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.172471501 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.172202661 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.175508069 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.171953256 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.17489011 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.172873348 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.17352153 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.178991369 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.172843942 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.173849364 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.17277842 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.174134689 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.170278718 seconds)
  done (took 29.233870108 seconds)
done (took 60.865286181 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.164884933 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.185322817 seconds)
  done (took 5.430706572 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.232606278 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.235523432 seconds)
  done (took 3.553671083 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.175366677 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.172880968 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.173214527 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.1726004 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.173872165 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.172871356 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.174423871 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.172399374 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.171248442 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.174788981 seconds)
  done (took 12.815544252 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.179034495 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.175019259 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.176853396 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.17321311 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.17538827 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.173049332 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.17363642 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.174382345 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.172204046 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.17477336 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.172814451 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.176014913 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.175094658 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.174634053 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.174890974 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.174212451 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.174804035 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.173618446 seconds)
  done (took 22.225265217 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.188578034 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.195265267 seconds)
  done (took 3.465785227 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.316320964 seconds)
    (2/7) benchmarking "second"...
    done (took 1.215768694 seconds)
    (3/7) benchmarking "month"...
    done (took 1.29206934 seconds)
    (4/7) benchmarking "year"...
    done (took 1.280754434 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.216939516 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.194644188 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.217065492 seconds)
  done (took 9.815692878 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.17713533 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.376591884 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.484030045 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.727620204 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.179123032 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.200226454 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.989452682 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.201778653 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.194724147 seconds)
  done (took 13.611784405 seconds)
done (took 71.999345687 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.163577757 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.188573127 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.192080979 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.199286789 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.509849375 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.210210665 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.16191338 seconds)
done (took 15.70968099 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.162377289 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.159217505 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.162353995 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.173174653 seconds)
  done (took 9.738761434 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.144333439 seconds)
    (2/2) benchmarking "read"...
    done (took 1.464721519 seconds)
  done (took 4.694177851 seconds)
done (took 15.516163131 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.176334879 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.175879779 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.174969504 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.174834583 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.177279201 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.175726431 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.174955742 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.176417558 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.176204407 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.177168583 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.176282873 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.178528112 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.178604988 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.174356816 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.17506 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.177433792 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175171755 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177425473 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.17441166 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175257934 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176655455 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.178546196 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.177455694 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.177088421 seconds)
  done (took 29.315970452 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.176250374 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.175868824 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.175940511 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.175283112 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.178982214 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.177826128 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.177945295 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.177160899 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.176203811 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.174791916 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176520926 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.177289321 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.178925507 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.175545206 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176679822 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.176406858 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.17785205 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178720313 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177159368 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.177954521 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.181204557 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178069008 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.177839278 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.177709903 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.175781824 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.180544518 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.177559059 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.17744301 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.175248644 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.176113572 seconds)
  done (took 36.400882712 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.184027261 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.181109845 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.181115086 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.176887309 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.178299109 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.178636185 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.1781637 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.179748664 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.178288243 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.178569234 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.179988588 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.176401951 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.180484997 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.179121065 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.178267897 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.178501028 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.179252619 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.179314304 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.17826329 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.178250753 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.174949007 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.17845753 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.178615555 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.17932872 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.179705952 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.176720711 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.178602719 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.176935801 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.179655908 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.175653423 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.178420523 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.176907277 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.178622454 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.180024436 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.174901975 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.176730314 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.18136622 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.181914292 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.178759828 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.178395099 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.178343821 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.181538496 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.177410765 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.179158091 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.180985769 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.178903958 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.178864844 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.177032533 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.178730232 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.179549614 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.180409604 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.175567911 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.180324232 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.179558743 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.175833564 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.177712298 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.176462768 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.178274432 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.179639867 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.178462185 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.177789146 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.178554639 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.178882096 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.176878545 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.179002281 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.178499622 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.179079761 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.180423776 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.177924946 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.179521233 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.180807422 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.177693075 seconds)
  done (took 85.954095757 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.17930324 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.180132847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.180000138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.177365144 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.180272712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.17942587 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.178218641 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179703341 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177817964 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.177843605 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177597208 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.179438267 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178611424 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.178208352 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.177563711 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.179028546 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.179009322 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.17836597 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.178287838 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.178988991 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.177678007 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.178042124 seconds)
  done (took 27.015346854 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.17925527 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.178811732 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.178854465 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.17858321 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.179146261 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.178980726 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.178888577 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.178500286 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179628616 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.176411482 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178608708 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180391633 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.181530409 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180165736 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176578416 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.179643703 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.181221309 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.182870669 seconds)
  done (took 22.316326841 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.181857811 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.180583713 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.181859336 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.18262493 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.181032395 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.180636431 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.178863522 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.182486019 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.179111854 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.179538311 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.178391412 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182218453 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.1785066 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18062411 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179298958 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.180342805 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.180967814 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179489656 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17880257 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.178240429 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.179446313 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.179653122 seconds)
  done (took 27.052093987 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.177230532 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.180095877 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.178052804 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.179246608 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.179989141 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.178383804 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.181324432 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.180734628 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.177910808 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.177419816 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.179141811 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.180011203 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.180345343 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.179124212 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.178866259 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.178632284 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.177828505 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.179500651 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.177697378 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.179020882 seconds)
  done (took 24.666511347 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.182086551 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.18370873 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.182577799 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183092624 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.180775296 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.181074024 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.180319294 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.181427285 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.18053239 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.182547072 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.183092771 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.182905913 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185023132 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.181846108 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.183434788 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.182085289 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.181238414 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.183487219 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.182859249 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.180427857 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.182020652 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.182486903 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.180446401 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.181810667 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.184810997 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.184551318 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.182643627 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.183645171 seconds)
  done (took 34.193369264 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.181791264 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.1808131 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.180210802 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.183629886 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.180226858 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.183315184 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.183213297 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.179580907 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.182351216 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.183140606 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.183253716 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.181611657 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.184689784 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.181233314 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.182209315 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.183169343 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184152763 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.18407024 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180776388 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183436937 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.178679058 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.183189153 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.184447875 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.181483726 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182646876 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.181677944 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.182804047 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.184252555 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.182044871 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.183114743 seconds)
  done (took 36.559658715 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.237366086 seconds)
    (2/2) benchmarking "in"...
    done (took 1.229806239 seconds)
  done (took 3.555608576 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.18573119 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185761246 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.184617017 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.184112568 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.184642251 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.182692401 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.183442498 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.183369057 seconds)
  done (took 10.564696249 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.180070947 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.183449623 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.184540141 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.185327117 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.185802347 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.180948155 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.191848254 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.189863371 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.18215538 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.18130758 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.182239781 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.184316472 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.18517818 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.183335336 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.18203995 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183250088 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.186397643 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.185059163 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.18502641 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.1832145 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185449001 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184850549 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.186137528 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.187942033 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.183009654 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.190793482 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.189132696 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.19015532 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.1823775 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.188272664 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.182591028 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.184660626 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.188431588 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.185979165 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.185146825 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.186135726 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.192743407 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.203626134 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.189673749 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.188858866 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.187170843 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.186723256 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.183553232 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.185024506 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.185908054 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.190356521 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.188344751 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.188482557 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.182665631 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.184208289 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.189984942 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182556799 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.187771632 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.189065789 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.185244808 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.19400428 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.208424282 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.185930048 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.188419013 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.190932838 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.19949739 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.197178592 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.1882761 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.189211234 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.19266464 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.198180507 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.194058417 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.195356911 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.188613171 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.188949181 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.192526837 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.20035101 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.197656031 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.189963047 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190336802 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.188519368 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.183531654 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.191699269 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.192464262 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.193259803 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.191954575 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.189437096 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.195452505 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19899682 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.182487599 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.191442319 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.191058137 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.191263979 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.187169229 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.197102709 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.210636887 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.191283628 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.183482565 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.184573534 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.189023017 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.191681362 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.186898654 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.187616437 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.193230685 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.192048267 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.189407871 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.18839277 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.194431442 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192421145 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.194497585 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.193585904 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.195531073 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.185678441 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.194756761 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.193691549 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191467113 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.18789162 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.191592524 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.190713026 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.187141237 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.19430607 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.192306178 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.189871967 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.19141832 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.191767664 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.195816637 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.203910889 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.193116402 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.190614384 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.190781088 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.198662083 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.191929877 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.190281392 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.193339369 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.191815053 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.189720987 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.190344689 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.196365498 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.188409983 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191306567 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.19031891 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.193406325 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.192902772 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.193107317 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.190897346 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.191393238 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.188444816 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.191000864 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.193853772 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.195749954 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.190733876 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.199792844 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.194570539 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.191006686 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.194061162 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.197203116 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.194993429 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.190436557 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.195432366 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.189385148 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.194909437 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.191511784 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.194044735 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.195393945 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.195971056 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194393383 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.190090639 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.193509273 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.195389778 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.195233345 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.191095866 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.19483453 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.193168768 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.195403689 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.188922103 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.193930333 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.188160396 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.194150167 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.198709526 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.194773601 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.192342858 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.194715563 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.196382695 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.195763587 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.198887623 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.192760502 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.195265837 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.197012541 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.197515152 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.199628818 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.196844816 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.196724603 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.189819966 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.191609428 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.195659763 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.192591866 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.201334529 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.201870621 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.201362887 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.193705292 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.194826175 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.194293449 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.197621637 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.196484395 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.199135639 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.193988072 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19606115 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.193996999 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198522453 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.19325782 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.196712606 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.193676829 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.196822057 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.199040046 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.196281358 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.19634817 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.193392589 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.193104845 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.195240576 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.194396578 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.198344664 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.192821749 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.196199604 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.192299936 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.197120151 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.198677685 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.198341062 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.200177052 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.202489981 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196856256 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.197159019 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.196984091 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.190864858 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.199939834 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.197153624 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.197188679 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.203473174 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.197849388 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.195797442 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.203568617 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.213329932 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.192774775 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.199332017 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.201068065 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.19983319 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.194172742 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.204450537 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.199230495 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.198958401 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.198953615 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.195354365 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200974178 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.200815429 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.201415626 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.195557602 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.201691211 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.194940053 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.200859892 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.195569676 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.197664277 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.196555087 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.19902639 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.200864691 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.200336383 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.195752743 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.20091843 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.200140216 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.201930404 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.199249119 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.206890345 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.202050049 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.199858145 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.19825929 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.197723833 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.204145177 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.195287765 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.20039573 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.196361709 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.209105523 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.214448852 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.20622706 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.203316903 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.200371191 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.202897445 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.198621449 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.198781167 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.19767625 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.19790213 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.196725681 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.198291801 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.199640936 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.1986644 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.201922158 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.20145178 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.197457788 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.204679206 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.201000228 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.196574058 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.202878394 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.203436282 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.201535951 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.197895399 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.200113542 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.199472915 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202417748 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.197057151 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.200567902 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20750308 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.203521452 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.200779821 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.200467654 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.20045007 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.199464054 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.204105652 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.20588035 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.203615142 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.20947213 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.201129061 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.206789108 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.200679294 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209927135 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.207134671 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.200726336 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.208735256 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.206262458 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.199158603 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.200097435 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.20460138 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.209669902 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.208557225 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.199362975 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.207024088 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.205131189 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.204174552 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.204103387 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.202798556 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.204363771 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.205382778 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.207859315 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.22412198 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.203001307 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.204375547 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.206688155 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.205968205 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.205498917 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.199309362 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.204235216 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.207896998 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.201849489 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.201729561 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.202182888 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.205970802 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.204917195 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.205423974 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.207431477 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.204109525 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.212730594 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.206926682 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20983539 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.2071304 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.208283586 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210912857 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.212209685 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.21028821 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.203727653 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.21089322 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.205254638 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.203303444 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.203301965 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.201754591 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.207102993 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.201633185 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.21105338 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.207042564 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.203814667 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.20641947 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.21145875 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.20413531 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.211813239 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.222555019 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.202534652 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.212879497 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.209709253 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.206081419 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.210874125 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.209291587 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.203524083 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.205694603 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.204473817 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207786211 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.19966511 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.203735269 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.198874504 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.205343367 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.204308305 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.20508189 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.193325962 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.192992583 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.190931707 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.195939702 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.195706026 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.19881297 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.19102964 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.194132932 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.184526939 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.193977409 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.192340333 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.183750745 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.189465353 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.188516506 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.182023271 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.184346469 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.187686919 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178182746 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.183404678 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.17849556 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182475437 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.183205366 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.181141672 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.181170219 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.185965214 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.174558636 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.17383985 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.178211007 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.178882872 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.179463648 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.176748166 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.181052347 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.173915946 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.173806423 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.171511136 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.168637413 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.173738853 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.17077434 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.173309072 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.167536191 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.173890018 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.174958021 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.166921792 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.164090779 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.164066672 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.172646136 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.169047534 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.170694973 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.16854458 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.172168947 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.169917209 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.164588045 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.169159497 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.163611097 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.164230484 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.165585003 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.163082795 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.163137685 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.163999129 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.164879847 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.166883919 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.163525211 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.159934648 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.169748498 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.186010946 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.167489698 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.160976432 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.164219337 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.162248395 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.165088333 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.165664216 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.160307038 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.168202251 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.167437832 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.165270821 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.161286599 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.162309837 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.157002909 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.163893034 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.163522199 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.159951757 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.163318558 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.158532391 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163388908 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.164535497 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.160645727 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.153907303 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.151355157 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.152180959 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.158649425 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.156343054 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.15827043 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.154006092 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.1558491 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.162029267 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.158601799 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.158647935 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.159992344 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.154659397 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.158617221 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.155187874 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.156941924 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.155884119 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.154944302 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.161551929 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.15917172 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.155331568 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.156531645 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.162253011 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.157243457 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.154311495 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.158218372 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.159685635 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.163167632 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.15981168 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.157094064 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.158223565 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.159844243 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.161601619 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.159132167 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.156044437 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.166388118 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.17886774 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.156344519 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.151863969 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.156999115 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.16066311 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.161594469 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.1579589 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.15653229 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.160385563 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.166351613 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.160031846 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.166025036 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.177968958 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.153809632 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.161610341 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.157204938 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.162663288 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.160127178 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.162308533 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.157057831 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.154386092 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.167537827 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.163467756 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.157128847 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.174245043 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.163463895 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.157057106 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.163572045 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.158304388 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.162515336 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.159445972 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.162663721 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.161065206 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.163471864 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.163657861 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.157053295 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165986317 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.163584828 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.161521573 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.160168488 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.157969226 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.160023533 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.163299687 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.1630056 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.164661799 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.160242514 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.164295592 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.164248417 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.16263606 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.170426654 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.168024999 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.164751587 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.160234654 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.163224227 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.167118731 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.16266728 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.159323059 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.164595139 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.162921744 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.165138138 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.156061738 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.165119544 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.161918116 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.158936541 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.158118186 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.159675413 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.160810066 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.166427507 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.175499217 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.163453896 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.160351448 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.164820401 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.165339926 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.158718431 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.160122466 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.16750968 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.161644711 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.160617587 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.167523411 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.166465901 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.165121062 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.162920364 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.164607649 seconds)
  done (took 708.081346734 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.164941637 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.160479509 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.164772301 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.160133907 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165073392 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.163132156 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.163999636 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.166672325 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.16071145 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.164618316 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.166355296 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165255213 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.161257741 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.165901822 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.16755452 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.165304186 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.160220974 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.16279722 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.164754779 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165825812 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.162425358 seconds)
  done (took 25.521072999 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.161329693 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.161807467 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.166414724 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.165002655 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.162544759 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.164629225 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.165112626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165365019 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.164190436 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.162672928 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.161741756 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163108189 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.161985904 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.161299776 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160117992 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.164629041 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.164469388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.161121177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.161932446 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.16623189 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.169454067 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.164727781 seconds)
  done (took 26.678436746 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.162373953 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.163333673 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.16173001 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.166049588 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.164585093 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.167268531 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.159639656 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.158998526 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.15843369 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.155025964 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.156135293 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.158694717 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.163367482 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.165686905 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.160373135 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.158533283 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.158605203 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.15841523 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.157702177 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.159904707 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.160361209 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.160834566 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.158025984 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.152448812 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.156603614 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.155682957 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.157254543 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.15788517 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.154076574 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.158933907 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.15598248 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.151773601 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.155206229 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.150146104 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.151253214 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.159567543 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.154093357 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.154629204 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.155774482 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.159119022 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.169877118 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.153535534 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.164542536 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.162019307 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.158540062 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.152870842 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.159665672 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.154604452 seconds)
  done (took 56.68617333 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.159213861 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.158079588 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.157141585 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.155117733 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.156999056 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.156653879 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.152378888 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.15640418 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.1572188 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.157466273 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.152747103 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.157394271 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.155962101 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.156307832 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.157917023 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.150153429 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.158355333 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.153571063 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.154850306 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.157376476 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.154807158 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.153926645 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.153951026 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.15449271 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.155397753 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.1585366 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.156164119 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.15864109 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.159119176 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.158227426 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.153846491 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.158671633 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.160854533 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.159009104 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.157716545 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.159453311 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.159258378 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.156637534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.161219736 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.157072855 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.159711399 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.155436664 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.154836067 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.155588054 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.157763069 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.155458424 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.155932943 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.156891237 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.153991283 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.159121288 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.155020857 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.156501315 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.156728801 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.155401885 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.156944091 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.15983724 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.161422858 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.157079605 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.1559028 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.156598428 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.160123829 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.162175584 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.159824964 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.157340007 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.157108719 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.155407971 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.159257473 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.156855895 seconds)
  done (took 79.750461368 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.159911637 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.157803009 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.156141969 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.157589546 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.155274644 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.15770722 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.156096836 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.158903079 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.159903903 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.157838957 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.157893261 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.159898908 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.156280382 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.159637832 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.159939227 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.157953895 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.159985306 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.159027508 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.158840172 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.161460122 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.157100929 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.156801972 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.157482552 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.156315203 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.157406964 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.159210492 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.158795867 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.158421597 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.159331944 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.158421177 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.161852071 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.158684445 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.157629271 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.156258854 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.160171258 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.161676736 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.158559717 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.160395458 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.162691684 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.160308488 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.162695422 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.160329301 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.159673324 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.159463425 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.15724789 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.161638484 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.160254208 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.162024818 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.158697155 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.15980659 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.16273735 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.161388292 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.160012112 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.16025821 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.161306694 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.15973417 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.161259418 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.161661009 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.162897537 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.160602875 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.161342948 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.164493569 seconds)
  done (took 72.964617938 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.162070182 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.162515599 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.161663877 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.16238296 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.163823541 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.162303137 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.163305098 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.161900995 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.158183429 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.158442763 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163497745 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.16254918 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164122323 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162122095 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.161735474 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165162156 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.160281736 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.163485507 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159179853 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.16011724 seconds)
  done (took 24.316929114 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.15919155 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.161723766 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.164264835 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.165320389 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.161000516 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.159402502 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.161281784 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158802597 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.162508782 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163279629 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.163965655 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.162012577 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162236277 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.163513986 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.162095753 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.166662776 seconds)
  done (took 19.673595519 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.16588184 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.165161119 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.162599422 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.164883606 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.164747537 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.164965567 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.163856366 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.161667982 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.160574732 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.165114997 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.164357345 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.166044966 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.165234646 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.159561489 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.162042315 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.164932681 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.159745158 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.164425873 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.162624948 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.163732845 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.165738215 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.168295655 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.164474878 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.16391947 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.1631782 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.162769067 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.165666081 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.16522586 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.163321003 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.166217784 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.16761888 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.163317143 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.167344036 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.163283081 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.163113934 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.166860903 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.167307432 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.16460467 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.166837854 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.166245974 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.166172805 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.168430687 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.166020913 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.163281452 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.163691494 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.165876542 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.167455486 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.162949038 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.167145707 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.163268727 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.167610623 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.166270232 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.164421684 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.169394964 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.164705578 seconds)
  done (took 65.144691964 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170424638 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.167449249 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.167290342 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.167469457 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.167626619 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.168714039 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.166014811 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.169123253 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167789227 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.166453102 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.165899215 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.16949885 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.166454973 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.168965604 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.167498327 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.166424243 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.167716511 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.170442012 seconds)
  done (took 22.104393266 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.165891598 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.164601384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.166703485 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.168894417 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.171261413 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.168553701 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169143298 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.168151484 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167460071 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.168155759 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166048522 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.170305864 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166094802 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.168427429 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.169185776 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166330332 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.170078159 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.167423488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.171027336 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.169468243 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.167820485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.169382163 seconds)
  done (took 26.783241111 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.165008209 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.16272114 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.163853096 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.181290811 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.175934665 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.16509273 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.164457262 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.164755445 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.185140968 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.205838969 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.202500227 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.178139102 seconds)
  done (took 15.198591336 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.170606898 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.171565091 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.170168191 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172455226 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167524139 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.172572057 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.171171165 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173129408 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169715115 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172166182 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.170715646 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171859175 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173481548 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173378582 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.172178102 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172995642 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.17037575 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.171538517 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.172884442 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168747644 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.170124518 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.172305933 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.17173424 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172792163 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.17179756 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171107236 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.17123234 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173984133 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.170988851 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172932951 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173428901 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.174560138 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.171746354 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171208058 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173614171 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171539211 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175508739 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.174912741 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.1735047 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169824449 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.173877835 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173715757 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.17644301 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173728304 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173018095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171175528 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.174259429 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.172127658 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173828718 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.176024116 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172757545 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172412444 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.175488272 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173237389 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.174940419 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.172731465 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.172192391 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.177081829 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.175453636 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.174438585 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176825614 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.177452203 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.172251025 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172880743 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.176470666 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173909717 seconds)
  done (took 78.496668967 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.176954475 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.173280109 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173738597 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175545233 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176109534 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.175467137 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.176777906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176414913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.174204071 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.174889816 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173504873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.175331534 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.175860973 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178416087 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.17220931 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173863253 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.175291431 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173871984 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.175502894 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.177345611 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171997891 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.175808632 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.174359831 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174184192 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178998016 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.178740835 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176963898 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.176325746 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.174931757 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.17898608 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177511375 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.177089426 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175834762 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.175583187 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.176361746 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174872214 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178392736 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.177087532 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.175025485 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179272032 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.179980604 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.176768762 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.177022206 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.179684467 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181210279 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.178459367 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176177313 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.17669538 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.178624994 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173198101 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.178427996 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.176506857 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176511272 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.177149036 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179328608 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.177948558 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179356623 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175877849 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.177928298 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.177988057 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.178177228 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180249429 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181395751 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.176990976 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.177639272 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.178691295 seconds)
  done (took 78.751616144 seconds)
done (took 1638.830738935 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.343060193 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.291501013 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.174759227 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.189055036 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.168516541 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.171700959 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.182493959 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.170704994 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.170960533 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.174312252 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.172684227 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.36492076 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.173053332 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.170961793 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.176135974 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.269100288 seconds)
  done (took 24.456335542 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.195223551 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.187936557 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.289628716 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.201079301 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.207623558 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.359174773 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.237082747 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.185357651 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.341583313 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.203783549 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.177573342 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.219749262 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.182882324 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.178679923 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.195664946 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.357452927 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.409964611 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.175480541 seconds)
  done (took 26.39874133 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.589631101 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.18704077 seconds)
  done (took 4.871926911 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.200834318 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.182674482 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.188282417 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.182873191 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.176633277 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.171746879 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.182834767 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.183370565 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.173727962 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.29817219 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.180856711 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.198540237 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.203622378 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.186174314 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.190479282 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.224406966 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.341136028 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.189863602 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.187002992 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.195717458 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.188193225 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.285950662 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.224094408 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.191720567 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.299921792 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.181566482 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.188087653 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.19492372 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.320574519 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.189323152 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.183387641 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.186177584 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.188289846 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.176364435 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.667141659 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.190647377 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.18803935 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.211859674 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.191487895 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.33126975 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.186371047 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.192545778 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.176251845 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.660964628 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.318257924 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.29078275 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.195253816 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.186504746 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.188992575 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.246291665 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.184618762 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.184713441 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.246907462 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.953471886 seconds)
  done (took 77.13473904 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.19122892 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.183158929 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.359934119 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.20285233 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180880183 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180883828 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.179668994 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.443429088 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.220191929 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.189810526 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.499873233 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.734568368 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.204594764 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.251023822 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.086550197 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.27163587 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.183858397 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.17878572 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.179286026 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.187118887 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717561931 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.184971963 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.181517219 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.328856001 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.219170646 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.676597604 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.176866805 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.182298544 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.189448757 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.183149921 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.692780733 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.209371131 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.254427734 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.181102966 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.443140579 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.541199645 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.501311287 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.191692715 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.204236608 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.17962698 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.185570813 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.662745456 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.522206087 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.176883035 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.20246091 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.674803538 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.182981335 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.190683825 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.187653279 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.428930338 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.185679147 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.18790575 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.18399215 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.184734634 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.18556229 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.280087106 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.268379967 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.680889709 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.184803642 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.181535751 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.218553765 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.183663328 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.190780347 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.18724854 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.207494376 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.518873645 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.329556014 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.183728004 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.523558343 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.681482929 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.199600722 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.742797814 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.203052901 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.195909056 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.410144557 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.196136021 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.186691409 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.693788854 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.203217109 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.180849356 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.505507405 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.182688375 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.502686414 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.205366982 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.203958831 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746619989 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.186761195 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.197806823 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.188489825 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.188270501 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.184992048 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.189937451 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.452594621 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.234913626 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.187437334 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.187730523 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.224760627 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.186320359 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.20436571 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.198049328 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.739808057 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.205505497 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.189244964 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.193201488 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.187446497 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.207086341 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.188681908 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.186137889 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.454495868 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.188192977 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.1918794 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.190422666 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.187378292 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.187170954 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.322560037 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.18980714 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.48009863 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.188202823 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.184618364 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.197556743 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.185114107 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.200168565 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.182132373 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.189097888 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.047521914 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.445363 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.205863328 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.189951629 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.191938226 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.185952036 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.181386873 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.188141468 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.262905754 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.195234836 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.955314684 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.207233907 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.21216275 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.187875088 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.192787283 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.189828765 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.191244944 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.196124262 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.476928118 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.457280919 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.339225267 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.187410539 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.196207864 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944770053 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.241113374 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.370536399 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.21268746 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.186713052 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.446315049 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.407937665 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.192839989 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.19108935 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.192906799 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444523511 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.19210335 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.489729478 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.723108785 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.206010262 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.193059056 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968181117 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896095374 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.193430882 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.197260328 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.510946814 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.209873334 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.19098032 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.189848865 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.189790001 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.201846834 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.206337823 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.197654322 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.193069077 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.192727319 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.236097458 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.383984377 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.209021168 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.200657824 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.679343973 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.22254802 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.189174769 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.218742409 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.19080062 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.192233292 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.273718473 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.201666968 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.217668443 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.200209104 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.189089381 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.693842052 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.188318725 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.189359594 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.384670663 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869007175 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.206437206 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.191983766 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.193924948 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.1107536 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.703663429 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.244875739 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.482075245 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.189571762 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.232931527 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.189709071 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.244190432 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.6975201 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.195325531 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.196770586 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.833544856 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.206717101 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.696444755 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.19549148 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.193984745 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.770701322 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.208507668 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.198206905 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.193772769 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.20145027 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512901625 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.201484327 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.223509973 seconds)
  done (took 465.318903986 seconds)
done (took 599.27092611 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.194219989 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.196095489 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.187578725 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.19291678 seconds)
  done (took 9.887367741 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.206778491 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.198508655 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.207525121 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.20070677 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.203906068 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.19997155 seconds)
  done (took 8.333646978 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.195184035 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.194732333 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.193442122 seconds)
  done (took 7.697197461 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.386956019 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.213860923 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.511358196 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.214616596 seconds)
  done (took 8.440826608 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.205712735 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.204845572 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.204650449 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.207110806 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.210980415 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.209729458 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.208606726 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.207124387 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.210227686 seconds)
  done (took 11.98263288 seconds)
done (took 47.456786596 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.885359639 seconds)
    (2/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.336743418 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.291981202 seconds)
    (4/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.198505691 seconds)
    (5/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.194149804 seconds)
    (6/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.202288713 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.256009904 seconds)
    (8/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.188935876 seconds)
    (9/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.275856386 seconds)
    (10/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.192936848 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.230070889 seconds)
    (12/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.066731369 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.27168798 seconds)
    (14/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.401921913 seconds)
    (15/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.242504694 seconds)
    (16/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.256396986 seconds)
    (17/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.227803947 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.307022301 seconds)
    (19/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.237287734 seconds)
    (20/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.203373615 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.283169427 seconds)
    (22/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.33439871 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.200309687 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.195754892 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.329141155 seconds)
    (26/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.190050194 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.236779683 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.302267384 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.448429595 seconds)
    (30/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.202200985 seconds)
    (31/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.298831019 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.355427449 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.271360927 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.907583195 seconds)
    (35/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.211557674 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.885056116 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.377232711 seconds)
    (38/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.283227184 seconds)
    (39/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.25215213 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.232271271 seconds)
    (41/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.193987202 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.202906913 seconds)
    (43/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.252590087 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.200910227 seconds)
    (45/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.440635386 seconds)
    (46/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.346747519 seconds)
    (47/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.333161082 seconds)
    (48/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.195174804 seconds)
    (49/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.234612309 seconds)
    (50/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.368393489 seconds)
    (51/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.936251217 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.198919395 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.32246796 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.291544315 seconds)
    (55/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.304927622 seconds)
    (56/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.241612793 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.109577398 seconds)
    (58/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.343163803 seconds)
    (59/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.091023892 seconds)
    (60/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.369400539 seconds)
    (61/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.194153185 seconds)
    (62/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.229438772 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.295843238 seconds)
    (64/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.260042725 seconds)
    (65/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.200780003 seconds)
    (66/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.192551343 seconds)
    (67/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.858694692 seconds)
    (68/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.236588957 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.297564438 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.295856607 seconds)
    (71/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.229119277 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.278074269 seconds)
    (73/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.98960559 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.871628413 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.408055838 seconds)
    (76/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.236293355 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.303270672 seconds)
    (78/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.235004781 seconds)
    (79/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.36571625 seconds)
    (80/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.300989352 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.27676453 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.338599909 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.297615824 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.277354126 seconds)
    (85/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.196540094 seconds)
    (86/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.256039818 seconds)
    (87/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.219304536 seconds)
    (88/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.981826854 seconds)
    (89/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.899677614 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.306919175 seconds)
    (91/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.24111451 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.240707387 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.281339932 seconds)
    (94/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.293060891 seconds)
    (95/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.209772318 seconds)
    (96/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.253741277 seconds)
    (97/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.197731251 seconds)
    (98/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.269461231 seconds)
    (99/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.231517505 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.220917003 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.24257148 seconds)
    (102/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.245206763 seconds)
    (103/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.34740432 seconds)
    (104/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.343643029 seconds)
    (105/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.197174585 seconds)
    (106/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.36926642 seconds)
    (107/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.243907118 seconds)
    (108/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.959210567 seconds)
    (109/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.195610393 seconds)
    (110/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.193873725 seconds)
    (111/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.202629293 seconds)
    (112/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.240668747 seconds)
    (113/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.194826985 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.364924137 seconds)
    (115/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.408910692 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.32980561 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.242923292 seconds)
    (118/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.017041265 seconds)
    (119/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.859655034 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.407799231 seconds)
    (121/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.193126759 seconds)
    (122/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.952329605 seconds)
    (123/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.256362006 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.334711465 seconds)
    (125/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.288136714 seconds)
    (126/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.362586779 seconds)
    (127/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.353342045 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.352229203 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.277134056 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.860572707 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.301277541 seconds)
    (132/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.261392108 seconds)
    (133/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.353343933 seconds)
    (134/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.251458562 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.224919565 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.235897207 seconds)
    (137/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.889015124 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.207064905 seconds)
    (139/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.272734881 seconds)
    (140/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.214150235 seconds)
    (141/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.396604371 seconds)
    (142/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.225887731 seconds)
    (143/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.197531099 seconds)
    (144/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.363581744 seconds)
    (145/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.994786125 seconds)
    (146/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.31099758 seconds)
    (147/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.195712727 seconds)
    (148/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.116720675 seconds)
    (149/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.252897109 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.210875678 seconds)
    (151/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.211342674 seconds)
    (152/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.213349547 seconds)
    (153/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.264692371 seconds)
    (154/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.219378477 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.199761387 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.365976958 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.254618815 seconds)
    (158/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.371509976 seconds)
    (159/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.255203073 seconds)
    (160/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.310855515 seconds)
    (161/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.353661976 seconds)
    (162/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.195112069 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.245462769 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.308801609 seconds)
    (165/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.197093258 seconds)
    (166/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.350480868 seconds)
    (167/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.19813572 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.403718261 seconds)
    (169/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.299007293 seconds)
    (170/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.1998701 seconds)
    (171/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.258659185 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.298220018 seconds)
    (173/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.250163104 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.283744764 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.297513894 seconds)
    (176/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.2883764 seconds)
    (177/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.960769361 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.35410743 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.227360477 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.432869783 seconds)
    (181/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.391342618 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.942054615 seconds)
    (183/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.19877552 seconds)
    (184/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.032242289 seconds)
    (185/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.90813448 seconds)
    (186/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.989733565 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.26180383 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.964617787 seconds)
    (189/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.260029704 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.348254312 seconds)
    (191/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.355419551 seconds)
    (192/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.333905578 seconds)
  done (took 311.514187318 seconds)
done (took 312.630956329 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.232978014 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.400069787 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.21487784 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.22088857 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.217287503 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.212579516 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.228685383 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.217367716 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.225610911 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.230555769 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.211896601 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.22025411 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.232439621 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.228351084 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.249971095 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.21739764 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.217601506 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.226554271 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.228004767 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.233627797 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.220713605 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.223348598 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.235702652 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.21734943 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.229146866 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.228862982 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.226561898 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.227980505 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.225167563 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.232385253 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.215994341 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.228399441 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.235679044 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.230490182 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.221286456 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.226833806 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.218719325 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.39978106 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.237416715 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.227606614 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.226237253 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.232669985 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.227090793 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.227103842 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.229702207 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.242151895 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.226162318 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.237347716 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.21596928 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.214450004 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.238318796 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.227250654 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.223150195 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.221119854 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.212829031 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.250033967 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.227628217 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.234610628 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.224593449 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.226533134 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.250356632 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.239098718 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.228156099 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.22747708 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.223343366 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.232453131 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.229242557 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.234685688 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.22620846 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.220585801 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.22579438 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.225509784 seconds)
done (took 97.83746884 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.350156474 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.223421774 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.366234827 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.225834208 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.387531052 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.374860489 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.224289446 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.227251833 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.225027673 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.075479432 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.22348935 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.229630709 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.225782701 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.224469407 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.35897234 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.231259316 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.228073163 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.963698782 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.225792434 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.365085397 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.221076477 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.228513353 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.231078459 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.082209821 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.228564212 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.218622314 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.374214302 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.231406518 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.978890788 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.220079922 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.224809472 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.9800072 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.372667568 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.249735816 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.239399606 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.237596186 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.388991144 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.246377222 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.355362973 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.361564154 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.368742611 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.270881923 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.217236837 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.224763956 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.233696537 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.232009563 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.230969621 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.259675984 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.224510398 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.231527666 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.968620363 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.240391418 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.236663821 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.230900607 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.229576809 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.251365701 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.233724657 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.231102843 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.374706367 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.232058176 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.358812161 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.088626682 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.079328116 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.231974156 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.222501127 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.231814719 seconds)
  done (took 101.696112596 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.289290178 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.306053246 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.332486715 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.226301295 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.276817248 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.338258754 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.229162156 seconds)
  done (took 10.131977741 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.235311643 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.23169189 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.278036155 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.279944923 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.232033227 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.385406053 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.235154039 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.242335399 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.235519441 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.282159681 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.237328135 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.238205546 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.242722447 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.230563818 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.281149535 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.243513591 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.344084063 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.233292199 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.236598167 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.379879286 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.237660106 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.243388164 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.282216978 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.239297821 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.238414737 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.234338403 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.999890139 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.235193779 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.236835486 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.23743636 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.237148538 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.286397978 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.233381288 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.23309528 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.23903811 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349712857 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.237415206 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.236389264 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.237385064 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.235137501 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.237034896 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.237650978 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.239326855 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.237925487 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.238154893 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.256993273 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.238318309 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.236866 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.237150091 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.239268659 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.283186941 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.237850681 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.237657311 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.236315361 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.291126922 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.246783201 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.234127584 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.239950914 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.241001263 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.237912572 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.380930439 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.279715928 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.238570701 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.28023057 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.237051894 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.237696818 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.237489455 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.241720703 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.325683796 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.239556648 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.279954189 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.242490676 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.411933988 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.259782585 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.242132021 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.236279561 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.239322691 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.237241765 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.231016754 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.242705032 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.238438722 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.235449362 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.241229221 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.240731658 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.235666561 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.392508532 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34498378 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.238305432 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.249773097 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.243922333 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.242238894 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.286406986 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.240646508 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.241782555 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.290604506 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.35035915 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.291363744 seconds)
  done (took 127.967323635 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.249547486 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.247242285 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.241928201 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.263542462 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.238029952 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.234150099 seconds)
  done (took 8.615802635 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.239848126 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.239924026 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.239651939 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.242228962 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.240932192 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.24592025 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.242555127 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.240962305 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.245942152 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.238960163 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.24210771 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.244022174 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.246915509 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.243633835 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.244085079 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.241679851 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.242646644 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.243939022 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.242099364 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.241892149 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.236874808 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.245100511 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.242339069 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.237139445 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.246666744 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.24270477 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.260133745 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.243675673 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.244258806 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.245359111 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.258398918 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.244186624 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.235749331 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.242184582 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.24239481 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.242255484 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.247020607 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.245217739 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.245334207 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.243804157 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.246890974 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.243661528 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.243092277 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.243790927 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.239040906 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.241600863 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.24927999 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.260857117 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.246254736 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.246292005 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.246741722 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.246503883 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.246198101 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.248238306 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.243164353 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.259283289 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.246276084 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.248453738 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.24681538 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.241522776 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.247136627 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.243803092 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.242834202 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.247371686 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.244141778 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.24816409 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.241992842 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.246769796 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.243141087 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.241515182 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.246715099 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.242097898 seconds)
  done (took 91.758587387 seconds)
done (took 341.301661821 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.002534774 seconds)
  done (took 4.149994683 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.272336698 seconds)
  done (took 3.422758615 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.366497201 seconds)
  done (took 21.514237492 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.242902377 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.331484712 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.227509183 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.232699129 seconds)
  done (took 10.182075757 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.472058256 seconds)
  done (took 3.621937963 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.242526255 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.234482067 seconds)
  done (took 5.62032562 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.383581228 seconds)
  done (took 3.532712668 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.378327102 seconds)
  done (took 3.529609783 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.259517493 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.243754926 seconds)
  done (took 5.655330618 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.22301978 seconds)
  done (took 3.375222849 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.664583804 seconds)
  done (took 30.81157558 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.244699518 seconds)
  done (took 3.395232509 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.283304989 seconds)
  done (took 3.434163962 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.683752381 seconds)
  done (took 5.834578048 seconds)
done (took 109.227314201 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.231591126 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.23490823 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.233475725 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.230376134 seconds)
  done (took 10.081062234 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.294776489 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.292422727 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.29676823 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.295372408 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.297453296 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.296637983 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.270069265 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.271249808 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.292888368 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.294067842 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.297331059 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.294792255 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.295629163 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.268325594 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.297185331 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.296119161 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.294370698 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.294269192 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.270617162 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.293302173 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.242485517 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.29502749 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.295643436 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.247151961 seconds)
  done (took 32.038652755 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.734435059 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.311031767 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.390085472 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.29373953 seconds)
  done (took 6.881710473 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.321745973 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.323385732 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.337037609 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.371311447 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.384337333 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.331297743 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.268366501 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.265237785 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.254966331 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.322597822 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.375054544 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.312478733 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.404491197 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.241720691 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.455376389 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.246786031 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.243078048 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.324805025 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.376994938 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.401977214 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.243858489 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.323322579 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.32414519 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.321677625 seconds)
  done (took 32.930125096 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.255776125 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.262433155 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.248433689 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.263279679 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.247200624 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.248205711 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.246196391 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.251970873 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.243050776 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.250174309 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.246267135 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.257963454 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.252753807 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.249047738 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.257481343 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.248636244 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.244351226 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.253744995 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.252685116 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.245288859 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.251657385 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.254756056 seconds)
  done (took 28.686170478 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.23766109 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.23610955 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.58237622 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.49098051 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.235538821 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.23137539 seconds)
  done (took 13.167366759 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.304660452 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.460517588 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.238704822 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.573868389 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.648178086 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.240223006 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.243830138 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.482971292 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.772926188 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.758002944 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.291672018 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.31310446 seconds)
  done (took 18.48369363 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.235192489 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.236789141 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.238720277 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.249611331 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.291820001 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.243848131 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.250023861 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.236515084 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.295398695 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.298980274 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.244984376 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.290419091 seconds)
  done (took 20.269647649 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336588665 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.239097321 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240168587 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301122738 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254690325 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084983895 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319915864 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.944143916 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.261880371 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521527793 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24306979 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344113819 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.493374168 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240487572 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243524085 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.201638481 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469084972 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697041144 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244638516 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238644507 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291215174 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24571326 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25669802 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.441896479 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087286081 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241998996 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.506556954 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241404799 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50812765 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.256566321 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.255227586 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245277287 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.516259467 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878711182 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360313009 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439393818 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259947505 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243235438 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.254976728 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.239736083 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249660689 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.240556876 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.255726578 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242973139 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241794446 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243225542 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936317903 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.271500897 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.246521711 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.24460571 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479081988 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350895025 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.245887165 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.24461304 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256260171 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244501081 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.249266032 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365096124 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829824067 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247023776 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253356485 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.247933954 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244695981 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245178933 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848799716 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.25198246 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.250966988 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.24896533 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247259035 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242814499 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284746516 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246106703 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.270996902 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243046084 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922489277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247356852 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24978802 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.762127825 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25038393 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.248964908 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473729358 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246557269 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246398768 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.243305997 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247905384 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903423544 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.254007925 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.233803518 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.283949218 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95061613 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.46209577 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26819111 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277403393 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.470225496 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.231202581 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248526755 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.251308092 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252436011 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265826948 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.935935674 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264119636 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.247099684 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50483458 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.453755397 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255591607 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.2121875 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697420109 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271971022 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.265921453 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252343322 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.45187093 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.806752326 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.264225447 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250399877 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266379791 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.252590246 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938685286 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253688128 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.254824955 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250189732 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507194499 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.997266225 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246851717 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319111543 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255008061 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.249197854 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252510265 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253816392 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250390984 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.437934381 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2763685 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.262586713 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.249066066 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250024741 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.254294389 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255936846 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.257076311 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.472717155 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256880971 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.52763062 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252448929 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249336938 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249919442 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.467658345 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.251817317 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.2574305 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513416326 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255124188 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263878565 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.26434196 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270446732 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349874296 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272686646 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.264681385 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.505716359 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.254967159 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.257352106 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24980338 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254096296 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26036571 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.261622535 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248565897 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823798725 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236270705 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.254460368 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139476637 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.264870575 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319207386 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.26047071 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.452456172 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.253664513 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282330585 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.263719561 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.261099239 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480550163 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.25774106 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.253003727 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338887999 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.703796831 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.825319451 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.267812976 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.252890956 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.25020316 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.250911847 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252620423 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25137209 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25530138 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449618351 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267813938 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268587712 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.80941918 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256353396 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250677369 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.26417439 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.263505974 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.260555829 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251430414 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.255700145 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269378642 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261713994 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.283826037 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395589148 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.268665314 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254255727 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.773609327 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.260632948 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255527903 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257511735 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293096071 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.253533507 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044013795 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514992615 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254469995 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492045366 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259034751 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.277221958 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.256960499 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271383975 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268881322 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.25568637 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284305025 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.270955852 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256849351 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26490386 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820343248 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954246042 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76476528 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277970774 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.254000685 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.261974638 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.955071861 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273148079 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260726122 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486649836 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.953482014 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277377747 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.714692233 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.276447552 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98188421 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499678067 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492553729 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274399808 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.257261744 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515719161 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.472000334 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291080882 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258481713 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257588829 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.241481965 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794209885 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283827965 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342182853 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959057941 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278510121 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279806267 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.305827121 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.258575923 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641953002 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.276485786 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265225545 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263407442 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261215128 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0539704 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26347654 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262190514 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855296055 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.262869528 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.718873529 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278756871 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.463659632 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.276293601 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.270178054 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.264217849 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.270959662 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.516887262 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50558154 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268061178 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262757897 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76618877 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.135888704 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.272207937 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264478539 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9571122 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265856701 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532095134 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.26770304 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.255749759 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268952149 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261574423 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260853089 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.259708116 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.270074385 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240287786 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722057364 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.263393295 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267175221 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272407616 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262285682 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.515649944 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.282623787 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.82649937 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496046973 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259389823 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285185069 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.272470111 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262519819 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.254669078 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266594349 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266617342 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333623221 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.48551095 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27302042 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.248777625 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347476336 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.495460726 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266736491 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274849969 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498865408 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.265259095 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.289159615 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978009301 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301596063 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.27563177 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271511159 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273527829 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.29983006 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335340827 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.47028346 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.282263661 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.278012177 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658732762 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294289939 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272151166 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.284510455 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364019327 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271440373 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.269433895 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.043107454 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831652221 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969064934 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.830255113 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51459649 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.270483533 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269658956 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266715284 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427400112 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270125182 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547886896 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265989939 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.264672033 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304833541 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272591903 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279475941 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476422925 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547530267 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269524982 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276765102 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267061414 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.269850555 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28160098 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.479936693 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734733735 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795758662 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268676075 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.272554581 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963662077 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560554449 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272416693 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273013733 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273352841 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.276193972 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286024714 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.273698799 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269478823 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430067349 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.515809808 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916798143 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.297037383 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.302036959 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.791199865 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274095627 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.529092774 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288724673 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.474574982 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838454852 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943281705 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538723214 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336085189 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476396193 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.272084805 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433076298 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.286656587 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275532397 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272414917 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272106194 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.273324092 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.284805242 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840899414 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539641252 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.279022887 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.283366642 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304469542 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.282104221 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.494330605 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943081249 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491890255 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282197526 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.275528722 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276181577 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839465514 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519925193 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278160274 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.27731036 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507055298 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273737986 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299727172 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.791214207 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.275329676 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797340802 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.242355533 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297162626 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276052981 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.950222952 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838992585 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.279157593 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7429117 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275356874 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283434664 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549272823 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.284006649 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.288827479 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550952051 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.281823236 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28713621 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475686791 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.837683517 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014886587 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.285734311 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298081858 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.279548634 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274210237 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289615722 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273668513 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274940467 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.676649188 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.295126432 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278507283 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289011674 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.289084673 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278742375 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.272081492 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280791 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.280181424 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.270809754 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.265968834 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289996024 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394782188 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817670103 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301130296 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.957313345 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.602745826 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.53393332 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288201518 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.260471765 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.284756685 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280693582 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275548703 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273820474 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.273502735 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802965919 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.285565374 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.281547507 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.287069542 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.277162112 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489282897 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.292476563 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.482920771 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288887987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291781532 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.265329324 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279869441 seconds)
  done (took 918.641884541 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.276524094 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.281296084 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.291909788 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.284907407 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.275804973 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.382405329 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.341739702 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.276258486 seconds)
  done (took 19.595174504 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.279650479 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.285423343 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.282583108 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.284459062 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.275758956 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.731520555 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.300123638 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.285442809 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.293938927 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.285066097 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.283767521 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.925115445 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.301453467 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.278610549 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.270235502 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.285847412 seconds)
  done (took 30.834783077 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.195145558 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.390781169 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.044169657 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.28143337 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.30670608 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.275363851 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.469743403 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.285877523 seconds)
  done (took 25.439858528 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.286807925 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.286131133 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.287930844 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.287266778 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.286672384 seconds)
  done (took 7.623690855 seconds)
done (took 1165.826359932 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.284550085 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.285823306 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.287878467 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.287453732 seconds)
  done (took 6.333978019 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.266173598 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.263301567 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.264411312 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.280804163 seconds)
  done (took 9.265023178 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.938399989 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.879543304 seconds)
  done (took 5.008927651 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.745026635 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.742910785 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.74254683 seconds)
  done (took 6.418338113 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.557623529 seconds)
  done (took 2.74452067 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.153597169 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.270674712 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.91997496 seconds)
  done (took 7.528547785 seconds)
done (took 38.489504749 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.282463341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.523567207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.435083788 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.285249999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.526885256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.473770261 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.085613931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.275692275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.273793256 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.282024864 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.279245826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.432061775 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.996309512 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.527985572 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.001761247 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.525405073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.43975774 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.280131383 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.275936 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.273764554 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.077864041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.290475225 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.278503518 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.271796383 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.440729253 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.422173891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.280830324 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.526937211 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.278519474 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.302221897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.422791468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.285833877 seconds)
  done (took 79.543431484 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.2780199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.277620878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.284053668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.274700886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.276837787 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.297536314 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.275558753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.27360481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.278757844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.278326157 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.277117864 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.276792554 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.292356281 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.28889019 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.272533446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.290550944 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.277142004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.282718663 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.277600012 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.294788159 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.280209407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.275409715 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.278882183 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.274531978 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.296346059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.276331379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.290742448 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.27713963 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.277587505 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.276458995 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.281453403 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.305451262 seconds)
  done (took 74.205977489 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.278006978 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.296407783 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.297864212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.287032013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.277935336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.282167562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.277271959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.27668909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.289195579 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.282176738 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.286063786 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.27655861 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.294022734 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.273099101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.275854035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.279203812 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.30316655 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.281893412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.277833476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.279515401 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.299170983 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.27526672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.280541344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.276964517 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.285556201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.280304082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.278099891 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.276641348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.303019017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.282846804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.285952025 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.284911444 seconds)
  done (took 74.271687295 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.568411483 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.294727083 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.296632005 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.290138482 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.299439963 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.295602834 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.28916598 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.570056268 seconds)
  done (took 14.09811208 seconds)
done (took 243.308499232 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.293145916 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.765136477 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.329759301 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.288666114 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.325809087 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.313854937 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.502874745 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.331836881 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.511755777 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.3016199 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.305380504 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.291052472 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.050395898 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.436938426 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.084858625 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.185405752 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.142305689 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.282724617 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.833509465 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.562416857 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.317004171 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.290261402 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.081557622 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.173842058 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.275035214 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.364543801 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.383496035 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.510805048 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.443366387 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.366332722 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.803400287 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.290832996 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.290991202 seconds)
  done (took 60.929040146 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.288889932 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.397124226 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.296798028 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.29654409 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.396694056 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.296500526 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.293953018 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.296336242 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.298601673 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.298179199 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.297599157 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.299243576 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.298469414 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.321226711 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.398322937 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.290876053 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.293332551 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.391968675 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.292405493 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.287199152 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.322805596 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.299213867 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.300274813 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.32603196 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.300962083 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.299147827 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.396876716 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.300660916 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.301423664 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.391703242 seconds)
  done (took 40.766587826 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.296840579 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.885482304 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.018675654 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.303179874 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.29700239 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.298474934 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.56957447 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.303249827 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.298232055 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.300139989 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.768545748 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.302101933 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.33182854 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.046767937 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.300884415 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.296429149 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.299555462 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.294149938 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.893968505 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.307078195 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.590977965 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.304538751 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.56450971 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.307691763 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.320204268 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.299297977 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.301309282 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.10661666 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.319067217 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.768308261 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.041944685 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.566431391 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.050389475 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.041416563 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.036845821 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.303050278 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.299556662 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.776736402 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.30164526 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.294282282 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.570348361 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.301892953 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.034377189 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.992737706 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.313097811 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.301137055 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.121328863 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.792335096 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.529613149 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.303720015 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.055018048 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.298812673 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.302637229 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.297115747 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.529965081 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.30231981 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.29924819 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.146760552 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.323291899 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.573783756 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.302523187 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.298559924 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.890980434 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.301474378 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.887791961 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.295450289 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.30889268 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.323947449 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.035839172 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.302476519 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.009267453 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.316466109 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.302140522 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.772227212 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.880913149 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.190198665 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.303421195 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.894306622 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.083732721 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.589907658 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.30393746 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.083396644 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.591249928 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.30439233 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.305432391 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.309340656 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.304192381 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.381329762 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.571600951 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.942843661 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.005264628 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.162500872 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.596249288 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.308414366 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.301627144 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.150702987 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.328068321 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.305955555 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.030655379 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.0103918 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.318042079 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.310016199 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.018256061 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.319266532 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.573784906 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.307491192 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.044510493 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.302141707 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.382834768 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.306873081 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.309222245 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.325797302 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.577478016 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.304293843 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.305434682 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.996928406 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.800404087 seconds)
  done (took 183.693313807 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.294843754 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.309882287 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.295994411 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.308200598 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.293477403 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.305039777 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.299177808 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.297221983 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.300605211 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.298050975 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.298884152 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.30561821 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.306104789 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.297782016 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.297591145 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.291094685 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.30174849 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.300237025 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.294553884 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.2985834 seconds)
  done (took 43.200255673 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.311179496 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.846069961 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.810589573 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.310700184 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.309237768 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.305271068 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.355172731 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.311158088 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.30925709 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.59048136 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.468569341 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.310286885 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.309603465 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.308914052 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.809503143 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.299257889 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.592775196 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.842108228 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.311584988 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.846207237 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.299851958 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.311061823 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.3015549 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.843877028 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.604440498 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.577770446 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.361067737 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.848738712 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.310036233 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.311122721 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.84703957 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.312055767 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.306972664 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.844888983 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.329235247 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.325390834 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.307624806 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.362637571 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.362594594 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.595764494 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.849325372 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.584407191 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.321158917 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.484948709 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.314815995 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.299844752 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.852239951 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.326445232 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.302138828 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.309803025 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.318372784 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.819252993 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.328423996 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.819783482 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.331748928 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.310464492 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.850902299 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.818213838 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.833788156 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.469770885 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.308186851 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.578022158 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.314962262 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.855448937 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.332050826 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.312891307 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.31187457 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.471789715 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.872249956 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.580531581 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.596073766 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.600453516 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.309522412 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.368424925 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.329415092 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.60055048 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.364002868 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.714356602 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.604901803 seconds)
  done (took 119.105677003 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.573517699 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.418438962 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.700590444 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.901405843 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.309855945 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.436228277 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.417961089 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.553346948 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.30725707 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.382281137 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.937354707 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.4236789 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.073309934 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.388744 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.411434146 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.449011222 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.697992153 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.267412301 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.007473374 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.906695207 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.307780794 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.407814342 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.841691494 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.524682069 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.302397743 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.90142605 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.246502397 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.946681805 seconds)
  done (took 51.254447668 seconds)
done (took 500.144929606 seconds)
SAVING RESULT...
DONE!
