cset: moving following pidspec: 18823
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.695112059 seconds)
loading group "string"... done (took 0.586229037 seconds)
loading group "linalg"... done (took 9.706298427 seconds)
loading group "parallel"... done (took 0.181746698 seconds)
loading group "find"... done (took 1.628339786 seconds)
loading group "tuple"... done (took 2.172284294 seconds)
loading group "dates"... done (took 1.503923312 seconds)
loading group "micro"... done (took 0.223235975 seconds)
loading group "io"... done (took 0.627329768 seconds)
loading group "scalar"... done (took 47.44188139 seconds)
loading group "sparse"... done (took 14.696269729 seconds)
loading group "broadcast"... done (took 1.2877797 seconds)
loading group "union"... done (took 11.459299283 seconds)
loading group "simd"... done (took 2.832638168 seconds)
loading group "random"... done (took 11.010677494 seconds)
loading group "problem"... done (took 1833.83960643 seconds)
loading group "array"... done (took 25.502661933 seconds)
loading group "misc"... done (took 1.206040236 seconds)
loading group "sort"... done (took 3.948695181 seconds)
loading group "collection"... done (took 20.057226525 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.750193104 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148529675 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.250572629 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.349763708 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.241498898 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14631485 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166865796 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.642372331 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.996699944 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.229563208 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15038898 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.582677385 seconds)
done (took 6.308809516 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25284266 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.323133843 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170508623 seconds)
  done (took 1.087617724 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.086901951 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.179559804 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.105783569 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094258679 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107446936 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106893485 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107517517 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106239212 seconds)
  done (took 1.404336162 seconds)
done (took 3.434827026 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.530399954 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.863521934 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.539195483 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.161441364 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.330705878 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.392477488 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.334537276 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.199548911 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.104113324 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.101701634 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173197078 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.460503403 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.470772343 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.998152885 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.10369856 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092327905 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.127675171 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.768729652 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.075162331 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.1295931 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.571514688 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.211000461 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.107817108 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.113621293 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193651512 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115582098 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.171231517 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100793299 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.678669532 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.12639775 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.196497473 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.093661668 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.165356503 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.22622291 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.237413799 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.088555831 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671244099 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.194306888 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097572835 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097293721 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680792521 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.125188926 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.161517419 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100770228 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.08831991 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182778031 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112657717 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.089322091 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.108598219 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083329702 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159528776 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.455809785 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.089056384 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.162802154 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.088768961 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689386003 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095414419 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.281021106 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.133523596 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.100309701 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.073062046 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.100986524 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151455638 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.104572679 seconds)
  done (took 20.474001074 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.156206014 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163471036 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.088338809 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137834984 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138806984 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.090893822 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079462046 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088024007 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123764186 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.232835057 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136291003 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.166860995 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.085896673 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081423071 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.138756261 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24701948 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.117163916 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102176957 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096426776 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.101132449 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121382559 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.108520325 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.103977077 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106470338 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164742949 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199312628 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103580666 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.117182996 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094527015 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112385968 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136086586 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143189189 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.086183967 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079893301 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182374037 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.116315867 seconds)
  done (took 5.165957383 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.220126269 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119669914 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.231335767 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16925911 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142820376 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16610594 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154519876 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.309260361 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.233729816 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.188814068 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.171192934 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108240088 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107575036 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088200686 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082121426 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091017276 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.636959719 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.139641568 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.174566834 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163213296 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098803606 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08350485 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.377703252 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094500114 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078035667 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098099452 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072209231 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.218290864 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097345427 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.206853924 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.079695957 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103676116 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125077573 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.187063148 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128368702 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138717907 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077715361 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.093646832 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213864699 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108925968 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.090539017 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.112421587 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12864366 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129831245 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096875349 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104727628 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219490676 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.093532011 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120823216 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077206836 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.154009907 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194606479 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.130713652 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077401301 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32752835 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110045641 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102083399 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077436682 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.304149804 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128104529 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079141134 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.091270881 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079589947 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.089320449 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.42313691 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106278675 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.957001483 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093163398 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162847969 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097896075 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100703918 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095615393 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081259115 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111368354 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074812203 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.090671546 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075607916 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.090685222 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080341459 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11572783 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095397314 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075425645 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156393139 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.106409491 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094807032 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11943485 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097882389 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074775431 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123296648 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091454384 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080249337 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09293878 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166513693 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102425724 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113915446 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096934408 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124772381 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091410522 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.211237497 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078655688 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120298504 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.094211029 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108581014 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109859044 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091928177 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079054943 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095035681 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.088574574 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075589971 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152798493 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.075424982 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093175882 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081203621 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108334036 seconds)
  done (took 23.596007065 seconds)
done (took 49.829056634 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.557285224 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.115266314 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.115096606 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.115168023 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.097593358 seconds)
  done (took 1.677420639 seconds)
done (took 2.324910142 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.374344494 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.181736166 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122860303 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.180954089 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.102236574 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.18657221 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189434917 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098787028 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216748534 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095376673 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179819561 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094658176 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086072103 seconds)
  done (took 2.790479004 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095100972 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.126460217 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095754238 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109678961 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073372365 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110680765 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105904605 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107455345 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107879379 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084761954 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09071724 seconds)
  done (took 1.755014216 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091227243 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116633205 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083101795 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106330574 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074149925 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105385664 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090349484 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120014966 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105644377 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087986612 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09026226 seconds)
  done (took 1.717458094 seconds)
done (took 6.906572908 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.14806754 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.165846059 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.145628681 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.198274152 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.37383786 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.246897624 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.610838024 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.16376922 seconds)
  done (took 11.907467489 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.115503643 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.139707768 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097825352 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097282014 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082782599 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096426016 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082920312 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.095845193 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081423235 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09550957 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082032901 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095351914 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080746405 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097448609 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095067793 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082295061 seconds)
  done (took 2.238981509 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120146991 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120057128 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10475466 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107224542 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086753118 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102125503 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103833835 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089124143 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09943694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086733386 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107436777 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10537324 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090149145 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.099793502 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102773349 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093660762 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099078759 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102432019 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09152111 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104890653 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091338324 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102347429 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104242431 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091980718 seconds)
  done (took 3.170845793 seconds)
done (took 17.962804886 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172994593 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.094579145 seconds)
  done (took 0.925659899 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14504882 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.146270874 seconds)
  done (took 0.953695021 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11046673 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093916024 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136155729 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112768743 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079403555 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094941033 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.131296688 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082396546 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094479515 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080790088 seconds)
  done (took 1.68294258 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085068906 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098310369 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.092641936 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.160514916 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.095999994 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.10098163 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085835947 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098821373 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.086351946 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094743315 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104802643 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118731603 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087902707 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120643114 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099597648 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.090331177 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109610525 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101394811 seconds)
  done (took 2.499939786 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079415883 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094675107 seconds)
  done (took 0.841213027 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084781257 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09553543 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085818142 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100576556 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095315498 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.081685568 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095215777 seconds)
  done (took 1.304747093 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.558017856 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.273827621 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376829276 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116962131 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14196948 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.400114427 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14048085 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112398867 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096885496 seconds)
  done (took 2.926441067 seconds)
done (took 11.799928398 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088780457 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22132001 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.685809613 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.105602524 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096359298 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.139205511 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.318025902 seconds)
done (took 2.331214822 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347659577 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.154355431 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086651325 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093545118 seconds)
  done (took 1.352738174 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075923816 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103170557 seconds)
  done (took 0.849245274 seconds)
done (took 2.885933049 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078395897 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128893192 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.077383294 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094329596 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0774746 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.094573873 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 0.07718273 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092761838 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.078843421 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09222219 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0776797 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092614262 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.077674132 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.091686547 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077759364 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091536151 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077675491 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091288526 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078052909 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090933019 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077629812 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091828012 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077139458 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09117857 seconds)
  done (took 2.786386588 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102019376 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097161682 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.099039285 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085721054 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099742665 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084589211 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099528982 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095288949 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085459502 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095592129 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084871661 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.100692711 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095558428 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086091085 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096101758 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087201373 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099602996 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094845905 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080758192 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100089952 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083795789 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094668733 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099329737 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084898594 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100083816 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098958675 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.080951828 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096164738 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083736356 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100463931 seconds)
  done (took 3.468237832 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08688013 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.089928913 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078377732 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.09984709 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.075329945 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093741499 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076485009 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091133698 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080904858 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093202748 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080326064 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092375681 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075365258 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095088798 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079585057 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097051334 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.088593936 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091141467 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075213346 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095630184 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08032147 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091079989 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077999185 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094352005 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077051761 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091585653 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079649602 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093291863 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.078845169 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093022712 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080921648 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097100372 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07973919 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103791229 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081046593 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092487165 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082534129 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090323128 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079715445 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09144628 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075472846 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093977172 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.075380128 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.099887455 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093114578 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080310668 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089197416 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080742913 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093749827 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082850153 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.091307645 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.075928695 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096309549 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081122758 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095614646 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.075248153 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094843874 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075399552 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094597806 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078926746 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08865659 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07495409 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096179216 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080520486 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112117048 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086262435 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09082728 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08090184 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095282558 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082456344 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096215659 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106635675 seconds)
  done (took 6.968997347 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09333644 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105456433 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080585089 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095426022 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080021358 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094436744 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.086097225 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093651551 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095030412 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086948311 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094589042 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080199543 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095576685 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079576209 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094463977 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080614399 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103008261 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093100101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079177819 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094783952 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080663521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101857657 seconds)
  done (took 2.671980735 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.254583902 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087132134 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148205973 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.112265359 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116806101 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096004505 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099472852 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100980579 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084569957 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107385677 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10592633 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084558531 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117495486 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105762643 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090465459 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107250312 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098594716 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093238055 seconds)
  done (took 2.695702328 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097352091 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.0986533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.217838259 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097257728 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09657478 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082105237 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105157486 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112863442 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081859163 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09599821 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091516291 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098351342 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081765566 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09755624 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09652924 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083016073 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096924966 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082830113 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106961846 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108503643 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090178134 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108850545 seconds)
  done (took 2.918117133 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097853329 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097524434 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130172945 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085774206 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096457172 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079618477 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.102551704 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08149355 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104590558 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095456298 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081442585 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095051429 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089889523 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098580235 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10250211 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082623624 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097058658 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081849689 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096146492 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080464569 seconds)
  done (took 2.564113767 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174055406 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096997967 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112071197 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124532704 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097297561 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111751302 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1276831 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096117581 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112409077 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129881303 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096245044 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111664521 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125075629 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118908383 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095901054 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124663228 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12598996 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123150473 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097479091 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112159913 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127589426 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097346597 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124804441 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112121669 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096788142 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11169724 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11098372 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106250351 seconds)
  done (took 3.893832702 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08014378 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078490053 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095839061 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079542421 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093923727 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078127082 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094601126 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078994368 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092973048 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079642808 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094894597 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07911084 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094729647 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078179835 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094389876 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079058027 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094152315 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077829593 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094671605 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079631998 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094419483 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078126739 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094407367 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080377157 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09454917 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079084899 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095546735 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078475127 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094954862 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078546947 seconds)
  done (took 3.281408828 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091283272 seconds)
    (2/2) benchmarking "in"...
    done (took 0.122604785 seconds)
  done (took 0.908394991 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.088121914 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116038095 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078847221 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096929558 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089426682 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095463414 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107959946 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089999031 seconds)
  done (took 1.455497256 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.144488646 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.146427598 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086431983 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109806866 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.144425366 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.138817671 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140968125 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086757377 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.097709485 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.073952198 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.138303451 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.092191356 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.085645971 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097605144 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084364441 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105700095 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096600659 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091080025 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104374625 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082279327 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102246117 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092283833 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103441378 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107342563 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.077507477 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.104482651 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.088472685 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109802253 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096838102 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.087283276 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.097757305 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081921355 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09952842 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085160629 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096309317 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.145957311 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110231613 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081420646 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101056223 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087392707 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106874778 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0802633 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.101806013 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.096876463 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089124725 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101643649 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08719653 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096358588 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076469135 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.0928701 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081486909 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09557485 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080350734 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101941373 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101929094 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09429296 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100690775 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.078958114 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.095548518 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.080808401 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.100545377 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.096064599 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087972753 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100047622 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082351873 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.102226999 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083902674 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097809608 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.082159786 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098498071 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10115422 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099678549 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104003022 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086648948 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103397518 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097089852 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082682043 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104563111 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084352602 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105202638 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085100936 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105855859 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099160111 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080886256 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.096827074 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087948764 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099427945 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082974463 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.090981889 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09515024 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099404972 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080645228 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093995811 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099399444 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080417866 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10017582 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078163774 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101404651 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07849761 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103724503 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087010576 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096004207 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.103913674 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087497218 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105130297 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.083727006 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.142002416 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098772726 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.079877485 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099966418 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08672724 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097560767 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.083793115 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095734362 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077781344 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09768023 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102959957 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.086984059 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.10186423 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086312286 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101246509 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086966554 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099293176 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079545312 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.097154168 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085014569 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107462264 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105852391 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083035604 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099224511 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080926045 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103045574 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086080221 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102714395 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103958068 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083947785 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.099633272 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082492908 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10398996 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.086086554 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099785434 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08303735 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104491615 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102135036 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084290502 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.103633153 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.080982175 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095129342 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.085637599 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099615886 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099907197 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093239714 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.09815379 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084922165 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.098092948 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090184062 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101537371 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102969987 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085168371 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103857321 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088315887 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.092816978 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082000583 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102143213 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090166619 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100620544 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081201646 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099766977 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08797548 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096995608 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101187641 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080030753 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.095302477 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090231409 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100110741 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084170369 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.098265346 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098838122 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113097764 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10488458 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085327292 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.102475875 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08501869 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101857128 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084042058 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105847688 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103551827 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083662537 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.101669269 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086587416 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.09670589 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.086903132 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102030392 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086003549 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.094237404 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081867107 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.092969718 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084865282 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107782829 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103369686 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086551325 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101543467 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084552961 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110488016 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.080744973 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101957565 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077252363 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103736387 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109120111 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088875646 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105810046 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.086157184 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102479938 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08179845 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109886759 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08275815 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103326787 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099744379 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086981846 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.095528334 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087572393 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102348 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08042695 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098682376 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087112446 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105658653 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099623966 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.077688643 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103177528 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091251195 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.097951213 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085319103 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.098072469 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.083141644 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112519217 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.095704197 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081064605 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107596691 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085493259 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097727828 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082993229 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102096436 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095171157 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102778052 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082514928 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10157587 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10604587 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083692828 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09690224 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.082496924 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101296318 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078835974 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101232529 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085099544 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100649486 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080620164 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108765557 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105667178 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087631923 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101841892 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085201338 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106482611 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104744434 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079762859 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104311977 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081442273 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095053486 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.080859651 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.093892996 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083075488 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.098927648 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.0861046 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101102818 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084270877 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104290517 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104287324 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082595413 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105799036 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114946018 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07818341 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.094579598 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083369361 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102208967 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081437021 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.099354574 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081857514 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104398158 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086194976 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106108136 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.095281184 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080581442 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104674919 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08155701 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104581318 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087582123 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106781123 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080460684 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10492362 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082591765 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108396201 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.095204152 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085259866 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10306911 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084879049 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100820605 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100488461 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081961718 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.09520376 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081764987 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105614466 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079566705 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103304839 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.082418945 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101228937 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.079005555 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097895328 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104196814 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.078951313 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106038135 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082632774 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.095557065 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078231082 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10367243 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085327469 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105481918 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080984012 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102003737 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087838535 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103633126 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082109999 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108987764 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107324485 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087817756 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110079627 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076541345 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101722797 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108463888 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081023322 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100103625 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083249098 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.095793921 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089010358 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105470968 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.086369579 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100892037 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077331515 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099306502 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088701804 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103185656 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.086194434 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10191236 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103946808 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080245764 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101944515 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087750627 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104087322 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088051278 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104029815 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085567426 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.099850316 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104451468 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081064381 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.095437902 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077949945 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.099101691 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088048288 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.094423056 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085584608 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103334197 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08107839 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.100923798 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086103038 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09847852 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100131793 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086910369 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.098916622 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092052613 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099387388 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.081533273 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103491487 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085462082 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096499113 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.082231067 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097853924 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088534578 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.101959984 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103533917 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085422556 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10498077 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082629959 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104364678 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086617977 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104714308 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078814202 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105977027 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10591985 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083603754 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.100170076 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083407459 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.096900318 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083417229 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106253266 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082387396 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108289891 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104816894 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084119209 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.1000765 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086446573 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102114405 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088114475 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.098617596 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084629895 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096406247 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088618824 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101826486 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105740011 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082495879 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.096869971 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086328447 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103707094 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085470618 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109484466 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088388954 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.096075665 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09572406 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084012714 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10120505 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091478484 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099306735 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.083328113 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10192592 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083502735 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100225216 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088043927 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097048698 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.098983993 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086217114 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102733028 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.079614188 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.096746307 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084086291 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.102603547 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085728931 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.101783445 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.078738385 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10299177 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10568084 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08272572 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095550288 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083390272 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105815583 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.085815117 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099646825 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078786064 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109505407 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105547508 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089117351 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.097655164 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085533679 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100704003 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083051271 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105766717 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.100231496 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086753778 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.101031023 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086661016 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109631539 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.07770049 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096441989 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109076354 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086176242 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105594662 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083821061 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102663435 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088313958 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107990176 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083394465 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096621876 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079162381 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.098389693 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.078095767 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101777684 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109903457 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084543396 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10095898 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084108244 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103615479 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084201399 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101349536 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.077815666 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106400558 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082120327 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.107752124 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.096724716 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077058243 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101819557 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086612404 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097386486 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.081680635 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100233082 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083757878 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.096940731 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.082225451 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107187423 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083976934 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104057531 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102582909 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083577675 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101356394 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091967491 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100930823 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.082289963 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113156344 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106217073 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0864464 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.103988022 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089583551 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106303259 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083269689 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107417295 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.083929567 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097420699 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106450835 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089874226 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114823579 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084349891 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.095733791 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088640954 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.097761974 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078436594 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.106750262 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107030416 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089703994 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.103052642 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080901762 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108936286 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083165566 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104106981 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.100346134 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084393623 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104031651 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082992922 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101643711 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08117861 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107935287 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.0887351 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105037887 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09017328 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.096583375 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110433229 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089244064 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108709154 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081516471 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.096595739 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.079500861 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102469195 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090327118 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106047482 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084545433 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103228505 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084870199 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104583983 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10247632 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08365385 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106566288 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088031465 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100251117 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087284925 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09794911 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080562881 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100376719 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089003463 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106798516 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087002078 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11203398 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105620868 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.083621571 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.100097867 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08649448 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102192767 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.086720511 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10404671 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081171206 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.097725601 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10431093 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.08933142 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102505431 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089306261 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109202896 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084510905 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.106392174 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107896222 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087095858 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099297353 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.086759941 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102499116 seconds)
  done (took 57.214176906 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15921969 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090537209 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102401545 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083579717 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129774712 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103626978 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082526171 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104288721 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085509252 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115839264 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101158498 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083267012 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126410656 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133086036 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130059067 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117075044 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085345219 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10365061 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083337582 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103245303 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122605565 seconds)
  done (took 2.981970109 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107780465 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121390868 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119131286 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121469708 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093276615 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117057818 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118676177 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117349504 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104618886 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115022884 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123556676 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117005504 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095681116 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114380225 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115535362 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114021171 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103758764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11188204 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.1195296 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.118289712 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096762197 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119136212 seconds)
  done (took 3.221101464 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091840496 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103915267 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087784629 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.101373802 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087395937 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10222879 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.093144211 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100865034 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.092080298 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.102949533 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.081572707 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.100674301 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084367053 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.101299389 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.081835681 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.101269538 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109982042 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086039275 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108196377 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082990048 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.118454131 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.083057846 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.102565746 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.079571866 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114954369 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106350475 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.083328336 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104983141 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.078754482 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105269501 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.082604627 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103714293 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086362793 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.09894419 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.078505872 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105242901 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086227127 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.102545828 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.083704012 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.098624033 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.085267525 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10644856 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107196127 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.0840221 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101037702 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081351522 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104878656 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082919262 seconds)
  done (took 5.295641186 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.122510807 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159710028 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088612451 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148077563 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123046069 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117796365 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087296608 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12718838 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10698075 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.107204895 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.106620412 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126059547 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109430891 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.113801562 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087906092 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109101186 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092469641 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108022878 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115382302 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089934537 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116275976 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110736469 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104711901 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124255902 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111518982 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107104973 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089522042 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112587887 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123535098 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.098062525 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113118973 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113719502 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122237039 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092017688 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107755381 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090364608 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125287581 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109792542 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091073564 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106074308 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108562614 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093112231 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110288404 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.1279256 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091314918 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111886986 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109147499 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.08563642 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122864801 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108903925 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.099023834 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12466063 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111486547 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089985057 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112683843 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123367708 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108234123 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.089109513 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110776158 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12189699 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087673627 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111000624 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124155375 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08982257 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116964837 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125443579 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092549907 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110717522 seconds)
  done (took 8.345758286 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121255295 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113984425 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126633282 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125879876 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096702668 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113181432 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111996001 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094789369 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113022401 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121495713 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095171823 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.216047725 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.09083314 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119546858 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112449274 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093960559 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112229192 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113091355 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094132632 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113554784 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11265425 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107377286 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113379581 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126358969 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127755584 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090573216 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114188381 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113818529 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10818494 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114481212 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129581959 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113383218 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094209729 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126564582 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12956181 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113147548 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087520882 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113629835 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111994125 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095021988 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110365946 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125239557 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094021808 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110020673 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094275066 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094906297 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126559438 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129199164 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119742974 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102720899 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113956786 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125475608 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112877576 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095390346 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125660518 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136224759 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127879593 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126862861 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094522121 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126381 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126566909 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136491057 seconds)
  done (took 7.865183049 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0849748 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084047161 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104565125 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084229602 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103172601 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083361828 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103335017 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083675204 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102768381 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084084458 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103191788 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083629008 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103271676 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083801181 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103084999 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083641728 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10407239 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084277561 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103436522 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084368632 seconds)
  done (took 2.605017267 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09686671 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126846501 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087686913 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117188995 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107214611 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096093915 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10585541 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087782798 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107484177 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106695932 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098985261 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119479864 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107284539 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096627651 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118779639 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115818052 seconds)
  done (took 2.450021653 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111591965 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128051656 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.163096022 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.111300465 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.088083015 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.115632749 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086996765 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.109790647 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10502603 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094354453 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111135649 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090694603 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106683163 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088300022 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107643558 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.110369665 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.087510795 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110618282 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088664131 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.162595269 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113455007 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.09062785 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110056012 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.111479862 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091796239 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112902385 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.113813717 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.090072957 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.109012995 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089963826 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.110784095 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097972107 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10666559 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113135413 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089344141 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.108174025 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087816729 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107919954 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.09267343 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106311163 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088612843 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110308269 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107205247 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.091185306 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106059531 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088689548 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105395958 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095025152 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109623004 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.110550589 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087952795 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113445831 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.093323436 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117465497 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115720826 seconds)
  done (took 6.526469792 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102796613 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109136268 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.103423959 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105419291 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08755739 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110248105 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108665083 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091046268 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10914629 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084608222 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109267496 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089377363 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109861938 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108865684 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091099259 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108741644 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085651959 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110358264 seconds)
  done (took 2.580948011 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094612981 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107834327 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094789238 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10759402 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087298636 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107343935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08632028 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104787267 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085869525 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107701084 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088027075 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107925181 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105790649 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089162608 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106415551 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088871409 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107572316 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085535204 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107381295 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086504859 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106613122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086501737 seconds)
  done (took 2.908320557 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101918377 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.164892352 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.11919769 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.177188797 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.107919952 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.085549101 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.116467023 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.104918895 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.107966654 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.105906564 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.085078331 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.105186722 seconds)
  done (took 2.144630412 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116953454 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147391151 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108612851 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089016525 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120631224 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112957164 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094632721 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113727439 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125183482 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111310422 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115268756 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124289811 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126111108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126966283 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101143049 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119816073 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113719592 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094734465 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108879617 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136583911 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094549854 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12746079 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113963456 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114170222 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095757068 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127975255 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126884329 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130340824 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093983692 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127181603 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12119341 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113106219 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106351844 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129573541 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108438542 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125328604 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095131452 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136606211 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120412074 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127572452 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088823284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120068017 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127151506 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122068175 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107304561 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114688025 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122116386 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094262208 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115798746 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143596018 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119915053 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126957418 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099828101 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126882248 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124654026 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146063434 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128838866 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127011273 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120469143 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129259912 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108119982 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121720222 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127502407 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129887541 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120161057 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10734203 seconds)
  done (took 8.528695005 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134650797 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111518173 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11429526 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130637255 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109164994 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115086472 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114539568 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0960126 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114609881 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110239354 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164902332 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09699185 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129686269 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126599521 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115087103 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095288342 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117054192 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127051011 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091343959 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14476868 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115515888 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127297863 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128771282 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126922907 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110277009 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122539085 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11498161 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094424526 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115758552 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115075664 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103631131 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115523805 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127701104 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109378228 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109176463 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114665437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115351417 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103916399 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11586404 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120592597 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127929917 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137834811 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095683672 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11473113 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131756848 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095207855 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115266133 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110257543 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096013799 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10956233 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132888363 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132101334 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130894176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110182361 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115927237 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115300103 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095414437 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115062474 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113497738 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102523305 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128312185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115887918 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14606924 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113956022 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095766247 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126991668 seconds)
  done (took 8.462698151 seconds)
done (took 155.416517413 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.149239916 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.170168376 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144551854 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.146892669 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.102372757 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.117073176 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137675375 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.145827643 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.081711783 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101952161 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.08208099 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107471029 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.147995981 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101375623 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.082334257 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10583443 seconds)
  done (took 2.686856204 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.204570395 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.315827272 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.123997176 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112401905 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091641411 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105066367 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090923664 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114600277 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.106506192 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.096565248 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.105465072 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085153385 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.116711721 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105419112 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.087709165 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.104996631 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.116302454 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086872568 seconds)
  done (took 2.942005348 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110608324 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146048556 seconds)
  done (took 1.032330316 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123045848 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191053547 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.325537537 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156143739 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.13514087 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129441111 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138873065 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.125942146 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200684696 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129409369 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.127183992 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109087204 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117456721 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116293355 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121829033 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089411292 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13912372 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.119532351 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099363858 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11178029 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.135294624 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.091562819 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116054246 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.117695601 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.191234789 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126233731 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.091679629 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.110463492 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.091152213 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.120683842 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112213467 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108681794 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.127500677 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.19711534 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096155739 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.193678424 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118867668 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090333888 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118782723 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089028953 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116078353 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114985087 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126628003 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.090726223 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.110918217 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098192024 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.111998565 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.110840794 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093982017 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12127755 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112247293 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092575042 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.191535451 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118687301 seconds)
  done (took 7.632348724 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.914144201 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151751439 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088540049 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.065037099 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116436872 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127490205 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.917054473 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113379612 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.275818322 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.918775481 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126997539 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101236977 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.273233069 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.269520412 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.176835347 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.382755842 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.7560774 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125172573 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.118689296 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.178155122 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099461749 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136495797 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131463121 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438596477 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.110867412 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086968586 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118173115 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120113145 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175331483 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107462086 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092695663 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.216363923 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.278931034 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222456636 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109873635 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086753017 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106490333 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18278916 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.312925398 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.241452596 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179048749 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084419784 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106580428 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096933175 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131302001 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103274453 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178878853 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.209373652 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188164961 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114446313 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121538439 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100675274 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.115994415 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174225853 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106984716 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36340608 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.370750595 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108848093 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117479194 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103622036 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.28953954 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109784539 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.250895009 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13762491 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.236785408 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10587532 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81026936 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182587064 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106003304 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096391069 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117480255 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114768618 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096345665 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173742304 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.411792669 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12056435 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112793406 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086600022 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.243732991 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106308469 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087918746 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.197307528 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091111727 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118846251 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120768962 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100376466 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.205622396 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265875604 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122179938 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118410487 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094864269 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123067988 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109686307 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229522726 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.242144683 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.193928337 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230409491 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118241778 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179069874 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.202142712 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094951867 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.207301709 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116740059 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104322679 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117527483 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.240279269 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149698299 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108653552 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094222822 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120152549 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150544382 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111479546 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098447652 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.20453041 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.495622639 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182681658 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082666603 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11195265 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11967676 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176134721 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119028664 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.283679569 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119214474 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184544399 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116852203 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083984688 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118984951 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179270021 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118476326 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119399456 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095564737 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119554599 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.286664803 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.244835487 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101013328 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25959043 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182157187 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116166358 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188299836 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119749055 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.205140574 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098926224 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117711295 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109292901 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804389106 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103469064 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119632006 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114010221 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198621464 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0872025 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109002599 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087069737 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104776371 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831888396 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.090232616 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106298536 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.088240494 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115742231 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118327126 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097805739 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115062728 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.197069977 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259968694 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120235054 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099269411 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106945745 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.175544289 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.111434577 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.087698456 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107891806 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087324523 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120047561 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113973144 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08971697 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.209961221 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175210028 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.246140523 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557922195 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111533408 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088659421 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255881 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109360256 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.334412623 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119266019 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.250408705 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.203589827 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085071037 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362309601 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.20648896 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197205017 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089807408 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.207529624 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083491775 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120291303 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.193737661 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087823574 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118134064 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173087211 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12486318 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121106493 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.219722505 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087396756 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.267902345 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083969182 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.206481917 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089653781 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116324501 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.333117726 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108162484 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124711357 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179066403 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113778619 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088670672 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.866674726 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08894164 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122232453 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115412082 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.250837515 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.201350695 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098958046 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119985693 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120902615 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177548944 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.245046398 seconds)
  done (took 46.504821112 seconds)
done (took 61.566390358 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317060583 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275280134 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.333870456 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229257667 seconds)
  done (took 2.032584877 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.224350778 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157942241 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.184393591 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109107556 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.19451914 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.106954527 seconds)
  done (took 1.774255492 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.529397018 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.406871726 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.366291207 seconds)
  done (took 2.101051491 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.276554031 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.267986695 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.362359282 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.488070921 seconds)
  done (took 2.323087876 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.248905827 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131356256 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124769048 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.180296974 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.215121347 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.217899524 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148890073 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.165107386 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.11020812 seconds)
  done (took 2.39039071 seconds)
done (took 11.421309223 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.214230763 seconds)
    (2/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.163089035 seconds)
    (3/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125321929 seconds)
    (4/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.335519929 seconds)
    (5/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.320249887 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.298900752 seconds)
    (7/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094947799 seconds)
    (8/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108801466 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.319244238 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.16717314 seconds)
    (11/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.240150961 seconds)
    (12/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.326262148 seconds)
    (13/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.107184888 seconds)
    (14/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.313899056 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096880475 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.165928071 seconds)
    (17/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.383461152 seconds)
    (18/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.243441364 seconds)
    (19/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.295292304 seconds)
    (20/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.099583521 seconds)
    (21/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.250145421 seconds)
    (22/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.217084448 seconds)
    (23/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.148632141 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.308734856 seconds)
    (25/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.245046779 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.104559636 seconds)
    (27/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117210772 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.15145843 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094184289 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.148245347 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114752107 seconds)
    (32/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.202654889 seconds)
    (33/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.309777222 seconds)
    (34/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.203542051 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.146896982 seconds)
    (36/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.197416391 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.100989959 seconds)
    (38/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094944422 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134742603 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.230539915 seconds)
    (41/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.077553715 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.14986044 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117549399 seconds)
    (44/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.234255426 seconds)
    (45/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094389222 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.149619981 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.196385242 seconds)
    (48/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093783546 seconds)
    (49/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.196737329 seconds)
    (50/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.285197726 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093811236 seconds)
    (52/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.192351424 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077751339 seconds)
    (54/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.225983667 seconds)
    (55/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.213701971 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.099338945 seconds)
    (57/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.158356758 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.198146291 seconds)
    (59/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.221170281 seconds)
    (60/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079037105 seconds)
    (61/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.114749247 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09413821 seconds)
    (63/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121344182 seconds)
    (64/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.213902738 seconds)
    (65/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.177678095 seconds)
    (66/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.149016933 seconds)
    (67/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.127891588 seconds)
    (68/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.212342728 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.125944632 seconds)
    (70/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.100620442 seconds)
    (71/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077709122 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132702045 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081703496 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108815791 seconds)
    (75/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085001143 seconds)
    (76/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11688447 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.198285823 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094367331 seconds)
    (79/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.177918122 seconds)
    (80/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.077939718 seconds)
    (81/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.09783481 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094730893 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.132429013 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093946529 seconds)
    (85/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.099989817 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.112016525 seconds)
    (87/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.112998674 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093552371 seconds)
    (89/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.101107037 seconds)
    (90/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.198665923 seconds)
    (91/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.07743197 seconds)
    (92/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.177845947 seconds)
    (93/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.078415897 seconds)
    (94/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.113055585 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078070672 seconds)
    (96/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076471235 seconds)
    (97/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116949183 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085982255 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118103287 seconds)
    (100/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.076804846 seconds)
    (101/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.196742733 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116227631 seconds)
    (103/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078239952 seconds)
    (104/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.099677909 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.102629422 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116642185 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09313517 seconds)
    (108/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.101126047 seconds)
    (109/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096376953 seconds)
    (110/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.174237196 seconds)
    (111/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076552165 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.148142851 seconds)
    (113/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.101313075 seconds)
    (114/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079298987 seconds)
    (115/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.076437941 seconds)
    (116/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.176859812 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115673607 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094245036 seconds)
    (119/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118818761 seconds)
    (120/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.078254871 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112869657 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094264164 seconds)
    (123/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.106137159 seconds)
    (124/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094721737 seconds)
    (125/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.114043634 seconds)
    (126/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079598763 seconds)
    (127/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097200261 seconds)
    (128/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.078850423 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078377903 seconds)
    (130/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.099608977 seconds)
    (131/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084288201 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.09826741 seconds)
    (133/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07957991 seconds)
    (134/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085816405 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.133660842 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.132704309 seconds)
    (137/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.197925675 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094810252 seconds)
    (139/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116089719 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095237323 seconds)
    (141/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.195782581 seconds)
    (142/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199076125 seconds)
    (143/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.102142292 seconds)
    (144/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118587215 seconds)
    (145/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.077860315 seconds)
    (146/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.113786821 seconds)
    (147/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.076962074 seconds)
    (148/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117142115 seconds)
    (149/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.213388564 seconds)
    (150/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.149515666 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119344818 seconds)
    (152/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.079128666 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.116438086 seconds)
    (154/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084529642 seconds)
    (155/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.100007425 seconds)
    (156/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.077283444 seconds)
    (157/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080864655 seconds)
    (158/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.195500087 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110004262 seconds)
    (160/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079756009 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118163405 seconds)
    (162/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.077821878 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.134079338 seconds)
    (164/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078933644 seconds)
    (165/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195277301 seconds)
    (166/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.195114627 seconds)
    (167/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085335517 seconds)
    (168/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.100906333 seconds)
    (169/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.090369944 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.33100523 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094950087 seconds)
    (172/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.099782618 seconds)
    (173/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07895653 seconds)
    (174/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094922084 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109210688 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116660376 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.078446945 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.132346796 seconds)
    (179/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.079546787 seconds)
    (180/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.078086797 seconds)
    (181/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108979726 seconds)
    (182/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085124648 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.116493709 seconds)
    (184/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117210366 seconds)
    (185/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.083978386 seconds)
    (186/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085476425 seconds)
    (187/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108910201 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.095154064 seconds)
    (189/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117996969 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.115973985 seconds)
    (191/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077605937 seconds)
    (192/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079362892 seconds)
  done (took 27.210579249 seconds)
done (took 28.019505211 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.223916012 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102610059 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.120114751 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120401089 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.176580185 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100295902 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.1307647 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.123323919 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.103072438 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.116833742 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088421822 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126432975 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.11983385 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.177055105 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.10191833 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11299274 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.090419177 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.125696862 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127641129 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.109179891 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.174977584 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112378012 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.103497821 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.112415129 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178192186 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090104396 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121157155 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120679971 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.105242036 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116569831 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097189965 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111894377 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129471146 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.108179685 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109856195 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094079123 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109513079 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086508618 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.118160017 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.094781419 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128180206 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117382658 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.10059985 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.114048698 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.09549019 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116840435 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087431921 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124151176 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109583671 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097839147 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112386824 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.108383963 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11612881 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086995622 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109928352 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111557214 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.102918593 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110373059 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105531333 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110750062 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09074454 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109232713 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095674258 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111487351 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114634662 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.089969453 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116174892 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097928011 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116731353 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090036298 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110464214 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.093161629 seconds)
done (took 9.041275262 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095892741 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.173385417 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.174977046 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.182256691 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.144656924 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.129133468 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.132484966 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119176357 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127867472 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.135545921 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.127271032 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142796052 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.186247335 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126124238 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129243067 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096838702 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.126109967 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11997538 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.183238181 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114966549 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146873883 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.125742602 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147512926 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11053641 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119014232 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142010124 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.098265698 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119987384 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117967871 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113707458 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.138012316 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117963713 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.098491095 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133008886 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107142517 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.126100499 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.129388779 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097019376 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.116553088 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.115073327 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.109053002 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129943466 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093446309 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.131706416 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119522217 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104322849 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.125732083 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124791792 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098643115 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120088018 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099426252 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147039664 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124916006 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12893876 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.104406703 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124137272 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103186486 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.124529204 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120759373 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.102121083 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.116703207 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.095802782 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.119812639 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144322293 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.097079493 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.125904784 seconds)
  done (took 9.055683406 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120807511 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.155097729 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129136343 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105498374 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.124635345 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.107570041 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08570081 seconds)
  done (took 1.679596475 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087686335 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.179666777 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.178183718 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.177348614 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.176695736 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.210492832 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109623234 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.11230326 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.145341188 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.099831877 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.17814857 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.232135434 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095551498 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.128244459 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.18186322 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086852532 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.205058002 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089257554 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122158357 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.180671795 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103750756 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142029435 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.126550781 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.088510586 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.171771422 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112382489 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.233124982 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127718439 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116362676 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098217732 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123535964 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.195770055 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.174020642 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125567452 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09254472 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.175509905 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.172352641 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123552988 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.187025368 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.115069254 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.173160647 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.099190379 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.123490764 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123297474 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100467937 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.160497672 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128954496 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.101649418 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.121691664 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.181199695 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.124094194 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.174566056 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.096007948 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.12181237 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.100701345 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124413538 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130691567 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099808953 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.180727636 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126957704 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.174874484 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.175256292 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.1741776 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.174962975 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134387515 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.17595476 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.17301351 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.098065604 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121613355 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123131722 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.176196187 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.100077325 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.125157618 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.16297336 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126947272 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.17503216 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.176436551 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096403536 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124995653 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091686701 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120585226 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.110500045 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.147570926 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122793228 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120947264 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107667993 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126769385 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.123671319 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095263521 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.137718741 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.121677114 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.102554504 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128549642 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099030862 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1303064 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.177403174 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.124900489 seconds)
  done (took 14.211063256 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091893203 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113023527 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096653245 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113340576 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092172943 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113451988 seconds)
  done (took 1.487938501 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118757005 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.125092479 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.134349223 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.103585282 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.181341866 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.180014246 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.18168658 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121926108 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.142391212 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.111325993 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.180977609 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.209124749 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.182959944 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104477876 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.184799263 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.127081728 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.182206003 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122409561 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.110921374 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123210771 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.129357973 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.105005764 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120946666 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.173138378 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.125793334 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.103837098 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124154454 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13318953 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.110122587 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121551773 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.103825017 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.127904516 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11736408 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098968837 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.182779923 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.118771731 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120001213 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.106939196 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127975835 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.125448714 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.187545386 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098102978 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.133126583 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.129993807 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.098353859 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.118225755 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128961791 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101353515 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.182185012 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.131185034 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.146210514 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.102774535 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.127426018 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.129961118 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095589242 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122974322 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.10666602 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.206887605 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.10510438 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118477734 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.102424107 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.128621195 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121188294 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.108086311 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.128514493 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129412046 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095575759 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126695003 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098289884 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125051329 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.129983612 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.102535521 seconds)
  done (took 10.239515182 seconds)
done (took 37.518610028 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.131335112 seconds)
  done (took 1.998296862 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.90361101 seconds)
  done (took 1.772140668 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.393706575 seconds)
  done (took 17.302483318 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.562444491 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.63301484 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.979132446 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164585104 seconds)
  done (took 3.204380096 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.985082977 seconds)
  done (took 1.878534475 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.349646728 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.279978822 seconds)
  done (took 1.501876046 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.691767918 seconds)
  done (took 1.575676927 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.185668049 seconds)
  done (took 3.053566506 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.370249553 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.19356071 seconds)
  done (took 1.457033286 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.676715894 seconds)
  done (took 1.564590735 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.041964617 seconds)
  done (took 29.928968161 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245131263 seconds)
  done (took 1.14398323 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.30874384 seconds)
  done (took 1.197307599 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.448884348 seconds)
  done (took 4.340862421 seconds)
done (took 72.800305064 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10220021 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128666045 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104337522 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126364514 seconds)
  done (took 1.346731168 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109763973 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125708667 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106077317 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125357959 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.133632137 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.101793373 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125763087 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.108714275 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.125426353 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126833597 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.101291672 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.124787081 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126933089 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101498178 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.123169529 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.103191818 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127877228 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.125522201 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103789433 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.126020981 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.102035988 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126009042 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127335678 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.103532454 seconds)
  done (took 3.705213594 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101399514 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11825086 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097353202 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117345068 seconds)
  done (took 1.332133049 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.110655691 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141558485 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139925687 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.108921834 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141503067 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138579682 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.098928645 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.120791656 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099809968 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132988785 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.147425494 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.121643402 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140127918 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126564096 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110584806 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.118624847 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.104262613 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.141043321 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.131453973 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.109959875 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.124310612 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.107936514 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121131306 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13913619 seconds)
  done (took 3.874032793 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.209936053 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.11332326 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.148363711 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.178733484 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.157517621 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.097552753 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.151633332 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129521497 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.107322663 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.134499413 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.127572793 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.185246327 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.102511176 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12541246 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101380472 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.13093883 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.137754845 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129742674 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.170447726 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.106280366 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128622715 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.136314495 seconds)
  done (took 3.909395324 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10308209 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117928688 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089150561 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11681012 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100950932 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120388105 seconds)
  done (took 1.545404754 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096472351 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.1108006 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092340741 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112894777 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.092551952 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.109452689 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.086573409 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110844919 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087648258 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109853084 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089353015 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.108875966 seconds)
  done (took 2.106657873 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.301854582 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092696897 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121376621 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116125111 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101384246 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117439377 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133822054 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09203357 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.256510433 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089940116 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.135894333 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19684512 seconds)
  done (took 2.654122783 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222915417 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103034564 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315675782 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382356336 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165998708 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174827284 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2808374 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175346388 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199989261 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14609817 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232917516 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139009374 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161193287 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187770709 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148813193 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.217544221 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184378332 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213186344 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15559698 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241802413 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172997033 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174958725 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190804504 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158431155 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117163517 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166788276 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127795385 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131413259 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185024085 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1796712 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184914285 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156959813 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148578684 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216489333 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245794012 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190452863 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.306753483 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139262158 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201565883 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.196103549 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28287183 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147332749 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209504465 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163260051 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136823501 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193662931 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166180156 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.192181645 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137852926 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123116555 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222112467 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185434786 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196892775 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145444422 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303359938 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153949926 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15530085 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185424672 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200601961 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201164235 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173507521 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126855272 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194239327 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21649194 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188985941 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.127696614 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207602946 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10667946 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184159928 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231215985 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192987933 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174506329 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.196616179 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140946127 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172588323 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180147232 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161987956 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186763526 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166741449 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.0996957 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156809054 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1453326 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134333973 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196680784 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104693652 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242651095 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116624798 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.388551204 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241321001 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16591602 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170285056 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174048097 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175437795 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154039072 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102675226 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153748013 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.171016482 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165468888 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110498192 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165663812 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147550879 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134311286 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159322812 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101026786 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16596968 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158544488 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177173677 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172688789 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.137804958 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171903132 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15633059 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.139793222 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205609643 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19558545 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111732799 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139168813 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204455389 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165957438 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141734735 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187466226 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201938311 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176315921 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144312527 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177220631 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205351297 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149592029 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200297951 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152298355 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138690732 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.162083434 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166339715 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140987034 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159491793 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134669713 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161522937 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206509968 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133160737 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11584007 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20740937 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109422218 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134091269 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146770915 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116482296 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149331537 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155087154 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144479587 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16367978 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141612467 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161282773 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167814405 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149379372 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230329259 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113959671 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1693393 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154273525 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099152186 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.218891325 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195358146 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108645399 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235871612 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.18072648 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204643359 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172167824 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135740515 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18791954 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134918431 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100789462 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17148322 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171451977 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171699459 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194640414 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226177589 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18085158 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.162570386 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15807544 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17885552 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183661176 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167854733 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.151883807 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171261332 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180896425 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100520284 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.131385885 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133642117 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120283563 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136454116 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137685614 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193929732 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175074261 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195084035 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167897992 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145525346 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194527809 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132739012 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174902409 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.184257841 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145302655 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199070129 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19178566 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176238221 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151548008 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177004833 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.126090645 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1053567 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141268364 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178723007 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137531155 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113485853 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151601792 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193444929 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185663721 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155702406 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238156732 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179836651 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204590818 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.128674934 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146003077 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207546991 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163981772 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.164918391 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137293029 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.170613138 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188986163 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151615404 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203938569 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168501221 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177360817 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23928186 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.139321455 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138085202 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157391326 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17471897 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146067507 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175425006 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126665806 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141802088 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161805492 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143983421 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132852645 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195395419 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149305191 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194601543 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.167569611 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186416225 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13143829 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15101755 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167606592 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12586709 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.125124816 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181149299 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202028857 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1551345 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168054989 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187476255 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138107255 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.328007253 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201537258 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223598446 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118112763 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150497923 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171439739 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168928137 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173587998 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189655195 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153463716 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190368229 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168322899 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.150059406 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114610056 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156258025 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159293558 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.163679748 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140323076 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.164544865 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.12323192 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224001559 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120845657 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168259855 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172849819 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155638384 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.164558872 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145970302 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214855121 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165137357 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189973903 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162070939 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180451271 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211458505 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128449597 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106758997 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135741223 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189004236 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137122886 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140413723 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.216323058 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208153031 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165860698 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177123363 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144806416 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.105113491 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16854928 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157699401 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233218952 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149648488 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.118420183 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230375943 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134577964 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136834044 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173972016 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290754675 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150860561 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186677631 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.127022319 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277496027 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105423077 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136984393 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170841162 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180815909 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.155585221 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.163920224 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171613005 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150497562 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170667058 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144896116 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19900513 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24437523 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178870618 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186721706 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151705134 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167836954 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175676836 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188683579 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149609546 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.127501028 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169355127 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19177791 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223207189 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113744136 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17199663 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169935492 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167720242 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189083663 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140203689 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21117676 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136396239 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173455846 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146733846 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103588076 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166289057 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214761162 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113690062 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212060879 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139622969 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137796161 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134455381 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159653799 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164920147 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124444015 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.135991142 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192541081 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.133457623 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17228191 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187533694 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108771804 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162682517 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153298712 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138131784 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123749798 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151164792 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142748693 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172381887 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197410665 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.110653845 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216641323 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180651029 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175922601 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169281577 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149960265 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644710343 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13598105 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192847107 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155591153 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199852449 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157149344 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175414205 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168190626 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154893883 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175672114 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130398924 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23313332 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172309229 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.171298304 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13684586 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152085275 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147222685 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.112360714 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160233406 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169313108 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147058597 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.117185786 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.16799568 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151819125 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153871863 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144176017 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19612288 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155868089 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199730502 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19129047 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145319043 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176041584 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190648776 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133183826 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.173845731 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182469991 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120146761 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161571834 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.140724925 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142948611 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189487347 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103322406 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169313652 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169162517 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170862907 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17104702 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.143749821 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166459269 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121977295 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169428039 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133525718 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165172233 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165854945 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111453464 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.136131228 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162818741 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169423662 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166433591 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106427921 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176163619 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192754281 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.128640384 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111707188 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307730341 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168026709 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203917871 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.16216659 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116024722 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152514303 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165071999 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163953629 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167088251 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109784152 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138554726 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139928072 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.185617709 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141125613 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165819959 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188619342 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171470333 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23844519 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.125039407 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276957515 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144993227 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164561042 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.112787722 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13826891 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147979274 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138733934 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127557367 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.225749973 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190596609 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.15938611 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.126425478 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135863175 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128112755 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111710003 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171959419 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16329683 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166078918 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15493476 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.100081869 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152067252 seconds)
  done (took 81.641297108 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147801231 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.140175644 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149702498 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.197346406 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167785206 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.260044357 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208253389 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.230931794 seconds)
  done (took 2.492714665 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.105564675 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.139384407 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145901118 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.128337749 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.127150682 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.401794481 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140881549 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.126100763 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.189589261 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.138123859 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.122782367 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.602067349 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.124641079 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.100917972 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120245271 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.124793803 seconds)
  done (took 3.823020481 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.338066382 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.528007249 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.822850428 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.251039484 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234155364 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.185514687 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.723689222 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.173917499 seconds)
  done (took 12.246381033 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13184932 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145088473 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.345999478 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.217923246 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.163540192 seconds)
  done (took 2.000620719 seconds)
done (took 123.561785082 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.107623987 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.146474618 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104692206 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.148882829 seconds)
  done (took 1.480884838 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.15132321 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.114947177 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.089934745 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.112744904 seconds)
  done (took 1.46062545 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.52129313 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.086104482 seconds)
  done (took 1.636294683 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.131303215 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.150937101 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.146254812 seconds)
  done (took 1.431897527 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.113803803 seconds)
  done (took 1.108520383 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.113773689 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127805047 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.190613552 seconds)
  done (took 1.435478697 seconds)
done (took 9.548072799 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10665479 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.431893671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.41853063 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112990941 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.733195542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379900462 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042512949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159996336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208465387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121243202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113530463 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.699693874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.029661923 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347002243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.01204864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.346636806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699881697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092072719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.127331876 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119769472 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.995367091 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118304558 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094122043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120051309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673860754 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.438704965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117745802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.357316811 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118809825 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100632006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.405947847 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0924684 seconds)
  done (took 16.914029369 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102157171 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18985824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131298413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095744791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128335989 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094974492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.13186796 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.133233175 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202211559 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092767432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141259813 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092778888 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126472067 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093930827 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145251129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118354624 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094955026 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11898132 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101631841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121238771 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114435234 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120075495 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094338499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120748458 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092534642 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.152121934 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119177851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.10662494 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120906265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10106747 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122283435 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094258257 seconds)
  done (took 4.82382989 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146299548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19848444 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13420274 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128020958 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179524377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122588356 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.212168946 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161958838 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201472506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120341401 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116996632 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119608377 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135782501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121664013 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144407028 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093733759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120500941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092650258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129067082 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094702216 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141529013 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118102391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096257173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120254177 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094688941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.152612162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092881999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.134707048 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119414806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10152031 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123396726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093897966 seconds)
  done (took 5.172899288 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106106669 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133926878 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118777075 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.146850319 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099024248 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134190201 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.132790859 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100655927 seconds)
  done (took 1.985301492 seconds)
done (took 29.890921727 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.11925251 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140020026 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.112927411 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.135045486 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.196245841 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.096123111 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.138848297 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095374566 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.135805117 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114630804 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.121173645 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.09959559 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.141410175 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.101954749 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.178971463 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.137228555 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.186352015 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.179385759 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.098135774 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.136286175 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.098749804 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.212329369 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105187608 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.126703698 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.191269449 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097504067 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.175404023 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.102017885 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.130575475 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127842501 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.179540755 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105529927 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.126650725 seconds)
  done (took 5.434528085 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.196853974 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.205409913 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.098925165 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.126188901 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.197237744 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.099286239 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.197775874 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.125989294 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.09920876 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.126481823 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.098506096 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.196855944 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.208755203 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.219950536 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.236577979 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.206452184 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.195480684 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.204406748 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.19153622 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.211940393 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.195239208 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.126590352 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.206972951 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.208602848 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.097890191 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.126902058 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.23256412 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.205312409 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.231675452 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.193015843 seconds)
  done (took 6.283013207 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110398401 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142100078 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119119165 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.196888896 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.1604806 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102192029 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139816887 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145280878 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.120764156 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12073763 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.109747954 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.160530409 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138731285 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106500056 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.126650144 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113600282 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.148543086 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094681377 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130022456 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141218471 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115024767 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.142419659 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.108366712 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.1342948 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093133093 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130461964 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.125719904 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109009204 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.131875609 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107144311 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.128083152 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09948079 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125277845 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103961913 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129611375 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.131612079 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121687987 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13224471 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105548058 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.153496794 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130209833 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.101174242 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14699507 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.148275846 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.124068089 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134777899 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10795593 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133504341 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096728313 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142667172 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109925525 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.123064849 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.142146275 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.095567865 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121705793 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106882033 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123797162 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09776164 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134552282 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098791411 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.148788841 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100559123 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131356892 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.095931621 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129375895 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121729662 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.095556583 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.125332171 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.121870378 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128923953 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128798941 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.123838172 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.105242307 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132144055 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128283658 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104507114 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.122097411 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10267208 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130904518 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100964501 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.134599062 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097606558 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126740158 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113612309 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144048479 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.132592978 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.105047114 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.134479202 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12455608 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097738658 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136348015 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.096851087 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126372538 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108381406 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123993742 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.099140247 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.133990817 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103075838 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121685531 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142271869 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101537902 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121869654 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.112950551 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123665171 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098378417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134019886 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.107114512 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.122704696 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103738221 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.134168277 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094114106 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.129091975 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126371765 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094270357 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.140284135 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.106514838 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128335501 seconds)
  done (took 15.26455592 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.299182667 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.3062069 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20149123 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.365831102 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.149521931 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.198999852 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.30067914 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.319633954 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102648303 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.169376112 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.18416289 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272544132 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.096212512 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.158463858 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.305134214 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.369714997 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.158011714 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.169874645 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169449528 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.121425633 seconds)
  done (took 5.446799464 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.121626764 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.1701388 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.155725611 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.15727431 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.102863905 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.139147924 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095636007 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.150013877 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.131028005 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103513941 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.123442216 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.120707441 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.133943034 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.104784181 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.142262556 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.172043624 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099624747 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.132058779 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148386251 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.101576024 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134084961 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.153838807 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.107497278 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.153600875 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13913919 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110869619 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.123127702 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.102812531 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.127245268 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.100171567 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.130744949 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145039347 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103246458 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.129641238 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105323197 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.137803655 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.097443857 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.126878305 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.097027922 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127905745 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.140738729 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106231409 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127477672 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093362294 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13706344 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.098739985 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.135241872 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.106957836 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.135180623 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.110832212 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.135379897 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.106707238 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130658796 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.14333463 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.099418453 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.139975875 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108802156 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136711036 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.130992119 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094966496 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121845846 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100954021 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.129203032 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.10928421 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.134726849 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147158275 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.109590067 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.123535695 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.102275034 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.129358316 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099261315 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142863001 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149398475 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.100656044 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.127468162 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112002266 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.129119397 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.087320362 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.135039284 seconds)
  done (took 10.817836294 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129365026 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129214517 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117551048 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.162397716 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.136610375 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.101848131 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128952838 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.115809223 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.136827857 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108905788 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.137917144 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137616632 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123102108 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.138496487 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100724003 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.141869072 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106391593 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.168672382 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.145415564 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.159280146 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.109567153 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131211642 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.110261927 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.138802548 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.160234778 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.109278981 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.159921338 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.135416303 seconds)
  done (took 4.724671923 seconds)
done (took 48.982153976 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.151802634 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.318890983 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.110570332 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.108676334 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.145053096 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.119335286 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.105986102 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.300729651 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.810219531 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.106646942 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.109703761 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.109319954 seconds)
done (took 26.529506622 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.375874046 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.599698681 seconds)
    (2/2) benchmarking "String"...
    done (took 1.405003533 seconds)
  done (took 4.033692764 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.100302535 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.105644949 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.352781811 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.105672353 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.123895687 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.12324862 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.106427041 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.111598396 seconds)
  done (took 15.058244644 seconds)
done (took 24.597064357 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.145330876 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.2822561 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.346041025 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.113928239 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.112828912 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.109260199 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.104350217 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.120533632 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.106586222 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.105364943 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.491644336 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.36568768 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.121259946 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.48559604 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.105895581 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.132828306 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.10789172 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.333759701 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.105572542 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.157150623 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.093003069 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.107225005 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.138720043 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.115256244 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.109730394 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.113533185 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.123616352 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.109380791 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.290896254 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.144173372 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.145577873 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.104456947 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.121283799 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.105574778 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.108849875 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.125010327 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.286997478 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.111739842 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.100773634 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.116871828 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.293790014 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.110001351 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.110559005 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.120378622 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.113961094 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.142583632 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.104570296 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.212119888 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.128664891 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.128150189 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.151914053 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.484152004 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.12202208 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.135250083 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.113300089 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.321540771 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.116068415 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.147888366 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.125385757 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.134599034 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.116590549 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.115370653 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.161468369 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.109247942 seconds)
  done (took 137.48119057 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.111445923 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.108332719 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.114227853 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.138029987 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.107727716 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.109933552 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.111152508 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.110960819 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.108136963 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.139010867 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.109593396 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.108611199 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.124159494 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.060274837 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.114590526 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.134480762 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.116100029 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.124999657 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.115447706 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.112156327 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.131003004 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.105848075 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.124987371 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.109871055 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.136913931 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.198729577 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.142996453 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.126723299 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.116368288 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.113057389 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.152096948 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.129236745 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.676196661 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.984955103 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.126450007 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.122478911 seconds)
  done (took 76.815643304 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.113945455 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.114864551 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.114027943 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.144216345 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.116352475 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.658571177 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.662844363 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.828597542 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.293494373 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.11583954 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.33172312 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.336111366 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.113203425 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.207939143 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.12267606 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.113956031 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.130039886 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.153252886 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.118747519 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.116455241 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.663965106 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.130009566 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.202942117 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.303464646 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.127504768 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.147246043 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.518282982 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.113139577 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.146889632 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.441459965 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.158146576 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.113725527 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.433582956 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.138743226 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226137592 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.112024261 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.145769607 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.11676334 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.395670324 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.111405075 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.115714918 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.121104832 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.728480838 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.112452402 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.664041705 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.119671787 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.016450105 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.113363944 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.117619447 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.116829948 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.113047393 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.66268302 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.129813499 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.119243537 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.120996904 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.118518608 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.118496828 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.149552271 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.186772811 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.223022057 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.134216409 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.121748305 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.148630779 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.119578068 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.221891685 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.118217072 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.445333505 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.187726825 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.228234772 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.661720184 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.122197646 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216421604 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235204245 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.117639135 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.120327173 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.121307482 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.120260282 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.229884986 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.119325688 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.520551976 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.288504916 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.135596861 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.339567385 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.205636454 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.114469479 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.45252264 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.114935915 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.117533933 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.82400186 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.210341404 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.114683547 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.119935183 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.118866623 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.119173154 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.515735545 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.661978958 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.334677682 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.116410348 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.440696464 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.123016474 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.523688507 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.640816747 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.749215228 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.116650775 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231467723 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.286133382 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.131258881 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.120439368 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.120309421 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.342279354 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.116914768 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.180392753 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.116572016 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.519728875 seconds)
  done (took 354.842794528 seconds)
done (took 570.168052595 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.822419981 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.773964497 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.907313346 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.796088705 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.765412689 seconds)
  done (took 10.108310573 seconds)
done (took 11.152671662 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.306868408 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.30858485 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.180822863 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.309847176 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.153430951 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.326996394 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.28683423 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.14420172 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.221445066 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.199565548 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.22605379 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.169824357 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.153477244 seconds)
  done (took 17.033139641 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.399536069 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.125202617 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.189582935 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.370231408 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.162626702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.390011529 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419076308 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.125116805 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.281163679 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.138085938 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.135969743 seconds)
  done (took 16.780172147 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.432985656 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.127437575 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.194497007 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.363440061 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.166140498 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.38501355 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419749916 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.125874579 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.273704389 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.137893339 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.13873464 seconds)
  done (took 16.809204269 seconds)
done (took 51.66889844 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.164713017 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.294830664 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.154791212 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.139628788 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.135562524 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.137471252 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.14277002 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.135608323 seconds)
  done (took 10.352144599 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.136236013 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.128417766 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.131500159 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.13339328 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.130591812 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.132644101 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.134293333 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.132120835 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.133676257 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.134491501 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.134611079 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.130565603 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.131529644 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.132998466 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.132940227 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.133426922 seconds)
  done (took 19.172517046 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.137024853 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.132485836 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.133004595 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.133730133 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.131615405 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.134025459 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.133728651 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.13339256 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.133668259 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.134063348 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.134271125 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.134348827 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.135894978 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.1338925 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.134329 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.136554466 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.133208261 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.13480586 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.139396643 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.133558256 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.134058976 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.135352382 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.134442504 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.13798955 seconds)
  done (took 28.27706232 seconds)
done (took 58.847069724 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.123296488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.122513331 seconds)
  done (took 5.295063289 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.198501301 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.194720323 seconds)
  done (took 3.444017677 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.137982848 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.13636095 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.135827805 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.136578626 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.136247751 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.135811641 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.135233526 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.136613574 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.135852914 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.135939127 seconds)
  done (took 12.412184489 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.139625125 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.13633275 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.135947743 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.135904997 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.137906446 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.137660871 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.136342578 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.137376526 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.138977489 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.136553927 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.136444089 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.137437234 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.137229757 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.137149096 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.136791892 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.138292936 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.137416163 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.137481059 seconds)
  done (took 21.520356148 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.155277253 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.159536137 seconds)
  done (took 3.366287484 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.2792754 seconds)
    (2/7) benchmarking "second"...
    done (took 1.177739642 seconds)
    (3/7) benchmarking "month"...
    done (took 1.253087095 seconds)
    (4/7) benchmarking "year"...
    done (took 1.244591578 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.1796035 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.157643521 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.197526253 seconds)
  done (took 9.541945495 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.140997147 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.331125816 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.441017684 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.704287687 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.139471986 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.16338562 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.944482582 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.16402305 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.159123535 seconds)
  done (took 13.240448083 seconds)
done (took 69.86915482 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.126247707 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.164942332 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.15711685 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.151344017 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.478245409 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.128373553 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.12842638 seconds)
done (took 15.386457745 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.131626171 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.135019156 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.123803591 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.135394221 seconds)
  done (took 9.577401356 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.125899516 seconds)
    (2/2) benchmarking "read"...
    done (took 1.43429581 seconds)
  done (took 4.613234956 seconds)
done (took 15.241332494 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.142649536 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.13939057 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.137899999 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.137597963 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.140744117 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.138456301 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 1.13797031 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.139928213 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.139773513 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.140495567 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.13961168 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.140796916 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.138356894 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.138250266 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139887966 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.141251813 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.138010402 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.138710812 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.140480125 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141087837 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.140041043 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.138718285 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.14079187 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.142555441 seconds)
  done (took 28.407544407 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.142557599 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.140960604 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.141801495 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.142250069 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.139625885 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.141752507 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.139941793 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.141866815 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.141216825 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.141185206 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.140073735 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.141269476 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.143346848 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.141004317 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141889115 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.142288115 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.141045753 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.139641608 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.14265098 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.144444212 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.1432852 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14187161 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.142496336 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.139994323 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.142316695 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.141738446 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.14377995 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.140395883 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.140795874 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.143073502 seconds)
  done (took 35.305543796 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.149216106 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.146443873 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.141951525 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.142898883 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.143111572 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.142300868 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.14355941 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.144026034 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.142576406 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.143295162 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.142407897 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.140182806 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.143210644 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.142123512 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.142780373 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.141567437 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.143590986 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.141791279 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.142244846 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.143602116 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.143689711 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.144937806 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.143508225 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.142682959 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.143639326 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.142277535 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.143161346 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.143271759 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.144970643 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.143740669 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.143015721 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.14521166 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.143997345 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.143695365 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.143962754 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.145550815 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.147743426 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.148996664 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.144606014 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.144029673 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.148910796 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.148197181 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.148970978 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.150831608 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.148326481 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.14567629 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.145079582 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.144311414 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.144857902 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.144746482 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.145023486 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.14651175 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.144185703 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.144738972 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.143909286 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.143485348 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.143976236 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.144702995 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.145370041 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.145969319 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.145659258 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.145051161 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.145864908 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.146731386 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.144241891 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.145020118 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.146331976 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.146776166 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.141058562 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.145723007 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.141578717 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.147694372 seconds)
  done (took 83.46791137 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.150300861 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.146308333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.145413365 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.144393016 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.145167828 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.144520678 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.146800279 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146424804 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.14637844 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.144270706 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146416498 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.146827305 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14696034 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.148584891 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147755808 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.147285975 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.145756464 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.143510294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.147259111 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.143966377 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.147937721 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.147918996 seconds)
  done (took 26.280590809 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.150410697 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.146068688 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.147289583 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.148750081 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.146886733 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.147133957 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.147346391 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.148304758 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.14751093 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.144769521 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.147257694 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149306288 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.148623489 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147167565 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.146842884 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.150167923 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.148906856 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.147721329 seconds)
  done (took 21.720981933 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.148889047 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.141116013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.14772156 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.147516651 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.147122564 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.148141393 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.145824554 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.147852577 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.149320644 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.145205123 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.145371225 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.148539917 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.147281001 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.148387934 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.148498338 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.148552591 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.149165721 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147671296 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.146584615 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.145154776 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.147490442 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.147222178 seconds)
  done (took 26.296548383 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.148242974 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.145472502 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.147916051 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.149676959 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.14818288 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.149497234 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.149682124 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.147033769 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.148981336 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.152388927 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14699779 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.149322187 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.150391121 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.148360097 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.145960935 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.145375599 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.151614785 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.147378984 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.150390029 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.152385882 seconds)
  done (took 24.03374329 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.154134762 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.151280867 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.152755666 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.149258551 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.152461454 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.149757545 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.152177663 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.150106569 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.152158975 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.149490648 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.149559411 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.152103359 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.151494324 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.150908011 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.152709108 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.151207773 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.154618392 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.150992727 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.1547227 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.151924037 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.149513793 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.147583289 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.152813261 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.156059732 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.149856525 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.151036656 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.14690731 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.153058783 seconds)
  done (took 33.304781732 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.152522438 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.151636805 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.151104477 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.149666496 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.153401585 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.150001076 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.146427716 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.151836549 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.150158081 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.153087883 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.153149811 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.152606528 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.152212306 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.155739497 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.148779579 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.154417681 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152949364 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.154577308 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.154915423 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152677439 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.154841729 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152425405 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.153122282 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.152844997 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151324488 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.154181402 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.150413584 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.153705352 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.151110987 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.150622969 seconds)
  done (took 35.631514652 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.212502146 seconds)
    (2/2) benchmarking "in"...
    done (took 1.198031468 seconds)
  done (took 3.470892697 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.154257237 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.154107196 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.153213927 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.152538422 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.151106877 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.154347818 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.151069602 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.155045466 seconds)
  done (took 10.290748633 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.147165594 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.152820923 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.156018797 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.152431011 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.157577425 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.152471678 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160197813 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.156072715 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.147760288 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.150950053 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.154313451 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.155700739 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.154682955 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.154162979 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.147663505 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.153410786 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.159813211 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.152617674 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.154978967 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.155756954 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.15806804 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.149212212 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.153366885 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.156952018 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.150061485 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.16404289 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.160561428 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.157568603 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.148226661 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.153358587 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.156606222 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.152984105 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.150813251 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.154168255 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.155432436 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.154692358 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.160783277 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.172077748 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.162295007 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.157421972 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159783317 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.153976037 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.154928426 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.155822999 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.155904807 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.161988379 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.160541481 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.15707955 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.14623643 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.158099188 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.163064915 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.152028358 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.155334404 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.152408125 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.157193975 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.159598096 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.175433552 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.157622754 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.160632901 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.162325167 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.17073522 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.166111796 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.157328139 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.161700642 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.161155943 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.170682195 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.161244836 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.161708531 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.151860251 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.158497569 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.160182229 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172938264 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.171112921 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.157573457 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.158083711 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.158024842 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.154814213 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159008596 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.160289092 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.163526978 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.160713256 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.157345074 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.162240088 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.166723932 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.154123342 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.160101558 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.156901754 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.155352917 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.153089551 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.167825919 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.180227299 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.157451932 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.15190803 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.157151608 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.156214054 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.16214231 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.156479333 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.154051215 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.157957959 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.158444736 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.15701473 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.159081203 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.161061874 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.162971535 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.161086366 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.162716553 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.160662491 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.154461629 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.165329897 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.162818742 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.161843819 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.159814687 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.157228545 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.16016232 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.158698506 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.166096138 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.158671076 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.156337592 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.165707852 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.162865229 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.161241681 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.176638278 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.163941628 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.162028179 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.163558015 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.166224897 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.158698469 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.160133451 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.162554584 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.159130616 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.159767898 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.158847974 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.165875326 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.153787682 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.162651522 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.155648971 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.163481677 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.163716892 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.158344053 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.159282039 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.156425122 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.155739227 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.164132726 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.160320573 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.164898651 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.160009881 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.168007085 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.164730036 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.159633764 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.160379806 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.165505151 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16588243 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.155631506 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.166174549 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.158476414 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.16056365 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.16204373 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.164478739 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.160234187 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.163319098 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.163910517 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.158146459 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.15826311 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.160554767 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.16523964 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.162660876 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.162005627 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.162786017 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.162741726 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.156335392 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.167363398 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.15940672 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.159270581 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.170437617 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.165346664 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.157876678 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.165261497 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166023505 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.161337173 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.165261548 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.162490837 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.161504675 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.161472992 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.163698831 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.167848262 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.162768409 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.165478582 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.160247707 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.160593673 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.16602456 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.161987449 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.174347589 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.171190185 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.174508916 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.160345426 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.16735865 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.155883034 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.169868352 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.167078193 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.165194609 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.164474082 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.166956373 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.156053995 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16442074 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.160358252 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.163479706 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.15814572 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.162164622 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.163391928 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.164752127 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171046664 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.164735144 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.158697116 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.164507636 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.165542595 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.163394969 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.16061801 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.165936103 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.156403701 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.165259669 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.169948024 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.162730482 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.163957146 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.168323754 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.167773143 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.167362031 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.164174405 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.166104294 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.168208071 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.160032228 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.165562933 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.172318237 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.170240651 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.164392118 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176933528 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.182563421 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.165574644 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.168138205 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.175213582 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.170694811 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.168279 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.17500089 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.168858834 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.168445538 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.171382732 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.165492977 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.172759969 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.172967493 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.174471458 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.161665765 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.173291305 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.167711135 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.174183262 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.167301391 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.171070658 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.169716681 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.172416917 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173282845 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.17283991 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.164498981 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.172626593 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.164586485 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.173302249 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.169854547 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.177681251 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.173869121 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.167597906 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.170534806 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.168080545 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.17655493 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.167094695 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.17071282 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.168918192 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.182026854 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.184425848 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.173369828 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.173664427 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.172386582 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.174529567 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.174606732 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.173323551 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172993496 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.170530764 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.165519272 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.169132904 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.173184317 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.168699715 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.175613793 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172370545 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.172863325 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.179266982 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.171129288 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.167667614 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.175987227 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.171733169 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.176283836 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.17108433 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.177084518 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.171962775 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.175019783 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.174295481 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.174343699 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180627045 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.176137129 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.172762892 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.171371998 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.172135765 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.172889227 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.170792935 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.173567015 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.174349505 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.18335552 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.17188108 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.175769763 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.173639987 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182181694 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.179742156 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.172167342 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.184004753 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.178450163 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.17093029 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.169398114 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.178581763 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175988632 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.178405364 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.172371899 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.180186781 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177643212 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.175844352 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.180994042 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.178919707 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178634064 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.175873293 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183485398 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.195428827 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.177727196 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.178302376 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.182563394 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.176920328 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.177449539 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.171850886 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.185697275 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.178900311 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.175745293 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.176223591 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.175116774 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.179162377 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.176200194 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.178549282 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.180440285 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.178784334 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.181959651 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.180066543 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.183298164 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.179385235 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.181423359 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.18149929 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.182029973 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.185916911 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.175437222 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.182229512 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.179408405 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.177189614 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.176318078 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.178008135 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.182185962 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.17580052 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.184686798 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.17699364 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.178872095 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.179556379 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.183325848 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.175561778 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.186596895 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199591833 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.178253262 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.183205257 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.179051989 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.175906096 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.184664762 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.180530875 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.174206146 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.180143894 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184955275 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.185553825 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.176972503 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.182306948 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177791983 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183233437 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.181527534 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.180386056 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.180480935 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.182290296 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.178148632 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.183812029 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.18003553 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.186096477 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.178069087 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.177181097 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.179101628 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.184958152 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.186191444 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.178733611 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.182440253 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.181164498 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.177072369 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.176169716 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.183456632 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178566064 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184136054 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.176440371 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18078754 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.181242549 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.183824413 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.181602588 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.185021697 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.17739919 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.176281623 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.183166236 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.182881187 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.183118108 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.177227721 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.18282726 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.17852399 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.177686513 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.185528603 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.179509461 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184072218 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.178812005 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.184613408 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179810364 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.183091085 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.180530828 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.182377982 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.180775429 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.180957777 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.187110141 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187982201 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.188064737 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.186810635 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.188318481 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.181150381 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.183785467 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.185928592 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.179371939 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.183330069 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.186821831 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.177470524 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.181073073 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.18420151 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18492809 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.188422159 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.185208387 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.181646873 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189348181 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.206666129 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.189160339 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.181188837 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.185499966 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.18321567 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.18464697 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.18326731 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.179049075 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188089235 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.18757262 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.187460288 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.185481729 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.175133515 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.18187654 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.187375746 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186558279 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.179742366 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.187631486 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.181302744 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.187054333 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184207459 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.185122312 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.176893028 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.178798304 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.181135156 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.183985069 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.185131523 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.178744106 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.181201343 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.180088902 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.188262323 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.187014925 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.186617694 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.179107448 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.18044341 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.183464047 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.179867624 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.184885046 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.176965043 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.182534515 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.189584174 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183599306 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.182071298 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.190143071 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.188016049 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.185769998 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.183460138 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.180354088 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.183187343 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187219496 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.186163294 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.182203295 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.183557551 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.187058136 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.181021952 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.186443957 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.18093786 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.1967885 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.206853452 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.182267877 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.181577199 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.187348366 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.188954732 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.184966012 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.18364132 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.187309597 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.185902926 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.192765103 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.186529235 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189974139 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.201563981 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.187327375 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.194383365 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.1838734 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.183754997 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.185554676 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187537658 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.186796064 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.186205524 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.192567196 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.194214302 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192588305 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.208470503 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.187624884 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.185242961 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.189660234 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182320456 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.187369429 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.185978515 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.192644366 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.19123163 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.188568897 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.186481398 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.184483784 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.188264725 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.188788909 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.191394256 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.184942061 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.180252324 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.186803226 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.191099137 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.184477147 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.192524142 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.192582915 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.184725883 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.189750903 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.185818745 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.198799379 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.200588547 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.185668421 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.189580673 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.187311503 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.183328327 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.187515207 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193598276 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.195098518 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.187016627 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.189978842 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.186056292 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19310785 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.185349131 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.180658908 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.182371246 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.18442162 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.191276641 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.194333557 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.200559681 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.190331369 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.188183271 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.187729552 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.189881516 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.184527466 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.188315108 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.189968006 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.18607082 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.185339621 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190886817 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.186883934 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.188433782 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.186216757 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.195271361 seconds)
  done (took 700.367938029 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.190523217 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.186533974 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.1891447 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.187934879 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.189653286 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190562858 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.189633009 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.187485575 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.188044834 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.18952044 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.189582065 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.188511491 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.190663313 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.189648467 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.188120736 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.18969522 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.188091532 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.187457729 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.186545671 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.188186256 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.187737106 seconds)
  done (took 26.059636077 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.18804896 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.190969953 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.187692447 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.188851012 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187799227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.186580643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.186871479 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191120912 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.19438163 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188084042 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.188597428 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.187473947 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.187204183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.188150532 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189221702 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.186788252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.187120564 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.188566279 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.187270497 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.190518408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192680569 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.189113297 seconds)
  done (took 27.24552502 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.18880748 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.187923998 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.185195814 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.19133153 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.188747678 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.189027177 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.189313078 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.187933209 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.190324645 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.184463605 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.185116098 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.189033817 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.191468933 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.194982428 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.188055096 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.189636711 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.191767363 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.189663958 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.190233452 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.188532197 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.195977019 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.194762951 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.188704789 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.184809233 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.192992615 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.189234793 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.188858287 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.188289966 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.188856338 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.192768817 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.191518031 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.184511553 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.190742883 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.186440629 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.1893283 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.193648428 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.190101419 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.190718246 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.191447065 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.194772387 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.207399089 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.192211252 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.193254397 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.197265789 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.19033237 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.189293283 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.196659449 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.190112177 seconds)
  done (took 58.244865967 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.194879065 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.197922781 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.191664939 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.190029468 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.191431089 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.192814191 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.197251463 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.193486064 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.190721826 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.193140002 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.192859654 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.19270959 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.193557986 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.191190908 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.194328575 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.193238296 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.191373754 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.191955702 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.192874624 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.195223167 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.194677943 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.192378807 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.191676166 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.192155077 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.19608627 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.192267168 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.195191807 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.195363355 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.193254112 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.193141675 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.193870482 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.193142225 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.194370808 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.19649194 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.195095772 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.193240005 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.195683729 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.193083871 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.197616975 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.193679924 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.193570889 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.1938251 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.19744988 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.193750836 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.193719219 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.196100864 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.194372008 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.196270793 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.196634702 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.195621654 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.196855526 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.19585172 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.193498716 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.195494631 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.19619244 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.195319829 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.194695889 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.195996286 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.19598404 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.194491508 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.196541858 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.195767471 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.194671876 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.195925606 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.194754671 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.200651049 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.195282412 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.195915321 seconds)
  done (took 82.322806065 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.195868308 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.195437585 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196578215 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199251235 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.195379344 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.196971113 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.201375639 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.198671265 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.197824362 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.197158478 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.19730548 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.19611679 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.197945206 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.199043511 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.197910918 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.198029819 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.199624215 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.199566929 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.200601119 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196025118 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.199304654 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.20037745 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.20038558 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.198688359 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.197213018 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.200221773 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203435521 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.200420476 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.199967344 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.201037153 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.197199646 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.198762231 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.197979487 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.20010222 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.199534738 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.200341403 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.201027023 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20101495 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.201143767 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.19951153 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.204301098 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.198940129 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.199489474 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.200167125 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197561844 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.20002787 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.199713048 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.198822279 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.19824952 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.20316104 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.198505752 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.203122058 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201108035 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.199510215 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.203138219 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.199844201 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.199524712 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.200960695 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200734575 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.200572995 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203590862 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.203435111 seconds)
  done (took 75.474969484 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203104086 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.200022252 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.202871178 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.199173848 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.200559331 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.202859905 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.199097659 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.20301035 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.201190211 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.20033147 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200762264 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202000433 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200634664 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203890241 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.202103912 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202445539 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202964605 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.202863794 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202893418 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199167159 seconds)
  done (took 25.140601922 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.205850899 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.19959488 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.201091341 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.202911661 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.203353255 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.203702488 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.200580028 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201828116 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204334392 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202400701 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.202553093 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20286698 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204317848 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.201083857 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.204707084 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.201800531 seconds)
  done (took 20.351609232 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.204692973 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.20468647 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.204620807 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.20353839 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.204805505 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.201535645 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.205067967 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.206821236 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.202369225 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.204854368 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.208969116 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.203646386 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.202967282 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.20208758 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.201274442 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.203471629 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.203236746 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.20313785 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.203431007 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.201458306 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.204671462 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.204544538 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.204093829 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.203008376 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.20407698 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.201884795 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.203783838 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.205035161 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.202053241 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.203586123 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.202025142 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.203015847 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.204895995 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.204926995 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.204817422 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.20840384 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.205074293 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.203058475 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.203927539 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.204364602 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.206329763 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.20398651 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.203532448 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.203375941 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.202956763 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.204393808 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.205472128 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.205121859 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.204270207 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.207010811 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.205178478 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.20497592 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.204693597 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.208822679 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.204814061 seconds)
  done (took 67.344582741 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205765033 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.206680242 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.20424703 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.204009692 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.205775167 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.204939185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.206139953 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.208912176 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204826159 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.20461282 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.204535567 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.205659146 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2052292 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.204007123 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.206079297 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208439931 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.206376309 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.206739997 seconds)
  done (took 22.812463863 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.212915944 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.205679775 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.207129973 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.2060221 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.207379756 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.209870268 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20701396 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.207739085 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204712216 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.206778432 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206509612 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.20908518 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212308561 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.207914898 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205215778 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209681446 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.20755116 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205643849 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.206687702 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205691013 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.206187985 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209006486 seconds)
  done (took 27.680402456 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.202387075 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.203175843 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.201143568 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.217138255 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.216552715 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.206129047 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.204038289 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.201369996 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.225144443 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.25282249 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.246565719 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.219191394 seconds)
  done (took 15.709441841 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207609354 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209167468 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.207611073 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207710213 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207501173 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207859419 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207705382 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208540482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207055264 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207974855 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206861859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209311053 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207758036 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207621864 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209086878 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208956598 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208941904 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209810254 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209396926 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208243662 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21041835 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208307139 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209720331 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209966785 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211053875 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211060324 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213686759 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213679904 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209192078 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212663257 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210235626 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210782435 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210138251 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213217965 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210962964 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210119422 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213323659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212584882 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212967189 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212438169 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.211786906 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214868892 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212760415 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211992141 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210688802 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213791094 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213896195 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213319891 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209811546 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21586877 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211234818 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212615347 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214479077 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212195331 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212691497 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213867249 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217183439 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212801023 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220744161 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213499097 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218609906 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212427978 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216938554 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216822422 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212199115 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214445801 seconds)
  done (took 81.066624108 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218420071 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215757874 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215484352 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21658087 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212630077 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217908889 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217398826 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219887387 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214944264 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216465128 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214143933 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214146176 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215283573 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216795038 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214529984 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219760181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216616089 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21403246 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220622423 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218821474 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215933942 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212978322 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213892719 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213553493 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216825167 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217243681 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220342542 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219752927 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21710065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215731999 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2171526 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215563559 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21444535 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.216912373 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217571262 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22062771 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219889043 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219207088 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215721695 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219822121 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217794704 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218263276 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221236065 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222592518 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222391306 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218462456 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221067565 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222225565 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219077401 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220717673 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223397365 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225130206 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223937743 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218957939 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218957389 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2205427 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219427359 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218253115 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223042809 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222839189 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224249561 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223206223 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225497571 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221242958 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218258377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224777122 seconds)
  done (took 81.548526263 seconds)
done (took 1640.633484504 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.383738224 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.337365642 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.218276791 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.233673522 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.215925856 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.208633823 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.231130011 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.217285617 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.216422632 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.219043384 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.216296545 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.406275198 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.212475404 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.214640455 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.219031704 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.315802946 seconds)
  done (took 25.191071354 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.250182962 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.226735851 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.332432185 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.242505494 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.248458699 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.413619728 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.281382032 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.227876135 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.39622575 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.242954746 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.211326876 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.253955767 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.223570729 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.215033424 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.253553285 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.41618607 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.47792919 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.219962946 seconds)
  done (took 27.260893412 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.679690195 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.234205599 seconds)
  done (took 5.038878564 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.245664597 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.227600895 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.226538813 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.223395473 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.221979066 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.211026381 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.219804735 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.220259367 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.219773127 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.34933963 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.228609043 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.239383811 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.239001132 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.226596428 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.232092914 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.266157909 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.391526346 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.232686282 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.225601884 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.230247376 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.226142435 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.329746194 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.266637525 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.23259344 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.351213646 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.225498856 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.230970678 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.233866524 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.376172187 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.232921902 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.224257597 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.225010617 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.228616151 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.220190571 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.690537929 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.234721326 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.244794746 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.256601988 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.230034328 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.372901062 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.229160165 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.235474591 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.221985897 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.671046602 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.369392571 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.345227509 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.237460906 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.226667775 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.230453623 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.289795362 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.230784616 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.229742055 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.287007967 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.055335612 seconds)
  done (took 79.501635328 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.280171958 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.221570605 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.400970272 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.244960188 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.217598389 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.223377427 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.223013352 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.518341521 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.282084961 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.220103274 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.534352867 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.80088067 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.234390033 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.281913879 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.090859877 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.292458111 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.22289404 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.223164037 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.225630859 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.22212289 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.778694722 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.226280941 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.219826256 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.378256512 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.261196292 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754710908 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.225716785 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.239806068 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.242916009 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.220868154 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767943099 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.253347439 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.285972784 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.22460688 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.500791803 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.613005452 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.587491449 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.228500366 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.251329843 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.224074355 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.231511257 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.74508126 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.60350869 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.228989712 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.240241031 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752187539 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.22679986 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.229595253 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.22872906 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.477012379 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.226197985 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.227707626 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.224116265 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.242515102 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.223830478 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.225932247 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.312480586 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753649491 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.227334013 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.227521991 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.247027808 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.224724757 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.232874329 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.22987871 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.24079929 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.60137092 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.379052564 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.230730209 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.602836859 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.764312337 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.247725411 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.817912713 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.240031811 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.228241998 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.289198019 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.227492473 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.228145605 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763193808 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.228334305 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.221852845 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.590316156 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.228347905 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.513676001 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.238473188 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.228667603 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812014584 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.231674333 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.236961043 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.225853037 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.223995526 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.228790165 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.231091326 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.510231354 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.270136975 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.227081724 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.228468286 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.243162441 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.223446307 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.243954802 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.234442467 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.815202526 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.251780328 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.228679625 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.23338888 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.228164975 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.224285545 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.227349803 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.231756293 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.497864347 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.229648007 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.24972815 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.231459699 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.228103594 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.230836536 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.378117163 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.228507271 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.556436425 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.230863188 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.224913346 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.233965246 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.231254131 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.278018389 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.225785422 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.239973945 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.11046194 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.491368948 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.239795104 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.231384864 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2328041 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.231542008 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.24447077 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.225591303 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.275065462 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.230308022 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027932849 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.250008241 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.238703768 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.22976995 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.241570555 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.229660884 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.235610346 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.229533199 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.530559419 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.511978513 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.378710918 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.231616569 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.231598652 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.020656131 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.253129145 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.406929769 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.246341199 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.225959247 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.481564972 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.435518375 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.232507072 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.22731116 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.230863611 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.48687507 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.237850411 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.539998832 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8039163 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.247102129 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.236861218 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.045833191 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.94976629 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.235135655 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.236128346 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.521549093 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.246966511 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.23186809 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.232426907 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.235375698 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.229668563 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.244059127 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.232010482 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.2334899 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.234354548 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.244794346 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.43035439 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.246101829 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.240869911 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755681145 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.25863214 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.230957565 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.237450841 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.236414945 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.235327997 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.305913803 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.239820005 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.23693945 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.237465135 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.244810143 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781121575 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.236580937 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.235585839 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.426843338 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943165772 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.250811039 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.233702283 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.235173021 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.143089334 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.780017242 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.24016866 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.560489621 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.235799311 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.272205961 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.234011858 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.267462479 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.779655901 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.238479685 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.239469841 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.910382278 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.2504878 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.882839681 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.231290701 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.235504457 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.843620663 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.25188109 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.234045411 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.245427813 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.235996581 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.552279309 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.238382037 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.241751378 seconds)
  done (took 475.376228098 seconds)
done (took 613.495181665 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.236404771 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.234339461 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.229075587 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.237563739 seconds)
  done (took 10.08147998 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.253343741 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.241291719 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.247281523 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.240479857 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.250430485 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.243532847 seconds)
  done (took 8.622501133 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.237086942 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.232697606 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.238601371 seconds)
  done (took 7.854194993 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.45535429 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.260717122 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.585208089 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.262612359 seconds)
  done (took 8.711593091 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.249463408 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.247705312 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.247891206 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.250387236 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.253517957 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.252586972 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.251611974 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.25071255 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.252968492 seconds)
  done (took 12.401397721 seconds)
done (took 48.815161385 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.280780911 seconds)
    (2/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.296832155 seconds)
    (3/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.278956362 seconds)
    (4/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.277757236 seconds)
    (5/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.147606475 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.391793057 seconds)
    (7/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.272292436 seconds)
    (8/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.289726095 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.230258754 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.321691128 seconds)
    (11/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.001017718 seconds)
    (12/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.394178566 seconds)
    (13/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.278615073 seconds)
    (14/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.230274443 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.267809395 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.315335349 seconds)
    (17/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.24749166 seconds)
    (18/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.365580718 seconds)
    (19/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.074249595 seconds)
    (20/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.231830962 seconds)
    (21/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.955073018 seconds)
    (22/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.23082337 seconds)
    (23/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.302319667 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.505142277 seconds)
    (25/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.419606523 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.294358295 seconds)
    (27/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.264394479 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.239091114 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.356544035 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.325806945 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.387538706 seconds)
    (32/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.400741319 seconds)
    (33/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.279537209 seconds)
    (34/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.234843001 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.328585066 seconds)
    (36/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.412129111 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.231892979 seconds)
    (38/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.288612837 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.313839872 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.43005885 seconds)
    (41/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.034668728 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.400128871 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.275606446 seconds)
    (44/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.423882852 seconds)
    (45/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.410991708 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.352090815 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.234153741 seconds)
    (48/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.340128025 seconds)
    (49/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.235745931 seconds)
    (50/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.442474339 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.393941178 seconds)
    (52/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.234374487 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.260431931 seconds)
    (54/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.381314015 seconds)
    (55/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.891294515 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.032350371 seconds)
    (57/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.414956389 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.236907013 seconds)
    (59/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.298750384 seconds)
    (60/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.261625462 seconds)
    (61/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.230106398 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.360679924 seconds)
    (63/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.267658308 seconds)
    (64/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.230195477 seconds)
    (65/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.300939835 seconds)
    (66/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.332240215 seconds)
    (67/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.307378725 seconds)
    (68/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.954795557 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.464455014 seconds)
    (70/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.415986758 seconds)
    (71/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.958310388 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.321769209 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.177479819 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.355155255 seconds)
    (75/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.350215524 seconds)
    (76/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.281962449 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.997710646 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.371641223 seconds)
    (79/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.238263773 seconds)
    (80/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.940140055 seconds)
    (81/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.332338085 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.35438534 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.318644032 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.348575459 seconds)
    (85/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.249646026 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.322529308 seconds)
    (87/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.233945207 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.387673799 seconds)
    (89/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.935367319 seconds)
    (90/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.236225625 seconds)
    (91/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.3806051 seconds)
    (92/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.400865224 seconds)
    (93/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.347270879 seconds)
    (94/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.237229079 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.033332409 seconds)
    (96/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.255939848 seconds)
    (97/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.271536107 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.35469224 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.278443121 seconds)
    (100/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.393556066 seconds)
    (101/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.462314786 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.460667931 seconds)
    (103/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.237538351 seconds)
    (104/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.263069532 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.313071813 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.244441655 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.3471738 seconds)
    (108/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.240391782 seconds)
    (109/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.283147464 seconds)
    (110/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.429595558 seconds)
    (111/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.343546864 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.261582707 seconds)
    (113/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.42060183 seconds)
    (114/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.994629287 seconds)
    (115/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.338751542 seconds)
    (116/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.396154075 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.273219264 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.464520042 seconds)
    (119/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.293564586 seconds)
    (120/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.903852671 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.249141273 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338355522 seconds)
    (123/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.404549896 seconds)
    (124/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.302860632 seconds)
    (125/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.2363247 seconds)
    (126/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.236138765 seconds)
    (127/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.342557465 seconds)
    (128/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.262986584 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.994808559 seconds)
    (130/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.401348704 seconds)
    (131/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.31003317 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.141991087 seconds)
    (133/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.239319212 seconds)
    (134/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.345021201 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.380143988 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.33099564 seconds)
    (137/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.245665859 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.255649642 seconds)
    (139/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.271505449 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.280819904 seconds)
    (141/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.400406185 seconds)
    (142/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.240182852 seconds)
    (143/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.338954339 seconds)
    (144/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.285585735 seconds)
    (145/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.032934033 seconds)
    (146/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.255523451 seconds)
    (147/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.343063008 seconds)
    (148/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.300005644 seconds)
    (149/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.386944537 seconds)
    (150/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.302770195 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.299862729 seconds)
    (152/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.904257605 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.330470974 seconds)
    (154/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.307459575 seconds)
    (155/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.241333792 seconds)
    (156/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.28416361 seconds)
    (157/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.241750817 seconds)
    (158/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.009813763 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.318165409 seconds)
    (160/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.240389281 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.280082386 seconds)
    (162/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.018061865 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.370370624 seconds)
    (164/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.193718768 seconds)
    (165/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.095359368 seconds)
    (166/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.350113136 seconds)
    (167/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.362679334 seconds)
    (168/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.415703344 seconds)
    (169/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.268572066 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.938858622 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.341620974 seconds)
    (172/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.242201348 seconds)
    (173/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.262604156 seconds)
    (174/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.277098102 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.361719491 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.394507399 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.909588394 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.482064585 seconds)
    (179/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.470995769 seconds)
    (180/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.395609532 seconds)
    (181/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.436661021 seconds)
    (182/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.24131182 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.247294326 seconds)
    (184/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.281012039 seconds)
    (185/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.30856248 seconds)
    (186/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.517074268 seconds)
    (187/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.321079531 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.250235002 seconds)
    (189/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.283222744 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.342745921 seconds)
    (191/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.391606866 seconds)
    (192/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.241797771 seconds)
  done (took 320.543913781 seconds)
done (took 321.69238176 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.273122924 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.440116147 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.254349426 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.254928122 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256927665 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.259641937 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.274431042 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.256286379 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.265336287 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.26358753 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.260584125 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.261839422 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.267896338 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.262601597 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.289029292 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.255430523 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.256622288 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.262987694 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.267190231 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.268127637 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25796844 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.257909919 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.27676286 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.256382314 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266569421 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.264501789 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.263621344 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.250324114 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.277163087 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.267825541 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.258072535 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.265607671 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.267858521 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.262753643 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.258054757 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.264706233 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.258054078 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.439726716 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.274009325 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.264272834 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.262052716 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.270701842 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.26321684 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.262107297 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.264676665 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.277540254 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.264913849 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.274784263 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.251715244 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.249957907 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.276226462 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.26666893 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.261119206 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.25151107 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.266376313 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.276278637 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.265263133 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.275070823 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.263254702 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.260089401 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.295183514 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.274990347 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.267658658 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266237316 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.264016632 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.272043835 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.265620448 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.272221351 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.261969451 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.261357074 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.261047947 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.263575058 seconds)
done (took 100.594936062 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.388577799 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.261297112 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.406952181 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.26723964 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.427355658 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.406334082 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.26617629 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.263719654 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.264501442 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.113635129 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.26497695 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.265287302 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.253531201 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.266211963 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.391462811 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.267308582 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.267141875 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.001684733 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.268421958 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.400581758 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.260505684 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.266349189 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.266846795 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.128109459 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.255578156 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.259388265 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.403369382 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.267263552 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.018213312 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.257130645 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.259352852 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.019535415 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.404254938 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.288182152 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.276251002 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.275635743 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.426369575 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.286008723 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.392378237 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.393213343 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.408029493 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.306347099 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.257916018 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.261016831 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.269548297 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.268390612 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.266245296 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.295253392 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.260303824 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.265325848 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.004758704 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.277010499 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.275110769 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.266965318 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.266641892 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.285814862 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.265407712 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.265207549 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.403483478 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.267363013 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.392057153 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.129464999 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.114127448 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.266935927 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.258875821 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.268372914 seconds)
  done (took 104.146988088 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.327731385 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.344105574 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.377355369 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.260706825 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.313007331 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.379729203 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.262907084 seconds)
  done (took 10.426979888 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.267228585 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.265519531 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.310421255 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.310920085 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.266277859 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.41638577 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.265126857 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.27018285 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.267497251 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.31342014 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.268101698 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.268204391 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.273041116 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.258755672 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.310268806 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.274031279 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.378286564 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.262121053 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.266841044 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.415193475 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.266845438 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.275905076 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.312887882 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.272596277 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.266544609 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.270002103 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.030235954 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.267295263 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.264737757 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.266169763 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.265097831 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.311984365 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.265844647 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.260112605 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265128139 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375818853 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.266725404 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265009369 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.264758013 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.25987888 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.265029201 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.263181309 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.262474524 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.263489038 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.26644512 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.280805207 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.263953546 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.264683061 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.265930464 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.263283054 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.308333509 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.26691062 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.264013455 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.264095907 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.315271715 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.274045649 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.262982938 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.265307216 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.263610798 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.263200267 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.40919037 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.307316028 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.264137843 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.306136432 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.264157433 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.263807839 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.26431227 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.263090005 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.349074376 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.265382222 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.305988744 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.264892067 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.440242914 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.283251472 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.265937599 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.260574756 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.261830784 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.265166023 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.25554143 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.265121264 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.265880719 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.260547869 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.266659678 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.264023805 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.263758865 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.41489945 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369083731 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.265698594 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.270039485 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.265804794 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.266087896 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.309185382 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.264262752 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.264373353 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.308685673 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.375150517 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.312969647 seconds)
  done (took 130.625865161 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.271789889 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.272776423 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.262300051 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.288804578 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.260049674 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.259598428 seconds)
  done (took 8.775612992 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.260105485 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.266315855 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.26278124 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.261934453 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.261644896 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.263367299 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.265255491 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.259300727 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.267363843 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.263872098 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.264866068 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.26695874 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.267509958 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.263959482 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.263772677 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.264368066 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.265409366 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.265377383 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.26240216 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.265753114 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.260740212 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.265044042 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.265712057 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.263861096 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.268509239 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.267150839 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.281892385 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.264408671 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.263995421 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.266152179 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.283752624 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.266500543 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.260925031 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.26632579 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.269723381 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.261165835 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.268546561 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.268374707 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.267177673 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.268136487 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.268328501 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.266149254 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.268005249 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.267293211 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.263083285 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.26510656 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.273101131 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.285926758 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.270567179 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.269511512 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.270366559 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.267643595 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.267487874 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.270598472 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.264855549 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.282382524 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.274336045 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.268873405 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.267458025 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.264989551 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.270298315 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.268690841 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.26483995 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.272572944 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.268552554 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.268888275 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.266049375 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.270445748 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.268991958 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.268911002 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.269865787 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.271750043 seconds)
  done (took 93.419352326 seconds)
done (took 348.554716929 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.076228691 seconds)
  done (took 4.238797815 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.264098222 seconds)
  done (took 3.431987112 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.725137426 seconds)
  done (took 21.894494062 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.294815229 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.261424201 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.289673155 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.261801321 seconds)
  done (took 10.273988429 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.530229311 seconds)
  done (took 3.693680715 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.27047976 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.26275219 seconds)
  done (took 5.702916871 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.426668494 seconds)
  done (took 3.593248086 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.421763236 seconds)
  done (took 3.589616504 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.272516583 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.278977604 seconds)
  done (took 5.723412093 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.251642224 seconds)
  done (took 3.416563752 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 30.062078063 seconds)
  done (took 31.230048431 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.278458402 seconds)
  done (took 3.448188076 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.296614461 seconds)
  done (took 3.462665928 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.733020057 seconds)
  done (took 5.898845931 seconds)
done (took 110.761491331 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.262692426 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.264873225 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.262721365 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.265006081 seconds)
  done (took 10.221492991 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.323999314 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.325093144 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.324278698 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.324752012 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.324192001 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.322347191 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.296529838 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.296590682 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.322082342 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.322518165 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.325192712 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.322959285 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.325090056 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.307416174 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.32319982 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.324793575 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.325047316 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.32515587 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.298422296 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.324817229 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.273081091 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.324769021 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.323149285 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.273328982 seconds)
  done (took 32.745682793 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.784600026 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.341205707 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.422881158 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.32339847 seconds)
  done (took 7.038495282 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.352384662 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.350165701 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.378320032 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.401631482 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.415300266 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.374218021 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.30008585 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.295659963 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.280140064 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.351295167 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.403282672 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.343008561 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.428634433 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.275265894 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.479619272 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.27494691 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.273383074 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.353512474 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.404411314 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.416446835 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.275417134 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.352691858 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.354011177 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.342415645 seconds)
  done (took 33.64550118 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.284405478 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.290984856 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.276120722 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.290421472 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.277311619 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.277192296 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.275559246 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.283104485 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.275086185 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.275893145 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.27821079 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.292480198 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.280785974 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.275471163 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.285625423 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.278352839 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.277996611 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.284357948 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.284185822 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.276521278 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.282548624 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.283307587 seconds)
  done (took 29.357967667 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.266223122 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.267263036 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.616965217 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.519588654 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.267239229 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.267951665 seconds)
  done (took 13.375718905 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.337061922 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.482753161 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.27260168 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.604076339 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.687956073 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.275432115 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.273889477 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.508791458 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.800609276 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.777470293 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.328199253 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.340936772 seconds)
  done (took 18.861201485 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.280393059 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.267675211 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.280206048 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.282904289 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.324919333 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.277274495 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.280633955 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.26890525 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.323945128 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.326487074 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.27578054 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.326220466 seconds)
  done (took 20.687941064 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367274174 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272051261 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271065757 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324840592 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284502717 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110367165 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.264546061 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.952645281 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.288808408 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547459735 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278704906 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362779326 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.527121977 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282934381 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275040261 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.252358594 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502811284 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728864453 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275560212 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27447961 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319908249 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273424409 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.28372503 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.473355672 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115592262 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273194612 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.537291923 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.272782311 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537151607 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.287086135 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283062363 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275135729 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550735981 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908424406 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38439268 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470564621 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271752119 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271022878 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.282642512 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.281175089 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288171593 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.278818426 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285269839 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274305305 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.277763922 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275006907 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982583318 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.29489482 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.275856916 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277509721 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515405655 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373838847 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.281426941 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273942779 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312308015 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269606085 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.281788064 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399494065 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86358433 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275901633 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279553018 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.277093511 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286084454 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283855273 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872414986 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.28425354 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.280686779 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.28129255 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277044984 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.279840158 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294662173 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274991226 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.298952519 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275546352 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956938094 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287732562 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281400789 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796622641 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279206392 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.296341267 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.50847704 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276482245 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277826672 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.276805129 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.277954233 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944655512 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287616993 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.269004333 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.322567019 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.982982602 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.488410923 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297727788 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308825314 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.49955106 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.263528885 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279163505 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.277210127 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294901454 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296432752 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.96777422 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291392812 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.281596781 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53524886 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.486940257 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279992402 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.259395864 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.737341806 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289524363 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.311560803 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282072747 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.477298899 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.834604929 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297677179 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279982317 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299274374 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279148375 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984655972 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282012876 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.287338961 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284739929 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539161986 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.03331184 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281934652 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347951736 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286436841 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.280378638 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279679568 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283219004 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281384432 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.470642973 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299981569 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.292043829 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.283871153 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282088682 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.277343987 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293063754 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.284285656 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.505104815 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282586956 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559564333 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282134188 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284234026 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275581597 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.501363639 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.29462102 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.285568167 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544859557 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287638594 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.288662206 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293919767 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296269224 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386332931 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30232391 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.285767252 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.536255647 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.287239069 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.289811081 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282703194 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283483891 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286320968 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.292591371 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282851971 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832469098 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288508368 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.284507419 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212144766 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.299075212 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351013995 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.289685834 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.482591114 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.291363263 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279254085 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.287780645 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.284103003 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508104706 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.29186342 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.297405076 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361941563 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.736561898 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.848168485 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300568265 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.283867393 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.285844278 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.283776578 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286507928 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285099135 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.286181732 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485970507 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298369492 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.289872712 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.836836952 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286202521 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.295709514 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.293014842 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298073254 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.292962787 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285921768 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.292723314 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287742001 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296959156 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.296476951 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429749516 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.302229475 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287446033 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.806270441 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.292589028 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286879572 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.286698401 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32220465 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.28797204 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070204333 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53614723 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277028316 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516278854 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.283003614 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.301716746 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.274872828 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277658977 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288716302 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.284048966 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294317444 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.276030344 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278372228 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266657205 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827320087 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992750118 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767349341 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254853478 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.274079095 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256258594 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.951128138 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263791165 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250287497 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.47490788 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.950561429 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265538167 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69284629 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.264889454 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.963624566 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485257727 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476846401 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245483526 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.263521371 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490501689 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.458603072 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275207907 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241625103 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244723389 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.226042127 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771253682 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258958936 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323157698 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933540279 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257384479 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244938761 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.298471529 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.257221021 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629052903 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261069327 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244985022 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.24475412 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261247058 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033133185 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.24778121 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243948357 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833073027 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.254083767 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.701783359 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264283823 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.447355473 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.255802073 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.248603427 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.253441247 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.256450714 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.501548408 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489076613 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252328574 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.252429278 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762007005 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.117411981 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.253322253 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245380675 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951080447 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249660077 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520897057 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.251244164 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.279433911 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254514543 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247019505 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246471215 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.244824156 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.251146688 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246642303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712537157 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.252425627 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262352376 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248936773 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268969152 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.501478947 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.261760769 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.801493418 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479246718 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243932931 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270842443 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.253281294 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25353907 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.237391989 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.248196431 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24652016 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296167771 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.470993423 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264179601 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.235420733 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244395192 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.457263947 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.247919701 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250164182 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494491761 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.249757098 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.263119258 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966296244 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281561789 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.25958162 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250184765 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.249328633 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303235498 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.317145052 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449967323 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.264774816 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.259316481 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.634585146 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278620657 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251554031 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.263452517 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343558199 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25548149 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.258602347 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.029084271 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813739369 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94910916 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823522245 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499100598 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.252381693 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25576244 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250409964 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413194423 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250026716 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524600356 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250964273 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.246071032 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2888885 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258244411 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253144033 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46701031 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527230471 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251389408 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256776229 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255954017 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.250310917 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.260370906 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.460435774 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721821174 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.783114002 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254614829 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.250983472 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.951340121 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544816447 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252210407 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253071124 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25239977 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.269750289 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.281623128 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.261439935 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252328915 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397565777 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498245649 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893511058 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.27935592 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.282204307 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.772094224 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253218404 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.506953678 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254066967 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.476800065 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822803983 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.931970274 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518418948 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.322257283 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456223455 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.258690798 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416072971 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.257197867 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257182055 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252966014 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252824693 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.254454771 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.262584636 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817531793 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.524608845 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.258813831 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.256387966 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287656868 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.262775632 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.475705545 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929598431 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.480604591 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.263980746 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258792911 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255007995 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816804347 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506295117 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262119162 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.260353834 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483725721 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261981759 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.280088061 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.943574776 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.255514877 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.783440985 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.231215187 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27660038 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260245241 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.933584583 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823863438 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.262440783 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726369817 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26384196 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269712142 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535464111 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.263509772 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26161289 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53843253 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.260863311 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260429952 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464190224 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.821248615 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997100053 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.279727139 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279740602 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.263991357 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256723645 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273891989 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257830594 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259928409 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.655292591 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.276516644 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257423032 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.27243973 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.261950284 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26749688 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.263838746 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258624105 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.265595439 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.251285865 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.258761604 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.270589788 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381375382 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799034822 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28383471 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.933336305 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.583736154 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.512394832 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263192051 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.249826257 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.264642038 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258411832 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259651137 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258770634 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.270939398 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798278941 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.273266908 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.273435389 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.2648549 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.259212658 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469231228 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259190593 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.467628062 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271761653 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.280243416 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.246781916 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259673549 seconds)
  done (took 921.421106372 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.280467406 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.257077352 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.265660609 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.319699762 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.259401286 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.353054125 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.322473817 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.259311802 seconds)
  done (took 19.48608104 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.261727227 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.266014603 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.257834521 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.269883832 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.26794065 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.711118686 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.277979812 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.265357966 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.276921971 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.268177386 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.257636052 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.901869306 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.286835347 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.267772818 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.267588559 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.265962411 seconds)
  done (took 30.540580583 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.098714229 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.353367049 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.00125286 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.266872662 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.264413348 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.267042364 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.448320928 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.282574811 seconds)
  done (took 25.153231005 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.267066552 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.267510614 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.268526968 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.267656958 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.268847233 seconds)
  done (took 7.510410786 seconds)
done (took 1171.212995272 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.268204045 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.268691189 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.267731957 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.268375278 seconds)
  done (took 6.242772625 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.249053783 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.254987026 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.256061192 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.26682924 seconds)
  done (took 9.198992634 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.918819121 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.868443607 seconds)
  done (took 4.957852862 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.730896327 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.735888569 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.735969621 seconds)
  done (took 6.373752916 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.550842894 seconds)
  done (took 2.721603601 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.143923553 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.246534629 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.906640389 seconds)
  done (took 7.469244027 seconds)
done (took 38.13476122 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.259330135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.508845842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.421564817 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.259511566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.436425664 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.492447327 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.996611454 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.266496093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.270255177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.265104881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.257923118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.437454515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.977018437 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.505333734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.976176205 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.50916431 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.421655268 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.26840114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.264763273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.275669592 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.997547653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.264112403 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.260281979 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.264835284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.442302175 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.40571243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.269966564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.506637953 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.260597264 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.261432433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.410796657 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.261662723 seconds)
  done (took 78.84988459 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.260714587 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.261053429 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.26924452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.261217051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.26047863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.272633314 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.262288534 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.262065106 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.261750911 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.278038016 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.27772376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.261741839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.278069942 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.272367783 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.26370995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.271193008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.274684519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.266601287 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.280582711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.28033952 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.261738837 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.26230894 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.262790391 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.270768458 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.267220462 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.297959594 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.274900845 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.262662521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.26832517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.266913182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.282441266 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.28432412 seconds)
  done (took 73.812399326 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.263461294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.276430232 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.268831209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.267892084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.283880312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.285384876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.268668303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.268894239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.266783383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.283412556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.268008223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.286569943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.272497003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.263327847 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.270414162 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.264101004 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.27129797 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.268442643 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.268741117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.269136119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.270764217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.268753682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.268623475 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.268831218 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.276959826 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.27003045 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.272435089 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.269445895 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.275881031 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.268155376 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.269880686 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.268882609 seconds)
  done (took 73.861984368 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.545340936 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.273761568 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.27668032 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.269844863 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.278142266 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.274170248 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.269367203 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.553425506 seconds)
  done (took 13.916997636 seconds)
done (took 241.612345423 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.269302564 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.745814172 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.313729218 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.268949578 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.30935418 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.295559266 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.484765197 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.311451462 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.483898442 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.291575014 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.290871616 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.270335429 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.040054707 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.418408911 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.071806507 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.174697003 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.115824328 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.266458313 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.815802151 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.543010164 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.295698278 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.267028064 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.057633494 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.14047379 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.262190499 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.347310495 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.368633203 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.490579415 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.424496623 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.347627256 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.772979668 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.271115425 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.269687885 seconds)
  done (took 60.275000683 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.273346569 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.375703803 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.277420492 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.276953698 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.379121767 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.278036897 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.272727074 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.276868098 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.276941579 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.277973439 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.277751744 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.279203369 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.280461085 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.306777235 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.383241265 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.272216879 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.27312324 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.37400981 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.273771411 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.272075168 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.30544757 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.277806039 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.280516428 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.306719883 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.278780693 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.278957634 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.37714182 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.27953473 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.279493507 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.375469662 seconds)
  done (took 40.176664374 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.280468484 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.85449016 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.990034019 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.28530985 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.274542899 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.28055531 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.545128222 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.284966434 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.278670466 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.280264319 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.746947784 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.287252823 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.309995731 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.004461967 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.28450247 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.281998585 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.282311412 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.27757468 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.868401419 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.291672254 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.566987891 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.28614938 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.547671497 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.287204914 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.299961079 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.279036669 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.282034308 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.08349009 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.298676288 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.753478319 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.010107648 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.546498379 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.016464862 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.014835864 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.013108645 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.288859858 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.282869248 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.759148217 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.282486759 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.277950333 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.547726044 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.283638896 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.991983448 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.957979046 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.296358591 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.282798612 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.096614785 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.768927472 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.512138153 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.291006105 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.014207908 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.286997773 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.285640705 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.280924094 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.507043186 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.286545589 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.278869472 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.102291708 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.304983949 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.548621979 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.289340146 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.279780952 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.865952459 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.279419861 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.86056658 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.2820891 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.287896339 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.299422355 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.99640162 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.283777486 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.976740258 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.298223742 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.283805753 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.749834528 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.85869638 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.152183524 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.281724765 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.878281358 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.036887345 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.568093505 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.28748559 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.054605212 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.568169743 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.285304685 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.286561653 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.285885945 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.285316688 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.362225098 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.548849925 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.940828957 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.970459666 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.123254782 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.576927426 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.294124339 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.282991244 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.103282062 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.309135504 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.286926769 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.993557401 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.978407226 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.303932328 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.289710649 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.980570996 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.305601032 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.554813654 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.292169362 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.006467845 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.287824475 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.365098322 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.28651434 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.289799929 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.304888962 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.555275211 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.290946165 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.287100542 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.96118902 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.777183026 seconds)
  done (took 181.04922899 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.293055726 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.276966516 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.288152714 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.278513296 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.276994592 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.285185482 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.277746253 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.278118919 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.2825398 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.27781883 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.278149124 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.286056752 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.284709416 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.2780689 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.277381704 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.278877289 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.278555973 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.284590979 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.278289934 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.278279879 seconds)
  done (took 42.804876871 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.289768467 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.814229813 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.786379102 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.294154621 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.289295287 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.284614346 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.336163108 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.291677788 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.290102528 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.570522532 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.447097367 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.296296399 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.288515467 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.289346272 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.781963415 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.28359902 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.570227612 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.822449651 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.294854221 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.816902423 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.284408424 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.289316613 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.28506083 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.817736667 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.580686995 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.558472503 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.345346957 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.820444109 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.295360308 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.290556213 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.820131777 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.296279422 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.287708575 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.819370951 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.311597277 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.304002651 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.290721483 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.340481981 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.341424168 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.572911369 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.83112955 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.56653923 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.306528424 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.460701863 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.292543253 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.279211932 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.827742205 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.313179336 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.281139813 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.294090779 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.296654872 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.793568477 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.309044998 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.793259344 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.31348658 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.292220085 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.823423629 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.797892427 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.809494022 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.452207957 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.292475153 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.554921787 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.297888581 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.829024587 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.313690946 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.29365609 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.293511778 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.449657229 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.846625613 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.562186007 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.580584602 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.581210506 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.297770856 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.349634437 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.309284171 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.578192085 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.352974453 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.682886633 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.577191817 seconds)
  done (took 117.458692711 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.552159867 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.39867005 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.678255208 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.884145959 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.292794741 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.43685891 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.397768432 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.539665994 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.296820487 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.370088271 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.912209728 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.406970267 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.017163988 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.373555222 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.392282114 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.435356594 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.671895383 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.246497724 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.966136843 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.894161861 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.293131416 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.397486189 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.81277767 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.494903331 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.292871131 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.865235128 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.233876084 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.933991756 seconds)
  done (took 50.680717804 seconds)
done (took 493.621747626 seconds)
SAVING RESULT...
DONE!
